Rank =    0  Free Memory = 86363 MB
Rank =    1  Free Memory = 86363 MB
Rank =    2  Free Memory = 86362 MB
Rank =    3  Free Memory = 86362 MB
Rank =    4  Free Memory = 86362 MB
Rank =    5  Free Memory = 86362 MB
Rank =    6  Free Memory = 86362 MB
Rank =    7  Free Memory = 86362 MB
Rank =    8  Free Memory = 86362 MB
Rank =    9  Free Memory = 86362 MB
Rank =   10  Free Memory = 86362 MB
Rank =   11  Free Memory = 86361 MB
Rank =   12  Free Memory = 86361 MB
Rank =   13  Free Memory = 86361 MB
Rank =   14  Free Memory = 86361 MB
Rank =   15  Free Memory = 86348 MB
Rank =   16  Free Memory = 86347 MB
Rank =   17  Free Memory = 86347 MB
Rank =   18  Free Memory = 86347 MB
Rank =   19  Free Memory = 86347 MB
Rank =   20  Free Memory = 86347 MB
Rank =   21  Free Memory = 86347 MB
Rank =   22  Free Memory = 86347 MB
Rank =   23  Free Memory = 86347 MB
Rank =   24  Free Memory = 86347 MB
Rank =   25  Free Memory = 86347 MB
Rank =   26  Free Memory = 86347 MB
Rank =   27  Free Memory = 86347 MB
Rank =   28  Free Memory = 86347 MB
Rank =   29  Free Memory = 86347 MB
Rank =   30  Free Memory = 86347 MB
Rank =   31  Free Memory = 86347 MB
Rank =   32  Free Memory = 80922 MB
Rank =   33  Free Memory = 80922 MB
Rank =   34  Free Memory = 80922 MB
Rank =   35  Free Memory = 80922 MB
Rank =   36  Free Memory = 80922 MB
Rank =   37  Free Memory = 80922 MB
Rank =   38  Free Memory = 80922 MB
Rank =   39  Free Memory = 80922 MB
Rank =   40  Free Memory = 80922 MB
Rank =   41  Free Memory = 80922 MB
Rank =   42  Free Memory = 80922 MB
Rank =   43  Free Memory = 80922 MB
Rank =   44  Free Memory = 80922 MB
Rank =   45  Free Memory = 80922 MB
Rank =   46  Free Memory = 80922 MB
Rank =   47  Free Memory = 80922 MB
Rank =   48  Free Memory = 80922 MB
Rank =   49  Free Memory = 80921 MB
Rank =   50  Free Memory = 80921 MB
Rank =   51  Free Memory = 80921 MB
Rank =   52  Free Memory = 80921 MB
Rank =   53  Free Memory = 80921 MB
Rank =   54  Free Memory = 80921 MB
Rank =   55  Free Memory = 80921 MB
Rank =   56  Free Memory = 80921 MB
Rank =   57  Free Memory = 80921 MB
Rank =   58  Free Memory = 80921 MB
Rank =   59  Free Memory = 80921 MB
Rank =   60  Free Memory = 80921 MB
Rank =   61  Free Memory = 80921 MB
Rank =   62  Free Memory = 80921 MB
Rank =   63  Free Memory = 80921 MB
Rank =   64  Free Memory = 87311 MB
Rank =   65  Free Memory = 87311 MB
Rank =   66  Free Memory = 87311 MB
Rank =   67  Free Memory = 87311 MB
Rank =   68  Free Memory = 87311 MB
Rank =   69  Free Memory = 87311 MB
Rank =   70  Free Memory = 87311 MB
Rank =   71  Free Memory = 87311 MB
Rank =   72  Free Memory = 87311 MB
Rank =   73  Free Memory = 87311 MB
Rank =   74  Free Memory = 87311 MB
Rank =   75  Free Memory = 87311 MB
Rank =   76  Free Memory = 87311 MB
Rank =   77  Free Memory = 87311 MB
Rank =   78  Free Memory = 87311 MB
Rank =   79  Free Memory = 87311 MB
Rank =   80  Free Memory = 87311 MB
Rank =   81  Free Memory = 87311 MB
Rank =   82  Free Memory = 87311 MB
Rank =   83  Free Memory = 87310 MB
Rank =   84  Free Memory = 87310 MB
Rank =   85  Free Memory = 87310 MB
Rank =   86  Free Memory = 87310 MB
Rank =   87  Free Memory = 87310 MB
Rank =   88  Free Memory = 87310 MB
Rank =   89  Free Memory = 87310 MB
Rank =   90  Free Memory = 87310 MB
Rank =   91  Free Memory = 87310 MB
Rank =   92  Free Memory = 87310 MB
Rank =   93  Free Memory = 87310 MB
Rank =   94  Free Memory = 87310 MB
Rank =   95  Free Memory = 87310 MB
Rank =   96  Free Memory = 87398 MB
Rank =   97  Free Memory = 87398 MB
Rank =   98  Free Memory = 87398 MB
Rank =   99  Free Memory = 87398 MB
Rank =  100  Free Memory = 87398 MB
Rank =  101  Free Memory = 87398 MB
Rank =  102  Free Memory = 87398 MB
Rank =  103  Free Memory = 87398 MB
Rank =  104  Free Memory = 87398 MB
Rank =  105  Free Memory = 87398 MB
Rank =  106  Free Memory = 87398 MB
Rank =  107  Free Memory = 87398 MB
Rank =  108  Free Memory = 87398 MB
Rank =  109  Free Memory = 87398 MB
Rank =  110  Free Memory = 87398 MB
Rank =  111  Free Memory = 87398 MB
Rank =  112  Free Memory = 87398 MB
Rank =  113  Free Memory = 87398 MB
Rank =  114  Free Memory = 87398 MB
Rank =  115  Free Memory = 87398 MB
Rank =  116  Free Memory = 87398 MB
Rank =  117  Free Memory = 87398 MB
Rank =  118  Free Memory = 87398 MB
Rank =  119  Free Memory = 87398 MB
Rank =  120  Free Memory = 87398 MB
Rank =  121  Free Memory = 87398 MB
Rank =  122  Free Memory = 87398 MB
Rank =  123  Free Memory = 87398 MB
Rank =  124  Free Memory = 87398 MB
Rank =  125  Free Memory = 87398 MB
Rank =  126  Free Memory = 87398 MB
Rank =  127  Free Memory = 87398 MB
  Input file(s): opt_form_n2pistar_tett_run001d.xml 

=====================================================
                    QMCPACK 3.7.9

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: gvp
  Last git commit: a1d851bbe8d902a0d3168a885b757a378aeaab54-dirty
  Last git commit date: Mon Feb 13 11:52:39 2023 -0800
  Last git commit subject: Print param update magnitude and largest update
=====================================================
  Global options 

  Total number of MPI ranks = 128
  Number of MPI groups      = 1
  MPI group ID              = 0
  Number of ranks in group  = 128
  MPI ranks per node        = 32
  OMP 1st level threads     = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Structure-of-arrays (SoA) optimization enabled

  Input XML = opt_form_n2pistar_tett_run001d.xml

  Project = FORM
  date    = 2023-02-21 17:47:49 PST
  host    = n0146.savio3

 Random Number
 -------------
  Offset for the random number seeds based on time: 69

  Range of prime numbers to use as seeds over processors and threads = 353-1217


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 12

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 4

 Wavefunction setup: 
 ------------------- 
  Name: psi0

   Jastrow
   -------
    Name: J2   Type: Two-Body   Function: Bspline

    Radial function for species: u - u
     Number of parameters: 10
     Cusp: -0.25
     Cutoff radius: 10

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     uu_0                 3.376605e-01    1         1  ON     0
     uu_1                 1.767718e-01    1         1  ON     1
     uu_2                 7.723728e-02    1         1  ON     2
     uu_3                 1.710003e-02    1         1  ON     3
     uu_4                -1.910459e-02    1         1  ON     4
     uu_5                -4.280304e-02    1         1  ON     5
     uu_6                -5.785204e-02    1         1  ON     6
     uu_7                -6.393266e-02    1         1  ON     7
     uu_8                -5.909683e-02    1         1  ON     8
     uu_9                -4.158283e-02    1         1  ON     9

    Radial function for species: u - d
     Number of parameters: 10
     Cusp: -5.000000e-01
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     ud_0                 3.949806e-01    1         1  ON     0
     ud_1                 1.544390e-01    1         1  ON     1
     ud_2                 3.547833e-02    1         1  ON     2
     ud_3                -2.628345e-02    1         1  ON     3
     ud_4                -6.009293e-02    1         1  ON     4
     ud_5                -7.932808e-02    1         1  ON     5
     ud_6                -8.808073e-02    1         1  ON     6
     ud_7                -8.737225e-02    1         1  ON     7
     ud_8                -7.743479e-02    1         1  ON     8
     ud_9                -5.391828e-02    1         1  ON     9


   Jastrow
   -------
    Name: J1   Type: One-Body   Function: Bspline

    Radial function for element: C
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eC_0                -4.823946e-01    1         1  ON     0
     eC_1                -3.665890e-01    1         1  ON     1
     eC_2                -1.701695e-01    1         1  ON     2
     eC_3                -7.185681e-02    1         1  ON     3
     eC_4                -5.170424e-02    1         1  ON     4
     eC_5                 3.187715e-02    1         1  ON     5
     eC_6                 1.415405e-01    1         1  ON     6
     eC_7                 3.067080e-01    1         1  ON     7
     eC_8                 4.123941e-01    1         1  ON     8
     eC_9                 2.340638e-01    1         1  ON     9

    Radial function for element: O
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eO_0                -1.052897e+00    1         1  ON     0
     eO_1                -7.482421e-01    1         1  ON     1
     eO_2                -3.414708e-01    1         1  ON     2
     eO_3                -4.201517e-02    1         1  ON     3
     eO_4                 1.479196e-01    1         1  ON     4
     eO_5                 3.007146e-01    1         1  ON     5
     eO_6                 3.501199e-01    1         1  ON     6
     eO_7                 3.647544e-01    1         1  ON     7
     eO_8                 3.143343e-01    1         1  ON     8
     eO_9                 3.237420e-01    1         1  ON     9

    Radial function for element: H1
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH1_0                -2.436100e-01    1         1  ON     0
     eH1_1                -1.410507e-01    1         1  ON     1
     eH1_2                -9.420369e-02    1         1  ON     2
     eH1_3                -6.742883e-02    1         1  ON     3
     eH1_4                 7.012902e-03    1         1  ON     4
     eH1_5                 6.648304e-02    1         1  ON     5
     eH1_6                 1.029657e-01    1         1  ON     6
     eH1_7                 7.841590e-02    1         1  ON     7
     eH1_8                 4.345977e-02    1         1  ON     8
     eH1_9                 1.390192e-02    1         1  ON     9

    Radial function for element: H2
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH2_0                -2.403491e-01    1         1  ON     0
     eH2_1                -1.394467e-01    1         1  ON     1
     eH2_2                -9.471563e-02    1         1  ON     2
     eH2_3                -6.879321e-02    1         1  ON     3
     eH2_4                 5.917576e-03    1         1  ON     4
     eH2_5                 6.770114e-02    1         1  ON     5
     eH2_6                 1.052555e-01    1         1  ON     6
     eH2_7                 7.452344e-02    1         1  ON     7
     eH2_8                 3.347000e-02    1         1  ON     8
     eH2_9                -2.106280e-02    1         1  ON     9

  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  LCAO: SoaAtomicBasisSet<MultiQuintic,0>
  AO BasisSet for C
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for O
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.018591e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for H1
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

  AO BasisSet for H2
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with '' basis set.
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with '' basis set.
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 77 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 1.000220e+00
Norm of qchem ci vector (sum of qchem_ci^2): 0.000000e+00
Found 24 unique up determinants.
Found 24 unique down determinants.
Number of terms in pairs array: 12
Number of terms in pairs array: 12
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec

  ECPotential builder for pseudopotential 

  Adding pseudopotential for C
   Linear grid  ri=0.000000e+00 rf=1.000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.405000e+00
  Using global grid with delta = 1.000000e-03
   Making L=1 a local potential with a radial cutoff of 9.999000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.405000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.4050000000e+00

  Adding pseudopotential for O
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0750000000e+00
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0750000000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0750000000e+00

  Adding pseudopotential for H1
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03

  Adding pseudopotential for H2
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03
  QMCHamiltonian::addOperator LocalECP to H, physical Hamiltonian 

  Using NonLocalECP potential 
    Maximum grid on a sphere for NonLocalECPotential: 12
  QMCHamiltonian::addOperator NonLocalECP to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type pseudo named NonLocalECP
  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    5 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 10
ParticleSetPool::randomize 
  Initialization Execution time = 3.4577e-01 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet 'e' contains 12 particles :  u(6) d(6)

    u -1.8061669018e+00  2.7837752017e-01 -8.9374600273e-01
    u  6.2204767277e-01 -3.1767951129e-01 -1.6068917470e+00
    u  2.7844543642e-02 -4.6711695757e-01  1.3769739340e+00
    u  5.3613352983e-01 -1.0346031641e-01  1.1931174682e+00
    u  6.6915801034e-01  1.1573235719e+00  1.2719505344e+00
    u  1.8470266426e-02  1.4117662795e+00 -1.6695285925e+00
    d -9.6293909260e-01  1.0337145637e+00 -8.9962839053e-01
    d  1.0744417758e+00  1.1605479134e+00 -1.8930392030e+00
    d  1.2380477230e+00  4.9285421082e-01  8.7082227944e-01
    d  8.1730014770e-01 -3.7289888410e-01  2.8378529985e+00
    (... and 2 more particle positions ...)

  Distance table for similar particles (A-A):
    source/target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  ParticleSet 'ion0' contains 4 particles :  C(1) O(1) H1(1) H2(1)

    C  0.0000000000e+00  0.0000000000e+00 -1.1394765782e+00
    O  0.0000000000e+00  0.0000000000e+00  1.1440287480e+00
    H1  0.0000000000e+00  1.7662761033e+00 -2.2339863698e+00
    H2  0.0000000000e+00 -1.7662761033e+00 -2.2339863698e+00

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  LocalECP        LocalECPotential: ion0
  NonLocalECP     NonLocalECPotential: ion0
  IonIon          CoulombAA source/target ion0


Loop execution max-interations = 60
Inside LM engine constructor, num_params is: 0 and _total_num_params is: 0

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s000 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02

=========================================================
  Start VMC
  File Root FORM.s000 append = no 
=========================================================
Resetting walkers
  Using the current 1 walkers.
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000000000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000000000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000000000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000000000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000000000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: 0 and ratio_threshold_: 0.0000000000e+00
Allocating full size _hmat_temp and _smat_temp
Inside LM engine's get_param, num_params is: 60
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.7432
    reference variance = 0.438515
====================================================
  Execution time = 4.5075e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s000
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5919e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5036e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459272506102
                                         uncertainty =       0.005700768162

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459272506102
                                         uncertainty =       0.005700768162

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479161633
  error estimate for blocks of size 2^( 2) =       0.000502412857
  error estimate for blocks of size 2^( 3) =       0.000524397202
  error estimate for blocks of size 2^( 4) =       0.000539500004
  error estimate for blocks of size 2^( 5) =       0.000549010960
  error estimate for blocks of size 2^( 6) =       0.000552917674
  error estimate for blocks of size 2^( 7) =       0.000554023271

      target function =      -0.737669681234
              le_mean =     -22.661576748041
             les_mean =     514.006252218845
             stat err =       0.000548862977
             autocorr =       1.312090531412
   target nu stat err =       0.000548862977
   target dn stat err =       0.005706024952
      target stat err =       0.004718103452
              std dev =       0.677636879978
             le_variance =       0.459191741107


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy-2.266157674804e+01 
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e-01, overlap shift 2.5000e+00 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737699071099       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737718031240       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737728861058       residual = 7.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.737735295575       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737739230280       residual = 2.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.737744104370       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.737747207730       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.737749181614       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.737752463517       residual = 1.83e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.737754556496       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.737758088967       residual = 5.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.737759384330       residual = 6.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.737760486938       residual = 6.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.737763024514       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.737765891490       residual = 3.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.737767092407       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.737767665050       residual = 9.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.737768379575       residual = 6.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.737768850519       residual = 5.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.737769575640       residual = 3.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.737769995906       residual = 1.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.737770008951       residual = 1.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.737770171466       residual = 9.84e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.737770440314       residual = 4.47e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.737770668732       residual = 3.11e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.737770662708       residual = 2.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.737770641456       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.737770689487       residual = 6.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.737770688195       residual = 3.36e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.737770707087       residual = 2.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.737770701816       residual = 8.39e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e-01 is 2.387241e-03

solving harmonic davidson linear method for identity shift 1.0000e+00, overlap shift 1.0000e+01 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737699071099       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737704571959       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737707687648       residual = 6.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.737709413690       residual = 3.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737710589709       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.737712033808       residual = 1.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.737712914679       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.737713540383       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.737714488727       residual = 1.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.737715146183       residual = 2.21e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.737715993804       residual = 5.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.737716289028       residual = 6.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.737716587049       residual = 4.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.737717329683       residual = 3.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.737718047226       residual = 3.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.737718357810       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.737718500190       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.737718690503       residual = 5.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.737718811164       residual = 4.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.737718970872       residual = 2.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.737719074067       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.737719085023       residual = 9.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.737719125624       residual = 7.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.737719185232       residual = 3.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.737719234175       residual = 2.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.737719234813       residual = 2.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.737719224176       residual = 1.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.737719234435       residual = 4.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.737719232211       residual = 1.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.737719239592       residual = 1.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.737719234150       residual = 5.07e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+00 is 6.568896e-04

solving harmonic davidson linear method for identity shift 4.0000e+00, overlap shift 4.0000e+01 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737699071099       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737700503803       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737701313456       residual = 6.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.737701752638       residual = 3.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737702061213       residual = 2.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.737702439078       residual = 1.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.737702668071       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.737702836039       residual = 1.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.737703085827       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.737703277525       residual = 2.35e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.737703463791       residual = 5.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.737703536838       residual = 6.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.737703613421       residual = 4.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.737703805016       residual = 3.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.737703983746       residual = 3.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.737704061949       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.737704097416       residual = 8.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.737704145683       residual = 4.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.737704176006       residual = 4.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.737704214165       residual = 2.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.737704239856       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.737704243132       residual = 8.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.737704253215       residual = 6.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.737704267532       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.737704279223       residual = 2.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.737704279533       residual = 1.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.737704276553       residual = 9.44e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.737704278979       residual = 3.72e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.737704278297       residual = 1.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.737704280293       residual = 1.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.737704278704       residual = 4.41e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+00 is 1.702955e-04

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.067170 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0185e+01
  </log>
  <optVariables href="FORM.s000.opt.xml">
uu_0  3.378182e-01                 1 1 ON  0
uu_1  1.769066e-01                 1 1 ON  1
uu_2  7.733139e-02                 1 1 ON  2
uu_3  1.716725e-02                 1 1 ON  3
uu_4  -1.904751e-02                1 1 ON  4
uu_5  -4.271847e-02                1 1 ON  5
uu_6  -5.768216e-02                1 1 ON  6
uu_7  -6.368510e-02                1 1 ON  7
uu_8  -5.975372e-02                1 1 ON  8
uu_9  -4.184875e-02                1 1 ON  9
ud_0  3.947269e-01                 1 1 ON  10
ud_1  1.542222e-01                 1 1 ON  11
ud_2  3.526845e-02                 1 1 ON  12
ud_3  -2.643306e-02                1 1 ON  13
ud_4  -6.020886e-02                1 1 ON  14
ud_5  -7.942207e-02                1 1 ON  15
ud_6  -8.812584e-02                1 1 ON  16
ud_7  -8.722798e-02                1 1 ON  17
ud_8  -7.713649e-02                1 1 ON  18
ud_9  -5.327952e-02                1 1 ON  19
eC_0  -4.822746e-01                1 1 ON  20
eC_1  -3.664958e-01                1 1 ON  21
eC_2  -1.700558e-01                1 1 ON  22
eC_3  -7.182481e-02                1 1 ON  23
eC_4  -5.182367e-02                1 1 ON  24
eC_5  3.158678e-02                 1 1 ON  25
eC_6  1.415600e-01                 1 1 ON  26
eC_7  3.066943e-01                 1 1 ON  27
eC_8  4.123917e-01                 1 1 ON  28
eC_9  2.341114e-01                 1 1 ON  29
eO_0  -1.052744e+00                1 1 ON  30
eO_1  -7.480191e-01                1 1 ON  31
eO_2  -3.413287e-01                1 1 ON  32
eO_3  -4.211682e-02                1 1 ON  33
eO_4  1.477782e-01                 1 1 ON  34
eO_5  3.004467e-01                 1 1 ON  35
eO_6  3.495502e-01                 1 1 ON  36
eO_7  3.648741e-01                 1 1 ON  37
eO_8  3.147021e-01                 1 1 ON  38
eO_9  3.237150e-01                 1 1 ON  39
eH1_0 -2.436189e-01                1 1 ON  40
eH1_1 -1.409695e-01                1 1 ON  41
eH1_2 -9.405832e-02                1 1 ON  42
eH1_3 -6.729487e-02                1 1 ON  43
eH1_4 7.173036e-03                 1 1 ON  44
eH1_5 6.647724e-02                 1 1 ON  45
eH1_6 1.030649e-01                 1 1 ON  46
eH1_7 7.823585e-02                 1 1 ON  47
eH1_8 4.306163e-02                 1 1 ON  48
eH1_9 1.385261e-02                 1 1 ON  49
eH2_0 -2.403367e-01                1 1 ON  50
eH2_1 -1.394356e-01                1 1 ON  51
eH2_2 -9.482860e-02                1 1 ON  52
eH2_3 -6.886502e-02                1 1 ON  53
eH2_4 5.883089e-03                 1 1 ON  54
eH2_5 6.760911e-02                 1 1 ON  55
eH2_6 1.053138e-01                 1 1 ON  56
eH2_7 7.487669e-02                 1 1 ON  57
eH2_8 3.339229e-02                 1 1 ON  58
eH2_9 -2.110621e-02                1 1 ON  59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.6577
    reference variance = 0.578532
====================================================
  Execution time = 4.6033e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s000
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5881e-01
  Total weights = 2.0000e+06
  Execution time = 3.6220e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458776857408
                                         uncertainty =       0.004684552317

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458776857408
                                         uncertainty =       0.004684552317

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478951100
  error estimate for blocks of size 2^( 2) =       0.000502431556
  error estimate for blocks of size 2^( 3) =       0.000524393954
  error estimate for blocks of size 2^( 4) =       0.000540269262
  error estimate for blocks of size 2^( 5) =       0.000548642044
  error estimate for blocks of size 2^( 6) =       0.000553225905
  error estimate for blocks of size 2^( 7) =       0.000555858048

      target function =      -0.737988151084
              le_mean =     -22.662431133693
             les_mean =     514.044572971959
             stat err =       0.000549498815
             autocorr =       1.316288752736
   target nu stat err =       0.000549498815
   target dn stat err =       0.004955080251
      target stat err =       0.004117200010
              std dev =       0.677339141036
             le_variance =       0.458788311980

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458853076786
                                         uncertainty =       0.004689128903

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458853076786
                                         uncertainty =       0.004689128903

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478990929
  error estimate for blocks of size 2^( 2) =       0.000502483140
  error estimate for blocks of size 2^( 3) =       0.000524462961
  error estimate for blocks of size 2^( 4) =       0.000540354115
  error estimate for blocks of size 2^( 5) =       0.000548738631
  error estimate for blocks of size 2^( 6) =       0.000553319317
  error estimate for blocks of size 2^( 7) =       0.000555943361

      target function =      -0.737925321317
              le_mean =     -22.662435055991
             les_mean =     514.044827057993
             stat err =       0.000549588856
             autocorr =       1.316501194760
   target nu stat err =       0.000549588856
   target dn stat err =       0.004959634249
      target stat err =       0.004120245998
              std dev =       0.677395468257
             le_variance =       0.458864620415

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458817733682
                                         uncertainty =       0.004687178163

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458817733682
                                         uncertainty =       0.004687178163

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478972460
  error estimate for blocks of size 2^( 2) =       0.000502458938
  error estimate for blocks of size 2^( 3) =       0.000524430585
  error estimate for blocks of size 2^( 4) =       0.000540314361
  error estimate for blocks of size 2^( 5) =       0.000548693534
  error estimate for blocks of size 2^( 6) =       0.000553275536
  error estimate for blocks of size 2^( 7) =       0.000555902595

      target function =      -0.737954469351
              le_mean =     -22.662432619086
             les_mean =     514.044681219556
             stat err =       0.000549546507
             autocorr =       1.316399830107
   target nu stat err =       0.000549546507
   target dn stat err =       0.004957668267
      target stat err =       0.004118948320
              std dev =       0.677369348542
             le_variance =       0.458829234345

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458781732285
                                         uncertainty =       0.004684891671

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458781732285
                                         uncertainty =       0.004684891671

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478953647
  error estimate for blocks of size 2^( 2) =       0.000502434834
  error estimate for blocks of size 2^( 3) =       0.000524398382
  error estimate for blocks of size 2^( 4) =       0.000540274751
  error estimate for blocks of size 2^( 5) =       0.000548648339
  error estimate for blocks of size 2^( 6) =       0.000553231950
  error estimate for blocks of size 2^( 7) =       0.000555863415

      target function =      -0.737984135726
              le_mean =     -22.662431221125
             les_mean =     514.044581815530
             stat err =       0.000549504614
             autocorr =       1.316302531473
   target nu stat err =       0.000549504614
   target dn stat err =       0.004955413814
      target stat err =       0.004117428256
              std dev =       0.677342743882
             le_variance =       0.458793192690


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.737988151084        initial  <--
     2.5000e-01     2.5000e+00             2.3872e-03        -0.737925321317
     1.0000e+00     1.0000e+01             6.5689e-04        -0.737954469351
     4.0000e+00     4.0000e+01             1.7030e-04        -0.737984135726

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.2101
  </log>
  <optVariables href="FORM.s000.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012902e-03 1 1  ON 44
eH1_5                 6.648304e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2440e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s001 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s001 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=1  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2700e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.6369
    reference variance = 0.356065
====================================================
  Execution time = 4.4305e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s001
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5244e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5217e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452484080645
                                         uncertainty =       0.004854447303

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452484080645
                                         uncertainty =       0.004854447303

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475626030
  error estimate for blocks of size 2^( 2) =       0.000499413099
  error estimate for blocks of size 2^( 3) =       0.000521649220
  error estimate for blocks of size 2^( 4) =       0.000537838912
  error estimate for blocks of size 2^( 5) =       0.000547592980
  error estimate for blocks of size 2^( 6) =       0.000549783773
  error estimate for blocks of size 2^( 7) =       0.000551314605

      target function =      -0.743255420936
              le_mean =     -22.661530959465
             les_mean =     513.997425441040
             stat err =       0.000546632568
             autocorr =       1.320869088075
   target nu stat err =       0.000546632568
   target dn stat err =       0.004949376301
      target stat err =       0.004164699159
              std dev =       0.672636781994
             le_variance =       0.452440240491


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266153095946e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+00, overlap shift 2.5000e+01 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743277538890       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743279668667       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743281202159       residual = 5.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743281683193       residual = 3.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743282345033       residual = 5.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743283051727       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743283251733       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743283488406       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743283753063       residual = 1.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743284247464       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743284402470       residual = 8.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743284701102       residual = 7.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743284840490       residual = 2.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743284946745       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743285287180       residual = 2.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743285398725       residual = 1.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743285536674       residual = 8.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743285614836       residual = 3.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743285664152       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743285698288       residual = 2.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743285682692       residual = 2.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743285765886       residual = 2.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743285776378       residual = 1.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743285774602       residual = 1.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743285778050       residual = 3.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743285776951       residual = 2.33e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743285794516       residual = 5.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743285797816       residual = 3.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743285793241       residual = 2.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743285801568       residual = 3.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.743285799146       residual = 1.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.743285800045       residual = 5.38e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+00 is 3.019504e-04

solving harmonic davidson linear method for identity shift 1.0000e+01, overlap shift 1.0000e+02 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743277538890       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743278080667       residual = 1.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743278468125       residual = 5.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743278589276       residual = 3.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743278759375       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743278935881       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743278985580       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743279046222       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743279113293       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743279237768       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743279276296       residual = 8.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743279351305       residual = 6.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743279386934       residual = 2.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743279413122       residual = 3.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743279499574       residual = 2.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743279526554       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743279560836       residual = 8.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743279580932       residual = 3.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743279592982       residual = 2.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743279601450       residual = 2.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743279597491       residual = 2.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743279618167       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743279620699       residual = 1.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743279620120       residual = 1.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743279620840       residual = 3.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743279620613       residual = 2.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743279624910       residual = 4.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743279625682       residual = 3.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743279624610       residual = 2.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743279626673       residual = 2.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.743279625982       residual = 1.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.743279626247       residual = 5.00e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+01 is 7.531533e-05

solving harmonic davidson linear method for identity shift 4.0000e+01, overlap shift 4.0000e+02 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743277538890       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743277674930       residual = 9.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743277772053       residual = 5.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743277802397       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743277845221       residual = 5.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743277889334       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743277901737       residual = 2.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743277916995       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743277933822       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743277964991       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743277974609       residual = 8.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743277993385       residual = 6.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743278002339       residual = 2.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743278008862       residual = 3.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743278030559       residual = 2.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743278037249       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743278045805       residual = 8.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743278050863       residual = 3.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743278053858       residual = 2.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743278055971       residual = 2.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743278054978       residual = 2.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743278060138       residual = 2.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743278060766       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743278060612       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743278060784       residual = 3.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743278060730       residual = 2.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743278061799       residual = 4.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743278061988       residual = 3.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743278061725       residual = 2.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743278062239       residual = 2.78e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.743278062061       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.743278062130       residual = 4.91e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+01 is 1.881802e-05

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.104068 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9564e+01
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 3.376513e-01 1 1  ON 0
 uu_1                 1.767594e-01 1 1  ON 1
 uu_2                 7.722135e-02 1 1  ON 2
 uu_3                 1.708310e-02 1 1  ON 3
 uu_4                -1.912893e-02 1 1  ON 4
 uu_5                -4.283066e-02 1 1  ON 5
 uu_6                -5.787738e-02 1 1  ON 6
 uu_7                -6.394581e-02 1 1  ON 7
 uu_8                -5.910599e-02 1 1  ON 8
 uu_9                -4.154174e-02 1 1  ON 9
 ud_0                 3.949728e-01 1 1  ON 10
 ud_1                 1.544298e-01 1 1  ON 11
 ud_2                 3.546642e-02 1 1  ON 12
 ud_3                -2.629254e-02 1 1  ON 13
 ud_4                -6.010365e-02 1 1  ON 14
 ud_5                -7.934076e-02 1 1  ON 15
 ud_6                -8.810372e-02 1 1  ON 16
 ud_7                -8.740011e-02 1 1  ON 17
 ud_8                -7.745331e-02 1 1  ON 18
 ud_9                -5.386018e-02 1 1  ON 19
 eC_0                -4.824119e-01 1 1  ON 20
 eC_1                -3.665920e-01 1 1  ON 21
 eC_2                -1.701599e-01 1 1  ON 22
 eC_3                -7.185265e-02 1 1  ON 23
 eC_4                -5.172198e-02 1 1  ON 24
 eC_5                 3.185097e-02 1 1  ON 25
 eC_6                 1.415602e-01 1 1  ON 26
 eC_7                 3.067312e-01 1 1  ON 27
 eC_8                 4.123963e-01 1 1  ON 28
 eC_9                 2.340680e-01 1 1  ON 29
 eO_0                -1.052895e+00 1 1  ON 30
 eO_1                -7.482466e-01 1 1  ON 31
 eO_2                -3.414867e-01 1 1  ON 32
 eO_3                -4.203268e-02 1 1  ON 33
 eO_4                 1.479029e-01 1 1  ON 34
 eO_5                 3.007257e-01 1 1  ON 35
 eO_6                 3.501132e-01 1 1  ON 36
 eO_7                 3.646963e-01 1 1  ON 37
 eO_8                 3.143470e-01 1 1  ON 38
 eO_9                 3.238173e-01 1 1  ON 39
eH1_0                -2.436165e-01 1 1  ON 40
eH1_1                -1.410549e-01 1 1  ON 41
eH1_2                -9.423135e-02 1 1  ON 42
eH1_3                -6.745122e-02 1 1  ON 43
eH1_4                 7.006154e-03 1 1  ON 44
eH1_5                 6.649324e-02 1 1  ON 45
eH1_6                 1.030187e-01 1 1  ON 46
eH1_7                 7.844073e-02 1 1  ON 47
eH1_8                 4.343597e-02 1 1  ON 48
eH1_9                 1.389993e-02 1 1  ON 49
eH2_0                -2.403316e-01 1 1  ON 50
eH2_1                -1.394345e-01 1 1  ON 51
eH2_2                -9.471019e-02 1 1  ON 52
eH2_3                -6.879317e-02 1 1  ON 53
eH2_4                 5.912527e-03 1 1  ON 54
eH2_5                 6.770825e-02 1 1  ON 55
eH2_6                 1.052679e-01 1 1  ON 56
eH2_7                 7.451071e-02 1 1  ON 57
eH2_8                 3.343448e-02 1 1  ON 58
eH2_9                -2.106492e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.6699
    reference variance = 0.35211
====================================================
  Execution time = 4.4150e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s001
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5934e-01
  Total weights = 2.0000e+06
  Execution time = 3.6071e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458979636340
                                         uncertainty =       0.005907199469

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458979636340
                                         uncertainty =       0.005907199469

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479235818
  error estimate for blocks of size 2^( 2) =       0.000503210799
  error estimate for blocks of size 2^( 3) =       0.000524927247
  error estimate for blocks of size 2^( 4) =       0.000540109783
  error estimate for blocks of size 2^( 5) =       0.000549862518
  error estimate for blocks of size 2^( 6) =       0.000554774111
  error estimate for blocks of size 2^( 7) =       0.000554908574

      target function =      -0.737521017635
              le_mean =     -22.662937045207
             les_mean =     514.068049223359
             stat err =       0.000549913746
             autocorr =       1.316711453007
   target nu stat err =       0.000549913746
   target dn stat err =       0.005610875503
      target stat err =       0.004648574143
              std dev =       0.677741793009
             le_variance =       0.459333937990

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459001232043
                                         uncertainty =       0.005907706898

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459001232043
                                         uncertainty =       0.005907706898

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479247148
  error estimate for blocks of size 2^( 2) =       0.000503221463
  error estimate for blocks of size 2^( 3) =       0.000524937005
  error estimate for blocks of size 2^( 4) =       0.000540118470
  error estimate for blocks of size 2^( 5) =       0.000549869867
  error estimate for blocks of size 2^( 6) =       0.000554780278
  error estimate for blocks of size 2^( 7) =       0.000554914983

      target function =      -0.737503185944
              le_mean =     -22.662936747873
             les_mean =     514.068057465663
             stat err =       0.000549920899
             autocorr =       1.316683448655
   target nu stat err =       0.000549920899
   target dn stat err =       0.005611217906
      target stat err =       0.004648629030
              std dev =       0.677757816086
             le_variance =       0.459355657265

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458990513877
                                         uncertainty =       0.005907455144

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458990513877
                                         uncertainty =       0.005907455144

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479241525
  error estimate for blocks of size 2^( 2) =       0.000503216163
  error estimate for blocks of size 2^( 3) =       0.000524932147
  error estimate for blocks of size 2^( 4) =       0.000540114137
  error estimate for blocks of size 2^( 5) =       0.000549866194
  error estimate for blocks of size 2^( 6) =       0.000554777190
  error estimate for blocks of size 2^( 7) =       0.000554911777

      target function =      -0.737512036026
              le_mean =     -22.662936881885
             les_mean =     514.068052760671
             stat err =       0.000549917324
             autocorr =       1.316697226713
   target nu stat err =       0.000549917324
   target dn stat err =       0.005611047663
      target stat err =       0.004648601445
              std dev =       0.677749863905
             le_variance =       0.459344878023

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458980995648
                                         uncertainty =       0.005907231488

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458980995648
                                         uncertainty =       0.005907231488

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479236531
  error estimate for blocks of size 2^( 2) =       0.000503211469
  error estimate for blocks of size 2^( 3) =       0.000524927858
  error estimate for blocks of size 2^( 4) =       0.000540110325
  error estimate for blocks of size 2^( 5) =       0.000549862974
  error estimate for blocks of size 2^( 6) =       0.000554774493
  error estimate for blocks of size 2^( 7) =       0.000554908971

      target function =      -0.737519895259
              le_mean =     -22.662937023253
             les_mean =     514.068049595396
             stat err =       0.000549914191
             autocorr =       1.316709661809
   target nu stat err =       0.000549914191
   target dn stat err =       0.005610897050
      target stat err =       0.004648577571
              std dev =       0.677742801608
             le_variance =       0.459335305132


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.737521017635        initial  <--
     2.5000e+00     2.5000e+01             3.0195e-04        -0.737503185944
     1.0000e+01     1.0000e+02             7.5315e-05        -0.737512036026
     4.0000e+01     4.0000e+02             1.8818e-05        -0.737519895259

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.2576
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012902e-03 1 1  ON 44
eH1_5                 6.648304e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2183e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s002 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s002 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=2  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2677e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.7053
    reference variance = 0.472657
====================================================
  Execution time = 4.4756e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s002
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5077e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5354e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450795773859
                                         uncertainty =       0.002675927186

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450795773859
                                         uncertainty =       0.002675927186

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474745553
  error estimate for blocks of size 2^( 2) =       0.000497748720
  error estimate for blocks of size 2^( 3) =       0.000519678478
  error estimate for blocks of size 2^( 4) =       0.000535426679
  error estimate for blocks of size 2^( 5) =       0.000544912990
  error estimate for blocks of size 2^( 6) =       0.000549439576
  error estimate for blocks of size 2^( 7) =       0.000550664978

      target function =      -0.744652476472
              le_mean =     -22.662595308743
             les_mean =     514.043992583583
             stat err =       0.000545111056
             autocorr =       1.318402959659
   target nu stat err =       0.000545111056
   target dn stat err =       0.002610674600
      target stat err =       0.002268804625
              std dev =       0.671391600422
             le_variance =       0.450766681117


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266259530874e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+01, overlap shift 2.5000e+02 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744658478457       residual = 1.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744658555518       residual = 2.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744658603589       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744658621686       residual = 6.07e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744658633161       residual = 6.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744658647108       residual = 4.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744658667740       residual = 5.30e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744658670563       residual = 3.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744658682397       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744658682472       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744658689915       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744658694994       residual = 2.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744658699944       residual = 6.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744658702494       residual = 4.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744658706040       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744658706429       residual = 4.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744658710116       residual = 2.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744658711877       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744658710176       residual = 1.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744658711300       residual = 5.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744658713403       residual = 3.65e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744658713656       residual = 3.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744658714998       residual = 2.22e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744658715072       residual = 1.28e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744658715373       residual = 7.86e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744658715241       residual = 7.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744658715217       residual = 3.73e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744658715489       residual = 3.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744658715448       residual = 1.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744658715457       residual = 5.01e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+01 is 9.482249e-06

solving harmonic davidson linear method for identity shift 1.0000e+02, overlap shift 1.0000e+03 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744658478457       residual = 1.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744658497757       residual = 2.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744658509787       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744658514322       residual = 6.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744658517194       residual = 6.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744658520686       residual = 4.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744658525847       residual = 5.30e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744658526556       residual = 3.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744658529521       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744658529536       residual = 3.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744658531398       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744658532667       residual = 2.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744658533907       residual = 6.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744658534546       residual = 4.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744658535433       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744658535530       residual = 4.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744658536451       residual = 2.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744658536891       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744658536465       residual = 1.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744658536746       residual = 5.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744658537273       residual = 3.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744658537335       residual = 3.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744658537670       residual = 2.22e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744658537688       residual = 1.28e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744658537763       residual = 7.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744658537731       residual = 7.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744658537725       residual = 3.72e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744658537792       residual = 3.06e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744658537783       residual = 1.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744658537785       residual = 4.98e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+02 is 2.371938e-06

solving harmonic davidson linear method for identity shift 4.0000e+02, overlap shift 4.0000e+03 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744658478457       residual = 1.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744658483284       residual = 2.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744658486293       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744658487427       residual = 6.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744658488146       residual = 6.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744658489019       residual = 4.86e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744658490309       residual = 5.30e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744658490486       residual = 3.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744658491228       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744658491232       residual = 3.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744658491697       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744658492014       residual = 2.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744658492325       residual = 6.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744658492484       residual = 4.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744658492706       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744658492731       residual = 4.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744658492960       residual = 2.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744658493070       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744658492965       residual = 1.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744658493034       residual = 5.04e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744658493166       residual = 3.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744658493181       residual = 3.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744658493265       residual = 2.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744658493268       residual = 1.28e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744658493288       residual = 7.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744658493280       residual = 7.29e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744658493278       residual = 3.71e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744658493296       residual = 3.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744658493293       residual = 1.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744658493293       residual = 4.97e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+02 is 5.930706e-07

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.134342 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0146e+01
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 3.376613e-01 1 1  ON 0
 uu_1                 1.767725e-01 1 1  ON 1
 uu_2                 7.723741e-02 1 1  ON 2
 uu_3                 1.710005e-02 1 1  ON 3
 uu_4                -1.910495e-02 1 1  ON 4
 uu_5                -4.280369e-02 1 1  ON 5
 uu_6                -5.785290e-02 1 1  ON 6
 uu_7                -6.393394e-02 1 1  ON 7
 uu_8                -5.909920e-02 1 1  ON 8
 uu_9                -4.158477e-02 1 1  ON 9
 ud_0                 3.949795e-01 1 1  ON 10
 ud_1                 1.544377e-01 1 1  ON 11
 ud_2                 3.547674e-02 1 1  ON 12
 ud_3                -2.628477e-02 1 1  ON 13
 ud_4                -6.009422e-02 1 1  ON 14
 ud_5                -7.932929e-02 1 1  ON 15
 ud_6                -8.808210e-02 1 1  ON 16
 ud_7                -8.737316e-02 1 1  ON 17
 ud_8                -7.743323e-02 1 1  ON 18
 ud_9                -5.391645e-02 1 1  ON 19
 eC_0                -4.823970e-01 1 1  ON 20
 eC_1                -3.665898e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185533e-02 1 1  ON 23
 eC_4                -5.170379e-02 1 1  ON 24
 eC_5                 3.187729e-02 1 1  ON 25
 eC_6                 1.415400e-01 1 1  ON 26
 eC_7                 3.067071e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340650e-01 1 1  ON 29
 eO_0                -1.052898e+00 1 1  ON 30
 eO_1                -7.482426e-01 1 1  ON 31
 eO_2                -3.414716e-01 1 1  ON 32
 eO_3                -4.201606e-02 1 1  ON 33
 eO_4                 1.479186e-01 1 1  ON 34
 eO_5                 3.007140e-01 1 1  ON 35
 eO_6                 3.501209e-01 1 1  ON 36
 eO_7                 3.647549e-01 1 1  ON 37
 eO_8                 3.143355e-01 1 1  ON 38
 eO_9                 3.237414e-01 1 1  ON 39
eH1_0                -2.436088e-01 1 1  ON 40
eH1_1                -1.410491e-01 1 1  ON 41
eH1_2                -9.420314e-02 1 1  ON 42
eH1_3                -6.742899e-02 1 1  ON 43
eH1_4                 7.012410e-03 1 1  ON 44
eH1_5                 6.648208e-02 1 1  ON 45
eH1_6                 1.029651e-01 1 1  ON 46
eH1_7                 7.841476e-02 1 1  ON 47
eH1_8                 4.345857e-02 1 1  ON 48
eH1_9                 1.390207e-02 1 1  ON 49
eH2_0                -2.403509e-01 1 1  ON 50
eH2_1                -1.394470e-01 1 1  ON 51
eH2_2                -9.471633e-02 1 1  ON 52
eH2_3                -6.879385e-02 1 1  ON 53
eH2_4                 5.917211e-03 1 1  ON 54
eH2_5                 6.770072e-02 1 1  ON 55
eH2_6                 1.052561e-01 1 1  ON 56
eH2_7                 7.452506e-02 1 1  ON 57
eH2_8                 3.346981e-02 1 1  ON 58
eH2_9                -2.106275e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.7708
    reference variance = 1.16748
====================================================
  Execution time = 4.4252e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s002
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5144e-01
  Total weights = 2.0000e+06
  Execution time = 3.6127e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346038216
                                         uncertainty =       0.002816338011

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346038216
                                         uncertainty =       0.002816338011

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475102292
  error estimate for blocks of size 2^( 2) =       0.000498722367
  error estimate for blocks of size 2^( 3) =       0.000520446588
  error estimate for blocks of size 2^( 4) =       0.000536000793
  error estimate for blocks of size 2^( 5) =       0.000545930464
  error estimate for blocks of size 2^( 6) =       0.000549492194
  error estimate for blocks of size 2^( 7) =       0.000550473293

      target function =      -0.744084150974
              le_mean =     -22.662551433198
             les_mean =     514.042681613188
             stat err =       0.000545474186
             autocorr =       1.318178287163
   target nu stat err =       0.000545474186
   target dn stat err =       0.003096521751
      target stat err =       0.002658487026
              std dev =       0.671896105474
             le_variance =       0.451444376551

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451347801574
                                         uncertainty =       0.002816408726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451347801574
                                         uncertainty =       0.002816408726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475103222
  error estimate for blocks of size 2^( 2) =       0.000498723184
  error estimate for blocks of size 2^( 3) =       0.000520447334
  error estimate for blocks of size 2^( 4) =       0.000536001490
  error estimate for blocks of size 2^( 5) =       0.000545931107
  error estimate for blocks of size 2^( 6) =       0.000549492795
  error estimate for blocks of size 2^( 7) =       0.000550473772

      target function =      -0.744082674844
              le_mean =     -22.662551416915
             les_mean =     514.042682641902
             stat err =       0.000545474791
             autocorr =       1.318176052563
   target nu stat err =       0.000545474791
   target dn stat err =       0.003096590910
      target stat err =       0.002658533075
              std dev =       0.671897420213
             le_variance =       0.451446143289

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346920891
                                         uncertainty =       0.002816373411

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346920891
                                         uncertainty =       0.002816373411

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475102758
  error estimate for blocks of size 2^( 2) =       0.000498722776
  error estimate for blocks of size 2^( 3) =       0.000520446961
  error estimate for blocks of size 2^( 4) =       0.000536001142
  error estimate for blocks of size 2^( 5) =       0.000545930786
  error estimate for blocks of size 2^( 6) =       0.000549492495
  error estimate for blocks of size 2^( 7) =       0.000550473533

      target function =      -0.744083412074
              le_mean =     -22.662551425020
             les_mean =     514.042682126888
             stat err =       0.000545474489
             autocorr =       1.318177168289
   target nu stat err =       0.000545474489
   target dn stat err =       0.003096556372
      target stat err =       0.002658510078
              std dev =       0.671896763587
             le_variance =       0.451445260919

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346148572
                                         uncertainty =       0.002816342437

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451346148572
                                         uncertainty =       0.002816342437

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475102351
  error estimate for blocks of size 2^( 2) =       0.000498722418
  error estimate for blocks of size 2^( 3) =       0.000520446634
  error estimate for blocks of size 2^( 4) =       0.000536000836
  error estimate for blocks of size 2^( 5) =       0.000545930504
  error estimate for blocks of size 2^( 6) =       0.000549492232
  error estimate for blocks of size 2^( 7) =       0.000550473323

      target function =      -0.744084058593
              le_mean =     -22.662551432172
             les_mean =     514.042681677259
             stat err =       0.000545474224
             autocorr =       1.318178147244
   target nu stat err =       0.000545474224
   target dn stat err =       0.003096526080
      target stat err =       0.002658489909
              std dev =       0.671896187755
             le_variance =       0.451444487120


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744084150974        initial  <--
     2.5000e+01     2.5000e+02             9.4822e-06        -0.744082674844
     1.0000e+02     1.0000e+03             2.3719e-06        -0.744083412074
     4.0000e+02     4.0000e+03             5.9307e-07        -0.744084058593

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.4040
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012902e-03 1 1  ON 44
eH1_5                 6.648304e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2256e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s003 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s003 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=3  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2697e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.6426
    reference variance = 0.803501
====================================================
  Execution time = 4.6306e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s003
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5524e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5455e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455256683707
                                         uncertainty =       0.006502651302

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455256683707
                                         uncertainty =       0.006502651302

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477095070
  error estimate for blocks of size 2^( 2) =       0.000500443886
  error estimate for blocks of size 2^( 3) =       0.000522362894
  error estimate for blocks of size 2^( 4) =       0.000537515804
  error estimate for blocks of size 2^( 5) =       0.000547492309
  error estimate for blocks of size 2^( 6) =       0.000549982585
  error estimate for blocks of size 2^( 7) =       0.000551708650

      target function =      -0.740909406547
              le_mean =     -22.661749265151
             les_mean =     514.010118941183
             stat err =       0.000546674837
             autocorr =       1.312950371093
   target nu stat err =       0.000546674837
   target dn stat err =       0.006769866114
      target stat err =       0.005634341427
              std dev =       0.674714318991
             le_variance =       0.455239412251


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266174926515e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+02, overlap shift 2.5000e+03 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740950905203       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740950914557       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740950923002       residual = 5.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740950932252       residual = 2.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.740950935163       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.740950938499       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.740950939719       residual = 8.78e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.740950941291       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.740950942438       residual = 2.80e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.740950942943       residual = 3.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.740950943659       residual = 3.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.740950944768       residual = 2.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.740950945455       residual = 9.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.740950945851       residual = 6.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.740950946810       residual = 9.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.740950946938       residual = 4.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.740950947282       residual = 4.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.740950947893       residual = 2.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.740950947798       residual = 1.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.740950948353       residual = 9.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.740950948472       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.740950948479       residual = 5.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.740950948408       residual = 4.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.740950948506       residual = 4.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.740950948571       residual = 1.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.740950948536       residual = 9.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.740950948439       residual = 4.94e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.740950948460       residual = 2.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.740950948455       residual = 5.94e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+02 is 1.215074e-06

solving harmonic davidson linear method for identity shift 1.0000e+03, overlap shift 1.0000e+04 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740950905203       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740950907542       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740950909654       residual = 5.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740950911966       residual = 2.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.740950912694       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.740950913528       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.740950913834       residual = 8.78e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.740950914227       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.740950914515       residual = 2.80e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.740950914641       residual = 3.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.740950914818       residual = 3.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.740950915097       residual = 2.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.740950915267       residual = 9.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.740950915365       residual = 6.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.740950915605       residual = 9.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.740950915637       residual = 4.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.740950915724       residual = 4.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.740950915877       residual = 2.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.740950915854       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.740950915994       residual = 9.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.740950916022       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.740950916026       residual = 5.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.740950916008       residual = 4.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.740950916030       residual = 4.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.740950916047       residual = 1.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.740950916037       residual = 9.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.740950916013       residual = 4.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.740950916022       residual = 2.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.740950916019       residual = 5.94e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+03 is 3.037838e-07

solving harmonic davidson linear method for identity shift 4.0000e+03, overlap shift 4.0000e+04 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740950905203       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740950905788       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740950906316       residual = 5.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740950906894       residual = 2.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.740950907076       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.740950907286       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.740950907349       residual = 8.78e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.740950907461       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.740950907531       residual = 2.80e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.740950907563       residual = 3.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.740950907607       residual = 3.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.740950907673       residual = 2.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.740950907718       residual = 9.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.740950907744       residual = 6.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.740950907801       residual = 9.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.740950907808       residual = 4.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.740950907840       residual = 4.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.740950907888       residual = 2.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.740950907854       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.740950907901       residual = 9.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.740950907908       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.740950907905       residual = 5.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.740950907906       residual = 4.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.740950907913       residual = 4.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.740950907915       residual = 1.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.740950907930       residual = 9.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.740950907899       residual = 4.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.740950907900       residual = 2.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.740950907911       residual = 5.94e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+03 is 7.594690e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.161876 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1794e+01
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 3.376606e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723732e-02 1 1  ON 2
 uu_3                 1.710007e-02 1 1  ON 3
 uu_4                -1.910463e-02 1 1  ON 4
 uu_5                -4.280302e-02 1 1  ON 5
 uu_6                -5.785208e-02 1 1  ON 6
 uu_7                -6.393265e-02 1 1  ON 7
 uu_8                -5.909679e-02 1 1  ON 8
 uu_9                -4.158281e-02 1 1  ON 9
 ud_0                 3.949807e-01 1 1  ON 10
 ud_1                 1.544391e-01 1 1  ON 11
 ud_2                 3.547837e-02 1 1  ON 12
 ud_3                -2.628343e-02 1 1  ON 13
 ud_4                -6.009290e-02 1 1  ON 14
 ud_5                -7.932798e-02 1 1  ON 15
 ud_6                -8.808065e-02 1 1  ON 16
 ud_7                -8.737213e-02 1 1  ON 17
 ud_8                -7.743481e-02 1 1  ON 18
 ud_9                -5.391852e-02 1 1  ON 19
 eC_0                -4.823948e-01 1 1  ON 20
 eC_1                -3.665892e-01 1 1  ON 21
 eC_2                -1.701694e-01 1 1  ON 22
 eC_3                -7.185652e-02 1 1  ON 23
 eC_4                -5.170400e-02 1 1  ON 24
 eC_5                 3.187703e-02 1 1  ON 25
 eC_6                 1.415404e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482420e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201493e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007145e-01 1 1  ON 35
 eO_6                 3.501197e-01 1 1  ON 36
 eO_7                 3.647541e-01 1 1  ON 37
 eO_8                 3.143344e-01 1 1  ON 38
 eO_9                 3.237418e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410505e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742880e-02 1 1  ON 43
eH1_4                 7.012746e-03 1 1  ON 44
eH1_5                 6.648284e-02 1 1  ON 45
eH1_6                 1.029658e-01 1 1  ON 46
eH1_7                 7.841593e-02 1 1  ON 47
eH1_8                 4.345992e-02 1 1  ON 48
eH1_9                 1.390183e-02 1 1  ON 49
eH2_0                -2.403492e-01 1 1  ON 50
eH2_1                -1.394468e-01 1 1  ON 51
eH2_2                -9.471541e-02 1 1  ON 52
eH2_3                -6.879316e-02 1 1  ON 53
eH2_4                 5.917458e-03 1 1  ON 54
eH2_5                 6.770088e-02 1 1  ON 55
eH2_6                 1.052554e-01 1 1  ON 56
eH2_7                 7.452373e-02 1 1  ON 57
eH2_8                 3.347007e-02 1 1  ON 58
eH2_9                -2.106271e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.6551
    reference variance = 0.82329
====================================================
  Execution time = 4.3704e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s003
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5720e-01
  Total weights = 2.0000e+06
  Execution time = 3.6181e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308913770
                                         uncertainty =       0.005227811744

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308913770
                                         uncertainty =       0.005227811744

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478121533
  error estimate for blocks of size 2^( 2) =       0.000501585611
  error estimate for blocks of size 2^( 3) =       0.000523113882
  error estimate for blocks of size 2^( 4) =       0.000537869870
  error estimate for blocks of size 2^( 5) =       0.000546873643
  error estimate for blocks of size 2^( 6) =       0.000550955168
  error estimate for blocks of size 2^( 7) =       0.000554320143

      target function =      -0.739311744050
              le_mean =     -22.661567335278
             les_mean =     514.003834263681
             stat err =       0.000547504706
             autocorr =       1.311291077178
   target nu stat err =       0.000547504706
   target dn stat err =       0.005174375976
      target stat err =       0.004304825184
              std dev =       0.676165956670
             le_variance =       0.457200400960

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308937824
                                         uncertainty =       0.005227810950

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308937824
                                         uncertainty =       0.005227810950

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478121546
  error estimate for blocks of size 2^( 2) =       0.000501585629
  error estimate for blocks of size 2^( 3) =       0.000523113904
  error estimate for blocks of size 2^( 4) =       0.000537869891
  error estimate for blocks of size 2^( 5) =       0.000546873666
  error estimate for blocks of size 2^( 6) =       0.000550955188
  error estimate for blocks of size 2^( 7) =       0.000554320173

      target function =      -0.739311724212
              le_mean =     -22.661567334740
             les_mean =     514.003834263456
             stat err =       0.000547504729
             autocorr =       1.311291119336
   target nu stat err =       0.000547504729
   target dn stat err =       0.005174374564
      target stat err =       0.004304823804
              std dev =       0.676165974505
             le_variance =       0.457200425079

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308925797
                                         uncertainty =       0.005227811347

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308925797
                                         uncertainty =       0.005227811347

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478121539
  error estimate for blocks of size 2^( 2) =       0.000501585620
  error estimate for blocks of size 2^( 3) =       0.000523113893
  error estimate for blocks of size 2^( 4) =       0.000537869881
  error estimate for blocks of size 2^( 5) =       0.000546873654
  error estimate for blocks of size 2^( 6) =       0.000550955178
  error estimate for blocks of size 2^( 7) =       0.000554320158

      target function =      -0.739311734131
              le_mean =     -22.661567335008
             les_mean =     514.003834263542
             stat err =       0.000547504718
             autocorr =       1.311291098255
   target nu stat err =       0.000547504718
   target dn stat err =       0.005174375270
      target stat err =       0.004304824494
              std dev =       0.676165965588
             le_variance =       0.457200413019

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308915273
                                         uncertainty =       0.005227811694

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457308915273
                                         uncertainty =       0.005227811694

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478121534
  error estimate for blocks of size 2^( 2) =       0.000501585612
  error estimate for blocks of size 2^( 3) =       0.000523113884
  error estimate for blocks of size 2^( 4) =       0.000537869871
  error estimate for blocks of size 2^( 5) =       0.000546873644
  error estimate for blocks of size 2^( 6) =       0.000550955169
  error estimate for blocks of size 2^( 7) =       0.000554320145

      target function =      -0.739311742810
              le_mean =     -22.661567335244
             les_mean =     514.003834263661
             stat err =       0.000547504707
             autocorr =       1.311291079817
   target nu stat err =       0.000547504707
   target dn stat err =       0.005174375887
      target stat err =       0.004304825098
              std dev =       0.676165957785
             le_variance =       0.457200402467


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.739311744050        initial  <--
     2.5000e+02     2.5000e+03             1.2151e-06        -0.739311724212
     1.0000e+03     1.0000e+04             3.0378e-07        -0.739311734131
     4.0000e+03     4.0000e+04             7.5947e-08        -0.739311742810

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8679
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012902e-03 1 1  ON 44
eH1_5                 6.648304e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2367e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s004 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s004 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=4  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2685e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.6808
    reference variance = 0.309879
====================================================
  Execution time = 4.4832e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s004
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5055e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5204e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450499302696
                                         uncertainty =       0.003005891544

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450499302696
                                         uncertainty =       0.003005891544

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474631672
  error estimate for blocks of size 2^( 2) =       0.000498436670
  error estimate for blocks of size 2^( 3) =       0.000520660263
  error estimate for blocks of size 2^( 4) =       0.000535875976
  error estimate for blocks of size 2^( 5) =       0.000545271589
  error estimate for blocks of size 2^( 6) =       0.000549683160
  error estimate for blocks of size 2^( 7) =       0.000552358554

      target function =      -0.744824945227
              le_mean =     -22.663012566944
             les_mean =     514.062688832899
             stat err =       0.000545797320
             autocorr =       1.322358971561
   target nu stat err =       0.000545797320
   target dn stat err =       0.003048484759
      target stat err =       0.002626438490
              std dev =       0.671230548104
             le_variance =       0.450550448708


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266301256694e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+03, overlap shift 2.5000e+04 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744833297379       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744833298474       residual = 5.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744833299198       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744833299641       residual = 2.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744833299897       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744833300065       residual = 9.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744833300374       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744833300524       residual = 7.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744833300617       residual = 2.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744833300662       residual = 3.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744833300740       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744833300768       residual = 3.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744833300817       residual = 9.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744833300881       residual = 8.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744833300936       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744833300963       residual = 5.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744833300993       residual = 4.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744833301081       residual = 2.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744833301084       residual = 1.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744833301104       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744833301122       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744833301143       residual = 4.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744833301123       residual = 3.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744833301128       residual = 2.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744833301118       residual = 1.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744833301145       residual = 1.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744833301126       residual = 3.46e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744833301141       residual = 3.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744833301147       residual = 1.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744833301145       residual = 8.88e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+03 is 1.247678e-07

solving harmonic davidson linear method for identity shift 1.0000e+04, overlap shift 1.0000e+05 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744833297379       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744833297653       residual = 5.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744833297834       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744833297945       residual = 2.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744833298018       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744833298049       residual = 9.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744833298145       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744833298179       residual = 7.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744833298178       residual = 2.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744833298206       residual = 3.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744833298218       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744833298258       residual = 3.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744833298230       residual = 9.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744833298221       residual = 8.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744833298280       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744833298265       residual = 5.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744833298266       residual = 4.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744833298324       residual = 2.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744833298299       residual = 1.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744833298297       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744833298325       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744833298336       residual = 4.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744833298307       residual = 3.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744833298315       residual = 2.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744833298311       residual = 1.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744833298367       residual = 1.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744833298326       residual = 3.45e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744833298308       residual = 3.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744833298244       residual = 1.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744833298339       residual = 8.88e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+04 is 3.119207e-08

solving harmonic davidson linear method for identity shift 4.0000e+04, overlap shift 4.0000e+05 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744833297379       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744833297448       residual = 5.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744833297493       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744833297550       residual = 2.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744833297560       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744833297478       residual = 9.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744833297615       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744833297559       residual = 7.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744833297522       residual = 2.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744833297599       residual = 3.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744833297603       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744833297601       residual = 3.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744833297486       residual = 9.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744833297555       residual = 8.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744833297537       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744833297742       residual = 5.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744833297697       residual = 4.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744833297705       residual = 2.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744833297491       residual = 1.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744833297696       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744833297552       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744833297626       residual = 4.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744833297679       residual = 3.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744833297585       residual = 2.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744833297659       residual = 1.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744833297531       residual = 1.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744833297597       residual = 3.45e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744833297563       residual = 3.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744833297710       residual = 1.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744833297619       residual = 8.88e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+04 is 7.798025e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.191997 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0071e+01
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910460e-02 1 1  ON 4
 uu_5                -4.280305e-02 1 1  ON 5
 uu_6                -5.785206e-02 1 1  ON 6
 uu_7                -6.393267e-02 1 1  ON 7
 uu_8                -5.909686e-02 1 1  ON 8
 uu_9                -4.158285e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547831e-02 1 1  ON 12
 ud_3                -2.628346e-02 1 1  ON 13
 ud_4                -6.009294e-02 1 1  ON 14
 ud_5                -7.932810e-02 1 1  ON 15
 ud_6                -8.808075e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391826e-02 1 1  ON 19
 eC_0                -4.823947e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185682e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187714e-02 1 1  ON 25
 eC_6                 1.415406e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414709e-01 1 1  ON 32
 eO_3                -4.201518e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012912e-03 1 1  ON 44
eH1_5                 6.648305e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841587e-02 1 1  ON 47
eH1_8                 4.345976e-02 1 1  ON 48
eH1_9                 1.390191e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879320e-02 1 1  ON 53
eH2_4                 5.917578e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052554e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347001e-02 1 1  ON 58
eH2_9                -2.106279e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.7475
    reference variance = 0.466306
====================================================
  Execution time = 4.3830e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s004
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5932e-01
  Total weights = 2.0000e+06
  Execution time = 3.6331e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459328996062
                                         uncertainty =       0.007577917634

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459328996062
                                         uncertainty =       0.007577917634

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479229825
  error estimate for blocks of size 2^( 2) =       0.000502671367
  error estimate for blocks of size 2^( 3) =       0.000524168953
  error estimate for blocks of size 2^( 4) =       0.000540059093
  error estimate for blocks of size 2^( 5) =       0.000548268071
  error estimate for blocks of size 2^( 6) =       0.000553119978
  error estimate for blocks of size 2^( 7) =       0.000555936673

      target function =      -0.737540336000
              le_mean =     -22.661617902434
             les_mean =     514.008248175681
             stat err =       0.000549345954
             autocorr =       1.314026682034
   target nu stat err =       0.000549345954
   target dn stat err =       0.007517870077
      target stat err =       0.006192636974
              std dev =       0.677733317331
             le_variance =       0.459322449420

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459329015374
                                         uncertainty =       0.007577917863

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459329015374
                                         uncertainty =       0.007577917863

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479229835
  error estimate for blocks of size 2^( 2) =       0.000502671378
  error estimate for blocks of size 2^( 3) =       0.000524168965
  error estimate for blocks of size 2^( 4) =       0.000540059106
  error estimate for blocks of size 2^( 5) =       0.000548268084
  error estimate for blocks of size 2^( 6) =       0.000553119990
  error estimate for blocks of size 2^( 7) =       0.000555936685

      target function =      -0.737540320138
              le_mean =     -22.661617902671
             les_mean =     514.008248205766
             stat err =       0.000549345966
             autocorr =       1.314026685431
   target nu stat err =       0.000549345966
   target dn stat err =       0.007517870265
      target stat err =       0.006192636865
              std dev =       0.677733331601
             le_variance =       0.459322468763

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459329005718
                                         uncertainty =       0.007577917748

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459329005718
                                         uncertainty =       0.007577917748

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479229830
  error estimate for blocks of size 2^( 2) =       0.000502671373
  error estimate for blocks of size 2^( 3) =       0.000524168959
  error estimate for blocks of size 2^( 4) =       0.000540059100
  error estimate for blocks of size 2^( 5) =       0.000548268077
  error estimate for blocks of size 2^( 6) =       0.000553119984
  error estimate for blocks of size 2^( 7) =       0.000555936679

      target function =      -0.737540328069
              le_mean =     -22.661617902553
             les_mean =     514.008248190723
             stat err =       0.000549345960
             autocorr =       1.314026683727
   target nu stat err =       0.000549345960
   target dn stat err =       0.007517870171
      target stat err =       0.006192636920
              std dev =       0.677733324466
             le_variance =       0.459322459092

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459328997269
                                         uncertainty =       0.007577917649

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.459328997269
                                         uncertainty =       0.007577917649

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479229825
  error estimate for blocks of size 2^( 2) =       0.000502671368
  error estimate for blocks of size 2^( 3) =       0.000524168954
  error estimate for blocks of size 2^( 4) =       0.000540059094
  error estimate for blocks of size 2^( 5) =       0.000548268072
  error estimate for blocks of size 2^( 6) =       0.000553119979
  error estimate for blocks of size 2^( 7) =       0.000555936674

      target function =      -0.737540335008
              le_mean =     -22.661617902449
             les_mean =     514.008248177561
             stat err =       0.000549345955
             autocorr =       1.314026682242
   target nu stat err =       0.000549345955
   target dn stat err =       0.007517870089
      target stat err =       0.006192636967
              std dev =       0.677733318223
             le_variance =       0.459322450629


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.737540336000        initial  <--
     2.5000e+03     2.5000e+04             1.2477e-07        -0.737540320138
     1.0000e+04     1.0000e+05             3.1192e-08        -0.737540328069
     4.0000e+04     4.0000e+05             7.7980e-09        -0.737540335008

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.0596
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710003e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170424e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012902e-03 1 1  ON 44
eH1_5                 6.648304e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2214e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s005 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s005 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=5  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2691e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.5934
    reference variance = 0.351375
====================================================
  Execution time = 4.4702e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s005
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5461e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5268e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454371412525
                                         uncertainty =       0.003767097516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454371412525
                                         uncertainty =       0.003767097516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476764397
  error estimate for blocks of size 2^( 2) =       0.000500955958
  error estimate for blocks of size 2^( 3) =       0.000522803646
  error estimate for blocks of size 2^( 4) =       0.000538781103
  error estimate for blocks of size 2^( 5) =       0.000547584735
  error estimate for blocks of size 2^( 6) =       0.000553826802
  error estimate for blocks of size 2^( 7) =       0.000554550436

      target function =      -0.741459063451
              le_mean =     -22.661742024899
             les_mean =     514.009159956696
             stat err =       0.000548685769
             autocorr =       1.324462783722
   target nu stat err =       0.000548685769
   target dn stat err =       0.003977043556
      target stat err =       0.003351764691
              std dev =       0.674246676631
             le_variance =       0.454608580948


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266174202490e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741473361942       residual = 1.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741473362070       residual = 7.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741473362172       residual = 1.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741473362207       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741473362215       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741473362221       residual = 8.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741473362230       residual = 3.07e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741473362236       residual = 5.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741473362237       residual = 2.40e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741473362244       residual = 2.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741473362247       residual = 9.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741473362208       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741473362182       residual = 6.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741473362246       residual = 3.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741473362287       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741473362236       residual = 4.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741473362294       residual = 2.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741473362269       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741473362265       residual = 9.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741473362344       residual = 5.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741473362239       residual = 4.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741473362217       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741473362246       residual = 1.33e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741473362179       residual = 9.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741473362216       residual = 5.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741473362312       residual = 3.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741473362318       residual = 2.78e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741473362275       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741473362279       residual = 6.05e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+04 is 1.029742e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741473361942       residual = 1.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741473361974       residual = 7.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741473362000       residual = 1.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741473362009       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741473362012       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741473362014       residual = 8.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741473362170       residual = 3.07e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741473362015       residual = 5.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741473362016       residual = 2.40e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741473362018       residual = 2.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741473362017       residual = 9.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741473362017       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741473362027       residual = 6.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741473362037       residual = 3.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741473362018       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741473362032       residual = 4.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741473361902       residual = 2.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741473361769       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741473362209       residual = 9.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741473362199       residual = 5.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741473361733       residual = 4.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741473361779       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741473361645       residual = 1.33e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741473362004       residual = 9.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741473362174       residual = 5.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741473362062       residual = 3.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741473362078       residual = 2.78e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741473362046       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741473361885       residual = 6.05e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+05 is 2.574357e-09

solving harmonic davidson linear method for identity shift 4.0000e+05, overlap shift 4.0000e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741473361942       residual = 1.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741473361950       residual = 7.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741473361957       residual = 1.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741473361755       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741473361960       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741473361920       residual = 8.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741473362412       residual = 3.07e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741473361783       residual = 5.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741473362329       residual = 2.40e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741473361961       residual = 2.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741473361491       residual = 9.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741473361218       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741473361197       residual = 6.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741473361687       residual = 3.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741473362133       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741473362485       residual = 4.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741473361088       residual = 2.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741473361973       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741473360899       residual = 9.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741473362488       residual = 5.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741473361007       residual = 4.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741473362098       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741473360775       residual = 1.33e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741473361801       residual = 9.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741473362362       residual = 5.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741473362217       residual = 3.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741473362625       residual = 2.78e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741473361319       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741473361686       residual = 6.05e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+05 is 6.435886e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.219648 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0003e+01
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158283e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737225e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391828e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012901e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917576e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.6746
    reference variance = 0.275238
====================================================
  Execution time = 4.5358e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s005
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.7045e-01
  Total weights = 2.0000e+06
  Execution time = 3.6020e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054388
                                         uncertainty =       0.016988169891

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054388
                                         uncertainty =       0.016988169891

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000485002217
  error estimate for blocks of size 2^( 2) =       0.000508132333
  error estimate for blocks of size 2^( 3) =       0.000530262717
  error estimate for blocks of size 2^( 4) =       0.000546420882
  error estimate for blocks of size 2^( 5) =       0.000554945304
  error estimate for blocks of size 2^( 6) =       0.000559313106
  error estimate for blocks of size 2^( 7) =       0.000561244056

      target function =      -0.728325539483
              le_mean =     -22.661570634591
             les_mean =     514.017237692573
             stat err =       0.000555480837
             autocorr =       1.311748917104
   target nu stat err =       0.000555480837
   target dn stat err =       0.017026463595
      target stat err =       0.013626650492
              std dev =       0.685896713240
             le_variance =       0.470454301234

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054299
                                         uncertainty =       0.016988169774

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054299
                                         uncertainty =       0.016988169774

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000485002217
  error estimate for blocks of size 2^( 2) =       0.000508132333
  error estimate for blocks of size 2^( 3) =       0.000530262717
  error estimate for blocks of size 2^( 4) =       0.000546420882
  error estimate for blocks of size 2^( 5) =       0.000554945304
  error estimate for blocks of size 2^( 6) =       0.000559313106
  error estimate for blocks of size 2^( 7) =       0.000561244056

      target function =      -0.728325539559
              le_mean =     -22.661570634534
             les_mean =     514.017237689874
             stat err =       0.000555480837
             autocorr =       1.311748918718
   target nu stat err =       0.000555480837
   target dn stat err =       0.017026463490
      target stat err =       0.013626650410
              std dev =       0.685896713175
             le_variance =       0.470454301145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054344
                                         uncertainty =       0.016988169833

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054344
                                         uncertainty =       0.016988169833

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000485002217
  error estimate for blocks of size 2^( 2) =       0.000508132333
  error estimate for blocks of size 2^( 3) =       0.000530262717
  error estimate for blocks of size 2^( 4) =       0.000546420882
  error estimate for blocks of size 2^( 5) =       0.000554945304
  error estimate for blocks of size 2^( 6) =       0.000559313106
  error estimate for blocks of size 2^( 7) =       0.000561244056

      target function =      -0.728325539521
              le_mean =     -22.661570634562
             les_mean =     514.017237691224
             stat err =       0.000555480837
             autocorr =       1.311748917915
   target nu stat err =       0.000555480837
   target dn stat err =       0.017026463543
      target stat err =       0.013626650451
              std dev =       0.685896713208
             le_variance =       0.470454301189

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054382
                                         uncertainty =       0.016988169884

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470303054382
                                         uncertainty =       0.016988169884

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000485002217
  error estimate for blocks of size 2^( 2) =       0.000508132333
  error estimate for blocks of size 2^( 3) =       0.000530262717
  error estimate for blocks of size 2^( 4) =       0.000546420882
  error estimate for blocks of size 2^( 5) =       0.000554945304
  error estimate for blocks of size 2^( 6) =       0.000559313106
  error estimate for blocks of size 2^( 7) =       0.000561244056

      target function =      -0.728325539487
              le_mean =     -22.661570634588
             les_mean =     514.017237692404
             stat err =       0.000555480837
             autocorr =       1.311748917205
   target nu stat err =       0.000555480837
   target dn stat err =       0.017026463588
      target stat err =       0.013626650487
              std dev =       0.685896713236
             le_variance =       0.470454301228


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.728325539483        initial
     2.5000e+04     2.5000e+05             1.0297e-08        -0.728325539559  <--
     1.0000e+05     1.0000e+06             2.5744e-09        -0.728325539521
     4.0000e+05     4.0000e+06             6.4359e-10        -0.728325539487

*****************************************************************************
Applying the update for shift_i =   2.5000e+04     and shift_s =   2.5000e+05
*****************************************************************************

  Execution time = 6.3464e+01
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2347e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s006 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s006 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=6  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2681e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.6958
    reference variance = 0.411828
====================================================
  Execution time = 4.4294e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s006
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5012e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5341e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450212742730
                                         uncertainty =       0.003282674271

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450212742730
                                         uncertainty =       0.003282674271

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474405492
  error estimate for blocks of size 2^( 2) =       0.000498042729
  error estimate for blocks of size 2^( 3) =       0.000519509487
  error estimate for blocks of size 2^( 4) =       0.000534320555
  error estimate for blocks of size 2^( 5) =       0.000542929005
  error estimate for blocks of size 2^( 6) =       0.000548571765
  error estimate for blocks of size 2^( 7) =       0.000548733636

      target function =      -0.745202509084
              le_mean =     -22.661617827386
             les_mean =     513.999043471090
             stat err =       0.000543638740
             autocorr =       1.313171287935
   target nu stat err =       0.000543638740
   target dn stat err =       0.003217432834
      target stat err =       0.002760628891
              std dev =       0.670910680833
             le_variance =       0.450121141655


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266161782739e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+03, overlap shift 6.2500e+04 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745211801623       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745211802076       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745211802193       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745211802350       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745211802421       residual = 1.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.745211802557       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.745211802642       residual = 3.21e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.745211802663       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.745211802659       residual = 2.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.745211802678       residual = 3.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.745211802721       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.745211802753       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.745211802742       residual = 6.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.745211802744       residual = 4.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.745211802742       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.745211802770       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.745211802764       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.745211802767       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.745211802777       residual = 9.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.745211802757       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.745211802761       residual = 5.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.745211802772       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.745211802763       residual = 1.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.745211802761       residual = 1.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.745211802767       residual = 7.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.745211802759       residual = 3.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.745211802779       residual = 1.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.745211802765       residual = 6.68e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+03 is 4.353441e-08

solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745211801623       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745211801736       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745211801766       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745211801805       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745211801856       residual = 1.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.745211801901       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.745211801869       residual = 3.21e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.745211801881       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.745211801896       residual = 2.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.745211801893       residual = 3.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.745211801827       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.745211801866       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.745211801989       residual = 6.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.745211801819       residual = 4.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.745211801966       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.745211801880       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.745211801926       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.745211801870       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.745211801886       residual = 9.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.745211801882       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.745211801907       residual = 5.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.745211801889       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.745211801901       residual = 1.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.745211801924       residual = 1.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.745211801872       residual = 7.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.745211801909       residual = 3.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.745211801937       residual = 1.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.745211801789       residual = 6.68e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+04 is 1.088362e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745211801623       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745211801652       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745211801659       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745211801669       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745211801659       residual = 1.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.745211801644       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.745211801715       residual = 3.21e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.745211801753       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.745211801722       residual = 2.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.745211801649       residual = 3.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.745211801730       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.745211801734       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.745211801739       residual = 6.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.745211801882       residual = 4.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.745211801535       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.745211801386       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.745211801840       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.745211801661       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.745211801997       residual = 9.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.745211801851       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.745211801830       residual = 5.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.745211801871       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.745211801766       residual = 1.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.745211801913       residual = 1.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.745211801760       residual = 7.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.745211801666       residual = 3.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.745211801506       residual = 1.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.745211802175       residual = 6.68e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+05 is 2.720906e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.245075 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9666e+01
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932809e-02 1 1  ON 15
 ud_6                -8.808074e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391826e-02 1 1  ON 19
 eC_0                -4.823947e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185680e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187714e-02 1 1  ON 25
 eC_6                 1.415406e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479196e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420370e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012900e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841589e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471562e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917579e-03 1 1  ON 54
eH2_5                 6.770114e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.7641
    reference variance = 0.246742
====================================================
  Execution time = 4.3579e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s006
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4970e-01
  Total weights = 2.0000e+06
  Execution time = 3.5946e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677504145
                                         uncertainty =       0.002478473257

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677504145
                                         uncertainty =       0.002478473257

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474181850
  error estimate for blocks of size 2^( 2) =       0.000497413105
  error estimate for blocks of size 2^( 3) =       0.000519246860
  error estimate for blocks of size 2^( 4) =       0.000535625714
  error estimate for blocks of size 2^( 5) =       0.000544045329
  error estimate for blocks of size 2^( 6) =       0.000549354520
  error estimate for blocks of size 2^( 7) =       0.000551445138

      target function =      -0.745556686619
              le_mean =     -22.661919505130
             les_mean =     514.012292285860
             stat err =       0.000545117675
             autocorr =       1.321571530820
   target nu stat err =       0.000545117675
   target dn stat err =       0.002771498011
      target stat err =       0.002401848937
              std dev =       0.670594403268
             le_variance =       0.449696853695

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677507989
                                         uncertainty =       0.002478473299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677507989
                                         uncertainty =       0.002478473299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474181852
  error estimate for blocks of size 2^( 2) =       0.000497413107
  error estimate for blocks of size 2^( 3) =       0.000519246862
  error estimate for blocks of size 2^( 4) =       0.000535625716
  error estimate for blocks of size 2^( 5) =       0.000544045332
  error estimate for blocks of size 2^( 6) =       0.000549354522
  error estimate for blocks of size 2^( 7) =       0.000551445140

      target function =      -0.745556683400
              le_mean =     -22.661919505178
             les_mean =     514.012292291854
             stat err =       0.000545117678
             autocorr =       1.321571532263
   target nu stat err =       0.000545117678
   target dn stat err =       0.002771498042
      target stat err =       0.002401848943
              std dev =       0.670594406133
             le_variance =       0.449696857537

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677506067
                                         uncertainty =       0.002478473278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677506067
                                         uncertainty =       0.002478473278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474181851
  error estimate for blocks of size 2^( 2) =       0.000497413106
  error estimate for blocks of size 2^( 3) =       0.000519246861
  error estimate for blocks of size 2^( 4) =       0.000535625715
  error estimate for blocks of size 2^( 5) =       0.000544045330
  error estimate for blocks of size 2^( 6) =       0.000549354521
  error estimate for blocks of size 2^( 7) =       0.000551445139

      target function =      -0.745556685009
              le_mean =     -22.661919505154
             les_mean =     514.012292288857
             stat err =       0.000545117676
             autocorr =       1.321571531546
   target nu stat err =       0.000545117676
   target dn stat err =       0.002771498026
      target stat err =       0.002401848940
              std dev =       0.670594404701
             le_variance =       0.449696855616

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677504385
                                         uncertainty =       0.002478473260

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449677504385
                                         uncertainty =       0.002478473260

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474181850
  error estimate for blocks of size 2^( 2) =       0.000497413105
  error estimate for blocks of size 2^( 3) =       0.000519246860
  error estimate for blocks of size 2^( 4) =       0.000535625714
  error estimate for blocks of size 2^( 5) =       0.000544045329
  error estimate for blocks of size 2^( 6) =       0.000549354520
  error estimate for blocks of size 2^( 7) =       0.000551445138

      target function =      -0.745556686418
              le_mean =     -22.661919505133
             les_mean =     514.012292286234
             stat err =       0.000545117675
             autocorr =       1.321571530907
   target nu stat err =       0.000545117675
   target dn stat err =       0.002771498013
      target stat err =       0.002401848938
              std dev =       0.670594403448
             le_variance =       0.449696853935


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745556686619        initial  <--
     6.2500e+03     6.2500e+04             4.3534e-08        -0.745556683400
     2.5000e+04     2.5000e+05             1.0884e-08        -0.745556685009
     1.0000e+05     1.0000e+06             2.7209e-09        -0.745556686418

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6428
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2132e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s007 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s007 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=7  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2688e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.5998
    reference variance = 0.449921
====================================================
  Execution time = 4.4369e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s007
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4758e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5192e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447625789390
                                         uncertainty =       0.002489114432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447625789390
                                         uncertainty =       0.002489114432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473064708
  error estimate for blocks of size 2^( 2) =       0.000497002128
  error estimate for blocks of size 2^( 3) =       0.000518388121
  error estimate for blocks of size 2^( 4) =       0.000535093203
  error estimate for blocks of size 2^( 5) =       0.000544163229
  error estimate for blocks of size 2^( 6) =       0.000549318462
  error estimate for blocks of size 2^( 7) =       0.000554005399

      target function =      -0.747335208757
              le_mean =     -22.661883497534
             les_mean =     514.008543868305
             stat err =       0.000545645073
             autocorr =       1.330391240795
   target nu stat err =       0.000545645073
   target dn stat err =       0.002666992942
      target stat err =       0.002327993902
              std dev =       0.669014526232
             le_variance =       0.447580436310


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266188349753e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+04, overlap shift 6.2500e+05 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747341460540       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747341460579       residual = 7.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.747341460616       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.747341460630       residual = 8.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.747341460655       residual = 8.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.747341460761       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.747341460718       residual = 5.22e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.747341460622       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.747341460666       residual = 6.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.747341460529       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.747341460602       residual = 2.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.747341460569       residual = 2.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.747341460566       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.747341460659       residual = 6.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.747341460698       residual = 4.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.747341460366       residual = 2.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.747341460609       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.747341460796       residual = 2.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.747341460625       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.747341460725       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.747341460461       residual = 3.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.747341460572       residual = 2.35e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.747341460714       residual = 3.17e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.747341460591       residual = 3.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.747341460663       residual = 1.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.747341460483       residual = 9.77e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.747341460587       residual = 2.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.747341460596       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.747341460627       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.747341460641       residual = 4.31e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+04 is 5.803573e-09

solving harmonic davidson linear method for identity shift 2.5000e+05, overlap shift 2.5000e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747341460540       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747341460550       residual = 7.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.747341460559       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.747341460561       residual = 8.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.747341460552       residual = 8.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.747341460729       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.747341460381       residual = 5.22e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.747341460656       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.747341460494       residual = 6.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.747341460690       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.747341460363       residual = 2.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.747341459862       residual = 2.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.747341460947       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.747341460249       residual = 6.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.747341460812       residual = 4.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.747341459992       residual = 2.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.747341460745       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.747341460314       residual = 2.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.747341461150       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.747341460478       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.747341460390       residual = 3.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.747341460432       residual = 2.35e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.747341460742       residual = 3.17e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.747341460785       residual = 3.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.747341459955       residual = 1.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.747341460523       residual = 9.77e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.747341460617       residual = 2.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.747341460821       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.747341460369       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.747341462502       residual = 4.31e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+05 is 1.450894e-09

solving harmonic davidson linear method for identity shift 1.0000e+06, overlap shift 1.0000e+07 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747341460540       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747341460543       residual = 7.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.747341460545       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.747341460546       residual = 8.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.747341460471       residual = 8.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.747341460007       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.747341460650       residual = 5.22e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.747341462174       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.747341460909       residual = 6.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.747341459839       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.747341459321       residual = 2.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.747341460067       residual = 2.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.747341461238       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.747341460603       residual = 6.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.747341461024       residual = 4.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.747341460063       residual = 2.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.747341460073       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.747341459948       residual = 2.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.747341460575       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.747341458223       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.747341462135       residual = 3.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.747341457985       residual = 2.35e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.747341464177       residual = 3.17e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.747341456942       residual = 3.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.747341460254       residual = 1.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.747341458345       residual = 9.77e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.747341464830       residual = 2.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.747341459981       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.747341459400       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.747341464320       residual = 4.31e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+06 is 3.627229e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.274955 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9597e+01
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932809e-02 1 1  ON 15
 ud_6                -8.808074e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.616
    reference variance = 0.427016
====================================================
  Execution time = 4.3848e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s007
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5450e-01
  Total weights = 2.0000e+06
  Execution time = 3.6259e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518599978
                                         uncertainty =       0.003924639492

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518599978
                                         uncertainty =       0.003924639492

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476707994
  error estimate for blocks of size 2^( 2) =       0.000500062983
  error estimate for blocks of size 2^( 3) =       0.000522026183
  error estimate for blocks of size 2^( 4) =       0.000537769724
  error estimate for blocks of size 2^( 5) =       0.000546125904
  error estimate for blocks of size 2^( 6) =       0.000550446528
  error estimate for blocks of size 2^( 7) =       0.000552141553

      target function =      -0.741553646731
              le_mean =     -22.661530842246
             les_mean =     513.999480910385
             stat err =       0.000546620927
             autocorr =       1.314824048385
   target nu stat err =       0.000546620927
   target dn stat err =       0.003757142258
      target stat err =       0.003172145823
              std dev =       0.674166910748
             le_variance =       0.454501023548

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600693
                                         uncertainty =       0.003924639513

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600693
                                         uncertainty =       0.003924639513

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476707995
  error estimate for blocks of size 2^( 2) =       0.000500062983
  error estimate for blocks of size 2^( 3) =       0.000522026184
  error estimate for blocks of size 2^( 4) =       0.000537769724
  error estimate for blocks of size 2^( 5) =       0.000546125904
  error estimate for blocks of size 2^( 6) =       0.000550446528
  error estimate for blocks of size 2^( 7) =       0.000552141553

      target function =      -0.741553646138
              le_mean =     -22.661530842260
             les_mean =     513.999480911723
             stat err =       0.000546620927
             autocorr =       1.314824046958
   target nu stat err =       0.000546620927
   target dn stat err =       0.003757142276
      target stat err =       0.003172145833
              std dev =       0.674166911279
             le_variance =       0.454501024263

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600335
                                         uncertainty =       0.003924639502

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600335
                                         uncertainty =       0.003924639502

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476707994
  error estimate for blocks of size 2^( 2) =       0.000500062983
  error estimate for blocks of size 2^( 3) =       0.000522026183
  error estimate for blocks of size 2^( 4) =       0.000537769724
  error estimate for blocks of size 2^( 5) =       0.000546125904
  error estimate for blocks of size 2^( 6) =       0.000550446528
  error estimate for blocks of size 2^( 7) =       0.000552141553

      target function =      -0.741553646434
              le_mean =     -22.661530842253
             les_mean =     513.999480911054
             stat err =       0.000546620927
             autocorr =       1.314824047672
   target nu stat err =       0.000546620927
   target dn stat err =       0.003757142267
      target stat err =       0.003172145828
              std dev =       0.674166911013
             le_variance =       0.454501023905

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600023
                                         uncertainty =       0.003924639493

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454518600023
                                         uncertainty =       0.003924639493

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476707994
  error estimate for blocks of size 2^( 2) =       0.000500062983
  error estimate for blocks of size 2^( 3) =       0.000522026183
  error estimate for blocks of size 2^( 4) =       0.000537769724
  error estimate for blocks of size 2^( 5) =       0.000546125904
  error estimate for blocks of size 2^( 6) =       0.000550446528
  error estimate for blocks of size 2^( 7) =       0.000552141553

      target function =      -0.741553646694
              le_mean =     -22.661530842247
             les_mean =     513.999480910469
             stat err =       0.000546620927
             autocorr =       1.314824048292
   target nu stat err =       0.000546620927
   target dn stat err =       0.003757142259
      target stat err =       0.003172145824
              std dev =       0.674166910781
             le_variance =       0.454501023592


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.741553646731        initial  <--
     6.2500e+04     6.2500e+05             5.8036e-09        -0.741553646138
     2.5000e+05     2.5000e+06             1.4509e-09        -0.741553646434
     1.0000e+06     1.0000e+07             3.6272e-10        -0.741553646694

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.0536
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2366e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s008 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s008 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=8  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.7254
    reference variance = 0.431083
====================================================
  Execution time = 4.4073e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s008
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4885e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5156e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448923370012
                                         uncertainty =       0.003391723311

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448923370012
                                         uncertainty =       0.003391723311

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473737142
  error estimate for blocks of size 2^( 2) =       0.000497739390
  error estimate for blocks of size 2^( 3) =       0.000519566672
  error estimate for blocks of size 2^( 4) =       0.000535416781
  error estimate for blocks of size 2^( 5) =       0.000544218312
  error estimate for blocks of size 2^( 6) =       0.000549592185
  error estimate for blocks of size 2^( 7) =       0.000551523963

      target function =      -0.746252643929
              le_mean =     -22.662500720976
             les_mean =     514.037792464004
             stat err =       0.000545187810
             autocorr =       1.324394601080
   target nu stat err =       0.000545187810
   target dn stat err =       0.003500218408
      target stat err =       0.003004480925
              std dev =       0.669965491796
             le_variance =       0.448853760197


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266250072098e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+05, overlap shift 6.2500e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746263783690       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746263783695       residual = 5.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746263783698       residual = 2.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746263783700       residual = 8.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746263783378       residual = 9.86e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746263784587       residual = 3.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746263784891       residual = 4.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746263783855       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746263783702       residual = 3.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746263783934       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746263782543       residual = 1.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746263782345       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746263781441       residual = 5.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746263783140       residual = 4.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746263783882       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746263783671       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746263785211       residual = 1.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746263784828       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746263784544       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746263783109       residual = 3.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746263783936       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746263782918       residual = 3.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746263784989       residual = 1.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746263782161       residual = 7.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746263784589       residual = 4.60e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746263785094       residual = 5.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746263784330       residual = 3.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746263784249       residual = 1.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746263782974       residual = 6.90e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+05 is 3.559620e-10

solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746263783690       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746263783691       residual = 5.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746263783692       residual = 2.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746263783732       residual = 8.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746263781462       residual = 9.86e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746263783986       residual = 3.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746263783462       residual = 4.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746263783853       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746263784409       residual = 3.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746263784735       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746263780581       residual = 1.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746263778932       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746263791632       residual = 5.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746263783989       residual = 4.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746263781722       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746263781409       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746263776119       residual = 1.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746263780575       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746263791118       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746263785976       residual = 3.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746263786170       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746263778901       residual = 3.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746263781697       residual = 1.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746263785114       residual = 7.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746263786711       residual = 4.61e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746263768942       residual = 5.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746263773649       residual = 3.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746263781023       residual = 1.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746263778750       residual = 6.90e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+06 is 8.899003e-11

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746263783690       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746263783690       residual = 5.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746263783690       residual = 2.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746263783690       residual = 8.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746263784127       residual = 9.86e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746263778878       residual = 3.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746263779550       residual = 4.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746263781029       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746263777683       residual = 3.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746263764582       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746263770320       residual = 1.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746263769224       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746263793073       residual = 5.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746263756698       residual = 4.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746263791926       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746263788164       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746263767628       residual = 1.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746263777740       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746263756214       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746263756217       residual = 3.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746263778144       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746263802628       residual = 3.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746263800772       residual = 1.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746263783356       residual = 7.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746263787523       residual = 4.60e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746263747152       residual = 5.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746263760284       residual = 3.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746263774008       residual = 1.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746263796266       residual = 6.91e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+07 is 2.224701e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.302417 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9262e+01
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909683e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.6326
    reference variance = 0.406851
====================================================
  Execution time = 4.4227e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s008
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5537e-01
  Total weights = 2.0000e+06
  Execution time = 3.6002e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242569
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242569
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477162920
  error estimate for blocks of size 2^( 2) =       0.000500793029
  error estimate for blocks of size 2^( 3) =       0.000522346855
  error estimate for blocks of size 2^( 4) =       0.000537528676
  error estimate for blocks of size 2^( 5) =       0.000546517096
  error estimate for blocks of size 2^( 6) =       0.000551000785
  error estimate for blocks of size 2^( 7) =       0.000554176208

      target function =      -0.740818224479
              le_mean =     -22.661677409717
             les_mean =     514.006991698238
             stat err =       0.000547305691
             autocorr =       1.315608145292
   target nu stat err =       0.000547305691
   target dn stat err =       0.005415342161
      target stat err =       0.004520293082
              std dev =       0.674810272482
             le_variance =       0.455368903848

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242565
                                         uncertainty =       0.005340805568

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242565
                                         uncertainty =       0.005340805568

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477162920
  error estimate for blocks of size 2^( 2) =       0.000500793029
  error estimate for blocks of size 2^( 3) =       0.000522346855
  error estimate for blocks of size 2^( 4) =       0.000537528676
  error estimate for blocks of size 2^( 5) =       0.000546517096
  error estimate for blocks of size 2^( 6) =       0.000551000785
  error estimate for blocks of size 2^( 7) =       0.000554176208

      target function =      -0.740818224482
              le_mean =     -22.661677409717
             les_mean =     514.006991698229
             stat err =       0.000547305691
             autocorr =       1.315608145342
   target nu stat err =       0.000547305691
   target dn stat err =       0.005415342162
      target stat err =       0.004520293083
              std dev =       0.674810272480
             le_variance =       0.455368903844

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242567
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242567
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477162920
  error estimate for blocks of size 2^( 2) =       0.000500793029
  error estimate for blocks of size 2^( 3) =       0.000522346855
  error estimate for blocks of size 2^( 4) =       0.000537528676
  error estimate for blocks of size 2^( 5) =       0.000546517096
  error estimate for blocks of size 2^( 6) =       0.000551000785
  error estimate for blocks of size 2^( 7) =       0.000554176208

      target function =      -0.740818224481
              le_mean =     -22.661677409717
             les_mean =     514.006991698233
             stat err =       0.000547305691
             autocorr =       1.315608145322
   target nu stat err =       0.000547305691
   target dn stat err =       0.005415342161
      target stat err =       0.004520293082
              std dev =       0.674810272481
             le_variance =       0.455368903846

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242569
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455415242569
                                         uncertainty =       0.005340805567

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477162920
  error estimate for blocks of size 2^( 2) =       0.000500793029
  error estimate for blocks of size 2^( 3) =       0.000522346855
  error estimate for blocks of size 2^( 4) =       0.000537528676
  error estimate for blocks of size 2^( 5) =       0.000546517096
  error estimate for blocks of size 2^( 6) =       0.000551000785
  error estimate for blocks of size 2^( 7) =       0.000554176208

      target function =      -0.740818224479
              le_mean =     -22.661677409717
             les_mean =     514.006991698237
             stat err =       0.000547305691
             autocorr =       1.315608145293
   target nu stat err =       0.000547305691
   target dn stat err =       0.005415342161
      target stat err =       0.004520293082
              std dev =       0.674810272482
             le_variance =       0.455368903848


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.740818224479        initial
     6.2500e+05     6.2500e+06             3.5596e-10        -0.740818224482  <--
     2.5000e+06     2.5000e+07             8.8990e-11        -0.740818224481
     1.0000e+07     1.0000e+08             2.2247e-11        -0.740818224479

*****************************************************************************
Applying the update for shift_i =   6.2500e+05     and shift_s =   6.2500e+06
*****************************************************************************

  Execution time = 6.2317e+01
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2158e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s009 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s009 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=9  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.6933
    reference variance = 0.401794
====================================================
  Execution time = 4.5291e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s009
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5090e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5167e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450908767021
                                         uncertainty =       0.005129034723

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450908767021
                                         uncertainty =       0.005129034723

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474817001
  error estimate for blocks of size 2^( 2) =       0.000498182925
  error estimate for blocks of size 2^( 3) =       0.000519578549
  error estimate for blocks of size 2^( 4) =       0.000534755927
  error estimate for blocks of size 2^( 5) =       0.000543762508
  error estimate for blocks of size 2^( 6) =       0.000547400432
  error estimate for blocks of size 2^( 7) =       0.000551050301

      target function =      -0.744538766748
              le_mean =     -22.661675121204
             les_mean =     514.002421443206
             stat err =       0.000544242292
             autocorr =       1.313808452264
   target nu stat err =       0.000544242292
   target dn stat err =       0.004575108397
      target stat err =       0.003870406817
              std dev =       0.671492643043
             le_variance =       0.450902369661


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266167512120e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+05, overlap shift 1.5625e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744557891238       residual = 3.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744557891281       residual = 8.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744557891295       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744557891305       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744557891598       residual = 9.77e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744557891275       residual = 5.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744557891575       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744557891155       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744557891308       residual = 1.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744557891461       residual = 6.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744557891465       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744557891471       residual = 4.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744557891194       residual = 4.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744557891165       residual = 2.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744557891035       residual = 1.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744557891608       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744557891081       residual = 7.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744557891602       residual = 8.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744557891275       residual = 4.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744557891105       residual = 4.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744557891114       residual = 3.63e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744557891843       residual = 9.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744557891160       residual = 4.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744557891389       residual = 3.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744557891626       residual = 3.88e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744557890707       residual = 4.80e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744557891097       residual = 1.92e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744557890960       residual = 7.75e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+05 is 1.409735e-09

solving harmonic davidson linear method for identity shift 6.2500e+05, overlap shift 6.2500e+06 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744557891238       residual = 3.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744557891249       residual = 8.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744557891252       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744557891255       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744557891401       residual = 9.77e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744557891239       residual = 5.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744557890837       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744557892573       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744557891452       residual = 1.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744557892044       residual = 6.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744557891812       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744557891215       residual = 4.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744557890144       residual = 4.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744557892065       residual = 2.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744557891894       residual = 1.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744557892048       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744557890528       residual = 7.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744557891615       residual = 8.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744557890496       residual = 4.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744557893153       residual = 4.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744557890331       residual = 3.63e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744557889719       residual = 9.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744557892087       residual = 4.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744557890442       residual = 3.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744557890356       residual = 3.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744557892556       residual = 4.81e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744557893272       residual = 1.92e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744557890486       residual = 7.76e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+05 is 3.524333e-10

solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744557891238       residual = 3.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744557891240       residual = 8.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744557891241       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744557891242       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744557891049       residual = 9.77e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744557895715       residual = 5.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744557890446       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744557891511       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744557891930       residual = 1.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744557891843       residual = 6.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744557886368       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744557892534       residual = 4.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744557889289       residual = 4.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744557882196       residual = 2.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744557884719       residual = 1.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744557888955       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744557886412       residual = 7.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744557890251       residual = 8.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744557883477       residual = 4.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744557899437       residual = 4.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744557888338       residual = 3.63e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744557901997       residual = 9.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744557883935       residual = 4.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744557902908       residual = 3.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744557891595       residual = 3.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744557893054       residual = 4.86e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744557893691       residual = 1.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744557889300       residual = 7.75e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+06 is 8.810812e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.327813 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0489e+01
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.5467
    reference variance = 1.15714
====================================================
  Execution time = 4.4707e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s009
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5181e-01
  Total weights = 2.0000e+06
  Execution time = 3.6082e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570371
                                         uncertainty =       0.004346770466

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570371
                                         uncertainty =       0.004346770466

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475296483
  error estimate for blocks of size 2^( 2) =       0.000498878124
  error estimate for blocks of size 2^( 3) =       0.000521011200
  error estimate for blocks of size 2^( 4) =       0.000535775447
  error estimate for blocks of size 2^( 5) =       0.000544441896
  error estimate for blocks of size 2^( 6) =       0.000549117592
  error estimate for blocks of size 2^( 7) =       0.000551387670

      target function =      -0.743773761326
              le_mean =     -22.661943206797
             les_mean =     514.015483176415
             stat err =       0.000545180651
             autocorr =       1.315684221351
   target nu stat err =       0.000545180651
   target dn stat err =       0.004674154918
      target stat err =       0.003945873400
              std dev =       0.672170732947
             le_variance =       0.451813494231

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570668
                                         uncertainty =       0.004346770461

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570668
                                         uncertainty =       0.004346770461

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475296484
  error estimate for blocks of size 2^( 2) =       0.000498878124
  error estimate for blocks of size 2^( 3) =       0.000521011200
  error estimate for blocks of size 2^( 4) =       0.000535775448
  error estimate for blocks of size 2^( 5) =       0.000544441896
  error estimate for blocks of size 2^( 6) =       0.000549117592
  error estimate for blocks of size 2^( 7) =       0.000551387670

      target function =      -0.743773761078
              le_mean =     -22.661943206799
             les_mean =     514.015483176812
             stat err =       0.000545180652
             autocorr =       1.315684221006
   target nu stat err =       0.000545180652
   target dn stat err =       0.004674154913
      target stat err =       0.003945873393
              std dev =       0.672170733169
             le_variance =       0.451813494529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570520
                                         uncertainty =       0.004346770463

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570520
                                         uncertainty =       0.004346770463

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475296483
  error estimate for blocks of size 2^( 2) =       0.000498878124
  error estimate for blocks of size 2^( 3) =       0.000521011200
  error estimate for blocks of size 2^( 4) =       0.000535775447
  error estimate for blocks of size 2^( 5) =       0.000544441896
  error estimate for blocks of size 2^( 6) =       0.000549117592
  error estimate for blocks of size 2^( 7) =       0.000551387670

      target function =      -0.743773761202
              le_mean =     -22.661943206798
             les_mean =     514.015483176613
             stat err =       0.000545180651
             autocorr =       1.315684221180
   target nu stat err =       0.000545180651
   target dn stat err =       0.004674154916
      target stat err =       0.003945873396
              std dev =       0.672170733058
             le_variance =       0.451813494380

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570390
                                         uncertainty =       0.004346770465

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451773570390
                                         uncertainty =       0.004346770465

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475296483
  error estimate for blocks of size 2^( 2) =       0.000498878124
  error estimate for blocks of size 2^( 3) =       0.000521011200
  error estimate for blocks of size 2^( 4) =       0.000535775447
  error estimate for blocks of size 2^( 5) =       0.000544441896
  error estimate for blocks of size 2^( 6) =       0.000549117592
  error estimate for blocks of size 2^( 7) =       0.000551387670

      target function =      -0.743773761311
              le_mean =     -22.661943206797
             les_mean =     514.015483176439
             stat err =       0.000545180651
             autocorr =       1.315684221326
   target nu stat err =       0.000545180651
   target dn stat err =       0.004674154918
      target stat err =       0.003945873399
              std dev =       0.672170732961
             le_variance =       0.451813494250


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.743773761326        initial  <--
     1.5625e+05     1.5625e+06             1.4097e-09        -0.743773761078
     6.2500e+05     6.2500e+06             3.5243e-10        -0.743773761202
     2.5000e+06     2.5000e+07             8.8108e-11        -0.743773761311

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.8316
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2333e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s010 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s010 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=10  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2673e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.5903
    reference variance = 0.378825
====================================================
  Execution time = 4.4778e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s010
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4810e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5533e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447992857586
                                         uncertainty =       0.004529062932

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447992857586
                                         uncertainty =       0.004529062932

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473338687
  error estimate for blocks of size 2^( 2) =       0.000497528571
  error estimate for blocks of size 2^( 3) =       0.000519199209
  error estimate for blocks of size 2^( 4) =       0.000535727981
  error estimate for blocks of size 2^( 5) =       0.000544407403
  error estimate for blocks of size 2^( 6) =       0.000549986850
  error estimate for blocks of size 2^( 7) =       0.000549466561

      target function =      -0.746887977556
              le_mean =     -22.661826246977
             les_mean =     514.006467649894
             stat err =       0.000544897199
             autocorr =       1.325211348229
   target nu stat err =       0.000544897199
   target dn stat err =       0.004413181373
      target stat err =       0.003761164973
              std dev =       0.669401991158
             le_variance =       0.448099025766


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266182624698e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+06, overlap shift 1.5625e+07 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746905683945       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746905683947       residual = 4.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746905683948       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746905683949       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746905683950       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746905683950       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746905683951       residual = 1.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746905683951       residual = 2.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746905684639       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746905686222       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746905681558       residual = 6.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746905682384       residual = 1.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746905684030       residual = 4.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746905682423       residual = 3.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746905686821       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746905682352       residual = 8.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746905683959       residual = 4.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746905685595       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746905691289       residual = 2.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746905684881       residual = 1.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746905683449       residual = 1.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746905683384       residual = 8.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746905684947       residual = 7.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746905680395       residual = 3.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746905678583       residual = 2.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746905686324       residual = 2.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746905682159       residual = 7.54e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746905683723       residual = 4.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746905685819       residual = 2.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746905686707       residual = 1.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.746905679548       residual = 6.70e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+06 is 6.905997e-10

solving harmonic davidson linear method for identity shift 6.2500e+06, overlap shift 6.2500e+07 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746905683945       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746905683945       residual = 4.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746905683945       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746905683946       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746905683946       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746905681524       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746905663305       residual = 1.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746905679273       residual = 2.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746905678180       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746905692548       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746905687647       residual = 6.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746905683095       residual = 1.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746905682096       residual = 4.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746905666053       residual = 3.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746905694083       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746905678179       residual = 8.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746905691546       residual = 4.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746905679036       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746905671989       residual = 2.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746905697664       residual = 1.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746905690385       residual = 1.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746905707236       residual = 8.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746905687934       residual = 7.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746905676480       residual = 3.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746905678124       residual = 2.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746905689560       residual = 2.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746905693538       residual = 7.54e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746905695594       residual = 4.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746905686778       residual = 2.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746905668628       residual = 1.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.746905685333       residual = 6.72e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+06 is 1.726514e-10

solving harmonic davidson linear method for identity shift 2.5000e+07, overlap shift 2.5000e+08 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746905683945       residual = 1.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746905683945       residual = 4.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746905683945       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746905683945       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746905683945       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746905683945       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746905683945       residual = 1.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746905683945       residual = 2.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746905683945       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746905676481       residual = 7.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746905657915       residual = 6.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746905668370       residual = 1.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746905641957       residual = 4.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746905657399       residual = 3.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746905671560       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746905728061       residual = 8.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746905729041       residual = 4.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746905701962       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746905730964       residual = 2.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746905684863       residual = 1.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746905780273       residual = 1.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746905648006       residual = 8.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746905649169       residual = 7.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746905731920       residual = 3.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746905636510       residual = 2.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746905606426       residual = 2.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746905761670       residual = 7.51e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746905666247       residual = 4.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746905681862       residual = 2.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746905716996       residual = 1.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.746905737901       residual = 6.69e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+07 is 4.316326e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.360117 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0351e+01
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.6931
    reference variance = 0.280983
====================================================
  Execution time = 4.4234e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s010
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4799e-01
  Total weights = 2.0000e+06
  Execution time = 3.5982e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590359
                                         uncertainty =       0.004668540722

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590359
                                         uncertainty =       0.004668540722

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473283342
  error estimate for blocks of size 2^( 2) =       0.000497031068
  error estimate for blocks of size 2^( 3) =       0.000518453532
  error estimate for blocks of size 2^( 4) =       0.000533932090
  error estimate for blocks of size 2^( 5) =       0.000544351030
  error estimate for blocks of size 2^( 6) =       0.000549377368
  error estimate for blocks of size 2^( 7) =       0.000552895818

      target function =      -0.746976249607
              le_mean =     -22.661622008081
             les_mean =     513.997106056065
             stat err =       0.000545139077
             autocorr =       1.326698356527
   target nu stat err =       0.000545139077
   target dn stat err =       0.004575950750
      target stat err =       0.003896022710
              std dev =       0.669323720578
             le_variance =       0.447994242929

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590398
                                         uncertainty =       0.004668540723

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590398
                                         uncertainty =       0.004668540723

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473283342
  error estimate for blocks of size 2^( 2) =       0.000497031068
  error estimate for blocks of size 2^( 3) =       0.000518453532
  error estimate for blocks of size 2^( 4) =       0.000533932090
  error estimate for blocks of size 2^( 5) =       0.000544351030
  error estimate for blocks of size 2^( 6) =       0.000549377368
  error estimate for blocks of size 2^( 7) =       0.000552895818

      target function =      -0.746976249574
              le_mean =     -22.661622008080
             les_mean =     513.997106056083
             stat err =       0.000545139077
             autocorr =       1.326698356487
   target nu stat err =       0.000545139077
   target dn stat err =       0.004575950752
      target stat err =       0.003896022711
              std dev =       0.669323720608
             le_variance =       0.447994242968

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590379
                                         uncertainty =       0.004668540723

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590379
                                         uncertainty =       0.004668540723

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473283342
  error estimate for blocks of size 2^( 2) =       0.000497031068
  error estimate for blocks of size 2^( 3) =       0.000518453532
  error estimate for blocks of size 2^( 4) =       0.000533932090
  error estimate for blocks of size 2^( 5) =       0.000544351030
  error estimate for blocks of size 2^( 6) =       0.000549377368
  error estimate for blocks of size 2^( 7) =       0.000552895818

      target function =      -0.746976249590
              le_mean =     -22.661622008081
             les_mean =     513.997106056074
             stat err =       0.000545139077
             autocorr =       1.326698356506
   target nu stat err =       0.000545139077
   target dn stat err =       0.004575950751
      target stat err =       0.003896022711
              std dev =       0.669323720593
             le_variance =       0.447994242949

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590361
                                         uncertainty =       0.004668540722

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447966590361
                                         uncertainty =       0.004668540722

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473283342
  error estimate for blocks of size 2^( 2) =       0.000497031068
  error estimate for blocks of size 2^( 3) =       0.000518453532
  error estimate for blocks of size 2^( 4) =       0.000533932090
  error estimate for blocks of size 2^( 5) =       0.000544351030
  error estimate for blocks of size 2^( 6) =       0.000549377368
  error estimate for blocks of size 2^( 7) =       0.000552895818

      target function =      -0.746976249605
              le_mean =     -22.661622008081
             les_mean =     513.997106056066
             stat err =       0.000545139077
             autocorr =       1.326698356518
   target nu stat err =       0.000545139077
   target dn stat err =       0.004575950751
      target stat err =       0.003896022710
              std dev =       0.669323720580
             le_variance =       0.447994242931


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746976249607        initial  <--
     1.5625e+06     1.5625e+07             6.9060e-10        -0.746976249574
     6.2500e+06     6.2500e+07             1.7265e-10        -0.746976249590
     2.5000e+07     2.5000e+08             4.3163e-11        -0.746976249605

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.3234
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2268e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s011 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s011 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=11  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2670e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.7048
    reference variance = 0.563653
====================================================
  Execution time = 4.4588e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s011
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5233e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5226e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452221130326
                                         uncertainty =       0.005051766673

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452221130326
                                         uncertainty =       0.005051766673

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475566642
  error estimate for blocks of size 2^( 2) =       0.000499166304
  error estimate for blocks of size 2^( 3) =       0.000521279665
  error estimate for blocks of size 2^( 4) =       0.000535891568
  error estimate for blocks of size 2^( 5) =       0.000545515791
  error estimate for blocks of size 2^( 6) =       0.000549728164
  error estimate for blocks of size 2^( 7) =       0.000552574317

      target function =      -0.743358925476
              le_mean =     -22.660943498408
             les_mean =     513.970687273002
             stat err =       0.000545927460
             autocorr =       1.317792746400
   target nu stat err =       0.000545927460
   target dn stat err =       0.004843618027
      target stat err =       0.004075042854
              std dev =       0.672552794287
             le_variance =       0.452327261104


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266094349841e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+07, overlap shift 1.5625e+08 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743379971238       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743379971238       residual = 9.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743379971238       residual = 6.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743379971239       residual = 4.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743379971239       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743379971239       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743379994856       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743379971239       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743379971239       residual = 5.47e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743379950988       residual = 1.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743379971239       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743379933255       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743379971594       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743380022313       residual = 9.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743379961155       residual = 5.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743379977190       residual = 6.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743379990453       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743379960117       residual = 2.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743379958958       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743379992848       residual = 7.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743380011314       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743379992447       residual = 4.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743379952554       residual = 4.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743379978584       residual = 2.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743379962090       residual = 9.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743379912020       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743379937257       residual = 4.81e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743379946407       residual = 2.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743379987102       residual = 2.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743380016901       residual = 8.21e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+07 is 2.441603e-11

solving harmonic davidson linear method for identity shift 6.2500e+07, overlap shift 6.2500e+08 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743379971238       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743379971238       residual = 9.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743379971238       residual = 6.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743379971238       residual = 4.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743379971238       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743379898667       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743379971238       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743379971238       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743379830762       residual = 5.47e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743379971238       residual = 1.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743380012555       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743379971238       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743379942539       residual = 2.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743379840439       residual = 9.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743380117001       residual = 5.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743379842134       residual = 6.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743379968328       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743379834382       residual = 2.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743379965059       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743380175186       residual = 7.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743380114811       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743379927130       residual = 4.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743379946581       residual = 4.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743379958705       residual = 2.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743379929254       residual = 9.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743379646751       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743380055694       residual = 4.81e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743379923353       residual = 2.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743379767107       residual = 2.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743379640601       residual = 8.07e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+07 is 6.104414e-12

solving harmonic davidson linear method for identity shift 2.5000e+08, overlap shift 2.5000e+09 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.743379971238       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.743379971238       residual = 9.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.743379971238       residual = 6.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.743379971238       residual = 4.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.743379932386       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.743379769282       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.743380060364       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.743379803942       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.743379908005       residual = 5.47e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743380562720       residual = 1.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.743380111258       residual = 3.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.743379572231       residual = 1.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.743379874492       residual = 2.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.743380096607       residual = 9.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.743379853179       residual = 5.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.743380184862       residual = 6.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.743380291121       residual = 4.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743379849556       residual = 2.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.743379664561       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.743380806374       residual = 7.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.743380162116       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.743378849781       residual = 4.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.743379261281       residual = 4.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.743379198162       residual = 2.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.743380266403       residual = 9.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.743379501811       residual = 1.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.743380269321       residual = 4.99e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.743379424271       residual = 2.94e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.743380118895       residual = 2.06e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.743379649538       residual = 8.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+08 is 1.526131e-12

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.389808 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9849e+01
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.6676
    reference variance = 0.383146
====================================================
  Execution time = 4.4190e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s011
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4814e-01
  Total weights = 2.0000e+06
  Execution time = 3.6093e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561433
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561433
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473357951
  error estimate for blocks of size 2^( 2) =       0.000497001497
  error estimate for blocks of size 2^( 3) =       0.000519088798
  error estimate for blocks of size 2^( 4) =       0.000534650279
  error estimate for blocks of size 2^( 5) =       0.000543767835
  error estimate for blocks of size 2^( 6) =       0.000547978352
  error estimate for blocks of size 2^( 7) =       0.000550712043

      target function =      -0.746861125994
              le_mean =     -22.662484987943
             les_mean =     514.036361104321
             stat err =       0.000544277127
             autocorr =       1.322089375452
   target nu stat err =       0.000544277127
   target dn stat err =       0.002786827519
      target stat err =       0.002424282295
              std dev =       0.669429234250
             le_variance =       0.448135499668

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561438
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561438
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473357951
  error estimate for blocks of size 2^( 2) =       0.000497001497
  error estimate for blocks of size 2^( 3) =       0.000519088798
  error estimate for blocks of size 2^( 4) =       0.000534650279
  error estimate for blocks of size 2^( 5) =       0.000543767835
  error estimate for blocks of size 2^( 6) =       0.000547978352
  error estimate for blocks of size 2^( 7) =       0.000550712043

      target function =      -0.746861125990
              le_mean =     -22.662484987942
             les_mean =     514.036361104323
             stat err =       0.000544277127
             autocorr =       1.322089375452
   target nu stat err =       0.000544277127
   target dn stat err =       0.002786827519
      target stat err =       0.002424282295
              std dev =       0.669429234253
             le_variance =       0.448135499673

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561436
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561436
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473357951
  error estimate for blocks of size 2^( 2) =       0.000497001497
  error estimate for blocks of size 2^( 3) =       0.000519088798
  error estimate for blocks of size 2^( 4) =       0.000534650279
  error estimate for blocks of size 2^( 5) =       0.000543767835
  error estimate for blocks of size 2^( 6) =       0.000547978352
  error estimate for blocks of size 2^( 7) =       0.000550712043

      target function =      -0.746861125992
              le_mean =     -22.662484987943
             les_mean =     514.036361104322
             stat err =       0.000544277127
             autocorr =       1.322089375456
   target nu stat err =       0.000544277127
   target dn stat err =       0.002786827519
      target stat err =       0.002424282295
              std dev =       0.669429234251
             le_variance =       0.448135499670

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561434
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448097561434
                                         uncertainty =       0.002988718232

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473357951
  error estimate for blocks of size 2^( 2) =       0.000497001497
  error estimate for blocks of size 2^( 3) =       0.000519088798
  error estimate for blocks of size 2^( 4) =       0.000534650279
  error estimate for blocks of size 2^( 5) =       0.000543767835
  error estimate for blocks of size 2^( 6) =       0.000547978352
  error estimate for blocks of size 2^( 7) =       0.000550712043

      target function =      -0.746861125994
              le_mean =     -22.662484987943
             les_mean =     514.036361104321
             stat err =       0.000544277127
             autocorr =       1.322089375458
   target nu stat err =       0.000544277127
   target dn stat err =       0.002786827519
      target stat err =       0.002424282295
              std dev =       0.669429234250
             le_variance =       0.448135499668


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746861125994        initial  <--
     1.5625e+07     1.5625e+08             2.4416e-11        -0.746861125990
     6.2500e+07     6.2500e+08             6.1044e-12        -0.746861125992
     2.5000e+08     2.5000e+09             1.5261e-12        -0.746861125994

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.3232
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2218e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s012 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s012 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=12  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.6902
    reference variance = 0.374764
====================================================
  Execution time = 4.4606e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s012
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5089e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5248e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450876566985
                                         uncertainty =       0.003779336907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450876566985
                                         uncertainty =       0.003779336907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474809798
  error estimate for blocks of size 2^( 2) =       0.000498365009
  error estimate for blocks of size 2^( 3) =       0.000520175728
  error estimate for blocks of size 2^( 4) =       0.000535942626
  error estimate for blocks of size 2^( 5) =       0.000545386558
  error estimate for blocks of size 2^( 6) =       0.000551369218
  error estimate for blocks of size 2^( 7) =       0.000555038593

      target function =      -0.744561680731
              le_mean =     -22.661227042345
             les_mean =     513.982099527976
             stat err =       0.000546934249
             autocorr =       1.326877697410
   target nu stat err =       0.000546934249
   target dn stat err =       0.003868621038
      target stat err =       0.003287450917
              std dev =       0.671482455981
             le_variance =       0.450888688690


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266122704235e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+08, overlap shift 1.5625e+09 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744575087998       residual = 1.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744575087998       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744575087998       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744575087998       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744575089835       residual = 1.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744575087998       residual = 8.33e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744575128349       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744575087998       residual = 3.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744574978349       residual = 2.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744574938111       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744575001093       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744575177727       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744574970645       residual = 5.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744574812596       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744574667351       residual = 3.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744575018678       residual = 2.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744574961681       residual = 2.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744574841933       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744575149892       residual = 7.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744574933187       residual = 9.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744574549608       residual = 4.85e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744575062644       residual = 2.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744575102959       residual = 1.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744574709781       residual = 1.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744574873921       residual = 6.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744574899321       residual = 5.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744575054311       residual = 2.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744575138681       residual = 2.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744574748820       residual = 8.08e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+08 is 1.435637e-12

solving harmonic davidson linear method for identity shift 6.2500e+08, overlap shift 6.2500e+09 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744575087998       residual = 1.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744575087998       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744575087998       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744575550499       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744575087875       residual = 1.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744574714337       residual = 8.34e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744574261613       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744575087998       residual = 3.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744575760301       residual = 2.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744573713359       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744574551146       residual = 1.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744575016926       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744576418723       residual = 5.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744574859132       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744574500519       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744574146561       residual = 2.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744574962586       residual = 2.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744574536070       residual = 1.44e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744575107448       residual = 7.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744573006415       residual = 9.70e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744572444686       residual = 4.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744575439281       residual = 2.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744573282283       residual = 1.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744575411096       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744574612633       residual = 6.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744574431813       residual = 5.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744575269031       residual = 2.35e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744575031255       residual = 2.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744574427081       residual = 8.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+08 is 3.593922e-13

solving harmonic davidson linear method for identity shift 2.5000e+09, overlap shift 2.5000e+10 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744575087998       residual = 1.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744575087998       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744575087998       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744575775277       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744575087998       residual = 1.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744575175762       residual = 8.34e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744575087998       residual = 2.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744581409965       residual = 3.53e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.744573671963       residual = 2.94e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.744576873966       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.744573149400       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744578289413       residual = 1.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.744572881516       residual = 5.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.744572585452       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.744569040200       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.744576890463       residual = 2.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.744577881954       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.744578217313       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.744568563004       residual = 8.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.744574751793       residual = 9.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.744576075192       residual = 5.57e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.744573585096       residual = 2.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.744574047505       residual = 1.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744569098998       residual = 1.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.744568147621       residual = 8.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744568046422       residual = 7.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744577676990       residual = 2.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744572010952       residual = 4.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.744556830288       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.744581588915       residual = 4.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.744581378257       residual = 3.49e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.744577667093       residual = 8.76e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+09 is 9.015767e-14

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.419876 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9890e+01
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.7267
    reference variance = 0.350592
====================================================
  Execution time = 4.3786e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s012
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.7260e-01
  Total weights = 2.0000e+06
  Execution time = 4.1118e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000486108104
  error estimate for blocks of size 2^( 2) =       0.000509324218
  error estimate for blocks of size 2^( 3) =       0.000531137558
  error estimate for blocks of size 2^( 4) =       0.000546829877
  error estimate for blocks of size 2^( 5) =       0.000555212807
  error estimate for blocks of size 2^( 6) =       0.000559836316
  error estimate for blocks of size 2^( 7) =       0.000563403425

      target function =      -0.726412149719
              le_mean =     -22.661847158045
             les_mean =     514.031918555466
             stat err =       0.000556320606
             autocorr =       1.309738430512
   target nu stat err =       0.000556320606
   target dn stat err =       0.022609316529
      target stat err =       0.018004256393
              std dev =       0.687460673176
             le_variance =       0.472602177163

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000486108104
  error estimate for blocks of size 2^( 2) =       0.000509324218
  error estimate for blocks of size 2^( 3) =       0.000531137558
  error estimate for blocks of size 2^( 4) =       0.000546829877
  error estimate for blocks of size 2^( 5) =       0.000555212807
  error estimate for blocks of size 2^( 6) =       0.000559836316
  error estimate for blocks of size 2^( 7) =       0.000563403425

      target function =      -0.726412149719
              le_mean =     -22.661847158045
             les_mean =     514.031918555466
             stat err =       0.000556320606
             autocorr =       1.309738430514
   target nu stat err =       0.000556320606
   target dn stat err =       0.022609316529
      target stat err =       0.018004256392
              std dev =       0.687460673176
             le_variance =       0.472602177164

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000486108104
  error estimate for blocks of size 2^( 2) =       0.000509324218
  error estimate for blocks of size 2^( 3) =       0.000531137558
  error estimate for blocks of size 2^( 4) =       0.000546829877
  error estimate for blocks of size 2^( 5) =       0.000555212807
  error estimate for blocks of size 2^( 6) =       0.000559836316
  error estimate for blocks of size 2^( 7) =       0.000563403425

      target function =      -0.726412149719
              le_mean =     -22.661847158045
             les_mean =     514.031918555466
             stat err =       0.000556320606
             autocorr =       1.309738430522
   target nu stat err =       0.000556320606
   target dn stat err =       0.022609316529
      target stat err =       0.018004256392
              std dev =       0.687460673176
             le_variance =       0.472602177163

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.472661566151
                                         uncertainty =       0.022517638070

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000486108104
  error estimate for blocks of size 2^( 2) =       0.000509324218
  error estimate for blocks of size 2^( 3) =       0.000531137558
  error estimate for blocks of size 2^( 4) =       0.000546829877
  error estimate for blocks of size 2^( 5) =       0.000555212807
  error estimate for blocks of size 2^( 6) =       0.000559836316
  error estimate for blocks of size 2^( 7) =       0.000563403425

      target function =      -0.726412149719
              le_mean =     -22.661847158045
             les_mean =     514.031918555466
             stat err =       0.000556320606
             autocorr =       1.309738430515
   target nu stat err =       0.000556320606
   target dn stat err =       0.022609316529
      target stat err =       0.018004256393
              std dev =       0.687460673176
             le_variance =       0.472602177163


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.726412149719        initial  <--
     1.5625e+08     1.5625e+09             1.4356e-12        -0.726412149719
     6.2500e+08     6.2500e+09             3.5939e-13        -0.726412149719
     2.5000e+09     2.5000e+10             9.0158e-14        -0.726412149719

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.7915
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2269e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s013 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s013 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=13  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2674e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.7669
    reference variance = 0.323071
====================================================
  Execution time = 4.4443e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s013
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5420e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5194e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454200126434
                                         uncertainty =       0.003773328174

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454200126434
                                         uncertainty =       0.003773328174

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476548261
  error estimate for blocks of size 2^( 2) =       0.000500300021
  error estimate for blocks of size 2^( 3) =       0.000521925962
  error estimate for blocks of size 2^( 4) =       0.000537149062
  error estimate for blocks of size 2^( 5) =       0.000547080397
  error estimate for blocks of size 2^( 6) =       0.000551218084
  error estimate for blocks of size 2^( 7) =       0.000551863703

      target function =      -0.741782011138
              le_mean =     -22.662656421207
             les_mean =     514.050192328065
             stat err =       0.000546827812
             autocorr =       1.316701747308
   target nu stat err =       0.000546827812
   target dn stat err =       0.004264223306
      target stat err =       0.003593645020
              std dev =       0.673941013350
             le_variance =       0.454196489475


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266265642121e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+09, overlap shift 1.5625e+10 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741798336271       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741798336271       residual = 6.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741798336271       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741798336271       residual = 5.30e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741797375912       residual = 9.53e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741798402040       residual = 3.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741797858016       residual = 4.95e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741799643924       residual = 4.80e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741795191930       residual = 5.99e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741802664815       residual = 2.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741797968004       residual = 1.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741795176348       residual = 2.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741800516510       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741800288696       residual = 6.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741800549762       residual = 5.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741799865704       residual = 4.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741797609836       residual = 1.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741794034730       residual = 1.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741795370629       residual = 6.73e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741800903199       residual = 4.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741799567643       residual = 3.35e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741802481760       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741798642703       residual = 1.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741795964552       residual = 7.35e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741797949144       residual = 4.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741796446268       residual = 6.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741798832891       residual = 1.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741795219377       residual = 2.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741800859079       residual = 1.13e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.741792168801       residual = 2.46e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.741793214677       residual = 1.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.741796965973       residual = 3.65e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+09 is 1.535368e-13

solving harmonic davidson linear method for identity shift 6.2500e+09, overlap shift 6.2500e+10 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741798336271       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741798336271       residual = 6.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741798336271       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741796066628       residual = 5.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741799687834       residual = 9.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741793986075       residual = 3.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741798676468       residual = 5.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741797059730       residual = 4.83e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741793080574       residual = 6.01e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741802300992       residual = 2.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741800493936       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741798305335       residual = 2.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741803439451       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741807812066       residual = 6.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741797497717       residual = 5.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741793767735       residual = 4.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741806664688       residual = 1.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741813427279       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741790419657       residual = 7.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741811196331       residual = 7.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741794219433       residual = 3.10e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741790092614       residual = 1.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741807959875       residual = 1.63e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741796365690       residual = 7.86e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741835519411       residual = 7.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741804127855       residual = 5.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741800440441       residual = 3.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741799934881       residual = 4.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741816313066       residual = 1.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.741826156838       residual = 3.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.741765349213       residual = 5.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.741846668805       residual = 1.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.741820967057       residual = 2.34e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.741813435284       residual = 1.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.741793630892       residual = 5.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.741758129174       residual = 8.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.741846156694       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.741840926354       residual = 8.65e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.741806697873       residual = 5.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.741903568975       residual = 5.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.741636459648       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.741642143737       residual = 1.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.741798581227       residual = 3.54e-08           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.741865344523       residual = 2.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.741500427588       residual = 4.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.741658816977       residual = 9.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.741291948912       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.741825291314       residual = 2.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.742124286884       residual = 5.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.742193719827       residual = 9.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.741175204672       residual = 5.54e-04           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.740067721664       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.741826928942       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.746068590557       residual = 8.51e-03           smallest_sin_value = 9.93e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.87e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+09 is 3.855698e-14

solving harmonic davidson linear method for identity shift 2.5000e+10, overlap shift 2.5000e+11 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741798336271       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741798336271       residual = 6.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741798336271       residual = 3.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741798339823       residual = 5.40e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741798336271       residual = 9.53e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741794616533       residual = 3.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.741798004871       residual = 5.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.741747595433       residual = 4.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741743318326       residual = 6.82e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.741786587940       residual = 2.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.741750302646       residual = 1.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.741843836132       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741847219855       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.741807289162       residual = 7.44e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.741809533532       residual = 5.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.741867393844       residual = 6.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.741769143966       residual = 1.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.741815684522       residual = 1.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.741748305510       residual = 2.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.741751360844       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.741878877882       residual = 3.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.741803869409       residual = 4.33e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.741841456386       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.741662289134       residual = 9.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.741858518286       residual = 1.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741776565226       residual = 1.28e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.741825268511       residual = 1.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.741629953292       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.741967321091       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.741743018104       residual = 2.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.741762070534       residual = 6.99e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.741865141302       residual = 2.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.741742621130       residual = 2.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.741956411341       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.741962717873       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.741913878442       residual = 6.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.741641395940       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.742179289314       residual = 7.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.741807839003       residual = 8.47e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.742208618794       residual = 8.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.742232112064       residual = 9.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.742429363887       residual = 2.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.741430199107       residual = 6.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.741387545034       residual = 8.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.741477987198       residual = 7.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.742134096291       residual = 6.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.741473192127       residual = 5.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.740874734848       residual = 4.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.742736803633       residual = 5.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.741800370993       residual = 7.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.740488316331       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.740685940103       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.741262137028       residual = 7.77e-04           smallest_sin_value = 1.00e+00
davidson iteration   53 stopping due to small subspace S singular value of 9.85e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+10 is 9.807173e-15

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.547018 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9770e+01
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.6976
    reference variance = 0.646002
====================================================
  Execution time = 4.3809e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s013
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4642e-01
  Total weights = 2.0000e+06
  Execution time = 3.6033e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472452507
  error estimate for blocks of size 2^( 2) =       0.000496127938
  error estimate for blocks of size 2^( 3) =       0.000518106800
  error estimate for blocks of size 2^( 4) =       0.000534064396
  error estimate for blocks of size 2^( 5) =       0.000542743533
  error estimate for blocks of size 2^( 6) =       0.000546763623
  error estimate for blocks of size 2^( 7) =       0.000547842877

      target function =      -0.748299359200
              le_mean =     -22.662701276399
             les_mean =     514.044451662249
             stat err =       0.000542853607
             autocorr =       1.320228612765
   target nu stat err =       0.000542853607
   target dn stat err =       0.003425256723
      target stat err =       0.002959010347
              std dev =       0.668148742559
             le_variance =       0.446422742183

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472452507
  error estimate for blocks of size 2^( 2) =       0.000496127938
  error estimate for blocks of size 2^( 3) =       0.000518106800
  error estimate for blocks of size 2^( 4) =       0.000534064396
  error estimate for blocks of size 2^( 5) =       0.000542743533
  error estimate for blocks of size 2^( 6) =       0.000546763623
  error estimate for blocks of size 2^( 7) =       0.000547842877

      target function =      -0.748299359200
              le_mean =     -22.662701276399
             les_mean =     514.044451662249
             stat err =       0.000542853607
             autocorr =       1.320228612771
   target nu stat err =       0.000542853607
   target dn stat err =       0.003425256723
      target stat err =       0.002959010347
              std dev =       0.668148742559
             le_variance =       0.446422742184

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472452507
  error estimate for blocks of size 2^( 2) =       0.000496127938
  error estimate for blocks of size 2^( 3) =       0.000518106800
  error estimate for blocks of size 2^( 4) =       0.000534064396
  error estimate for blocks of size 2^( 5) =       0.000542743533
  error estimate for blocks of size 2^( 6) =       0.000546763623
  error estimate for blocks of size 2^( 7) =       0.000547842877

      target function =      -0.748299359200
              le_mean =     -22.662701276399
             les_mean =     514.044451662249
             stat err =       0.000542853607
             autocorr =       1.320228612767
   target nu stat err =       0.000542853607
   target dn stat err =       0.003425256723
      target stat err =       0.002959010347
              std dev =       0.668148742559
             le_variance =       0.446422742184

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446284485208
                                         uncertainty =       0.003458580952

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472452507
  error estimate for blocks of size 2^( 2) =       0.000496127938
  error estimate for blocks of size 2^( 3) =       0.000518106800
  error estimate for blocks of size 2^( 4) =       0.000534064396
  error estimate for blocks of size 2^( 5) =       0.000542743533
  error estimate for blocks of size 2^( 6) =       0.000546763623
  error estimate for blocks of size 2^( 7) =       0.000547842877

      target function =      -0.748299359200
              le_mean =     -22.662701276399
             les_mean =     514.044451662249
             stat err =       0.000542853607
             autocorr =       1.320228612767
   target nu stat err =       0.000542853607
   target dn stat err =       0.003425256723
      target stat err =       0.002959010347
              std dev =       0.668148742559
             le_variance =       0.446422742183


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.748299359200        initial  <--
     1.5625e+09     1.5625e+10             1.5354e-13        -0.748299359200
     6.2500e+09     6.2500e+10             3.8557e-14        -0.748299359200
     2.5000e+10     2.5000e+11             9.8072e-15        -0.748299359200

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9195
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2170e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s014 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s014 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=14  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.6813
    reference variance = 0.402766
====================================================
  Execution time = 4.4343e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s014
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4887e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5171e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448932518318
                                         uncertainty =       0.004084791282

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448932518318
                                         uncertainty =       0.004084791282

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473745375
  error estimate for blocks of size 2^( 2) =       0.000497193876
  error estimate for blocks of size 2^( 3) =       0.000519012941
  error estimate for blocks of size 2^( 4) =       0.000534307196
  error estimate for blocks of size 2^( 5) =       0.000543593870
  error estimate for blocks of size 2^( 6) =       0.000549610189
  error estimate for blocks of size 2^( 7) =       0.000550137135

      target function =      -0.746233811336
              le_mean =     -22.662593060055
             les_mean =     514.041993341019
             stat err =       0.000544412097
             autocorr =       1.320582593925
   target nu stat err =       0.000544412097
   target dn stat err =       0.004135770180
      target stat err =       0.003529118714
              std dev =       0.669977133797
             le_variance =       0.448869359810


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266259306005e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+10, overlap shift 1.5625e+11 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746249544321       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746249544321       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746249544321       residual = 3.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746249544321       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746251928895       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746250993910       residual = 8.78e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746255436772       residual = 6.61e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746268685646       residual = 4.31e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746239076800       residual = 4.27e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746236407305       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746261370371       residual = 1.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746274802965       residual = 1.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746271557576       residual = 5.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746240678215       residual = 2.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746244981587       residual = 2.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746268959302       residual = 1.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746239477320       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746257330252       residual = 1.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746221384631       residual = 1.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746204193102       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746261308007       residual = 3.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746258501234       residual = 2.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746275179458       residual = 4.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746322150553       residual = 2.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746291667446       residual = 8.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746249354939       residual = 7.52e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746245636401       residual = 9.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.746319553576       residual = 2.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746320037979       residual = 2.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746271945499       residual = 3.51e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.746211646827       residual = 7.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.746265074018       residual = 1.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.746215240647       residual = 5.96e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.746184156544       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.746399743147       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.746087124851       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.746453538079       residual = 2.03e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.746218138722       residual = 7.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.746367073977       residual = 7.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.746460871013       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.746434859934       residual = 1.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.746094703974       residual = 1.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.746387649145       residual = 8.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.746519532172       residual = 3.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.745794457401       residual = 9.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.746149132899       residual = 5.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.745779935499       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.746962331720       residual = 2.30e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.745901096959       residual = 1.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.745514513034       residual = 2.52e-04           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.740071757314       residual = 1.78e-02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.744900425108       residual = 8.86e-04           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.747525773686       residual = 9.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.745788324034       residual = 1.95e-03           smallest_sin_value = 9.91e-01
davidson iteration   54 stopping due to small subspace S singular value of 7.81e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+10 is 1.652097e-14

solving harmonic davidson linear method for identity shift 6.2500e+10, overlap shift 6.2500e+11 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746249544321       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746249544321       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746249544321       residual = 3.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746249544324       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746249544419       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746304050836       residual = 9.04e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746111175442       residual = 6.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746347196996       residual = 6.87e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746359597867       residual = 4.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746135957414       residual = 3.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746299030782       residual = 2.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746208526216       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746250684076       residual = 1.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746257563799       residual = 3.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746191567809       residual = 5.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746273785861       residual = 2.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.746137006596       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.746259216307       residual = 2.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746385162128       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.746351174865       residual = 7.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746125256570       residual = 7.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.746115861298       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746105875150       residual = 1.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746679144146       residual = 8.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746326085538       residual = 1.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746143081812       residual = 8.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.746162880766       residual = 4.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.745876103418       residual = 7.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.746263093780       residual = 2.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746435244284       residual = 2.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.746133201356       residual = 1.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.746133231000       residual = 8.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.746325487130       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.746552658838       residual = 4.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.746372357649       residual = 1.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.746316740441       residual = 5.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.746174576332       residual = 5.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.745927356771       residual = 6.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.745930838590       residual = 4.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.746270469595       residual = 2.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.745610555762       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.746724267346       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.747487332973       residual = 7.57e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.744571325933       residual = 1.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.746265809494       residual = 5.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.745662388259       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.745252545816       residual = 6.31e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.751950870470       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.743296647389       residual = 4.57e-03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.756367298752       residual = 4.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.742637819473       residual = 1.02e-02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.756232014482       residual = 6.24e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.759171143446       residual = 1.34e-01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.805990110949       residual = 1.79e+00           smallest_sin_value = 9.93e-01
davidson iteration   54 stopping due to small subspace S singular value of 8.55e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+10 is 4.133624e-15

solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746249544321       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746249544321       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746249544321       residual = 3.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746249544321       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746067899306       residual = 3.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746249544321       residual = 8.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.745920052481       residual = 1.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746102983059       residual = 8.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.746161542436       residual = 3.69e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746211123446       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.745764629201       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.746557369492       residual = 7.98e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.746133227413       residual = 5.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746790027407       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746089381029       residual = 1.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.746308543216       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.745833383415       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.745397983264       residual = 4.06e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.746888383892       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.745826956896       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746171140288       residual = 4.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.747645080713       residual = 9.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.746574397312       residual = 7.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746587984708       residual = 1.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746702636309       residual = 1.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746588482948       residual = 7.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.747298579511       residual = 5.98e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.744376065826       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.745017980245       residual = 6.84e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.745919420279       residual = 7.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.747124587459       residual = 4.38e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.742960776871       residual = 5.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.749139966878       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.746653751677       residual = 4.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.741945443979       residual = 9.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.747526864503       residual = 8.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.744464603810       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.744666746615       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.747510879384       residual = 2.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.744302609215       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.750605094385       residual = 9.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.745030876256       residual = 8.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.742326539799       residual = 8.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.755409217327       residual = 4.57e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.751356714258       residual = 1.92e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.741510496483       residual = 2.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.749201812763       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.742020504276       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.759026905483       residual = 1.09e-01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.744003865640       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.789077353902       residual = 9.37e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.747996479550       residual = 2.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.760928138801       residual = 2.65e-01           smallest_sin_value = 9.99e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.78e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+11 is 9.723935e-16

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.718476 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9691e+01
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.6897
    reference variance = 0.260997
====================================================
  Execution time = 4.3649e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s014
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4990e-01
  Total weights = 2.0000e+06
  Execution time = 3.5925e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474287288
  error estimate for blocks of size 2^( 2) =       0.000497906974
  error estimate for blocks of size 2^( 3) =       0.000519830707
  error estimate for blocks of size 2^( 4) =       0.000535017684
  error estimate for blocks of size 2^( 5) =       0.000544600492
  error estimate for blocks of size 2^( 6) =       0.000549164549
  error estimate for blocks of size 2^( 7) =       0.000549546568

      target function =      -0.745402434818
              le_mean =     -22.660734140764
             les_mean =     513.958768437388
             stat err =       0.000544582323
             autocorr =       1.318390638162
   target nu stat err =       0.000544582323
   target dn stat err =       0.002806494230
      target stat err =       0.002424758362
              std dev =       0.670743515765
             le_variance =       0.449896863941

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474287288
  error estimate for blocks of size 2^( 2) =       0.000497906974
  error estimate for blocks of size 2^( 3) =       0.000519830707
  error estimate for blocks of size 2^( 4) =       0.000535017684
  error estimate for blocks of size 2^( 5) =       0.000544600492
  error estimate for blocks of size 2^( 6) =       0.000549164549
  error estimate for blocks of size 2^( 7) =       0.000549546568

      target function =      -0.745402434818
              le_mean =     -22.660734140764
             les_mean =     513.958768437388
             stat err =       0.000544582323
             autocorr =       1.318390638162
   target nu stat err =       0.000544582323
   target dn stat err =       0.002806494230
      target stat err =       0.002424758362
              std dev =       0.670743515765
             le_variance =       0.449896863941

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474287288
  error estimate for blocks of size 2^( 2) =       0.000497906974
  error estimate for blocks of size 2^( 3) =       0.000519830707
  error estimate for blocks of size 2^( 4) =       0.000535017684
  error estimate for blocks of size 2^( 5) =       0.000544600492
  error estimate for blocks of size 2^( 6) =       0.000549164549
  error estimate for blocks of size 2^( 7) =       0.000549546568

      target function =      -0.745402434818
              le_mean =     -22.660734140764
             les_mean =     513.958768437388
             stat err =       0.000544582323
             autocorr =       1.318390638162
   target nu stat err =       0.000544582323
   target dn stat err =       0.002806494230
      target stat err =       0.002424758362
              std dev =       0.670743515765
             le_variance =       0.449896863941

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449849750959
                                         uncertainty =       0.002756950779

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474287288
  error estimate for blocks of size 2^( 2) =       0.000497906974
  error estimate for blocks of size 2^( 3) =       0.000519830707
  error estimate for blocks of size 2^( 4) =       0.000535017684
  error estimate for blocks of size 2^( 5) =       0.000544600492
  error estimate for blocks of size 2^( 6) =       0.000549164549
  error estimate for blocks of size 2^( 7) =       0.000549546568

      target function =      -0.745402434818
              le_mean =     -22.660734140764
             les_mean =     513.958768437388
             stat err =       0.000544582323
             autocorr =       1.318390638165
   target nu stat err =       0.000544582323
   target dn stat err =       0.002806494230
      target stat err =       0.002424758362
              std dev =       0.670743515765
             le_variance =       0.449896863941


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745402434818        initial  <--
     1.5625e+10     1.5625e+11             1.6521e-14        -0.745402434818
     6.2500e+10     6.2500e+11             4.1336e-15        -0.745402434818
     2.5000e+11     2.5000e+12             9.7239e-16        -0.745402434818

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7085
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2141e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s015 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s015 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=15  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2679e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.741
    reference variance = 0.26411
====================================================
  Execution time = 4.6145e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s015
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5997e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5047e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460030790928
                                         uncertainty =       0.010593438939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460030790928
                                         uncertainty =       0.010593438939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479566724
  error estimate for blocks of size 2^( 2) =       0.000503557946
  error estimate for blocks of size 2^( 3) =       0.000525427421
  error estimate for blocks of size 2^( 4) =       0.000541071400
  error estimate for blocks of size 2^( 5) =       0.000550700377
  error estimate for blocks of size 2^( 6) =       0.000556145489
  error estimate for blocks of size 2^( 7) =       0.000557101269

      target function =      -0.736954820668
              le_mean =     -22.661559141871
             les_mean =     514.006230997000
             stat err =       0.000551254634
             autocorr =       1.321315177519
   target nu stat err =       0.000551254634
   target dn stat err =       0.010901558708
      target stat err =       0.008942809768
              std dev =       0.678209765829
             le_variance =       0.459968486466


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266155914187e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+11, overlap shift 1.5625e+12 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737063147012       residual = 6.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737063147012       residual = 2.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737063147012       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.737063147012       residual = 6.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737063147510       residual = 4.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.737014388312       residual = 3.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.737313855487       residual = 3.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.737323376408       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.736866387941       residual = 2.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.737219706792       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.736990991038       residual = 5.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.736953767364       residual = 1.42e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.736976092857       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.736817797702       residual = 4.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.737136651151       residual = 5.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.737025628541       residual = 2.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.736823841419       residual = 5.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.736941350013       residual = 9.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.737052761918       residual = 3.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.736088664785       residual = 4.96e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.736820630173       residual = 4.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.737048207151       residual = 2.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.737591733486       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.737467096637       residual = 8.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.736409187206       residual = 2.25e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.736574231577       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.737994162914       residual = 4.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.735978464204       residual = 5.70e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.734759158367       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.736049746950       residual = 4.94e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.736488573613       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.737614294260       residual = 1.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.736336342259       residual = 2.81e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.737983340640       residual = 4.54e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.737041335461       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.737675608306       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.738330191331       residual = 7.55e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.736149102828       residual = 4.76e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.735208756296       residual = 2.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.734083848100       residual = 4.46e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.739174613252       residual = 2.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.735811740925       residual = 8.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.738848160063       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.735199448011       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.735482743043       residual = 2.07e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.737150989330       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.733361888096       residual = 7.05e-03           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.727406751908       residual = 5.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.743298620050       residual = 2.42e-02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.725965516386       residual = 8.67e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.696125119786       residual = 9.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.748072026589       residual = 1.32e-01           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.783926872667       residual = 1.40e+00           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.856475032717       residual = 6.92e+00           smallest_sin_value = 9.92e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.71e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+11 is 3.818091e-15

solving harmonic davidson linear method for identity shift 6.2500e+11, overlap shift 6.2500e+12 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737063147012       residual = 6.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737063147012       residual = 2.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737063147012       residual = 1.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.736960134931       residual = 7.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737037260235       residual = 5.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.737192356330       residual = 2.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.736858934530       residual = 2.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.738006509878       residual = 5.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.737444480035       residual = 2.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.735912719921       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.736425713232       residual = 3.36e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.736943354387       residual = 8.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.736310213151       residual = 8.48e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.737964372529       residual = 3.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.736226481915       residual = 5.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.736836992751       residual = 2.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.736039376974       residual = 8.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.735962940855       residual = 5.92e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.739256157078       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.737619176548       residual = 7.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.735800296947       residual = 8.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.739091274465       residual = 2.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.732240233072       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.738876211768       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.737477509792       residual = 2.31e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.737043463224       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.737124285783       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.742000977904       residual = 1.27e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.739903663974       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.736199051676       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.736286642778       residual = 4.34e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.730468473667       residual = 2.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.737667544490       residual = 3.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.739051077674       residual = 3.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.737190786875       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.739474493224       residual = 6.07e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.722153647334       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.728876552107       residual = 3.40e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.738586937309       residual = 1.48e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.734553738102       residual = 6.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.729195711081       residual = 3.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.744573408053       residual = 3.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.737490369676       residual = 4.68e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.736032630106       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.747791612368       residual = 6.25e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.747152898547       residual = 5.13e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.729372008363       residual = 2.90e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.704032210681       residual = 5.27e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.663328397368       residual = 2.61e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.619006351315       residual = 6.67e+00           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -1.023903162918       residual = 3.97e+01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.260638829573       residual = 1.55e+02           smallest_sin_value = 9.99e-01
davidson iteration   52 stopping due to small subspace S singular value of 9.59e-01
davidson solver did not converge after         52 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+11 is 7.715397e-16

solving harmonic davidson linear method for identity shift 2.5000e+12, overlap shift 2.5000e+13 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.737063147012       residual = 6.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.737063147012       residual = 2.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.737063147012       residual = 2.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.736395510403       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.737092724026       residual = 7.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.739190198368       residual = 2.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.736903210895       residual = 8.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.734093299224       residual = 9.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.737307955144       residual = 3.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.737873467151       residual = 4.10e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.737449841468       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.730760362792       residual = 2.56e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.741772290934       residual = 1.07e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.733808664714       residual = 7.34e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.751298418845       residual = 9.88e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.724626381613       residual = 8.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.724635709101       residual = 6.86e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.739023058726       residual = 5.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.735282731935       residual = 8.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.728673494565       residual = 3.91e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.738319389862       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.735333598751       residual = 2.92e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.731084791533       residual = 2.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744939100545       residual = 3.09e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.747352225424       residual = 5.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.746661726944       residual = 4.95e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.722501119378       residual = 1.16e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.720788438597       residual = 1.40e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.722530454727       residual = 1.12e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.745708871562       residual = 3.65e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.730787631842       residual = 4.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.711636164068       residual = 3.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.745522051785       residual = 6.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.731112949368       residual = 1.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.724555974998       residual = 1.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.741677738184       residual = 2.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.728585285903       residual = 7.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.723335350489       residual = 1.05e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.734726816360       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.720202673597       residual = 1.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.698346375474       residual = 7.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.720094396998       residual = 1.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.700756843304       residual = 6.48e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.802547639933       residual = 2.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.769355531620       residual = 6.08e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.757503453258       residual = 2.65e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.730113440593       residual = 9.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.872778411501       residual = 1.11e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.739134403219       residual = 1.63e-01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -1.452478025231       residual = 2.57e+02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.970175853812       residual = 2.99e+01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.237797292029       residual = 1.50e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -1.396536288226       residual = 2.12e+02           smallest_sin_value = 9.96e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.73e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+12 is 7.521181e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.886585 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1367e+01
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.8011
    reference variance = 0.359922
====================================================
  Execution time = 4.3927e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s015
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4835e-01
  Total weights = 2.0000e+06
  Execution time = 3.6056e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473472184
  error estimate for blocks of size 2^( 2) =       0.000497363128
  error estimate for blocks of size 2^( 3) =       0.000519098639
  error estimate for blocks of size 2^( 4) =       0.000534671903
  error estimate for blocks of size 2^( 5) =       0.000544029916
  error estimate for blocks of size 2^( 6) =       0.000549239742
  error estimate for blocks of size 2^( 7) =       0.000549811774

      target function =      -0.746691327722
              le_mean =     -22.661211838968
             les_mean =     513.978873604258
             stat err =       0.000544438334
             autocorr =       1.322234403612
   target nu stat err =       0.000544438334
   target dn stat err =       0.002973822355
      target stat err =       0.002570816709
              std dev =       0.669590783887
             le_variance =       0.448351817867

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473472184
  error estimate for blocks of size 2^( 2) =       0.000497363128
  error estimate for blocks of size 2^( 3) =       0.000519098639
  error estimate for blocks of size 2^( 4) =       0.000534671903
  error estimate for blocks of size 2^( 5) =       0.000544029916
  error estimate for blocks of size 2^( 6) =       0.000549239742
  error estimate for blocks of size 2^( 7) =       0.000549811774

      target function =      -0.746691327722
              le_mean =     -22.661211838968
             les_mean =     513.978873604258
             stat err =       0.000544438334
             autocorr =       1.322234403612
   target nu stat err =       0.000544438334
   target dn stat err =       0.002973822355
      target stat err =       0.002570816709
              std dev =       0.669590783887
             le_variance =       0.448351817867

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473472184
  error estimate for blocks of size 2^( 2) =       0.000497363128
  error estimate for blocks of size 2^( 3) =       0.000519098639
  error estimate for blocks of size 2^( 4) =       0.000534671903
  error estimate for blocks of size 2^( 5) =       0.000544029916
  error estimate for blocks of size 2^( 6) =       0.000549239742
  error estimate for blocks of size 2^( 7) =       0.000549811774

      target function =      -0.746691327722
              le_mean =     -22.661211838968
             les_mean =     513.978873604258
             stat err =       0.000544438334
             autocorr =       1.322234403612
   target nu stat err =       0.000544438334
   target dn stat err =       0.002973822355
      target stat err =       0.002570816709
              std dev =       0.669590783887
             le_variance =       0.448351817867

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448429444263
                                         uncertainty =       0.002823719607

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473472184
  error estimate for blocks of size 2^( 2) =       0.000497363128
  error estimate for blocks of size 2^( 3) =       0.000519098639
  error estimate for blocks of size 2^( 4) =       0.000534671903
  error estimate for blocks of size 2^( 5) =       0.000544029916
  error estimate for blocks of size 2^( 6) =       0.000549239742
  error estimate for blocks of size 2^( 7) =       0.000549811774

      target function =      -0.746691327722
              le_mean =     -22.661211838968
             les_mean =     513.978873604258
             stat err =       0.000544438334
             autocorr =       1.322234403612
   target nu stat err =       0.000544438334
   target dn stat err =       0.002973822355
      target stat err =       0.002570816709
              std dev =       0.669590783887
             le_variance =       0.448351817867


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746691327722        initial
     1.5625e+11     1.5625e+12             3.8181e-15        -0.746691327722
     6.2500e+11     6.2500e+12             7.7154e-16        -0.746691327722
     2.5000e+12     2.5000e+13             7.5212e-17        -0.746691327722  <--

*****************************************************************************
Applying the update for shift_i =   2.5000e+12     and shift_s =   2.5000e+13
*****************************************************************************

  Execution time = 6.2049e+01
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2342e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s016 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s016 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=16  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2684e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.7573
    reference variance = 0.423061
====================================================
  Execution time = 4.5656e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s016
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4908e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4974e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449191785998
                                         uncertainty =       0.004778429653

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449191785998
                                         uncertainty =       0.004778429653

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473854244
  error estimate for blocks of size 2^( 2) =       0.000497778539
  error estimate for blocks of size 2^( 3) =       0.000520357486
  error estimate for blocks of size 2^( 4) =       0.000535611139
  error estimate for blocks of size 2^( 5) =       0.000543710623
  error estimate for blocks of size 2^( 6) =       0.000549268444
  error estimate for blocks of size 2^( 7) =       0.000553780861

      target function =      -0.746066417709
              le_mean =     -22.661375756421
             les_mean =     513.987026637827
             stat err =       0.000545592767
             autocorr =       1.325707335654
   target nu stat err =       0.000545592767
   target dn stat err =       0.005102990557
      target stat err =       0.004322230035
              std dev =       0.670131098104
             le_variance =       0.449075688646


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266137575642e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+11, overlap shift 6.2500e+12 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746090250208       residual = 1.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746090250208       residual = 9.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746090250208       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746090250208       residual = 3.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746090250264       residual = 1.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746090301303       residual = 4.26e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746101104058       residual = 6.26e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.746011010516       residual = 3.78e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.745116886371       residual = 9.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.746313144426       residual = 2.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.747482415350       residual = 1.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744757132342       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.745964870127       residual = 7.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.745503939192       residual = 2.85e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.746632579091       residual = 2.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.747331546745       residual = 7.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.745667522747       residual = 4.01e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.743830798610       residual = 2.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.745487914010       residual = 5.42e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.745725655713       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746363316384       residual = 3.29e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.745941484084       residual = 3.36e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.752735907483       residual = 2.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.744705091577       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.746755179422       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.744242510581       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.747627956150       residual = 1.22e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.747585132110       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.745630658223       residual = 5.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.746702230309       residual = 4.85e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.749236649769       residual = 6.35e-03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.751498536453       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.744042837000       residual = 2.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.740185518540       residual = 1.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.749382612361       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.740798112135       residual = 1.67e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.751132287080       residual = 1.22e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.740037690958       residual = 1.70e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.744896412458       residual = 1.56e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.745526216969       residual = 7.38e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.745139345817       residual = 2.28e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.756343608782       residual = 5.05e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.748638166232       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.741232782523       residual = 2.29e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.760538848705       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.748075189177       residual = 1.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.738581485863       residual = 3.73e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.759057777158       residual = 8.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.800652256009       residual = 1.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.771563103437       residual = 3.07e-01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.744950464836       residual = 3.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.810088504743       residual = 1.98e+00           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.911398976310       residual = 1.45e+01           smallest_sin_value = 9.99e-01
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.899203292296       residual = 1.84e+01           smallest_sin_value = 9.93e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.60e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+11 is 2.345125e-16

solving harmonic davidson linear method for identity shift 2.5000e+12, overlap shift 2.5000e+13 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746090250208       residual = 1.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746090250208       residual = 9.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746090250208       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746090250208       residual = 2.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746090250208       residual = 1.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.748369418263       residual = 3.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.746181912324       residual = 3.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.744536704555       residual = 6.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.742299385630       residual = 8.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.743063378785       residual = 2.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.746065991092       residual = 2.52e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.747145164628       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.749171489471       residual = 4.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.746585483153       residual = 1.73e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.762887813223       residual = 1.36e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.727692053978       residual = 1.82e-01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.742375348013       residual = 9.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.747965891520       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.748906923089       residual = 1.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.750886632797       residual = 2.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.746136142289       residual = 5.62e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.778429700146       residual = 4.99e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.747518996400       residual = 2.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.753185890632       residual = 4.32e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.751275428499       residual = 2.18e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.747543349090       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.748182762892       residual = 4.29e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.747874102713       residual = 4.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.760945037787       residual = 1.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.734490945569       residual = 7.40e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.771289149884       residual = 3.62e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.734688503319       residual = 5.92e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.775732188532       residual = 5.63e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.774096764780       residual = 3.70e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.738324297415       residual = 7.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.751241077852       residual = 1.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.736310903478       residual = 7.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.762009566255       residual = 1.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.731536234659       residual = 1.05e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.735063568584       residual = 5.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.754932241651       residual = 7.75e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.732778529328       residual = 1.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.717700221003       residual = 3.84e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.739038451613       residual = 6.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.740555541590       residual = 1.57e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.732949257902       residual = 8.15e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.777660207195       residual = 6.98e-01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.742967304740       residual = 3.58e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.866797830666       residual = 8.00e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.729644079352       residual = 3.64e-01           smallest_sin_value = 9.99e-01
davidson iteration   50 stopping due to small subspace S singular value of 9.88e-01
davidson solver did not converge after         50 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+12 is 5.354026e-17

solving harmonic davidson linear method for identity shift 1.0000e+13, overlap shift 1.0000e+14 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746090250208       residual = 1.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746090250208       residual = 9.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746090250208       residual = 3.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746090250208       residual = 2.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746090250208       residual = 1.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746090250280       residual = 4.17e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.752131843638       residual = 2.10e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.732389067455       residual = 1.17e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.741828338191       residual = 1.89e-01           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.749062229861       residual = 8.12e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.749824607841       residual = 3.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.751797581302       residual = 3.07e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.734893297543       residual = 6.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.747715011930       residual = 2.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.742444976292       residual = 2.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.756472807155       residual = 7.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.740820360135       residual = 3.77e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.751991653119       residual = 1.93e-01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.734255702479       residual = 9.31e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.733304064470       residual = 1.54e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.759766960260       residual = 1.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.794372065901       residual = 1.29e+00           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.734210690507       residual = 1.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.746822717245       residual = 3.07e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.758129208341       residual = 1.24e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.736721711403       residual = 1.75e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.748510611235       residual = 2.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.794155424810       residual = 1.07e+00           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.821248299739       residual = 2.85e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.754543601287       residual = 1.92e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.799637227594       residual = 1.45e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.656881704171       residual = 3.80e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.723973471622       residual = 3.15e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.719051010324       residual = 1.09e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.567810093792       residual = 1.55e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.666942092936       residual = 3.56e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.654360659367       residual = 4.17e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.636212054257       residual = 5.76e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.740660500739       residual = 8.68e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.600495800170       residual = 1.05e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.879061039028       residual = 9.74e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.631178888083       residual = 5.98e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.708728690321       residual = 1.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.805851409014       residual = 3.28e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.927624888390       residual = 1.62e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.751073266178       residual = 3.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -1.322741441943       residual = 1.54e+02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.950826202235       residual = 2.62e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -1.000404075124       residual = 3.44e+01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.655197526497       residual = 1.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =       1.631832343517       residual = 2.83e+03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.498588171068       residual = 1.87e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -9.023026163325       residual = 3.36e+04           smallest_sin_value = 9.98e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.89e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+13 is 1.465010e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.051698 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0801e+01
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.7424
    reference variance = 0.527995
====================================================
  Execution time = 4.3522e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s016
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4816e-01
  Total weights = 2.0000e+06
  Execution time = 3.6070e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473369201
  error estimate for blocks of size 2^( 2) =       0.000497132104
  error estimate for blocks of size 2^( 3) =       0.000518781903
  error estimate for blocks of size 2^( 4) =       0.000534766174
  error estimate for blocks of size 2^( 5) =       0.000544470700
  error estimate for blocks of size 2^( 6) =       0.000548384286
  error estimate for blocks of size 2^( 7) =       0.000551439218

      target function =      -0.746851637874
              le_mean =     -22.661709040262
             les_mean =     514.001213201489
             stat err =       0.000544765094
             autocorr =       1.324398103827
   target nu stat err =       0.000544765094
   target dn stat err =       0.002738507949
      target stat err =       0.002382254478
              std dev =       0.669445143430
             le_variance =       0.448156800061

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473369201
  error estimate for blocks of size 2^( 2) =       0.000497132104
  error estimate for blocks of size 2^( 3) =       0.000518781903
  error estimate for blocks of size 2^( 4) =       0.000534766174
  error estimate for blocks of size 2^( 5) =       0.000544470700
  error estimate for blocks of size 2^( 6) =       0.000548384286
  error estimate for blocks of size 2^( 7) =       0.000551439218

      target function =      -0.746851637874
              le_mean =     -22.661709040262
             les_mean =     514.001213201489
             stat err =       0.000544765094
             autocorr =       1.324398103827
   target nu stat err =       0.000544765094
   target dn stat err =       0.002738507949
      target stat err =       0.002382254478
              std dev =       0.669445143430
             le_variance =       0.448156800061

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473369201
  error estimate for blocks of size 2^( 2) =       0.000497132104
  error estimate for blocks of size 2^( 3) =       0.000518781903
  error estimate for blocks of size 2^( 4) =       0.000534766174
  error estimate for blocks of size 2^( 5) =       0.000544470700
  error estimate for blocks of size 2^( 6) =       0.000548384286
  error estimate for blocks of size 2^( 7) =       0.000551439218

      target function =      -0.746851637874
              le_mean =     -22.661709040262
             les_mean =     514.001213201489
             stat err =       0.000544765094
             autocorr =       1.324398103827
   target nu stat err =       0.000544765094
   target dn stat err =       0.002738507949
      target stat err =       0.002382254478
              std dev =       0.669445143430
             le_variance =       0.448156800061

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448179053302
                                         uncertainty =       0.002795751583

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473369201
  error estimate for blocks of size 2^( 2) =       0.000497132104
  error estimate for blocks of size 2^( 3) =       0.000518781903
  error estimate for blocks of size 2^( 4) =       0.000534766174
  error estimate for blocks of size 2^( 5) =       0.000544470700
  error estimate for blocks of size 2^( 6) =       0.000548384286
  error estimate for blocks of size 2^( 7) =       0.000551439218

      target function =      -0.746851637874
              le_mean =     -22.661709040262
             les_mean =     514.001213201489
             stat err =       0.000544765094
             autocorr =       1.324398103827
   target nu stat err =       0.000544765094
   target dn stat err =       0.002738507949
      target stat err =       0.002382254478
              std dev =       0.669445143430
             le_variance =       0.448156800061


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746851637874        initial  <--
     6.2500e+11     6.2500e+12             2.3451e-16        -0.746851637874
     2.5000e+12     2.5000e+13             5.3540e-17        -0.746851637874
     1.0000e+13     1.0000e+14             1.4650e-17        -0.746851637874

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6683
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2248e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s017 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s017 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=17  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2688e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.6826
    reference variance = 0.393845
====================================================
  Execution time = 4.4853e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s017
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5646e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4857e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456351635218
                                         uncertainty =       0.004710679624

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456351635218
                                         uncertainty =       0.004710679624

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477732190
  error estimate for blocks of size 2^( 2) =       0.000501537575
  error estimate for blocks of size 2^( 3) =       0.000523551202
  error estimate for blocks of size 2^( 4) =       0.000538559644
  error estimate for blocks of size 2^( 5) =       0.000547996388
  error estimate for blocks of size 2^( 6) =       0.000551908941
  error estimate for blocks of size 2^( 7) =       0.000553193593

      target function =      -0.739917856778
              le_mean =     -22.662047518035
             les_mean =     514.024853571537
             stat err =       0.000547914642
             autocorr =       1.315396862761
   target nu stat err =       0.000547914642
   target dn stat err =       0.004875870480
      target stat err =       0.004071206000
              std dev =       0.675615341801
             le_variance =       0.456456090077


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266204751804e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+12, overlap shift 6.2500e+13 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739939491162       residual = 7.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to small subspace S singular value of 6.19e-01
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+12 is 6.471191e-18

solving harmonic davidson linear method for identity shift 2.5000e+13, overlap shift 2.5000e+14 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.59e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+13 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+14, overlap shift 1.0000e+15 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739939491162       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.59e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+14 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.052931 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9717e+01
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.7166
    reference variance = 0.461145
====================================================
  Execution time = 4.5413e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s017
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5664e-01
  Total weights = 2.0000e+06
  Execution time = 3.6055e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477829801
  error estimate for blocks of size 2^( 2) =       0.000500870378
  error estimate for blocks of size 2^( 3) =       0.000522304086
  error estimate for blocks of size 2^( 4) =       0.000538262104
  error estimate for blocks of size 2^( 5) =       0.000545420743
  error estimate for blocks of size 2^( 6) =       0.000549049273
  error estimate for blocks of size 2^( 7) =       0.000552477984

      target function =      -0.739767677265
              le_mean =     -22.662386338098
             les_mean =     514.040396945919
             stat err =       0.000546302526
             autocorr =       1.307133524871
   target nu stat err =       0.000546302526
   target dn stat err =       0.003464313479
      target stat err =       0.002924322672
              std dev =       0.675753384775
             le_variance =       0.456642637035

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477829801
  error estimate for blocks of size 2^( 2) =       0.000500870378
  error estimate for blocks of size 2^( 3) =       0.000522304086
  error estimate for blocks of size 2^( 4) =       0.000538262104
  error estimate for blocks of size 2^( 5) =       0.000545420743
  error estimate for blocks of size 2^( 6) =       0.000549049273
  error estimate for blocks of size 2^( 7) =       0.000552477984

      target function =      -0.739767677265
              le_mean =     -22.662386338098
             les_mean =     514.040396945919
             stat err =       0.000546302526
             autocorr =       1.307133524871
   target nu stat err =       0.000546302526
   target dn stat err =       0.003464313479
      target stat err =       0.002924322672
              std dev =       0.675753384775
             le_variance =       0.456642637035

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477829801
  error estimate for blocks of size 2^( 2) =       0.000500870378
  error estimate for blocks of size 2^( 3) =       0.000522304086
  error estimate for blocks of size 2^( 4) =       0.000538262104
  error estimate for blocks of size 2^( 5) =       0.000545420743
  error estimate for blocks of size 2^( 6) =       0.000549049273
  error estimate for blocks of size 2^( 7) =       0.000552477984

      target function =      -0.739767677265
              le_mean =     -22.662386338098
             les_mean =     514.040396945919
             stat err =       0.000546302526
             autocorr =       1.307133524871
   target nu stat err =       0.000546302526
   target dn stat err =       0.003464313479
      target stat err =       0.002924322672
              std dev =       0.675753384775
             le_variance =       0.456642637035

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456747983349
                                         uncertainty =       0.003741998227

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477829801
  error estimate for blocks of size 2^( 2) =       0.000500870378
  error estimate for blocks of size 2^( 3) =       0.000522304086
  error estimate for blocks of size 2^( 4) =       0.000538262104
  error estimate for blocks of size 2^( 5) =       0.000545420743
  error estimate for blocks of size 2^( 6) =       0.000549049273
  error estimate for blocks of size 2^( 7) =       0.000552477984

      target function =      -0.739767677265
              le_mean =     -22.662386338098
             les_mean =     514.040396945919
             stat err =       0.000546302526
             autocorr =       1.307133524871
   target nu stat err =       0.000546302526
   target dn stat err =       0.003464313479
      target stat err =       0.002924322672
              std dev =       0.675753384775
             le_variance =       0.456642637035


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.739767677265        initial  <--
     6.2500e+12     6.2500e+13             6.4712e-18        -0.739767677265
     2.5000e+13     2.5000e+14             0.0000e+00        -0.739767677265
     1.0000e+14     1.0000e+15             0.0000e+00        -0.739767677265

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.5211
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2324e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s018 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s018 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=18  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2689e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.6792
    reference variance = 0.563942
====================================================
  Execution time = 4.4107e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s018
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4905e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5213e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449085848015
                                         uncertainty =       0.002839563983

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449085848015
                                         uncertainty =       0.002839563983

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473840268
  error estimate for blocks of size 2^( 2) =       0.000497665963
  error estimate for blocks of size 2^( 3) =       0.000519604285
  error estimate for blocks of size 2^( 4) =       0.000534724292
  error estimate for blocks of size 2^( 5) =       0.000544252304
  error estimate for blocks of size 2^( 6) =       0.000549423052
  error estimate for blocks of size 2^( 7) =       0.000553922211

      target function =      -0.746111695486
              le_mean =     -22.660746495343
             les_mean =     513.958480701759
             stat err =       0.000545580465
             autocorr =       1.325725749095
   target nu stat err =       0.000545580465
   target dn stat err =       0.002830501597
      target stat err =       0.002449023091
              std dev =       0.670111334103
             le_variance =       0.449049200093


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266074649534e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+13, overlap shift 6.2500e+14 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746118712465       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746118712465       residual = 5.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746118712465       residual = 1.35e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746118712465       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.727278364634       residual = 1.01e+00           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.805258129265       residual = 1.90e+00           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.869492734725       residual = 8.68e+00           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.668744553464       residual = 7.36e+00           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.622160083258       residual = 7.61e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706479650087       residual = 3.28e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711043830617       residual = 6.24e+00           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.771886414257       residual = 1.35e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.745163545968       residual = 2.99e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.831305616699       residual = 3.13e+00           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.668260271560       residual = 3.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.768271734858       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.538718706360       residual = 2.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712559781901       residual = 7.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.731356190015       residual = 5.11e+00           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.884550506078       residual = 9.57e+00           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.772474991094       residual = 2.70e+00           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.457642213615       residual = 3.92e+01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -1.126984774024       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -1.160513669678       residual = 8.49e+01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.871837584772       residual = 1.09e+01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.544943224352       residual = 2.08e+01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -1.037150568835       residual = 3.94e+01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.943011660327       residual = 2.15e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.835447754054       residual = 4.90e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -1.063827144131       residual = 5.07e+01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.570889026720       residual = 1.72e+01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -1.298592488994       residual = 1.53e+02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -1.008976383448       residual = 5.78e+01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.937848408710       residual = 5.92e+01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =       0.413030132299       residual = 6.74e+02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.135238792266       residual = 1.71e+02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.667361192085       residual = 3.80e+02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.770836508252       residual = 6.34e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -1.450641586491       residual = 2.58e+02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.540262569645       residual = 2.39e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =       0.045961580951       residual = 2.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.282394472293       residual = 1.64e+02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =       1.069630233529       residual = 1.61e+03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =       0.100595644550       residual = 5.20e+02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.930567385263       residual = 5.98e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       0.605292857893       residual = 1.04e+03           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -1.430090721911       residual = 2.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -6.530378317822       residual = 1.55e+04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -9.171197899529       residual = 3.39e+04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =       3.698493168465       residual = 1.59e+04           smallest_sin_value = 1.00e+00
davidson iteration   50 stopping due to too large eigenvalue change
davidson solver did not converge after         50 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+13 is 1.018716e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+14, overlap shift 2.5000e+15 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746118712465       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746118712465       residual = 5.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746118712465       residual = 6.46e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746118712540       residual = 3.14e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745955207969       residual = 2.24e-02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746101354269       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.733336789153       residual = 7.89e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.780806460633       residual = 8.68e+00           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.811190142684       residual = 2.12e+01           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705469112334       residual = 2.12e+01           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.957769033124       residual = 3.15e+01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -1.006750663219       residual = 4.34e+01           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -1.391712759341       residual = 3.00e+02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -1.532237014984       residual = 3.17e+02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.787969584741       residual = 1.86e+01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -1.078548465466       residual = 7.75e+01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.550700920024       residual = 7.28e+01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -1.184913153962       residual = 1.46e+02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -1.055648738509       residual = 6.93e+01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.704461913557       residual = 4.29e+01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.628193124769       residual = 2.21e+01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =       0.346046095253       residual = 5.67e+02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.781181953155       residual = 7.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.205872053991       residual = 1.46e+02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.497071245833       residual = 1.06e+02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -1.859957015172       residual = 1.04e+03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -1.110413320176       residual = 1.99e+02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -1.179758488362       residual = 2.85e+02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =       0.397250758891       residual = 6.28e+02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -1.553626963989       residual = 1.65e+03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =       0.790173388119       residual = 1.41e+03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =       0.353773017995       residual = 6.31e+02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =       0.041710753161       residual = 3.29e+02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =       0.186091651656       residual = 4.26e+02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -2.409729487808       residual = 1.30e+03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -3.385041613251       residual = 3.60e+03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.066143578353       residual = 8.64e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.197959730168       residual = 1.86e+02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =       0.526879471845       residual = 1.03e+03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -3.006795126283       residual = 2.46e+03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =       4.943938033296       residual = 1.83e+04           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =       1.422345304870       residual = 3.36e+03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =       3.285771536906       residual = 7.65e+03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =       2.571638421795       residual = 5.48e+03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -1.064201223714       residual = 6.34e+02           smallest_sin_value = 1.00e+00
davidson iteration   45 stopping due to too large eigenvalue change
davidson solver did not converge after         45 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+14 is 1.794969e-19

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+15, overlap shift 1.0000e+16 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746118712465       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746118712465       residual = 5.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746118712465       residual = 3.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746118712465       residual = 1.40e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746118712465       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.746118639202       residual = 5.32e-01           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.203306553969       residual = 1.40e+02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =       1.792537789960       residual = 3.06e+03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.110863347188       residual = 4.44e+02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -1.121851614153       residual = 8.04e+02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -1.294738240496       residual = 9.61e+02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.224163554210       residual = 6.42e+02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.554181027927       residual = 8.31e+01           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =       1.980620715498       residual = 3.51e+03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =       1.848768073144       residual = 3.28e+03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -2.727717412223       residual = 2.16e+03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.951775267871       residual = 6.78e+02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =       0.734938021423       residual = 2.51e+03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -5.334964692214       residual = 1.21e+04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =       6.226704214301       residual = 2.82e+04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -2.933923877234       residual = 3.05e+03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =       2.344225840352       residual = 5.29e+03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =       6.861079788804       residual = 3.01e+04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -4.044973169650       residual = 5.26e+03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -1.843834766842       residual = 9.24e+02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =       7.318670370714       residual = 3.33e+04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -7.840870730958       residual = 2.52e+04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -8.220010450611       residual = 2.84e+04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -9.515525333040       residual = 4.12e+04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =       5.066098052789       residual = 1.62e+04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -2.226960825608       residual = 3.55e+03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =       1.501082995986       residual = 3.26e+03           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =       0.760762969693       residual = 3.61e+03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =       7.590605514905       residual = 4.46e+04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -7.560988570325       residual = 3.25e+04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =       5.059392508830       residual = 1.71e+04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =       0.586755167095       residual = 4.07e+03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -7.341038683078       residual = 2.45e+04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =       6.499307248494       residual = 3.82e+04           smallest_sin_value = 1.00e+00
davidson iteration   39 stopping due to too large eigenvalue change
davidson solver did not converge after         39 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+15 is 1.240606e-19

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.160510 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9433e+01
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.6483
    reference variance = 0.399681
====================================================
  Execution time = 4.3866e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s018
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5134e-01
  Total weights = 2.0000e+06
  Execution time = 3.6115e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475046224
  error estimate for blocks of size 2^( 2) =       0.000498915141
  error estimate for blocks of size 2^( 3) =       0.000520533533
  error estimate for blocks of size 2^( 4) =       0.000536177915
  error estimate for blocks of size 2^( 5) =       0.000545403544
  error estimate for blocks of size 2^( 6) =       0.000550847372
  error estimate for blocks of size 2^( 7) =       0.000557471145

      target function =      -0.744178849826
              le_mean =     -22.662020640981
             les_mean =     514.018517136770
             stat err =       0.000547474994
             autocorr =       1.328179687213
   target nu stat err =       0.000547474994
   target dn stat err =       0.003423522974
      target stat err =       0.002923874120
              std dev =       0.671816812983
             le_variance =       0.451337830206

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475046224
  error estimate for blocks of size 2^( 2) =       0.000498915141
  error estimate for blocks of size 2^( 3) =       0.000520533533
  error estimate for blocks of size 2^( 4) =       0.000536177915
  error estimate for blocks of size 2^( 5) =       0.000545403544
  error estimate for blocks of size 2^( 6) =       0.000550847372
  error estimate for blocks of size 2^( 7) =       0.000557471145

      target function =      -0.744178849826
              le_mean =     -22.662020640981
             les_mean =     514.018517136770
             stat err =       0.000547474994
             autocorr =       1.328179687210
   target nu stat err =       0.000547474994
   target dn stat err =       0.003423522974
      target stat err =       0.002923874120
              std dev =       0.671816812983
             le_variance =       0.451337830206

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475046224
  error estimate for blocks of size 2^( 2) =       0.000498915141
  error estimate for blocks of size 2^( 3) =       0.000520533533
  error estimate for blocks of size 2^( 4) =       0.000536177915
  error estimate for blocks of size 2^( 5) =       0.000545403544
  error estimate for blocks of size 2^( 6) =       0.000550847372
  error estimate for blocks of size 2^( 7) =       0.000557471145

      target function =      -0.744178849826
              le_mean =     -22.662020640981
             les_mean =     514.018517136770
             stat err =       0.000547474994
             autocorr =       1.328179687210
   target nu stat err =       0.000547474994
   target dn stat err =       0.003423522974
      target stat err =       0.002923874120
              std dev =       0.671816812983
             le_variance =       0.451337830206

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451175723657
                                         uncertainty =       0.002937033793

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475046224
  error estimate for blocks of size 2^( 2) =       0.000498915141
  error estimate for blocks of size 2^( 3) =       0.000520533533
  error estimate for blocks of size 2^( 4) =       0.000536177915
  error estimate for blocks of size 2^( 5) =       0.000545403544
  error estimate for blocks of size 2^( 6) =       0.000550847372
  error estimate for blocks of size 2^( 7) =       0.000557471145

      target function =      -0.744178849826
              le_mean =     -22.662020640981
             les_mean =     514.018517136770
             stat err =       0.000547474994
             autocorr =       1.328179687210
   target nu stat err =       0.000547474994
   target dn stat err =       0.003423522974
      target stat err =       0.002923874120
              std dev =       0.671816812983
             le_variance =       0.451337830206


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744178849826        initial  <--
     6.2500e+13     6.2500e+14             1.0187e-18        -0.744178849826
     2.5000e+14     2.5000e+15             1.7950e-19        -0.744178849826
     1.0000e+15     1.0000e+16             1.2406e-19        -0.744178849826

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.0083
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2145e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s019 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s019 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=19  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2688e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.6483
    reference variance = 0.466248
====================================================
  Execution time = 4.4108e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s019
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5075e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5250e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450811606127
                                         uncertainty =       0.002997702781

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450811606127
                                         uncertainty =       0.002997702781

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474738309
  error estimate for blocks of size 2^( 2) =       0.000498268064
  error estimate for blocks of size 2^( 3) =       0.000520760135
  error estimate for blocks of size 2^( 4) =       0.000536057521
  error estimate for blocks of size 2^( 5) =       0.000545714781
  error estimate for blocks of size 2^( 6) =       0.000549744179
  error estimate for blocks of size 2^( 7) =       0.000553480867

      target function =      -0.744665320325
              le_mean =     -22.662223874740
             les_mean =     514.027143647366
             stat err =       0.000546249337
             autocorr =       1.323955199251
   target nu stat err =       0.000546249337
   target dn stat err =       0.003348084310
      target stat err =       0.002866558412
              std dev =       0.671381355048
             le_variance =       0.450752923906


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266222387474e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+14, overlap shift 6.2500e+15 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.33e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+15, overlap shift 2.5000e+16 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.33e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+16, overlap shift 1.0000e+17 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744675319023       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+16 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.161661 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9365e+01
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.747
    reference variance = 0.376627
====================================================
  Execution time = 4.3703e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s019
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5132e-01
  Total weights = 2.0000e+06
  Execution time = 3.6199e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475038440
  error estimate for blocks of size 2^( 2) =       0.000499188176
  error estimate for blocks of size 2^( 3) =       0.000521272695
  error estimate for blocks of size 2^( 4) =       0.000536641833
  error estimate for blocks of size 2^( 5) =       0.000545417145
  error estimate for blocks of size 2^( 6) =       0.000549827166
  error estimate for blocks of size 2^( 7) =       0.000553034682

      target function =      -0.744190282853
              le_mean =     -22.662006625232
             les_mean =     514.017867094838
             stat err =       0.000546230207
             autocorr =       1.322190153424
   target nu stat err =       0.000546230207
   target dn stat err =       0.003633860537
      target stat err =       0.003095560282
              std dev =       0.671805804120
             le_variance =       0.451323038449

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475038440
  error estimate for blocks of size 2^( 2) =       0.000499188176
  error estimate for blocks of size 2^( 3) =       0.000521272695
  error estimate for blocks of size 2^( 4) =       0.000536641833
  error estimate for blocks of size 2^( 5) =       0.000545417145
  error estimate for blocks of size 2^( 6) =       0.000549827166
  error estimate for blocks of size 2^( 7) =       0.000553034682

      target function =      -0.744190282853
              le_mean =     -22.662006625232
             les_mean =     514.017867094838
             stat err =       0.000546230207
             autocorr =       1.322190153426
   target nu stat err =       0.000546230207
   target dn stat err =       0.003633860537
      target stat err =       0.003095560282
              std dev =       0.671805804120
             le_variance =       0.451323038449

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475038440
  error estimate for blocks of size 2^( 2) =       0.000499188176
  error estimate for blocks of size 2^( 3) =       0.000521272695
  error estimate for blocks of size 2^( 4) =       0.000536641833
  error estimate for blocks of size 2^( 5) =       0.000545417145
  error estimate for blocks of size 2^( 6) =       0.000549827166
  error estimate for blocks of size 2^( 7) =       0.000553034682

      target function =      -0.744190282853
              le_mean =     -22.662006625232
             les_mean =     514.017867094838
             stat err =       0.000546230207
             autocorr =       1.322190153426
   target nu stat err =       0.000546230207
   target dn stat err =       0.003633860537
      target stat err =       0.003095560282
              std dev =       0.671805804120
             le_variance =       0.451323038449

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451289994075
                                         uncertainty =       0.003303243264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475038440
  error estimate for blocks of size 2^( 2) =       0.000499188176
  error estimate for blocks of size 2^( 3) =       0.000521272695
  error estimate for blocks of size 2^( 4) =       0.000536641833
  error estimate for blocks of size 2^( 5) =       0.000545417145
  error estimate for blocks of size 2^( 6) =       0.000549827166
  error estimate for blocks of size 2^( 7) =       0.000553034682

      target function =      -0.744190282853
              le_mean =     -22.662006625232
             les_mean =     514.017867094838
             stat err =       0.000546230207
             autocorr =       1.322190153426
   target nu stat err =       0.000546230207
   target dn stat err =       0.003633860537
      target stat err =       0.003095560282
              std dev =       0.671805804120
             le_variance =       0.451323038449


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744190282853        initial  <--
     6.2500e+14     6.2500e+15             0.0000e+00        -0.744190282853
     2.5000e+15     2.5000e+16             0.0000e+00        -0.744190282853
     1.0000e+16     1.0000e+17             0.0000e+00        -0.744190282853

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8876
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2126e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s020 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s020 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=20  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2688e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.6428
    reference variance = 0.365772
====================================================
  Execution time = 4.6170e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s020
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5872e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5001e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458720799875
                                         uncertainty =       0.004468866779

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458720799875
                                         uncertainty =       0.004468866779

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478914394
  error estimate for blocks of size 2^( 2) =       0.000502970725
  error estimate for blocks of size 2^( 3) =       0.000524897646
  error estimate for blocks of size 2^( 4) =       0.000541131201
  error estimate for blocks of size 2^( 5) =       0.000549969161
  error estimate for blocks of size 2^( 6) =       0.000553436531
  error estimate for blocks of size 2^( 7) =       0.000557601343

      target function =      -0.738063805721
              le_mean =     -22.661748636786
             les_mean =     514.013569040197
             stat err =       0.000550534559
             autocorr =       1.321458086307
   target nu stat err =       0.000550534559
   target dn stat err =       0.004761731575
      target stat err =       0.003957059700
              std dev =       0.677287230579
             le_variance =       0.458717992706


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266174863679e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+15, overlap shift 6.2500e+16 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.22e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+16, overlap shift 2.5000e+17 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.60e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+16 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+17, overlap shift 1.0000e+18 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738083828050       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+17 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.162791 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1178e+01
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.6675
    reference variance = 0.431524
====================================================
  Execution time = 4.3573e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s020
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5112e-01
  Total weights = 2.0000e+06
  Execution time = 3.6172e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474931276
  error estimate for blocks of size 2^( 2) =       0.000498541023
  error estimate for blocks of size 2^( 3) =       0.000520742254
  error estimate for blocks of size 2^( 4) =       0.000536782022
  error estimate for blocks of size 2^( 5) =       0.000546139404
  error estimate for blocks of size 2^( 6) =       0.000550084774
  error estimate for blocks of size 2^( 7) =       0.000554316991

      target function =      -0.744359823110
              le_mean =     -22.662087077297
             les_mean =     514.021309906933
             stat err =       0.000546830798
             autocorr =       1.325697360693
   target nu stat err =       0.000546830798
   target dn stat err =       0.003502073607
      target stat err =       0.002989606926
              std dev =       0.671654251470
             le_variance =       0.451119433517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474931276
  error estimate for blocks of size 2^( 2) =       0.000498541023
  error estimate for blocks of size 2^( 3) =       0.000520742254
  error estimate for blocks of size 2^( 4) =       0.000536782022
  error estimate for blocks of size 2^( 5) =       0.000546139404
  error estimate for blocks of size 2^( 6) =       0.000550084774
  error estimate for blocks of size 2^( 7) =       0.000554316991

      target function =      -0.744359823110
              le_mean =     -22.662087077297
             les_mean =     514.021309906933
             stat err =       0.000546830798
             autocorr =       1.325697360693
   target nu stat err =       0.000546830798
   target dn stat err =       0.003502073607
      target stat err =       0.002989606926
              std dev =       0.671654251470
             le_variance =       0.451119433517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474931276
  error estimate for blocks of size 2^( 2) =       0.000498541023
  error estimate for blocks of size 2^( 3) =       0.000520742254
  error estimate for blocks of size 2^( 4) =       0.000536782022
  error estimate for blocks of size 2^( 5) =       0.000546139404
  error estimate for blocks of size 2^( 6) =       0.000550084774
  error estimate for blocks of size 2^( 7) =       0.000554316991

      target function =      -0.744359823110
              le_mean =     -22.662087077297
             les_mean =     514.021309906933
             stat err =       0.000546830798
             autocorr =       1.325697360693
   target nu stat err =       0.000546830798
   target dn stat err =       0.003502073607
      target stat err =       0.002989606926
              std dev =       0.671654251470
             le_variance =       0.451119433517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451168650000
                                         uncertainty =       0.003384429610

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474931276
  error estimate for blocks of size 2^( 2) =       0.000498541023
  error estimate for blocks of size 2^( 3) =       0.000520742254
  error estimate for blocks of size 2^( 4) =       0.000536782022
  error estimate for blocks of size 2^( 5) =       0.000546139404
  error estimate for blocks of size 2^( 6) =       0.000550084774
  error estimate for blocks of size 2^( 7) =       0.000554316991

      target function =      -0.744359823110
              le_mean =     -22.662087077297
             les_mean =     514.021309906933
             stat err =       0.000546830798
             autocorr =       1.325697360693
   target nu stat err =       0.000546830798
   target dn stat err =       0.003502073607
      target stat err =       0.002989606926
              std dev =       0.671654251470
             le_variance =       0.451119433517


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744359823110        initial  <--
     6.2500e+15     6.2500e+16             0.0000e+00        -0.744359823110
     2.5000e+16     2.5000e+17             0.0000e+00        -0.744359823110
     1.0000e+17     1.0000e+18             0.0000e+00        -0.744359823110

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7449
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2293e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s021 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s021 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=21  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2687e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.568
    reference variance = 0.397191
====================================================
  Execution time = 4.4335e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s021
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4424e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5257e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444011955019
                                         uncertainty =       0.002974076034

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444011955019
                                         uncertainty =       0.002974076034

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471294332
  error estimate for blocks of size 2^( 2) =       0.000495284209
  error estimate for blocks of size 2^( 3) =       0.000517271711
  error estimate for blocks of size 2^( 4) =       0.000532630317
  error estimate for blocks of size 2^( 5) =       0.000541434758
  error estimate for blocks of size 2^( 6) =       0.000546072169
  error estimate for blocks of size 2^( 7) =       0.000548789611

      target function =      -0.750163684824
              le_mean =     -22.661055374373
             les_mean =     513.967667153960
             stat err =       0.000542231714
             autocorr =       1.323687277863
   target nu stat err =       0.000542231714
   target dn stat err =       0.002875565003
      target stat err =       0.002512084821
              std dev =       0.666510836865
             le_variance =       0.444236695659


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266105537437e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+16, overlap shift 6.2500e+17 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.750171075812       residual = 8.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.750171075812       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.750171075812       residual = 5.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.750171075812       residual = 6.54e-01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+16 is 6.571347e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+17, overlap shift 2.5000e+18 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.750171075812       residual = 8.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.750171075812       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.750171075812       residual = 5.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.750171075812       residual = 8.50e+00           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+17 is 1.642837e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+18, overlap shift 1.0000e+19 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.750171075812       residual = 8.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.750171075812       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.750171075812       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+18 is 2.738061e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.164378 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9599e+01
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.6894
    reference variance = 0.367874
====================================================
  Execution time = 4.4508e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s021
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4785e-01
  Total weights = 2.0000e+06
  Execution time = 3.6103e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473205851
  error estimate for blocks of size 2^( 2) =       0.000497195202
  error estimate for blocks of size 2^( 3) =       0.000519151769
  error estimate for blocks of size 2^( 4) =       0.000534918808
  error estimate for blocks of size 2^( 5) =       0.000544003804
  error estimate for blocks of size 2^( 6) =       0.000546664026
  error estimate for blocks of size 2^( 7) =       0.000550589940

      target function =      -0.747112150859
              le_mean =     -22.661523554271
             les_mean =     513.992497131055
             stat err =       0.000544044144
             autocorr =       1.321807067472
   target nu stat err =       0.000544044144
   target dn stat err =       0.002980429495
      target stat err =       0.002580133411
              std dev =       0.669214131784
             le_variance =       0.447847554179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473205851
  error estimate for blocks of size 2^( 2) =       0.000497195202
  error estimate for blocks of size 2^( 3) =       0.000519151769
  error estimate for blocks of size 2^( 4) =       0.000534918808
  error estimate for blocks of size 2^( 5) =       0.000544003804
  error estimate for blocks of size 2^( 6) =       0.000546664026
  error estimate for blocks of size 2^( 7) =       0.000550589940

      target function =      -0.747112150859
              le_mean =     -22.661523554271
             les_mean =     513.992497131055
             stat err =       0.000544044144
             autocorr =       1.321807067472
   target nu stat err =       0.000544044144
   target dn stat err =       0.002980429495
      target stat err =       0.002580133411
              std dev =       0.669214131784
             le_variance =       0.447847554179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473205851
  error estimate for blocks of size 2^( 2) =       0.000497195202
  error estimate for blocks of size 2^( 3) =       0.000519151769
  error estimate for blocks of size 2^( 4) =       0.000534918808
  error estimate for blocks of size 2^( 5) =       0.000544003804
  error estimate for blocks of size 2^( 6) =       0.000546664026
  error estimate for blocks of size 2^( 7) =       0.000550589940

      target function =      -0.747112150859
              le_mean =     -22.661523554271
             les_mean =     513.992497131055
             stat err =       0.000544044144
             autocorr =       1.321807067472
   target nu stat err =       0.000544044144
   target dn stat err =       0.002980429495
      target stat err =       0.002580133411
              std dev =       0.669214131784
             le_variance =       0.447847554179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447776422526
                                         uncertainty =       0.003176020373

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473205851
  error estimate for blocks of size 2^( 2) =       0.000497195202
  error estimate for blocks of size 2^( 3) =       0.000519151769
  error estimate for blocks of size 2^( 4) =       0.000534918808
  error estimate for blocks of size 2^( 5) =       0.000544003804
  error estimate for blocks of size 2^( 6) =       0.000546664026
  error estimate for blocks of size 2^( 7) =       0.000550589940

      target function =      -0.747112150859
              le_mean =     -22.661523554271
             les_mean =     513.992497131055
             stat err =       0.000544044144
             autocorr =       1.321807067472
   target nu stat err =       0.000544044144
   target dn stat err =       0.002980429495
      target stat err =       0.002580133411
              std dev =       0.669214131784
             le_variance =       0.447847554179


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.747112150859        initial  <--
     6.2500e+16     6.2500e+17             6.5713e-22        -0.747112150859
     2.5000e+17     2.5000e+18             1.6428e-22        -0.747112150859
     1.0000e+18     1.0000e+19             2.7381e-23        -0.747112150859

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.6579
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2226e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s022 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s022 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=22  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2684e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.6778
    reference variance = 0.385027
====================================================
  Execution time = 4.4964e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s022
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4799e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5081e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447995979614
                                         uncertainty =       0.002909721986

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447995979614
                                         uncertainty =       0.002909721986

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473283292
  error estimate for blocks of size 2^( 2) =       0.000496884168
  error estimate for blocks of size 2^( 3) =       0.000519174084
  error estimate for blocks of size 2^( 4) =       0.000534883648
  error estimate for blocks of size 2^( 5) =       0.000543227629
  error estimate for blocks of size 2^( 6) =       0.000548590393
  error estimate for blocks of size 2^( 7) =       0.000552060806

      target function =      -0.746979715846
              le_mean =     -22.662553257353
             les_mean =     514.039314066563
             stat err =       0.000544690619
             autocorr =       1.324516722885
   target nu stat err =       0.000544690619
   target dn stat err =       0.002720460255
      target stat err =       0.002371377562
              std dev =       0.669323649800
             le_variance =       0.447994148182


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266255325735e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+17, overlap shift 6.2500e+18 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746986208747       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746986208747       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+17 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+18, overlap shift 2.5000e+19 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746986208747       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746986208747       residual = 6.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746986208747       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746986208746       residual = 1.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746986208716       residual = 3.26e+01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+18 is 3.312464e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+19, overlap shift 1.0000e+20 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.746986208747       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.746986208747       residual = 6.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.746986208747       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.746986208745       residual = 5.02e+00           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.746986201486       residual = 4.74e+01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+19 is 6.668882e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.166070 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0055e+01
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.7568
    reference variance = 0.310973
====================================================
  Execution time = 4.5452e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s022
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5050e-01
  Total weights = 2.0000e+06
  Execution time = 3.6079e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474607655
  error estimate for blocks of size 2^( 2) =       0.000498219349
  error estimate for blocks of size 2^( 3) =       0.000520110464
  error estimate for blocks of size 2^( 4) =       0.000536693000
  error estimate for blocks of size 2^( 5) =       0.000547065130
  error estimate for blocks of size 2^( 6) =       0.000551307971
  error estimate for blocks of size 2^( 7) =       0.000553585721

      target function =      -0.744863652122
              le_mean =     -22.662533916428
             les_mean =     514.040948140788
             stat err =       0.000547162955
             autocorr =       1.329119089435
   target nu stat err =       0.000547162955
   target dn stat err =       0.004057070214
      target stat err =       0.003451736226
              std dev =       0.671196582830
             le_variance =       0.450504852802

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474607655
  error estimate for blocks of size 2^( 2) =       0.000498219349
  error estimate for blocks of size 2^( 3) =       0.000520110464
  error estimate for blocks of size 2^( 4) =       0.000536693000
  error estimate for blocks of size 2^( 5) =       0.000547065130
  error estimate for blocks of size 2^( 6) =       0.000551307971
  error estimate for blocks of size 2^( 7) =       0.000553585721

      target function =      -0.744863652122
              le_mean =     -22.662533916428
             les_mean =     514.040948140788
             stat err =       0.000547162955
             autocorr =       1.329119089435
   target nu stat err =       0.000547162955
   target dn stat err =       0.004057070214
      target stat err =       0.003451736226
              std dev =       0.671196582830
             le_variance =       0.450504852802

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474607655
  error estimate for blocks of size 2^( 2) =       0.000498219349
  error estimate for blocks of size 2^( 3) =       0.000520110464
  error estimate for blocks of size 2^( 4) =       0.000536693000
  error estimate for blocks of size 2^( 5) =       0.000547065130
  error estimate for blocks of size 2^( 6) =       0.000551307971
  error estimate for blocks of size 2^( 7) =       0.000553585721

      target function =      -0.744863652122
              le_mean =     -22.662533916428
             les_mean =     514.040948140788
             stat err =       0.000547162955
             autocorr =       1.329119089435
   target nu stat err =       0.000547162955
   target dn stat err =       0.004057070214
      target stat err =       0.003451736226
              std dev =       0.671196582830
             le_variance =       0.450504852802

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450607034083
                                         uncertainty =       0.003578924307

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474607655
  error estimate for blocks of size 2^( 2) =       0.000498219349
  error estimate for blocks of size 2^( 3) =       0.000520110464
  error estimate for blocks of size 2^( 4) =       0.000536693000
  error estimate for blocks of size 2^( 5) =       0.000547065130
  error estimate for blocks of size 2^( 6) =       0.000551307971
  error estimate for blocks of size 2^( 7) =       0.000553585721

      target function =      -0.744863652122
              le_mean =     -22.662533916428
             les_mean =     514.040948140788
             stat err =       0.000547162955
             autocorr =       1.329119089435
   target nu stat err =       0.000547162955
   target dn stat err =       0.004057070214
      target stat err =       0.003451736226
              std dev =       0.671196582830
             le_variance =       0.450504852802


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744863652122        initial  <--
     6.2500e+17     6.2500e+18             0.0000e+00        -0.744863652122
     2.5000e+18     2.5000e+19             3.3125e-23        -0.744863652122
     1.0000e+19     1.0000e+20             6.6689e-24        -0.744863652122

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.5771
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2364e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s023 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s023 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=23  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2685e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.6751
    reference variance = 0.878788
====================================================
  Execution time = 4.3961e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s023
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5600e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5114e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455944788024
                                         uncertainty =       0.006638924032

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455944788024
                                         uncertainty =       0.006638924032

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477491211
  error estimate for blocks of size 2^( 2) =       0.000501386017
  error estimate for blocks of size 2^( 3) =       0.000522899500
  error estimate for blocks of size 2^( 4) =       0.000538174486
  error estimate for blocks of size 2^( 5) =       0.000547823612
  error estimate for blocks of size 2^( 6) =       0.000551884438
  error estimate for blocks of size 2^( 7) =       0.000554275203

      target function =      -0.740278340332
              le_mean =     -22.662056737399
             les_mean =     514.024811053501
             stat err =       0.000548039435
             autocorr =       1.317324763997
   target nu stat err =       0.000548039435
   target dn stat err =       0.006768988964
      target stat err =       0.005626854454
              std dev =       0.675274545963
             le_variance =       0.455995712426


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266205673740e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+18, overlap shift 6.2500e+19 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740319555973       residual = 9.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740319555973       residual = 2.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740319555973       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740319555973       residual = 6.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.740319550927       residual = 6.64e+01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+18 is 1.947610e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+19, overlap shift 2.5000e+20 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740319555973       residual = 9.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740319555973       residual = 2.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740319555973       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740319555973       residual = 6.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+19 is 4.869026e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+20, overlap shift 1.0000e+21 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740319555973       residual = 9.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740319555973       residual = 2.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740319555973       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740319555973       residual = 6.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.740319555969       residual = 6.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.740319591019       residual = 3.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.740319555625       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+20 is 2.000540e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.168204 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9083e+01
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.6609
    reference variance = 0.509137
====================================================
  Execution time = 4.3799e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s023
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4493e-01
  Total weights = 2.0000e+06
  Execution time = 3.6066e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660558
  error estimate for blocks of size 2^( 2) =       0.000494828656
  error estimate for blocks of size 2^( 3) =       0.000517088606
  error estimate for blocks of size 2^( 4) =       0.000532182198
  error estimate for blocks of size 2^( 5) =       0.000540472167
  error estimate for blocks of size 2^( 6) =       0.000543559207
  error estimate for blocks of size 2^( 7) =       0.000547278210

      target function =      -0.749576395758
              le_mean =     -22.661765754447
             les_mean =     514.000554250062
             stat err =       0.000540872945
             autocorr =       1.315017089739
   target nu stat err =       0.000540872945
   target dn stat err =       0.002631824103
      target stat err =       0.002310925581
              std dev =       0.667028757325
             le_variance =       0.444927363099

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660558
  error estimate for blocks of size 2^( 2) =       0.000494828656
  error estimate for blocks of size 2^( 3) =       0.000517088606
  error estimate for blocks of size 2^( 4) =       0.000532182198
  error estimate for blocks of size 2^( 5) =       0.000540472167
  error estimate for blocks of size 2^( 6) =       0.000543559207
  error estimate for blocks of size 2^( 7) =       0.000547278210

      target function =      -0.749576395758
              le_mean =     -22.661765754447
             les_mean =     514.000554250062
             stat err =       0.000540872945
             autocorr =       1.315017089739
   target nu stat err =       0.000540872945
   target dn stat err =       0.002631824103
      target stat err =       0.002310925581
              std dev =       0.667028757325
             le_variance =       0.444927363099

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660558
  error estimate for blocks of size 2^( 2) =       0.000494828656
  error estimate for blocks of size 2^( 3) =       0.000517088606
  error estimate for blocks of size 2^( 4) =       0.000532182198
  error estimate for blocks of size 2^( 5) =       0.000540472167
  error estimate for blocks of size 2^( 6) =       0.000543559207
  error estimate for blocks of size 2^( 7) =       0.000547278210

      target function =      -0.749576395758
              le_mean =     -22.661765754447
             les_mean =     514.000554250062
             stat err =       0.000540872945
             autocorr =       1.315017089739
   target nu stat err =       0.000540872945
   target dn stat err =       0.002631824103
      target stat err =       0.002310925581
              std dev =       0.667028757325
             le_variance =       0.444927363099

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445001829186
                                         uncertainty =       0.002318712416

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660558
  error estimate for blocks of size 2^( 2) =       0.000494828656
  error estimate for blocks of size 2^( 3) =       0.000517088606
  error estimate for blocks of size 2^( 4) =       0.000532182198
  error estimate for blocks of size 2^( 5) =       0.000540472167
  error estimate for blocks of size 2^( 6) =       0.000543559207
  error estimate for blocks of size 2^( 7) =       0.000547278210

      target function =      -0.749576395758
              le_mean =     -22.661765754447
             les_mean =     514.000554250062
             stat err =       0.000540872945
             autocorr =       1.315017089739
   target nu stat err =       0.000540872945
   target dn stat err =       0.002631824103
      target stat err =       0.002310925581
              std dev =       0.667028757325
             le_variance =       0.444927363099


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.749576395758        initial  <--
     6.2500e+18     6.2500e+19             1.9476e-23        -0.749576395758
     2.5000e+19     2.5000e+20             4.8690e-24        -0.749576395758
     1.0000e+20     1.0000e+21             2.0005e-24        -0.749576395758

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9173
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2101e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s024 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s024 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=24  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2685e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.6359
    reference variance = 0.439249
====================================================
  Execution time = 4.4509e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s024
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5496e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5113e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455074720270
                                         uncertainty =       0.007402933789

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455074720270
                                         uncertainty =       0.007402933789

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476947339
  error estimate for blocks of size 2^( 2) =       0.000500410829
  error estimate for blocks of size 2^( 3) =       0.000521603987
  error estimate for blocks of size 2^( 4) =       0.000537867433
  error estimate for blocks of size 2^( 5) =       0.000547645491
  error estimate for blocks of size 2^( 6) =       0.000552140528
  error estimate for blocks of size 2^( 7) =       0.000554710350

      target function =      -0.741128137218
              le_mean =     -22.662006921483
             les_mean =     514.021515009645
             stat err =       0.000548090951
             autocorr =       1.320579051462
   target nu stat err =       0.000548090951
   target dn stat err =       0.007440868948
      target stat err =       0.006192810208
              std dev =       0.674505394914
             le_variance =       0.454957527768


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266200692148e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+19, overlap shift 6.2500e+20 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+20, overlap shift 2.5000e+21 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+21, overlap shift 1.0000e+22 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741179432543       residual = 1.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.169361 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9629e+01
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.5964
    reference variance = 0.432036
====================================================
  Execution time = 4.3603e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s024
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5453e-01
  Total weights = 2.0000e+06
  Execution time = 3.6159e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476723059
  error estimate for blocks of size 2^( 2) =       0.000500024278
  error estimate for blocks of size 2^( 3) =       0.000521981954
  error estimate for blocks of size 2^( 4) =       0.000537631988
  error estimate for blocks of size 2^( 5) =       0.000547863242
  error estimate for blocks of size 2^( 6) =       0.000551842635
  error estimate for blocks of size 2^( 7) =       0.000556109099

      target function =      -0.741498950117
              le_mean =     -22.661767564798
             les_mean =     514.010238683535
             stat err =       0.000548361741
             autocorr =       1.323128350002
   target nu stat err =       0.000548361741
   target dn stat err =       0.006582265878
      target stat err =       0.005489081698
              std dev =       0.674188215446
             le_variance =       0.454529749847

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476723059
  error estimate for blocks of size 2^( 2) =       0.000500024278
  error estimate for blocks of size 2^( 3) =       0.000521981954
  error estimate for blocks of size 2^( 4) =       0.000537631988
  error estimate for blocks of size 2^( 5) =       0.000547863242
  error estimate for blocks of size 2^( 6) =       0.000551842635
  error estimate for blocks of size 2^( 7) =       0.000556109099

      target function =      -0.741498950117
              le_mean =     -22.661767564798
             les_mean =     514.010238683535
             stat err =       0.000548361741
             autocorr =       1.323128350002
   target nu stat err =       0.000548361741
   target dn stat err =       0.006582265878
      target stat err =       0.005489081698
              std dev =       0.674188215446
             le_variance =       0.454529749847

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476723059
  error estimate for blocks of size 2^( 2) =       0.000500024278
  error estimate for blocks of size 2^( 3) =       0.000521981954
  error estimate for blocks of size 2^( 4) =       0.000537631988
  error estimate for blocks of size 2^( 5) =       0.000547863242
  error estimate for blocks of size 2^( 6) =       0.000551842635
  error estimate for blocks of size 2^( 7) =       0.000556109099

      target function =      -0.741498950117
              le_mean =     -22.661767564798
             les_mean =     514.010238683535
             stat err =       0.000548361741
             autocorr =       1.323128350002
   target nu stat err =       0.000548361741
   target dn stat err =       0.006582265878
      target stat err =       0.005489081698
              std dev =       0.674188215446
             le_variance =       0.454529749847

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454631090534
                                         uncertainty =       0.006445895923

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476723059
  error estimate for blocks of size 2^( 2) =       0.000500024278
  error estimate for blocks of size 2^( 3) =       0.000521981954
  error estimate for blocks of size 2^( 4) =       0.000537631988
  error estimate for blocks of size 2^( 5) =       0.000547863242
  error estimate for blocks of size 2^( 6) =       0.000551842635
  error estimate for blocks of size 2^( 7) =       0.000556109099

      target function =      -0.741498950117
              le_mean =     -22.661767564798
             les_mean =     514.010238683535
             stat err =       0.000548361741
             autocorr =       1.323128350002
   target nu stat err =       0.000548361741
   target dn stat err =       0.006582265878
      target stat err =       0.005489081698
              std dev =       0.674188215446
             le_variance =       0.454529749847


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.741498950117        initial  <--
     6.2500e+19     6.2500e+20             0.0000e+00        -0.741498950117
     2.5000e+20     2.5000e+21             0.0000e+00        -0.741498950117
     1.0000e+21     1.0000e+22             0.0000e+00        -0.741498950117

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7803
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2142e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s025 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s025 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=25  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2682e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.669
    reference variance = 0.414389
====================================================
  Execution time = 4.6172e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s025
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5776e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5168e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457662132265
                                         uncertainty =       0.004611159181

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457662132265
                                         uncertainty =       0.004611159181

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478413884
  error estimate for blocks of size 2^( 2) =       0.000501943481
  error estimate for blocks of size 2^( 3) =       0.000524066932
  error estimate for blocks of size 2^( 4) =       0.000539613037
  error estimate for blocks of size 2^( 5) =       0.000547792286
  error estimate for blocks of size 2^( 6) =       0.000553159485
  error estimate for blocks of size 2^( 7) =       0.000555624304

      target function =      -0.738839604146
              le_mean =     -22.662247759326
             les_mean =     514.035232965323
             stat err =       0.000549047278
             autocorr =       1.317079336096
   target nu stat err =       0.000549047278
   target dn stat err =       0.004818113917
      target stat err =       0.004013889863
              std dev =       0.676579403415
             le_variance =       0.457759689126


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266224775933e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+20, overlap shift 6.2500e+21 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+21, overlap shift 2.5000e+22 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+22, overlap shift 1.0000e+23 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738860414636       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.170512 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1347e+01
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.7201
    reference variance = 0.399699
====================================================
  Execution time = 4.3862e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s025
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5782e-01
  Total weights = 2.0000e+06
  Execution time = 3.6080e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478447328
  error estimate for blocks of size 2^( 2) =       0.000502412726
  error estimate for blocks of size 2^( 3) =       0.000524484738
  error estimate for blocks of size 2^( 4) =       0.000540530933
  error estimate for blocks of size 2^( 5) =       0.000551597411
  error estimate for blocks of size 2^( 6) =       0.000555222339
  error estimate for blocks of size 2^( 7) =       0.000556152876

      target function =      -0.738771901060
              le_mean =     -22.661889332648
             les_mean =     514.019051587352
             stat err =       0.000550875890
             autocorr =       1.325681705333
   target nu stat err =       0.000550875890
   target dn stat err =       0.006941092707
      target stat err =       0.005743835787
              std dev =       0.676626699952
             le_variance =       0.457823691088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478447328
  error estimate for blocks of size 2^( 2) =       0.000502412726
  error estimate for blocks of size 2^( 3) =       0.000524484738
  error estimate for blocks of size 2^( 4) =       0.000540530933
  error estimate for blocks of size 2^( 5) =       0.000551597411
  error estimate for blocks of size 2^( 6) =       0.000555222339
  error estimate for blocks of size 2^( 7) =       0.000556152876

      target function =      -0.738771901060
              le_mean =     -22.661889332648
             les_mean =     514.019051587352
             stat err =       0.000550875890
             autocorr =       1.325681705333
   target nu stat err =       0.000550875890
   target dn stat err =       0.006941092707
      target stat err =       0.005743835787
              std dev =       0.676626699952
             le_variance =       0.457823691088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478447328
  error estimate for blocks of size 2^( 2) =       0.000502412726
  error estimate for blocks of size 2^( 3) =       0.000524484738
  error estimate for blocks of size 2^( 4) =       0.000540530933
  error estimate for blocks of size 2^( 5) =       0.000551597411
  error estimate for blocks of size 2^( 6) =       0.000555222339
  error estimate for blocks of size 2^( 7) =       0.000556152876

      target function =      -0.738771901060
              le_mean =     -22.661889332648
             les_mean =     514.019051587352
             stat err =       0.000550875890
             autocorr =       1.325681705333
   target nu stat err =       0.000550875890
   target dn stat err =       0.006941092707
      target stat err =       0.005743835787
              std dev =       0.676626699952
             le_variance =       0.457823691088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457849829452
                                         uncertainty =       0.006741303517

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478447328
  error estimate for blocks of size 2^( 2) =       0.000502412726
  error estimate for blocks of size 2^( 3) =       0.000524484738
  error estimate for blocks of size 2^( 4) =       0.000540530933
  error estimate for blocks of size 2^( 5) =       0.000551597411
  error estimate for blocks of size 2^( 6) =       0.000555222339
  error estimate for blocks of size 2^( 7) =       0.000556152876

      target function =      -0.738771901060
              le_mean =     -22.661889332648
             les_mean =     514.019051587352
             stat err =       0.000550875890
             autocorr =       1.325681705333
   target nu stat err =       0.000550875890
   target dn stat err =       0.006941092707
      target stat err =       0.005743835787
              std dev =       0.676626699952
             le_variance =       0.457823691088


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.738771901060        initial  <--
     6.2500e+20     6.2500e+21             0.0000e+00        -0.738771901060
     2.5000e+21     2.5000e+22             0.0000e+00        -0.738771901060
     1.0000e+22     1.0000e+23             0.0000e+00        -0.738771901060

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.0171
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2337e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s026 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s026 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=26  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2682e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.654
    reference variance = 0.311656
====================================================
  Execution time = 4.4762e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s026
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5481e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5074e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454858636260
                                         uncertainty =       0.006380151469

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454858636260
                                         uncertainty =       0.006380151469

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476870821
  error estimate for blocks of size 2^( 2) =       0.000500382452
  error estimate for blocks of size 2^( 3) =       0.000522133256
  error estimate for blocks of size 2^( 4) =       0.000538145372
  error estimate for blocks of size 2^( 5) =       0.000546832730
  error estimate for blocks of size 2^( 6) =       0.000550307103
  error estimate for blocks of size 2^( 7) =       0.000551993140

      target function =      -0.741264109918
              le_mean =     -22.662067966895
             les_mean =     514.024135867993
             stat err =       0.000546819586
             autocorr =       1.314881531748
   target nu stat err =       0.000546819586
   target dn stat err =       0.006163676558
      target stat err =       0.005143368653
              std dev =       0.674397182093
             le_variance =       0.454811559215


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266206796690e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+21, overlap shift 6.2500e+22 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741299211509       residual = 1.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741299211509       residual = 7.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741299211509       residual = 8.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741299211509       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.741299629211       residual = 5.89e+02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.741303991980       residual = 9.40e+03           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+21 is 1.776248e-26

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+22, overlap shift 2.5000e+23 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741299211509       residual = 1.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741299211509       residual = 7.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741299211509       residual = 1.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+22 is 1.550598e-27

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+23, overlap shift 1.0000e+24 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741299211509       residual = 1.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741299211509       residual = 7.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741299211509       residual = 8.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.741299152374       residual = 3.29e+06           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+23 is 3.876494e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.172345 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9843e+01
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.6948
    reference variance = 0.343672
====================================================
  Execution time = 4.4209e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s026
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5207e-01
  Total weights = 2.0000e+06
  Execution time = 3.5931e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475433102
  error estimate for blocks of size 2^( 2) =       0.000499382659
  error estimate for blocks of size 2^( 3) =       0.000521186154
  error estimate for blocks of size 2^( 4) =       0.000536607179
  error estimate for blocks of size 2^( 5) =       0.000545165781
  error estimate for blocks of size 2^( 6) =       0.000550922968
  error estimate for blocks of size 2^( 7) =       0.000554404510

      target function =      -0.743554186934
              le_mean =     -22.662011360339
             les_mean =     514.018831938925
             stat err =       0.000546775109
             autocorr =       1.322630824283
   target nu stat err =       0.000546775109
   target dn stat err =       0.004888881881
      target stat err =       0.004121178736
              std dev =       0.672363940763
             le_variance =       0.452073268839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475433102
  error estimate for blocks of size 2^( 2) =       0.000499382659
  error estimate for blocks of size 2^( 3) =       0.000521186154
  error estimate for blocks of size 2^( 4) =       0.000536607179
  error estimate for blocks of size 2^( 5) =       0.000545165781
  error estimate for blocks of size 2^( 6) =       0.000550922968
  error estimate for blocks of size 2^( 7) =       0.000554404510

      target function =      -0.743554186934
              le_mean =     -22.662011360339
             les_mean =     514.018831938925
             stat err =       0.000546775109
             autocorr =       1.322630824283
   target nu stat err =       0.000546775109
   target dn stat err =       0.004888881881
      target stat err =       0.004121178736
              std dev =       0.672363940763
             le_variance =       0.452073268839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475433102
  error estimate for blocks of size 2^( 2) =       0.000499382659
  error estimate for blocks of size 2^( 3) =       0.000521186154
  error estimate for blocks of size 2^( 4) =       0.000536607179
  error estimate for blocks of size 2^( 5) =       0.000545165781
  error estimate for blocks of size 2^( 6) =       0.000550922968
  error estimate for blocks of size 2^( 7) =       0.000554404510

      target function =      -0.743554186934
              le_mean =     -22.662011360339
             les_mean =     514.018831938925
             stat err =       0.000546775109
             autocorr =       1.322630824283
   target nu stat err =       0.000546775109
   target dn stat err =       0.004888881881
      target stat err =       0.004121178736
              std dev =       0.672363940763
             le_variance =       0.452073268839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452177432909
                                         uncertainty =       0.004729235713

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475433102
  error estimate for blocks of size 2^( 2) =       0.000499382659
  error estimate for blocks of size 2^( 3) =       0.000521186154
  error estimate for blocks of size 2^( 4) =       0.000536607179
  error estimate for blocks of size 2^( 5) =       0.000545165781
  error estimate for blocks of size 2^( 6) =       0.000550922968
  error estimate for blocks of size 2^( 7) =       0.000554404510

      target function =      -0.743554186934
              le_mean =     -22.662011360339
             les_mean =     514.018831938925
             stat err =       0.000546775109
             autocorr =       1.322630824283
   target nu stat err =       0.000546775109
   target dn stat err =       0.004888881881
      target stat err =       0.004121178736
              std dev =       0.672363940763
             le_variance =       0.452073268839


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.743554186934        initial  <--
     6.2500e+21     6.2500e+22             1.7762e-26        -0.743554186934
     2.5000e+22     2.5000e+23             1.5506e-27        -0.743554186934
     1.0000e+23     1.0000e+24             3.8765e-28        -0.743554186934

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.2239
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2207e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s027 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s027 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=27  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2682e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.647
    reference variance = 0.299956
====================================================
  Execution time = 4.4389e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s027
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4677e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5205e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446844046302
                                         uncertainty =       0.003024278400

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446844046302
                                         uncertainty =       0.003024278400

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472638847
  error estimate for blocks of size 2^( 2) =       0.000496479685
  error estimate for blocks of size 2^( 3) =       0.000518239150
  error estimate for blocks of size 2^( 4) =       0.000534213675
  error estimate for blocks of size 2^( 5) =       0.000543624457
  error estimate for blocks of size 2^( 6) =       0.000547757579
  error estimate for blocks of size 2^( 7) =       0.000550905534

      target function =      -0.748009210051
              le_mean =     -22.662114369204
             les_mean =     514.018202419024
             stat err =       0.000544125311
             autocorr =       1.325375776284
   target nu stat err =       0.000544125311
   target dn stat err =       0.003153871342
      target stat err =       0.002730872969
              std dev =       0.668412267655
             le_variance =       0.446774959552


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266211436920e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+22, overlap shift 6.2500e+23 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+23, overlap shift 2.5000e+24 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+24, overlap shift 1.0000e+25 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748018213013       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.173514 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9604e+01
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.669
    reference variance = 0.362515
====================================================
  Execution time = 4.5529e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s027
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5121e-01
  Total weights = 2.0000e+06
  Execution time = 3.6091e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474978469
  error estimate for blocks of size 2^( 2) =       0.000498800238
  error estimate for blocks of size 2^( 3) =       0.000520447567
  error estimate for blocks of size 2^( 4) =       0.000536474422
  error estimate for blocks of size 2^( 5) =       0.000545643025
  error estimate for blocks of size 2^( 6) =       0.000550743099
  error estimate for blocks of size 2^( 7) =       0.000552166663

      target function =      -0.744298964324
              le_mean =     -22.660999527431
             les_mean =     513.972108448796
             stat err =       0.000546256802
             autocorr =       1.322652840933
   target nu stat err =       0.000546256802
   target dn stat err =       0.003585968840
      target stat err =       0.003052617867
              std dev =       0.671720992813
             le_variance =       0.451209092186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474978469
  error estimate for blocks of size 2^( 2) =       0.000498800238
  error estimate for blocks of size 2^( 3) =       0.000520447567
  error estimate for blocks of size 2^( 4) =       0.000536474422
  error estimate for blocks of size 2^( 5) =       0.000545643025
  error estimate for blocks of size 2^( 6) =       0.000550743099
  error estimate for blocks of size 2^( 7) =       0.000552166663

      target function =      -0.744298964324
              le_mean =     -22.660999527431
             les_mean =     513.972108448796
             stat err =       0.000546256802
             autocorr =       1.322652840933
   target nu stat err =       0.000546256802
   target dn stat err =       0.003585968840
      target stat err =       0.003052617867
              std dev =       0.671720992813
             le_variance =       0.451209092186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474978469
  error estimate for blocks of size 2^( 2) =       0.000498800238
  error estimate for blocks of size 2^( 3) =       0.000520447567
  error estimate for blocks of size 2^( 4) =       0.000536474422
  error estimate for blocks of size 2^( 5) =       0.000545643025
  error estimate for blocks of size 2^( 6) =       0.000550743099
  error estimate for blocks of size 2^( 7) =       0.000552166663

      target function =      -0.744298964324
              le_mean =     -22.660999527431
             les_mean =     513.972108448796
             stat err =       0.000546256802
             autocorr =       1.322652840933
   target nu stat err =       0.000546256802
   target dn stat err =       0.003585968840
      target stat err =       0.003052617867
              std dev =       0.671720992813
             le_variance =       0.451209092186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451165469208
                                         uncertainty =       0.003504778086

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474978469
  error estimate for blocks of size 2^( 2) =       0.000498800238
  error estimate for blocks of size 2^( 3) =       0.000520447567
  error estimate for blocks of size 2^( 4) =       0.000536474422
  error estimate for blocks of size 2^( 5) =       0.000545643025
  error estimate for blocks of size 2^( 6) =       0.000550743099
  error estimate for blocks of size 2^( 7) =       0.000552166663

      target function =      -0.744298964324
              le_mean =     -22.660999527431
             les_mean =     513.972108448796
             stat err =       0.000546256802
             autocorr =       1.322652840933
   target nu stat err =       0.000546256802
   target dn stat err =       0.003585968840
      target stat err =       0.003052617867
              std dev =       0.671720992813
             le_variance =       0.451209092186


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744298964324        initial  <--
     6.2500e+22     6.2500e+23             0.0000e+00        -0.744298964324
     2.5000e+23     2.5000e+24             0.0000e+00        -0.744298964324
     1.0000e+24     1.0000e+25             0.0000e+00        -0.744298964324

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.6749
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2329e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s028 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s028 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=28  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2681e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.6981
    reference variance = 0.405679
====================================================
  Execution time = 4.4427e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s028
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5305e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5043e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.453110082843
                                         uncertainty =       0.003309810248

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.453110082843
                                         uncertainty =       0.003309810248

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475947140
  error estimate for blocks of size 2^( 2) =       0.000499643071
  error estimate for blocks of size 2^( 3) =       0.000521357659
  error estimate for blocks of size 2^( 4) =       0.000535882434
  error estimate for blocks of size 2^( 5) =       0.000543718477
  error estimate for blocks of size 2^( 6) =       0.000548296022
  error estimate for blocks of size 2^( 7) =       0.000550110090

      target function =      -0.742751315541
              le_mean =     -22.662000111546
             les_mean =     514.019300189529
             stat err =       0.000544501756
             autocorr =       1.308823625698
   target nu stat err =       0.000544501756
   target dn stat err =       0.003416313977
      target stat err =       0.002906261868
              std dev =       0.673090900511
             le_variance =       0.453051360350


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266200011155e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+23, overlap shift 6.2500e+24 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+24, overlap shift 2.5000e+25 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+25, overlap shift 1.0000e+26 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742761691880       residual = 2.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+25 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.174684 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9477e+01
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.7267
    reference variance = 0.337351
====================================================
  Execution time = 4.3694e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s028
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5184e-01
  Total weights = 2.0000e+06
  Execution time = 3.6155e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475310452
  error estimate for blocks of size 2^( 2) =       0.000498779603
  error estimate for blocks of size 2^( 3) =       0.000519824761
  error estimate for blocks of size 2^( 4) =       0.000535503451
  error estimate for blocks of size 2^( 5) =       0.000545259220
  error estimate for blocks of size 2^( 6) =       0.000550242958
  error estimate for blocks of size 2^( 7) =       0.000551352051

      target function =      -0.743755034206
              le_mean =     -22.662275318006
             les_mean =     514.030562414252
             stat err =       0.000545589420
             autocorr =       1.317580477169
   target nu stat err =       0.000545589420
   target dn stat err =       0.003575679447
      target stat err =       0.003045551712
              std dev =       0.672190487199
             le_variance =       0.451840051081

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475310452
  error estimate for blocks of size 2^( 2) =       0.000498779603
  error estimate for blocks of size 2^( 3) =       0.000519824761
  error estimate for blocks of size 2^( 4) =       0.000535503451
  error estimate for blocks of size 2^( 5) =       0.000545259220
  error estimate for blocks of size 2^( 6) =       0.000550242958
  error estimate for blocks of size 2^( 7) =       0.000551352051

      target function =      -0.743755034206
              le_mean =     -22.662275318006
             les_mean =     514.030562414252
             stat err =       0.000545589420
             autocorr =       1.317580477169
   target nu stat err =       0.000545589420
   target dn stat err =       0.003575679447
      target stat err =       0.003045551712
              std dev =       0.672190487199
             le_variance =       0.451840051081

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475310452
  error estimate for blocks of size 2^( 2) =       0.000498779603
  error estimate for blocks of size 2^( 3) =       0.000519824761
  error estimate for blocks of size 2^( 4) =       0.000535503451
  error estimate for blocks of size 2^( 5) =       0.000545259220
  error estimate for blocks of size 2^( 6) =       0.000550242958
  error estimate for blocks of size 2^( 7) =       0.000551352051

      target function =      -0.743755034206
              le_mean =     -22.662275318006
             les_mean =     514.030562414252
             stat err =       0.000545589420
             autocorr =       1.317580477169
   target nu stat err =       0.000545589420
   target dn stat err =       0.003575679447
      target stat err =       0.003045551712
              std dev =       0.672190487199
             le_variance =       0.451840051081

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451956443374
                                         uncertainty =       0.003198266692

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475310452
  error estimate for blocks of size 2^( 2) =       0.000498779603
  error estimate for blocks of size 2^( 3) =       0.000519824761
  error estimate for blocks of size 2^( 4) =       0.000535503451
  error estimate for blocks of size 2^( 5) =       0.000545259220
  error estimate for blocks of size 2^( 6) =       0.000550242958
  error estimate for blocks of size 2^( 7) =       0.000551352051

      target function =      -0.743755034206
              le_mean =     -22.662275318006
             les_mean =     514.030562414252
             stat err =       0.000545589420
             autocorr =       1.317580477169
   target nu stat err =       0.000545589420
   target dn stat err =       0.003575679447
      target stat err =       0.003045551712
              std dev =       0.672190487199
             le_variance =       0.451840051081


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.743755034206        initial  <--
     6.2500e+23     6.2500e+24             0.0000e+00        -0.743755034206
     2.5000e+24     2.5000e+25             0.0000e+00        -0.743755034206
     1.0000e+25     1.0000e+26             0.0000e+00        -0.743755034206

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8524
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2134e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s029 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s029 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=29  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2682e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.6623
    reference variance = 0.292388
====================================================
  Execution time = 4.4120e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s029
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5372e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5212e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.453811547563
                                         uncertainty =       0.004648406903

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.453811547563
                                         uncertainty =       0.004648406903

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476298862
  error estimate for blocks of size 2^( 2) =       0.000500350605
  error estimate for blocks of size 2^( 3) =       0.000521981761
  error estimate for blocks of size 2^( 4) =       0.000537975037
  error estimate for blocks of size 2^( 5) =       0.000547389423
  error estimate for blocks of size 2^( 6) =       0.000551569274
  error estimate for blocks of size 2^( 7) =       0.000554998995

      target function =      -0.742173898740
              le_mean =     -22.662538254275
             les_mean =     514.044361111870
             stat err =       0.000547983182
             autocorr =       1.323656730338
   target nu stat err =       0.000547983182
   target dn stat err =       0.004884419908
      target stat err =       0.004105859375
              std dev =       0.673588310663
             le_variance =       0.453721212262


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266253825427e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+24, overlap shift 6.2500e+25 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+25, overlap shift 2.5000e+26 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+26, overlap shift 1.0000e+27 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742195399196       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.175862 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9339e+01
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.6732
    reference variance = 0.344477
====================================================
  Execution time = 4.3217e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s029
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4955e-01
  Total weights = 2.0000e+06
  Execution time = 3.6163e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474102476
  error estimate for blocks of size 2^( 2) =       0.000497645514
  error estimate for blocks of size 2^( 3) =       0.000519580426
  error estimate for blocks of size 2^( 4) =       0.000535373333
  error estimate for blocks of size 2^( 5) =       0.000544085787
  error estimate for blocks of size 2^( 6) =       0.000549203731
  error estimate for blocks of size 2^( 7) =       0.000554513005

      target function =      -0.745680491569
              le_mean =     -22.662000667828
             les_mean =     514.015820358814
             stat err =       0.000545793964
             autocorr =       1.325296376137
   target nu stat err =       0.000545793964
   target dn stat err =       0.003006020855
      target stat err =       0.002593691090
              std dev =       0.670482151105
             le_variance =       0.449546314951

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474102476
  error estimate for blocks of size 2^( 2) =       0.000497645514
  error estimate for blocks of size 2^( 3) =       0.000519580426
  error estimate for blocks of size 2^( 4) =       0.000535373333
  error estimate for blocks of size 2^( 5) =       0.000544085787
  error estimate for blocks of size 2^( 6) =       0.000549203731
  error estimate for blocks of size 2^( 7) =       0.000554513005

      target function =      -0.745680491569
              le_mean =     -22.662000667828
             les_mean =     514.015820358814
             stat err =       0.000545793964
             autocorr =       1.325296376137
   target nu stat err =       0.000545793964
   target dn stat err =       0.003006020855
      target stat err =       0.002593691090
              std dev =       0.670482151105
             le_variance =       0.449546314951

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474102476
  error estimate for blocks of size 2^( 2) =       0.000497645514
  error estimate for blocks of size 2^( 3) =       0.000519580426
  error estimate for blocks of size 2^( 4) =       0.000535373333
  error estimate for blocks of size 2^( 5) =       0.000544085787
  error estimate for blocks of size 2^( 6) =       0.000549203731
  error estimate for blocks of size 2^( 7) =       0.000554513005

      target function =      -0.745680491569
              le_mean =     -22.662000667828
             les_mean =     514.015820358814
             stat err =       0.000545793964
             autocorr =       1.325296376137
   target nu stat err =       0.000545793964
   target dn stat err =       0.003006020855
      target stat err =       0.002593691090
              std dev =       0.670482151105
             le_variance =       0.449546314951

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449621909049
                                         uncertainty =       0.002992126602

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474102476
  error estimate for blocks of size 2^( 2) =       0.000497645514
  error estimate for blocks of size 2^( 3) =       0.000519580426
  error estimate for blocks of size 2^( 4) =       0.000535373333
  error estimate for blocks of size 2^( 5) =       0.000544085787
  error estimate for blocks of size 2^( 6) =       0.000549203731
  error estimate for blocks of size 2^( 7) =       0.000554513005

      target function =      -0.745680491569
              le_mean =     -22.662000667828
             les_mean =     514.015820358814
             stat err =       0.000545793964
             autocorr =       1.325296376137
   target nu stat err =       0.000545793964
   target dn stat err =       0.003006020855
      target stat err =       0.002593691090
              std dev =       0.670482151105
             le_variance =       0.449546314951


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745680491569        initial  <--
     6.2500e+24     6.2500e+25             0.0000e+00        -0.745680491569
     2.5000e+25     2.5000e+26             0.0000e+00        -0.745680491569
     1.0000e+26     1.0000e+27             0.0000e+00        -0.745680491569

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.3481
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2069e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s030 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s030 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=30  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2682e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.5927
    reference variance = 0.305913
====================================================
  Execution time = 4.5362e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s030
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4975e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5100e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449741015708
                                         uncertainty =       0.003191224300

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449741015708
                                         uncertainty =       0.003191224300

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474209379
  error estimate for blocks of size 2^( 2) =       0.000498162286
  error estimate for blocks of size 2^( 3) =       0.000520657193
  error estimate for blocks of size 2^( 4) =       0.000537205215
  error estimate for blocks of size 2^( 5) =       0.000545952079
  error estimate for blocks of size 2^( 6) =       0.000551191045
  error estimate for blocks of size 2^( 7) =       0.000552288733

      target function =      -0.745509650401
              le_mean =     -22.661778595440
             les_mean =     514.005957954895
             stat err =       0.000546659268
             autocorr =       1.328902602161
   target nu stat err =       0.000546659268
   target dn stat err =       0.003601032404
      target stat err =       0.003078407355
              std dev =       0.670633335739
             le_variance =       0.449749071005


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266177859544e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+25, overlap shift 6.2500e+26 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745521366222       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745521366222       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745521366222       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745521366222       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+25 is 1.296660e-30

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+26, overlap shift 2.5000e+27 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745521366222       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745521366222       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745521366222       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745521366222       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745521366596       residual = 1.89e+03           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+26 is 3.241651e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+27, overlap shift 1.0000e+28 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745521366222       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745521366222       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745521366222       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745521366222       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745521366221       residual = 1.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.750000000000       residual = 4.41e+08           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+27 is 8.104128e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.177901 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0470e+01
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.6685
    reference variance = 0.345091
====================================================
  Execution time = 4.3638e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s030
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5213e-01
  Total weights = 2.0000e+06
  Execution time = 3.5937e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475460835
  error estimate for blocks of size 2^( 2) =       0.000499292943
  error estimate for blocks of size 2^( 3) =       0.000521050128
  error estimate for blocks of size 2^( 4) =       0.000536404472
  error estimate for blocks of size 2^( 5) =       0.000545928412
  error estimate for blocks of size 2^( 6) =       0.000551170303
  error estimate for blocks of size 2^( 7) =       0.000554015984

      target function =      -0.743507213605
              le_mean =     -22.662149337488
             les_mean =     514.025138379672
             stat err =       0.000546879793
             autocorr =       1.322982974803
   target nu stat err =       0.000546879793
   target dn stat err =       0.004945899156
      target stat err =       0.004168553588
              std dev =       0.672403161150
             le_variance =       0.452126011124

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475460835
  error estimate for blocks of size 2^( 2) =       0.000499292943
  error estimate for blocks of size 2^( 3) =       0.000521050128
  error estimate for blocks of size 2^( 4) =       0.000536404472
  error estimate for blocks of size 2^( 5) =       0.000545928412
  error estimate for blocks of size 2^( 6) =       0.000551170303
  error estimate for blocks of size 2^( 7) =       0.000554015984

      target function =      -0.743507213605
              le_mean =     -22.662149337488
             les_mean =     514.025138379672
             stat err =       0.000546879793
             autocorr =       1.322982974803
   target nu stat err =       0.000546879793
   target dn stat err =       0.004945899156
      target stat err =       0.004168553588
              std dev =       0.672403161150
             le_variance =       0.452126011124

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475460835
  error estimate for blocks of size 2^( 2) =       0.000499292943
  error estimate for blocks of size 2^( 3) =       0.000521050128
  error estimate for blocks of size 2^( 4) =       0.000536404472
  error estimate for blocks of size 2^( 5) =       0.000545928412
  error estimate for blocks of size 2^( 6) =       0.000551170303
  error estimate for blocks of size 2^( 7) =       0.000554015984

      target function =      -0.743507213605
              le_mean =     -22.662149337488
             les_mean =     514.025138379672
             stat err =       0.000546879793
             autocorr =       1.322982974803
   target nu stat err =       0.000546879793
   target dn stat err =       0.004945899156
      target stat err =       0.004168553588
              std dev =       0.672403161150
             le_variance =       0.452126011124

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452194511886
                                         uncertainty =       0.004858547766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475460835
  error estimate for blocks of size 2^( 2) =       0.000499292943
  error estimate for blocks of size 2^( 3) =       0.000521050128
  error estimate for blocks of size 2^( 4) =       0.000536404472
  error estimate for blocks of size 2^( 5) =       0.000545928412
  error estimate for blocks of size 2^( 6) =       0.000551170303
  error estimate for blocks of size 2^( 7) =       0.000554015984

      target function =      -0.743507213605
              le_mean =     -22.662149337488
             les_mean =     514.025138379672
             stat err =       0.000546879793
             autocorr =       1.322982974803
   target nu stat err =       0.000546879793
   target dn stat err =       0.004945899156
      target stat err =       0.004168553588
              std dev =       0.672403161150
             le_variance =       0.452126011124


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.743507213605        initial  <--
     6.2500e+25     6.2500e+26             1.2967e-30        -0.743507213605
     2.5000e+26     2.5000e+27             3.2417e-31        -0.743507213605
     1.0000e+27     1.0000e+28             8.1041e-32        -0.743507213605

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6952
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2217e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s031 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s031 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=31  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2680e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.627
    reference variance = 0.312411
====================================================
  Execution time = 4.3867e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s031
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5466e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5101e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454764956165
                                         uncertainty =       0.003734293888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454764956165
                                         uncertainty =       0.003734293888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476792967
  error estimate for blocks of size 2^( 2) =       0.000500885616
  error estimate for blocks of size 2^( 3) =       0.000522534885
  error estimate for blocks of size 2^( 4) =       0.000537730037
  error estimate for blocks of size 2^( 5) =       0.000546451898
  error estimate for blocks of size 2^( 6) =       0.000551256635
  error estimate for blocks of size 2^( 7) =       0.000552923795

      target function =      -0.741404725338
              le_mean =     -22.662171800551
             les_mean =     514.028693556657
             stat err =       0.000547090591
             autocorr =       1.316615037873
   target nu stat err =       0.000547090591
   target dn stat err =       0.004171883469
      target stat err =       0.003512064247
              std dev =       0.674287080017
             le_variance =       0.454663066278


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266217180055e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+26, overlap shift 6.2500e+27 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+27, overlap shift 2.5000e+28 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+28, overlap shift 1.0000e+29 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741420338855       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.179051 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.8974e+01
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.6276
    reference variance = 0.460965
====================================================
  Execution time = 4.3659e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s031
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5746e-01
  Total weights = 2.0000e+06
  Execution time = 3.6098e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478255776
  error estimate for blocks of size 2^( 2) =       0.000502504315
  error estimate for blocks of size 2^( 3) =       0.000524663490
  error estimate for blocks of size 2^( 4) =       0.000540190567
  error estimate for blocks of size 2^( 5) =       0.000549769604
  error estimate for blocks of size 2^( 6) =       0.000554393731
  error estimate for blocks of size 2^( 7) =       0.000559233386

      target function =      -0.739069653004
              le_mean =     -22.661800398992
             les_mean =     514.014654270153
             stat err =       0.000550896822
             autocorr =       1.326844676566
   target nu stat err =       0.000550896822
   target dn stat err =       0.007416884555
      target stat err =       0.006137357868
              std dev =       0.676355805130
             le_variance =       0.457457175134

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478255776
  error estimate for blocks of size 2^( 2) =       0.000502504315
  error estimate for blocks of size 2^( 3) =       0.000524663490
  error estimate for blocks of size 2^( 4) =       0.000540190567
  error estimate for blocks of size 2^( 5) =       0.000549769604
  error estimate for blocks of size 2^( 6) =       0.000554393731
  error estimate for blocks of size 2^( 7) =       0.000559233386

      target function =      -0.739069653004
              le_mean =     -22.661800398992
             les_mean =     514.014654270153
             stat err =       0.000550896822
             autocorr =       1.326844676566
   target nu stat err =       0.000550896822
   target dn stat err =       0.007416884555
      target stat err =       0.006137357868
              std dev =       0.676355805130
             le_variance =       0.457457175134

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478255776
  error estimate for blocks of size 2^( 2) =       0.000502504315
  error estimate for blocks of size 2^( 3) =       0.000524663490
  error estimate for blocks of size 2^( 4) =       0.000540190567
  error estimate for blocks of size 2^( 5) =       0.000549769604
  error estimate for blocks of size 2^( 6) =       0.000554393731
  error estimate for blocks of size 2^( 7) =       0.000559233386

      target function =      -0.739069653004
              le_mean =     -22.661800398992
             les_mean =     514.014654270153
             stat err =       0.000550896822
             autocorr =       1.326844676566
   target nu stat err =       0.000550896822
   target dn stat err =       0.007416884555
      target stat err =       0.006137357868
              std dev =       0.676355805130
             le_variance =       0.457457175134

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457548744538
                                         uncertainty =       0.007087457774

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478255776
  error estimate for blocks of size 2^( 2) =       0.000502504315
  error estimate for blocks of size 2^( 3) =       0.000524663490
  error estimate for blocks of size 2^( 4) =       0.000540190567
  error estimate for blocks of size 2^( 5) =       0.000549769604
  error estimate for blocks of size 2^( 6) =       0.000554393731
  error estimate for blocks of size 2^( 7) =       0.000559233386

      target function =      -0.739069653004
              le_mean =     -22.661800398992
             les_mean =     514.014654270153
             stat err =       0.000550896822
             autocorr =       1.326844676566
   target nu stat err =       0.000550896822
   target dn stat err =       0.007416884555
      target stat err =       0.006137357868
              std dev =       0.676355805130
             le_variance =       0.457457175134


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.739069653004        initial  <--
     6.2500e+26     6.2500e+27             0.0000e+00        -0.739069653004
     2.5000e+27     2.5000e+28             0.0000e+00        -0.739069653004
     1.0000e+28     1.0000e+29             0.0000e+00        -0.739069653004

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7847
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2076e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s032 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s032 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=32  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2679e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.6651
    reference variance = 0.369222
====================================================
  Execution time = 4.4140e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s032
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4493e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5004e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444961790141
                                         uncertainty =       0.002552138023

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444961790141
                                         uncertainty =       0.002552138023

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471663219
  error estimate for blocks of size 2^( 2) =       0.000495535544
  error estimate for blocks of size 2^( 3) =       0.000517660826
  error estimate for blocks of size 2^( 4) =       0.000533111517
  error estimate for blocks of size 2^( 5) =       0.000541058991
  error estimate for blocks of size 2^( 6) =       0.000545456586
  error estimate for blocks of size 2^( 7) =       0.000549970034

      target function =      -0.749566932159
              le_mean =     -22.662574784397
             les_mean =     514.037228020710
             stat err =       0.000542399282
             autocorr =       1.322434558762
   target nu stat err =       0.000542399282
   target dn stat err =       0.002573864839
      target stat err =       0.002266802977
              std dev =       0.667032521539
             le_variance =       0.444932384791


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266257478440e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+27, overlap shift 6.2500e+28 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749572887652       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749572887652       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.749572887667       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+27 is 6.207491e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+28, overlap shift 2.5000e+29 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749572887652       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749572887652       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.749572887667       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+28 is 1.551873e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+29, overlap shift 1.0000e+30 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749572887652       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749572887652       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.749572887551       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+29 is 3.879682e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.180661 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9152e+01
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.6343
    reference variance = 0.377571
====================================================
  Execution time = 4.5327e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s032
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.6555e-01
  Total weights = 2.0000e+06
  Execution time = 3.6015e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000482465461
  error estimate for blocks of size 2^( 2) =       0.000506103074
  error estimate for blocks of size 2^( 3) =       0.000527193304
  error estimate for blocks of size 2^( 4) =       0.000541503093
  error estimate for blocks of size 2^( 5) =       0.000551448529
  error estimate for blocks of size 2^( 6) =       0.000555865724
  error estimate for blocks of size 2^( 7) =       0.000559737804

      target function =      -0.732336519461
              le_mean =     -22.661256939938
             les_mean =     513.998111707028
             stat err =       0.000552138787
             autocorr =       1.309676569593
   target nu stat err =       0.000552138787
   target dn stat err =       0.015008864153
      target stat err =       0.012141055888
              std dev =       0.682309198185
             le_variance =       0.465545841927

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000482465461
  error estimate for blocks of size 2^( 2) =       0.000506103074
  error estimate for blocks of size 2^( 3) =       0.000527193304
  error estimate for blocks of size 2^( 4) =       0.000541503093
  error estimate for blocks of size 2^( 5) =       0.000551448529
  error estimate for blocks of size 2^( 6) =       0.000555865724
  error estimate for blocks of size 2^( 7) =       0.000559737804

      target function =      -0.732336519461
              le_mean =     -22.661256939938
             les_mean =     513.998111707028
             stat err =       0.000552138787
             autocorr =       1.309676569593
   target nu stat err =       0.000552138787
   target dn stat err =       0.015008864153
      target stat err =       0.012141055888
              std dev =       0.682309198185
             le_variance =       0.465545841927

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000482465461
  error estimate for blocks of size 2^( 2) =       0.000506103074
  error estimate for blocks of size 2^( 3) =       0.000527193304
  error estimate for blocks of size 2^( 4) =       0.000541503093
  error estimate for blocks of size 2^( 5) =       0.000551448529
  error estimate for blocks of size 2^( 6) =       0.000555865724
  error estimate for blocks of size 2^( 7) =       0.000559737804

      target function =      -0.732336519461
              le_mean =     -22.661256939938
             les_mean =     513.998111707028
             stat err =       0.000552138787
             autocorr =       1.309676569593
   target nu stat err =       0.000552138787
   target dn stat err =       0.015008864153
      target stat err =       0.012141055888
              std dev =       0.682309198185
             le_variance =       0.465545841927

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.465514196574
                                         uncertainty =       0.014641836919

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000482465461
  error estimate for blocks of size 2^( 2) =       0.000506103074
  error estimate for blocks of size 2^( 3) =       0.000527193304
  error estimate for blocks of size 2^( 4) =       0.000541503093
  error estimate for blocks of size 2^( 5) =       0.000551448529
  error estimate for blocks of size 2^( 6) =       0.000555865724
  error estimate for blocks of size 2^( 7) =       0.000559737804

      target function =      -0.732336519461
              le_mean =     -22.661256939938
             les_mean =     513.998111707028
             stat err =       0.000552138787
             autocorr =       1.309676569593
   target nu stat err =       0.000552138787
   target dn stat err =       0.015008864153
      target stat err =       0.012141055888
              std dev =       0.682309198185
             le_variance =       0.465545841927


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.732336519461        initial  <--
     6.2500e+27     6.2500e+28             6.2075e-33        -0.732336519461
     2.5000e+28     2.5000e+29             1.5519e-33        -0.732336519461
     1.0000e+29     1.0000e+30             3.8797e-34        -0.732336519461

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4293
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2259e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s033 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s033 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=33  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.734
    reference variance = 0.402477
====================================================
  Execution time = 4.4396e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s033
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.8860e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5167e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.488662227589
                                         uncertainty =       0.039595019361

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.488662227589
                                         uncertainty =       0.039595019361

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000494266056
  error estimate for blocks of size 2^( 2) =       0.000516978002
  error estimate for blocks of size 2^( 3) =       0.000538211388
  error estimate for blocks of size 2^( 4) =       0.000553977760
  error estimate for blocks of size 2^( 5) =       0.000564344495
  error estimate for blocks of size 2^( 6) =       0.000567219227
  error estimate for blocks of size 2^( 7) =       0.000570660520

      target function =      -0.713027201639
              le_mean =     -22.661794809382
             les_mean =     514.045541607365
             stat err =       0.000564050501
             autocorr =       1.302310088993
   target nu stat err =       0.000564050501
   target dn stat err =       0.039948549859
      target stat err =       0.030673992319
              std dev =       0.698997760457
             le_variance =       0.488597869124


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266179480938e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+28, overlap shift 6.2500e+29 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+29, overlap shift 2.5000e+30 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+30, overlap shift 1.0000e+31 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714338327212       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.181824 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9570e+01
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.7134
    reference variance = 0.469699
====================================================
  Execution time = 4.4611e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s033
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4814e-01
  Total weights = 2.0000e+06
  Execution time = 3.6176e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473362629
  error estimate for blocks of size 2^( 2) =       0.000497459399
  error estimate for blocks of size 2^( 3) =       0.000519389186
  error estimate for blocks of size 2^( 4) =       0.000535074086
  error estimate for blocks of size 2^( 5) =       0.000545560528
  error estimate for blocks of size 2^( 6) =       0.000549014539
  error estimate for blocks of size 2^( 7) =       0.000547095732

      target function =      -0.746859402582
              le_mean =     -22.661969575825
             les_mean =     514.013009189258
             stat err =       0.000544186221
             autocorr =       1.321621653717
   target nu stat err =       0.000544186221
   target dn stat err =       0.002754744103
      target stat err =       0.002396267910
              std dev =       0.669435850318
             le_variance =       0.448144357691

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473362629
  error estimate for blocks of size 2^( 2) =       0.000497459399
  error estimate for blocks of size 2^( 3) =       0.000519389186
  error estimate for blocks of size 2^( 4) =       0.000535074086
  error estimate for blocks of size 2^( 5) =       0.000545560528
  error estimate for blocks of size 2^( 6) =       0.000549014539
  error estimate for blocks of size 2^( 7) =       0.000547095732

      target function =      -0.746859402582
              le_mean =     -22.661969575825
             les_mean =     514.013009189258
             stat err =       0.000544186221
             autocorr =       1.321621653717
   target nu stat err =       0.000544186221
   target dn stat err =       0.002754744103
      target stat err =       0.002396267910
              std dev =       0.669435850318
             le_variance =       0.448144357691

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473362629
  error estimate for blocks of size 2^( 2) =       0.000497459399
  error estimate for blocks of size 2^( 3) =       0.000519389186
  error estimate for blocks of size 2^( 4) =       0.000535074086
  error estimate for blocks of size 2^( 5) =       0.000545560528
  error estimate for blocks of size 2^( 6) =       0.000549014539
  error estimate for blocks of size 2^( 7) =       0.000547095732

      target function =      -0.746859402582
              le_mean =     -22.661969575825
             les_mean =     514.013009189258
             stat err =       0.000544186221
             autocorr =       1.321621653717
   target nu stat err =       0.000544186221
   target dn stat err =       0.002754744103
      target stat err =       0.002396267910
              std dev =       0.669435850318
             le_variance =       0.448144357691

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448164151561
                                         uncertainty =       0.002770457810

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473362629
  error estimate for blocks of size 2^( 2) =       0.000497459399
  error estimate for blocks of size 2^( 3) =       0.000519389186
  error estimate for blocks of size 2^( 4) =       0.000535074086
  error estimate for blocks of size 2^( 5) =       0.000545560528
  error estimate for blocks of size 2^( 6) =       0.000549014539
  error estimate for blocks of size 2^( 7) =       0.000547095732

      target function =      -0.746859402582
              le_mean =     -22.661969575825
             les_mean =     514.013009189258
             stat err =       0.000544186221
             autocorr =       1.321621653717
   target nu stat err =       0.000544186221
   target dn stat err =       0.002754744103
      target stat err =       0.002396267910
              std dev =       0.669435850318
             le_variance =       0.448144357691


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746859402582        initial  <--
     6.2500e+28     6.2500e+29             0.0000e+00        -0.746859402582
     2.5000e+29     2.5000e+30             0.0000e+00        -0.746859402582
     1.0000e+30     1.0000e+31             0.0000e+00        -0.746859402582

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.7781
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2235e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s034 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s034 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=34  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2679e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.6221
    reference variance = 0.702447
====================================================
  Execution time = 4.4173e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s034
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4589e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5052e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445959869689
                                         uncertainty =       0.004286571992

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445959869689
                                         uncertainty =       0.004286571992

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472172274
  error estimate for blocks of size 2^( 2) =       0.000495422911
  error estimate for blocks of size 2^( 3) =       0.000517167435
  error estimate for blocks of size 2^( 4) =       0.000533198707
  error estimate for blocks of size 2^( 5) =       0.000542700719
  error estimate for blocks of size 2^( 6) =       0.000548419410
  error estimate for blocks of size 2^( 7) =       0.000550760028

      target function =      -0.748749872938
              le_mean =     -22.661749908687
             les_mean =     514.000802014475
             stat err =       0.000543769716
             autocorr =       1.326261213756
   target nu stat err =       0.000543769716
   target dn stat err =       0.004106578455
      target stat err =       0.003523665910
              std dev =       0.667752434321
             le_variance =       0.445893313542


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266174990869e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+29, overlap shift 6.2500e+30 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+30, overlap shift 2.5000e+31 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+31, overlap shift 1.0000e+32 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748765559855       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.182986 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9232e+01
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.6783
    reference variance = 0.301242
====================================================
  Execution time = 4.3771e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s034
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5723e-01
  Total weights = 2.0000e+06
  Execution time = 3.5952e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478138393
  error estimate for blocks of size 2^( 2) =       0.000501396711
  error estimate for blocks of size 2^( 3) =       0.000522664092
  error estimate for blocks of size 2^( 4) =       0.000537817242
  error estimate for blocks of size 2^( 5) =       0.000545858288
  error estimate for blocks of size 2^( 6) =       0.000550998987
  error estimate for blocks of size 2^( 7) =       0.000552353725

      target function =      -0.739242709106
              le_mean =     -22.662499994313
             les_mean =     514.046138409133
             stat err =       0.000546757060
             autocorr =       1.307620030586
   target nu stat err =       0.000546757060
   target dn stat err =       0.007171698056
      target stat err =       0.005945065246
              std dev =       0.676189799905
             le_variance =       0.457232645495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478138393
  error estimate for blocks of size 2^( 2) =       0.000501396711
  error estimate for blocks of size 2^( 3) =       0.000522664092
  error estimate for blocks of size 2^( 4) =       0.000537817242
  error estimate for blocks of size 2^( 5) =       0.000545858288
  error estimate for blocks of size 2^( 6) =       0.000550998987
  error estimate for blocks of size 2^( 7) =       0.000552353725

      target function =      -0.739242709106
              le_mean =     -22.662499994313
             les_mean =     514.046138409133
             stat err =       0.000546757060
             autocorr =       1.307620030586
   target nu stat err =       0.000546757060
   target dn stat err =       0.007171698056
      target stat err =       0.005945065246
              std dev =       0.676189799905
             le_variance =       0.457232645495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478138393
  error estimate for blocks of size 2^( 2) =       0.000501396711
  error estimate for blocks of size 2^( 3) =       0.000522664092
  error estimate for blocks of size 2^( 4) =       0.000537817242
  error estimate for blocks of size 2^( 5) =       0.000545858288
  error estimate for blocks of size 2^( 6) =       0.000550998987
  error estimate for blocks of size 2^( 7) =       0.000552353725

      target function =      -0.739242709106
              le_mean =     -22.662499994313
             les_mean =     514.046138409133
             stat err =       0.000546757060
             autocorr =       1.307620030586
   target nu stat err =       0.000546757060
   target dn stat err =       0.007171698056
      target stat err =       0.005945065246
              std dev =       0.676189799905
             le_variance =       0.457232645495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457254785681
                                         uncertainty =       0.007252892008

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478138393
  error estimate for blocks of size 2^( 2) =       0.000501396711
  error estimate for blocks of size 2^( 3) =       0.000522664092
  error estimate for blocks of size 2^( 4) =       0.000537817242
  error estimate for blocks of size 2^( 5) =       0.000545858288
  error estimate for blocks of size 2^( 6) =       0.000550998987
  error estimate for blocks of size 2^( 7) =       0.000552353725

      target function =      -0.739242709106
              le_mean =     -22.662499994313
             les_mean =     514.046138409133
             stat err =       0.000546757060
             autocorr =       1.307620030586
   target nu stat err =       0.000546757060
   target dn stat err =       0.007171698056
      target stat err =       0.005945065246
              std dev =       0.676189799905
             le_variance =       0.457232645495


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.739242709106        initial  <--
     6.2500e+29     6.2500e+30             0.0000e+00        -0.739242709106
     2.5000e+30     2.5000e+31             0.0000e+00        -0.739242709106
     1.0000e+31     1.0000e+32             0.0000e+00        -0.739242709106

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3274
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2256e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s035 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s035 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=35  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.638
    reference variance = 0.366445
====================================================
  Execution time = 4.4223e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s035
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5298e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5515e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452988491971
                                         uncertainty =       0.003085851930

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.452988491971
                                         uncertainty =       0.003085851930

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475909482
  error estimate for blocks of size 2^( 2) =       0.000499438427
  error estimate for blocks of size 2^( 3) =       0.000521416521
  error estimate for blocks of size 2^( 4) =       0.000536766032
  error estimate for blocks of size 2^( 5) =       0.000546558643
  error estimate for blocks of size 2^( 6) =       0.000551251114
  error estimate for blocks of size 2^( 7) =       0.000554773716

      target function =      -0.742808979529
              le_mean =     -22.662127576604
             les_mean =     514.025005741821
             stat err =       0.000547337376
             autocorr =       1.322700434796
   target nu stat err =       0.000547337376
   target dn stat err =       0.003397545854
      target stat err =       0.002892666206
              std dev =       0.673037643844
             le_variance =       0.452979670031


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266212757660e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+30, overlap shift 6.2500e+31 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+31, overlap shift 2.5000e+32 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+32, overlap shift 1.0000e+33 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.742819226745       residual = 1.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.184148 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9745e+01
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.5993
    reference variance = 0.543676
====================================================
  Execution time = 4.3540e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s035
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4981e-01
  Total weights = 2.0000e+06
  Execution time = 3.6061e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474243407
  error estimate for blocks of size 2^( 2) =       0.000498137617
  error estimate for blocks of size 2^( 3) =       0.000520079044
  error estimate for blocks of size 2^( 4) =       0.000536879886
  error estimate for blocks of size 2^( 5) =       0.000545293471
  error estimate for blocks of size 2^( 6) =       0.000550940209
  error estimate for blocks of size 2^( 7) =       0.000554867931

      target function =      -0.745454657150
              le_mean =     -22.661536350362
             les_mean =     513.995043152948
             stat err =       0.000546995374
             autocorr =       1.330346289235
   target nu stat err =       0.000546995374
   target dn stat err =       0.004120795270
      target stat err =       0.003504417517
              std dev =       0.670681458719
             le_variance =       0.449813619069

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474243407
  error estimate for blocks of size 2^( 2) =       0.000498137617
  error estimate for blocks of size 2^( 3) =       0.000520079044
  error estimate for blocks of size 2^( 4) =       0.000536879886
  error estimate for blocks of size 2^( 5) =       0.000545293471
  error estimate for blocks of size 2^( 6) =       0.000550940209
  error estimate for blocks of size 2^( 7) =       0.000554867931

      target function =      -0.745454657150
              le_mean =     -22.661536350362
             les_mean =     513.995043152948
             stat err =       0.000546995374
             autocorr =       1.330346289235
   target nu stat err =       0.000546995374
   target dn stat err =       0.004120795270
      target stat err =       0.003504417517
              std dev =       0.670681458719
             le_variance =       0.449813619069

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474243407
  error estimate for blocks of size 2^( 2) =       0.000498137617
  error estimate for blocks of size 2^( 3) =       0.000520079044
  error estimate for blocks of size 2^( 4) =       0.000536879886
  error estimate for blocks of size 2^( 5) =       0.000545293471
  error estimate for blocks of size 2^( 6) =       0.000550940209
  error estimate for blocks of size 2^( 7) =       0.000554867931

      target function =      -0.745454657150
              le_mean =     -22.661536350362
             les_mean =     513.995043152948
             stat err =       0.000546995374
             autocorr =       1.330346289235
   target nu stat err =       0.000546995374
   target dn stat err =       0.004120795270
      target stat err =       0.003504417517
              std dev =       0.670681458719
             le_variance =       0.449813619069

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449802714956
                                         uncertainty =       0.003774655321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474243407
  error estimate for blocks of size 2^( 2) =       0.000498137617
  error estimate for blocks of size 2^( 3) =       0.000520079044
  error estimate for blocks of size 2^( 4) =       0.000536879886
  error estimate for blocks of size 2^( 5) =       0.000545293471
  error estimate for blocks of size 2^( 6) =       0.000550940209
  error estimate for blocks of size 2^( 7) =       0.000554867931

      target function =      -0.745454657150
              le_mean =     -22.661536350362
             les_mean =     513.995043152948
             stat err =       0.000546995374
             autocorr =       1.330346289235
   target nu stat err =       0.000546995374
   target dn stat err =       0.004120795270
      target stat err =       0.003504417517
              std dev =       0.670681458719
             le_variance =       0.449813619069


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745454657150        initial  <--
     6.2500e+30     6.2500e+31             0.0000e+00        -0.745454657150
     2.5000e+31     2.5000e+32             0.0000e+00        -0.745454657150
     1.0000e+32     1.0000e+33             0.0000e+00        -0.745454657150

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6794
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2143e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s036 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s036 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=36  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2677e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.7533
    reference variance = 0.338704
====================================================
  Execution time = 4.3951e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s036
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5101e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5295e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451087028432
                                         uncertainty =       0.003544886898

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451087028432
                                         uncertainty =       0.003544886898

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474875985
  error estimate for blocks of size 2^( 2) =       0.000498411070
  error estimate for blocks of size 2^( 3) =       0.000520723743
  error estimate for blocks of size 2^( 4) =       0.000536267633
  error estimate for blocks of size 2^( 5) =       0.000545652747
  error estimate for blocks of size 2^( 6) =       0.000548695724
  error estimate for blocks of size 2^( 7) =       0.000549519876

      target function =      -0.744460124450
              le_mean =     -22.661240446057
             les_mean =     513.982832729972
             stat err =       0.000545033995
             autocorr =       1.317306297245
   target nu stat err =       0.000545033995
   target dn stat err =       0.003338152124
      target stat err =       0.002852382123
              std dev =       0.671576057832
             le_variance =       0.451014401453


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266124044606e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+31, overlap shift 6.2500e+32 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744469979145       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744469979145       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.287075831524       residual = 5.64e+12           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+31 is 6.496628e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+32, overlap shift 2.5000e+33 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744469979145       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744469979145       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744469979145       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+32 is 1.624157e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+33, overlap shift 1.0000e+34 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744469979145       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744469979145       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744469979145       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+33 is 4.060392e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.185568 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9253e+01
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.6762
    reference variance = 0.389879
====================================================
  Execution time = 4.3940e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s036
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5797e-01
  Total weights = 2.0000e+06
  Execution time = 3.5934e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478525442
  error estimate for blocks of size 2^( 2) =       0.000501892138
  error estimate for blocks of size 2^( 3) =       0.000523489546
  error estimate for blocks of size 2^( 4) =       0.000538751207
  error estimate for blocks of size 2^( 5) =       0.000547083485
  error estimate for blocks of size 2^( 6) =       0.000551458140
  error estimate for blocks of size 2^( 7) =       0.000552611517

      target function =      -0.738673443299
              le_mean =     -22.661555676851
             les_mean =     514.004078663602
             stat err =       0.000547476087
             autocorr =       1.308941517636
   target nu stat err =       0.000547476087
   target dn stat err =       0.005414819782
      target stat err =       0.004493170345
              std dev =       0.676737170215
             le_variance =       0.457973197551

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478525442
  error estimate for blocks of size 2^( 2) =       0.000501892138
  error estimate for blocks of size 2^( 3) =       0.000523489546
  error estimate for blocks of size 2^( 4) =       0.000538751207
  error estimate for blocks of size 2^( 5) =       0.000547083485
  error estimate for blocks of size 2^( 6) =       0.000551458140
  error estimate for blocks of size 2^( 7) =       0.000552611517

      target function =      -0.738673443299
              le_mean =     -22.661555676851
             les_mean =     514.004078663602
             stat err =       0.000547476087
             autocorr =       1.308941517636
   target nu stat err =       0.000547476087
   target dn stat err =       0.005414819782
      target stat err =       0.004493170345
              std dev =       0.676737170215
             le_variance =       0.457973197551

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478525442
  error estimate for blocks of size 2^( 2) =       0.000501892138
  error estimate for blocks of size 2^( 3) =       0.000523489546
  error estimate for blocks of size 2^( 4) =       0.000538751207
  error estimate for blocks of size 2^( 5) =       0.000547083485
  error estimate for blocks of size 2^( 6) =       0.000551458140
  error estimate for blocks of size 2^( 7) =       0.000552611517

      target function =      -0.738673443299
              le_mean =     -22.661555676851
             les_mean =     514.004078663602
             stat err =       0.000547476087
             autocorr =       1.308941517636
   target nu stat err =       0.000547476087
   target dn stat err =       0.005414819782
      target stat err =       0.004493170345
              std dev =       0.676737170215
             le_variance =       0.457973197551

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457962760757
                                         uncertainty =       0.005180013902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478525442
  error estimate for blocks of size 2^( 2) =       0.000501892138
  error estimate for blocks of size 2^( 3) =       0.000523489546
  error estimate for blocks of size 2^( 4) =       0.000538751207
  error estimate for blocks of size 2^( 5) =       0.000547083485
  error estimate for blocks of size 2^( 6) =       0.000551458140
  error estimate for blocks of size 2^( 7) =       0.000552611517

      target function =      -0.738673443299
              le_mean =     -22.661555676851
             les_mean =     514.004078663602
             stat err =       0.000547476087
             autocorr =       1.308941517636
   target nu stat err =       0.000547476087
   target dn stat err =       0.005414819782
      target stat err =       0.004493170345
              std dev =       0.676737170215
             le_variance =       0.457973197551


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.738673443299        initial  <--
     6.2500e+31     6.2500e+32             6.4966e-37        -0.738673443299
     2.5000e+32     2.5000e+33             1.6242e-37        -0.738673443299
     1.0000e+33     1.0000e+34             4.0604e-38        -0.738673443299

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9937
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2125e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s037 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s037 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=37  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2678e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.7404
    reference variance = 0.49108
====================================================
  Execution time = 4.3873e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s037
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.8471e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5289e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.484832677749
                                         uncertainty =       0.038413323754

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.484832677749
                                         uncertainty =       0.038413323754

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000492296728
  error estimate for blocks of size 2^( 2) =       0.000515658876
  error estimate for blocks of size 2^( 3) =       0.000536503590
  error estimate for blocks of size 2^( 4) =       0.000551064801
  error estimate for blocks of size 2^( 5) =       0.000559729745
  error estimate for blocks of size 2^( 6) =       0.000565325393
  error estimate for blocks of size 2^( 7) =       0.000568403547

      target function =      -0.716168925191
              le_mean =     -22.661556485222
             les_mean =     514.030854226781
             stat err =       0.000561130871
             autocorr =       1.299195259360
   target nu stat err =       0.000561130871
   target dn stat err =       0.037540877179
      target stat err =       0.029064626684
              std dev =       0.696212709046
             le_variance =       0.484712136237


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266155648522e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+32, overlap shift 6.2500e+33 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+33, overlap shift 2.5000e+34 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+34, overlap shift 1.0000e+35 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717351746791       residual = 5.78e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.186739 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9170e+01
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.7161
    reference variance = 0.27752
====================================================
  Execution time = 4.3544e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s037
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5491e-01
  Total weights = 2.0000e+06
  Execution time = 3.6084e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476919989
  error estimate for blocks of size 2^( 2) =       0.000500397585
  error estimate for blocks of size 2^( 3) =       0.000522869222
  error estimate for blocks of size 2^( 4) =       0.000538335703
  error estimate for blocks of size 2^( 5) =       0.000548112236
  error estimate for blocks of size 2^( 6) =       0.000555748803
  error estimate for blocks of size 2^( 7) =       0.000557183163

      target function =      -0.741189171632
              le_mean =     -22.663122036328
             les_mean =     514.072005558305
             stat err =       0.000549844976
             autocorr =       1.329197364614
   target nu stat err =       0.000549844976
   target dn stat err =       0.003589140701
      target stat err =       0.003040767503
              std dev =       0.674466716931
             le_variance =       0.454905352248

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476919989
  error estimate for blocks of size 2^( 2) =       0.000500397585
  error estimate for blocks of size 2^( 3) =       0.000522869222
  error estimate for blocks of size 2^( 4) =       0.000538335703
  error estimate for blocks of size 2^( 5) =       0.000548112236
  error estimate for blocks of size 2^( 6) =       0.000555748803
  error estimate for blocks of size 2^( 7) =       0.000557183163

      target function =      -0.741189171632
              le_mean =     -22.663122036328
             les_mean =     514.072005558305
             stat err =       0.000549844976
             autocorr =       1.329197364614
   target nu stat err =       0.000549844976
   target dn stat err =       0.003589140701
      target stat err =       0.003040767503
              std dev =       0.674466716931
             le_variance =       0.454905352248

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476919989
  error estimate for blocks of size 2^( 2) =       0.000500397585
  error estimate for blocks of size 2^( 3) =       0.000522869222
  error estimate for blocks of size 2^( 4) =       0.000538335703
  error estimate for blocks of size 2^( 5) =       0.000548112236
  error estimate for blocks of size 2^( 6) =       0.000555748803
  error estimate for blocks of size 2^( 7) =       0.000557183163

      target function =      -0.741189171632
              le_mean =     -22.663122036328
             les_mean =     514.072005558305
             stat err =       0.000549844976
             autocorr =       1.329197364614
   target nu stat err =       0.000549844976
   target dn stat err =       0.003589140701
      target stat err =       0.003040767503
              std dev =       0.674466716931
             le_variance =       0.454905352248

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454870838261
                                         uncertainty =       0.003773564690

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476919989
  error estimate for blocks of size 2^( 2) =       0.000500397585
  error estimate for blocks of size 2^( 3) =       0.000522869222
  error estimate for blocks of size 2^( 4) =       0.000538335703
  error estimate for blocks of size 2^( 5) =       0.000548112236
  error estimate for blocks of size 2^( 6) =       0.000555748803
  error estimate for blocks of size 2^( 7) =       0.000557183163

      target function =      -0.741189171632
              le_mean =     -22.663122036328
             les_mean =     514.072005558305
             stat err =       0.000549844976
             autocorr =       1.329197364614
   target nu stat err =       0.000549844976
   target dn stat err =       0.003589140701
      target stat err =       0.003040767503
              std dev =       0.674466716931
             le_variance =       0.454905352248


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.741189171632        initial  <--
     6.2500e+32     6.2500e+33             0.0000e+00        -0.741189171632
     2.5000e+33     2.5000e+34             0.0000e+00        -0.741189171632
     1.0000e+34     1.0000e+35             0.0000e+00        -0.741189171632

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6871
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2086e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s038 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s038 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=38  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2679e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.532
    reference variance = 0.499449
====================================================
  Execution time = 4.4218e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s038
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4951e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4864e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449542651794
                                         uncertainty =       0.004296091862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449542651794
                                         uncertainty =       0.004296091862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474083083
  error estimate for blocks of size 2^( 2) =       0.000497523739
  error estimate for blocks of size 2^( 3) =       0.000519862479
  error estimate for blocks of size 2^( 4) =       0.000535674286
  error estimate for blocks of size 2^( 5) =       0.000543804125
  error estimate for blocks of size 2^( 6) =       0.000547757665
  error estimate for blocks of size 2^( 7) =       0.000549736713

      target function =      -0.745700119330
              le_mean =     -22.662034043139
             les_mean =     514.017296286354
             stat err =       0.000544243197
             autocorr =       1.317883747298
   target nu stat err =       0.000544243197
   target dn stat err =       0.004565676551
      target stat err =       0.003876630985
              std dev =       0.670454725334
             le_variance =       0.449509538723


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266203404314e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+33, overlap shift 6.2500e+34 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+34, overlap shift 2.5000e+35 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+35, overlap shift 1.0000e+36 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745719021692       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.187904 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9089e+01
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.6392
    reference variance = 0.622156
====================================================
  Execution time = 4.3597e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s038
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.6385e-01
  Total weights = 2.0000e+06
  Execution time = 3.6037e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000481585137
  error estimate for blocks of size 2^( 2) =       0.000504620471
  error estimate for blocks of size 2^( 3) =       0.000526346301
  error estimate for blocks of size 2^( 4) =       0.000541519368
  error estimate for blocks of size 2^( 5) =       0.000550695823
  error estimate for blocks of size 2^( 6) =       0.000554779935
  error estimate for blocks of size 2^( 7) =       0.000560080332

      target function =      -0.733763346824
              le_mean =     -22.662211268383
             les_mean =     514.039667829441
             stat err =       0.000551768865
             autocorr =       1.312708297734
   target nu stat err =       0.000551768865
   target dn stat err =       0.011487631328
      target stat err =       0.009349491230
              std dev =       0.681064232321
             le_variance =       0.463848488547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000481585137
  error estimate for blocks of size 2^( 2) =       0.000504620471
  error estimate for blocks of size 2^( 3) =       0.000526346301
  error estimate for blocks of size 2^( 4) =       0.000541519368
  error estimate for blocks of size 2^( 5) =       0.000550695823
  error estimate for blocks of size 2^( 6) =       0.000554779935
  error estimate for blocks of size 2^( 7) =       0.000560080332

      target function =      -0.733763346824
              le_mean =     -22.662211268383
             les_mean =     514.039667829441
             stat err =       0.000551768865
             autocorr =       1.312708297734
   target nu stat err =       0.000551768865
   target dn stat err =       0.011487631328
      target stat err =       0.009349491230
              std dev =       0.681064232321
             le_variance =       0.463848488547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000481585137
  error estimate for blocks of size 2^( 2) =       0.000504620471
  error estimate for blocks of size 2^( 3) =       0.000526346301
  error estimate for blocks of size 2^( 4) =       0.000541519368
  error estimate for blocks of size 2^( 5) =       0.000550695823
  error estimate for blocks of size 2^( 6) =       0.000554779935
  error estimate for blocks of size 2^( 7) =       0.000560080332

      target function =      -0.733763346824
              le_mean =     -22.662211268383
             les_mean =     514.039667829441
             stat err =       0.000551768865
             autocorr =       1.312708297734
   target nu stat err =       0.000551768865
   target dn stat err =       0.011487631328
      target stat err =       0.009349491230
              std dev =       0.681064232321
             le_variance =       0.463848488547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.463868841565
                                         uncertainty =       0.011140195521

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000481585137
  error estimate for blocks of size 2^( 2) =       0.000504620471
  error estimate for blocks of size 2^( 3) =       0.000526346301
  error estimate for blocks of size 2^( 4) =       0.000541519368
  error estimate for blocks of size 2^( 5) =       0.000550695823
  error estimate for blocks of size 2^( 6) =       0.000554779935
  error estimate for blocks of size 2^( 7) =       0.000560080332

      target function =      -0.733763346824
              le_mean =     -22.662211268383
             les_mean =     514.039667829441
             stat err =       0.000551768865
             autocorr =       1.312708297734
   target nu stat err =       0.000551768865
   target dn stat err =       0.011487631328
      target stat err =       0.009349491230
              std dev =       0.681064232321
             le_variance =       0.463848488547


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.733763346824        initial  <--
     6.2500e+33     6.2500e+34             0.0000e+00        -0.733763346824
     2.5000e+34     2.5000e+35             0.0000e+00        -0.733763346824
     1.0000e+35     1.0000e+36             0.0000e+00        -0.733763346824

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7071
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2080e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s039 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s039 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=39  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2676e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.6334
    reference variance = 0.371781
====================================================
  Execution time = 4.4426e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s039
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5454e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5038e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454553706299
                                         uncertainty =       0.005082974918

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454553706299
                                         uncertainty =       0.005082974918

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476729401
  error estimate for blocks of size 2^( 2) =       0.000500931259
  error estimate for blocks of size 2^( 3) =       0.000523170435
  error estimate for blocks of size 2^( 4) =       0.000538466460
  error estimate for blocks of size 2^( 5) =       0.000549027759
  error estimate for blocks of size 2^( 6) =       0.000555056632
  error estimate for blocks of size 2^( 7) =       0.000556681108

      target function =      -0.741526048137
              le_mean =     -22.660641802744
             les_mean =     513.959228528174
             stat err =       0.000549807990
             autocorr =       1.330081400257
   target nu stat err =       0.000549807990
   target dn stat err =       0.004867038588
      target stat err =       0.004073165622
              std dev =       0.674197184196
             le_variance =       0.454541843177


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266064180274e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+34, overlap shift 6.2500e+35 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741547238600       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741547238600       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741547226906       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+34 is 6.404892e-40

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+35, overlap shift 2.5000e+36 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741547238600       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741547238600       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741547238547       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+35 is 1.601223e-40

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+36, overlap shift 1.0000e+37 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741547238600       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741547238600       residual = 4.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741547107697       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+36 is 4.003057e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.189336 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9472e+01
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.6749
    reference variance = 0.371053
====================================================
  Execution time = 4.3819e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s039
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4493e-01
  Total weights = 2.0000e+06
  Execution time = 3.6081e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660422
  error estimate for blocks of size 2^( 2) =       0.000495445142
  error estimate for blocks of size 2^( 3) =       0.000517277057
  error estimate for blocks of size 2^( 4) =       0.000533198338
  error estimate for blocks of size 2^( 5) =       0.000541751939
  error estimate for blocks of size 2^( 6) =       0.000545233878
  error estimate for blocks of size 2^( 7) =       0.000546669975

      target function =      -0.749578808829
              le_mean =     -22.661559042704
             les_mean =     513.991185130959
             stat err =       0.000541713532
             autocorr =       1.319108439510
   target nu stat err =       0.000541713532
   target dn stat err =       0.002425894933
      target stat err =       0.002142857158
              std dev =       0.667028565716
             le_variance =       0.444927107481

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660422
  error estimate for blocks of size 2^( 2) =       0.000495445142
  error estimate for blocks of size 2^( 3) =       0.000517277057
  error estimate for blocks of size 2^( 4) =       0.000533198338
  error estimate for blocks of size 2^( 5) =       0.000541751939
  error estimate for blocks of size 2^( 6) =       0.000545233878
  error estimate for blocks of size 2^( 7) =       0.000546669975

      target function =      -0.749578808829
              le_mean =     -22.661559042704
             les_mean =     513.991185130959
             stat err =       0.000541713532
             autocorr =       1.319108439510
   target nu stat err =       0.000541713532
   target dn stat err =       0.002425894933
      target stat err =       0.002142857158
              std dev =       0.667028565716
             le_variance =       0.444927107481

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660422
  error estimate for blocks of size 2^( 2) =       0.000495445142
  error estimate for blocks of size 2^( 3) =       0.000517277057
  error estimate for blocks of size 2^( 4) =       0.000533198338
  error estimate for blocks of size 2^( 5) =       0.000541751939
  error estimate for blocks of size 2^( 6) =       0.000545233878
  error estimate for blocks of size 2^( 7) =       0.000546669975

      target function =      -0.749578808829
              le_mean =     -22.661559042704
             les_mean =     513.991185130959
             stat err =       0.000541713532
             autocorr =       1.319108439510
   target nu stat err =       0.000541713532
   target dn stat err =       0.002425894933
      target stat err =       0.002142857158
              std dev =       0.667028565716
             le_variance =       0.444927107481

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.444953508133
                                         uncertainty =       0.002020451979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471660422
  error estimate for blocks of size 2^( 2) =       0.000495445142
  error estimate for blocks of size 2^( 3) =       0.000517277057
  error estimate for blocks of size 2^( 4) =       0.000533198338
  error estimate for blocks of size 2^( 5) =       0.000541751939
  error estimate for blocks of size 2^( 6) =       0.000545233878
  error estimate for blocks of size 2^( 7) =       0.000546669975

      target function =      -0.749578808829
              le_mean =     -22.661559042704
             les_mean =     513.991185130959
             stat err =       0.000541713532
             autocorr =       1.319108439510
   target nu stat err =       0.000541713532
   target dn stat err =       0.002425894933
      target stat err =       0.002142857158
              std dev =       0.667028565716
             le_variance =       0.444927107481


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.749578808829        initial  <--
     6.2500e+34     6.2500e+35             6.4049e-40        -0.749578808829
     2.5000e+35     2.5000e+36             1.6012e-40        -0.749578808829
     1.0000e+36     1.0000e+37             4.0031e-41        -0.749578808829

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.6052
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2308e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s040 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s040 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=40  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2676e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.5882
    reference variance = 0.526329
====================================================
  Execution time = 4.4014e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s040
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5623e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5049e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456284695011
                                         uncertainty =       0.006292976157

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456284695011
                                         uncertainty =       0.006292976157

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477615929
  error estimate for blocks of size 2^( 2) =       0.000501436464
  error estimate for blocks of size 2^( 3) =       0.000523649832
  error estimate for blocks of size 2^( 4) =       0.000539594326
  error estimate for blocks of size 2^( 5) =       0.000548181341
  error estimate for blocks of size 2^( 6) =       0.000552073512
  error estimate for blocks of size 2^( 7) =       0.000553079858

      target function =      -0.740095055691
              le_mean =     -22.661776674332
             les_mean =     514.012355759775
             stat err =       0.000548232259
             autocorr =       1.317563541872
   target nu stat err =       0.000548232259
   target dn stat err =       0.006061307303
      target stat err =       0.005041297806
              std dev =       0.675450923913
             le_variance =       0.456233950615


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266177667433e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+35, overlap shift 6.2500e+36 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740128377043       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740128377043       residual = 6.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740128377043       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+35 is 6.150157e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+36, overlap shift 2.5000e+37 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740128377043       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740128377043       residual = 6.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740128377043       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+36 is 1.537539e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+37, overlap shift 1.0000e+38 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740128377043       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740128377043       residual = 6.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.740127563477       residual = 1.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+37 is 3.843848e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.190751 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9070e+01
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.5516
    reference variance = 0.42584
====================================================
  Execution time = 4.3625e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s040
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5114e-01
  Total weights = 2.0000e+06
  Execution time = 3.5989e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474942888
  error estimate for blocks of size 2^( 2) =       0.000498734131
  error estimate for blocks of size 2^( 3) =       0.000521177586
  error estimate for blocks of size 2^( 4) =       0.000537441695
  error estimate for blocks of size 2^( 5) =       0.000547413774
  error estimate for blocks of size 2^( 6) =       0.000553595806
  error estimate for blocks of size 2^( 7) =       0.000557874211

      target function =      -0.744351860899
              le_mean =     -22.660626780388
             les_mean =     513.955147347534
             stat err =       0.000549081372
             autocorr =       1.336566719416
   target nu stat err =       0.000549081372
   target dn stat err =       0.004664640249
      target stat err =       0.003936951312
              std dev =       0.671670673067
             le_variance =       0.451141493059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474942888
  error estimate for blocks of size 2^( 2) =       0.000498734131
  error estimate for blocks of size 2^( 3) =       0.000521177586
  error estimate for blocks of size 2^( 4) =       0.000537441695
  error estimate for blocks of size 2^( 5) =       0.000547413774
  error estimate for blocks of size 2^( 6) =       0.000553595806
  error estimate for blocks of size 2^( 7) =       0.000557874211

      target function =      -0.744351860899
              le_mean =     -22.660626780388
             les_mean =     513.955147347534
             stat err =       0.000549081372
             autocorr =       1.336566719420
   target nu stat err =       0.000549081372
   target dn stat err =       0.004664640249
      target stat err =       0.003936951312
              std dev =       0.671670673067
             le_variance =       0.451141493059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474942888
  error estimate for blocks of size 2^( 2) =       0.000498734131
  error estimate for blocks of size 2^( 3) =       0.000521177586
  error estimate for blocks of size 2^( 4) =       0.000537441695
  error estimate for blocks of size 2^( 5) =       0.000547413774
  error estimate for blocks of size 2^( 6) =       0.000553595806
  error estimate for blocks of size 2^( 7) =       0.000557874211

      target function =      -0.744351860899
              le_mean =     -22.660626780388
             les_mean =     513.955147347534
             stat err =       0.000549081372
             autocorr =       1.336566719420
   target nu stat err =       0.000549081372
   target dn stat err =       0.004664640249
      target stat err =       0.003936951312
              std dev =       0.671670673067
             le_variance =       0.451141493059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451157386221
                                         uncertainty =       0.004655977571

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474942888
  error estimate for blocks of size 2^( 2) =       0.000498734131
  error estimate for blocks of size 2^( 3) =       0.000521177586
  error estimate for blocks of size 2^( 4) =       0.000537441695
  error estimate for blocks of size 2^( 5) =       0.000547413774
  error estimate for blocks of size 2^( 6) =       0.000553595806
  error estimate for blocks of size 2^( 7) =       0.000557874211

      target function =      -0.744351860899
              le_mean =     -22.660626780388
             les_mean =     513.955147347534
             stat err =       0.000549081372
             autocorr =       1.336566719420
   target nu stat err =       0.000549081372
   target dn stat err =       0.004664640249
      target stat err =       0.003936951312
              std dev =       0.671670673067
             le_variance =       0.451141493059


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744351860899        initial  <--
     6.2500e+35     6.2500e+36             6.1502e-41        -0.744351860899
     2.5000e+36     2.5000e+37             1.5375e-41        -0.744351860899
     1.0000e+37     1.0000e+38             3.8438e-42        -0.744351860899

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7002
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2078e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s041 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s041 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=41  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2673e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.7072
    reference variance = 0.458531
====================================================
  Execution time = 4.4038e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s041
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4988e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5350e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449882915983
                                         uncertainty =       0.004767763122

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449882915983
                                         uncertainty =       0.004767763122

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474278281
  error estimate for blocks of size 2^( 2) =       0.000498308801
  error estimate for blocks of size 2^( 3) =       0.000520146581
  error estimate for blocks of size 2^( 4) =       0.000536033137
  error estimate for blocks of size 2^( 5) =       0.000544938117
  error estimate for blocks of size 2^( 6) =       0.000548197764
  error estimate for blocks of size 2^( 7) =       0.000549535954

      target function =      -0.745387524099
              le_mean =     -22.662373109846
             les_mean =     514.033034521013
             stat err =       0.000544676243
             autocorr =       1.318895515223
   target nu stat err =       0.000544676243
   target dn stat err =       0.004286067634
      target stat err =       0.003644245687
              std dev =       0.670730777646
             le_variance =       0.449879776081


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266237310985e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+36, overlap shift 6.2500e+37 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745404342812       residual = 2.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745404342812       residual = 8.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+36 is 8.068128e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+37, overlap shift 2.5000e+38 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745404342812       residual = 2.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745404342812       residual = 8.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745404342812       residual = 5.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745404342812       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745404342811       residual = 2.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+37 is 3.424845e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+38, overlap shift 1.0000e+39 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745404342812       residual = 2.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745404342812       residual = 8.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745404342812       residual = 5.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745404342812       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.745404342811       residual = 2.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+38 is 8.562113e-43

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.192477 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9395e+01
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.6776
    reference variance = 0.365021
====================================================
  Execution time = 4.3811e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s041
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4824e-01
  Total weights = 2.0000e+06
  Execution time = 3.6058e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473414500
  error estimate for blocks of size 2^( 2) =       0.000497137067
  error estimate for blocks of size 2^( 3) =       0.000518682518
  error estimate for blocks of size 2^( 4) =       0.000534530920
  error estimate for blocks of size 2^( 5) =       0.000543200841
  error estimate for blocks of size 2^( 6) =       0.000548622787
  error estimate for blocks of size 2^( 7) =       0.000552057578

      target function =      -0.746776857250
              le_mean =     -22.661997247643
             les_mean =     514.014361604799
             stat err =       0.000544603032
             autocorr =       1.323356938222
   target nu stat err =       0.000544603032
   target dn stat err =       0.002691908852
      target stat err =       0.002344941052
              std dev =       0.669509205865
             le_variance =       0.448242576738

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473414500
  error estimate for blocks of size 2^( 2) =       0.000497137067
  error estimate for blocks of size 2^( 3) =       0.000518682518
  error estimate for blocks of size 2^( 4) =       0.000534530920
  error estimate for blocks of size 2^( 5) =       0.000543200841
  error estimate for blocks of size 2^( 6) =       0.000548622787
  error estimate for blocks of size 2^( 7) =       0.000552057578

      target function =      -0.746776857250
              le_mean =     -22.661997247643
             les_mean =     514.014361604799
             stat err =       0.000544603032
             autocorr =       1.323356938222
   target nu stat err =       0.000544603032
   target dn stat err =       0.002691908852
      target stat err =       0.002344941052
              std dev =       0.669509205865
             le_variance =       0.448242576738

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473414500
  error estimate for blocks of size 2^( 2) =       0.000497137067
  error estimate for blocks of size 2^( 3) =       0.000518682518
  error estimate for blocks of size 2^( 4) =       0.000534530920
  error estimate for blocks of size 2^( 5) =       0.000543200841
  error estimate for blocks of size 2^( 6) =       0.000548622787
  error estimate for blocks of size 2^( 7) =       0.000552057578

      target function =      -0.746776857250
              le_mean =     -22.661997247643
             les_mean =     514.014361604799
             stat err =       0.000544603032
             autocorr =       1.323356938222
   target nu stat err =       0.000544603032
   target dn stat err =       0.002691908852
      target stat err =       0.002344941052
              std dev =       0.669509205865
             le_variance =       0.448242576738

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448314225072
                                         uncertainty =       0.002414150204

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473414500
  error estimate for blocks of size 2^( 2) =       0.000497137067
  error estimate for blocks of size 2^( 3) =       0.000518682518
  error estimate for blocks of size 2^( 4) =       0.000534530920
  error estimate for blocks of size 2^( 5) =       0.000543200841
  error estimate for blocks of size 2^( 6) =       0.000548622787
  error estimate for blocks of size 2^( 7) =       0.000552057578

      target function =      -0.746776857250
              le_mean =     -22.661997247643
             les_mean =     514.014361604799
             stat err =       0.000544603032
             autocorr =       1.323356938222
   target nu stat err =       0.000544603032
   target dn stat err =       0.002691908852
      target stat err =       0.002344941052
              std dev =       0.669509205865
             le_variance =       0.448242576738


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746776857250        initial  <--
     6.2500e+36     6.2500e+37             8.0681e-42        -0.746776857250
     2.5000e+37     2.5000e+38             3.4248e-42        -0.746776857250
     1.0000e+38     1.0000e+39             8.5621e-43        -0.746776857250

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9887
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2139e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s042 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s042 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=42  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2674e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.7285
    reference variance = 0.325666
====================================================
  Execution time = 4.4092e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s042
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5132e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5297e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451350160264
                                         uncertainty =       0.002929288227

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451350160264
                                         uncertainty =       0.002929288227

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475038922
  error estimate for blocks of size 2^( 2) =       0.000498706456
  error estimate for blocks of size 2^( 3) =       0.000519911576
  error estimate for blocks of size 2^( 4) =       0.000535411532
  error estimate for blocks of size 2^( 5) =       0.000544349992
  error estimate for blocks of size 2^( 6) =       0.000548318321
  error estimate for blocks of size 2^( 7) =       0.000551332405

      target function =      -0.744194563746
              le_mean =     -22.661885249335
             les_mean =     514.012366783363
             stat err =       0.000544853063
             autocorr =       1.315528930256
   target nu stat err =       0.000544853063
   target dn stat err =       0.003079945554
      target stat err =       0.002642958773
              std dev =       0.671806486278
             le_variance =       0.451323955005


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266188524933e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+37, overlap shift 6.2500e+38 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+38, overlap shift 2.5000e+39 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+39, overlap shift 1.0000e+40 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744202931452       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.193639 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9396e+01
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.6633
    reference variance = 0.371116
====================================================
  Execution time = 4.3781e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s042
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4303e-01
  Total weights = 2.0000e+06
  Execution time = 3.6211e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470656027
  error estimate for blocks of size 2^( 2) =       0.000494903845
  error estimate for blocks of size 2^( 3) =       0.000516455962
  error estimate for blocks of size 2^( 4) =       0.000531544839
  error estimate for blocks of size 2^( 5) =       0.000540909939
  error estimate for blocks of size 2^( 6) =       0.000544946621
  error estimate for blocks of size 2^( 7) =       0.000547748158

      target function =      -0.751182206044
              le_mean =     -22.662225545189
             les_mean =     514.019500631450
             stat err =       0.000541287389
             autocorr =       1.322661063454
   target nu stat err =       0.000541287389
   target dn stat err =       0.002426942070
      target stat err =       0.002154539876
              std dev =       0.665608136934
             le_variance =       0.443034191953

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470656027
  error estimate for blocks of size 2^( 2) =       0.000494903845
  error estimate for blocks of size 2^( 3) =       0.000516455962
  error estimate for blocks of size 2^( 4) =       0.000531544839
  error estimate for blocks of size 2^( 5) =       0.000540909939
  error estimate for blocks of size 2^( 6) =       0.000544946621
  error estimate for blocks of size 2^( 7) =       0.000547748158

      target function =      -0.751182206044
              le_mean =     -22.662225545189
             les_mean =     514.019500631450
             stat err =       0.000541287389
             autocorr =       1.322661063454
   target nu stat err =       0.000541287389
   target dn stat err =       0.002426942070
      target stat err =       0.002154539876
              std dev =       0.665608136934
             le_variance =       0.443034191953

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470656027
  error estimate for blocks of size 2^( 2) =       0.000494903845
  error estimate for blocks of size 2^( 3) =       0.000516455962
  error estimate for blocks of size 2^( 4) =       0.000531544839
  error estimate for blocks of size 2^( 5) =       0.000540909939
  error estimate for blocks of size 2^( 6) =       0.000544946621
  error estimate for blocks of size 2^( 7) =       0.000547748158

      target function =      -0.751182206044
              le_mean =     -22.662225545189
             les_mean =     514.019500631450
             stat err =       0.000541287389
             autocorr =       1.322661063454
   target nu stat err =       0.000541287389
   target dn stat err =       0.002426942070
      target stat err =       0.002154539876
              std dev =       0.665608136934
             le_variance =       0.443034191953

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443044823639
                                         uncertainty =       0.002298777338

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470656027
  error estimate for blocks of size 2^( 2) =       0.000494903845
  error estimate for blocks of size 2^( 3) =       0.000516455962
  error estimate for blocks of size 2^( 4) =       0.000531544839
  error estimate for blocks of size 2^( 5) =       0.000540909939
  error estimate for blocks of size 2^( 6) =       0.000544946621
  error estimate for blocks of size 2^( 7) =       0.000547748158

      target function =      -0.751182206044
              le_mean =     -22.662225545189
             les_mean =     514.019500631450
             stat err =       0.000541287389
             autocorr =       1.322661063454
   target nu stat err =       0.000541287389
   target dn stat err =       0.002426942070
      target stat err =       0.002154539876
              std dev =       0.665608136934
             le_variance =       0.443034191953


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.751182206044        initial  <--
     6.2500e+37     6.2500e+38             0.0000e+00        -0.751182206044
     2.5000e+38     2.5000e+39             0.0000e+00        -0.751182206044
     1.0000e+39     1.0000e+40             0.0000e+00        -0.751182206044

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9600
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2136e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s043 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s043 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=43  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2674e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.6517
    reference variance = 0.39963
====================================================
  Execution time = 4.4673e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s043
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5865e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5337e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458709571464
                                         uncertainty =       0.004335620081

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458709571464
                                         uncertainty =       0.004335620081

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478878873
  error estimate for blocks of size 2^( 2) =       0.000502286861
  error estimate for blocks of size 2^( 3) =       0.000523687788
  error estimate for blocks of size 2^( 4) =       0.000539669222
  error estimate for blocks of size 2^( 5) =       0.000548973344
  error estimate for blocks of size 2^( 6) =       0.000553760340
  error estimate for blocks of size 2^( 7) =       0.000554747546

      target function =      -0.738105415669
              le_mean =     -22.662396106200
             les_mean =     514.042846995066
             stat err =       0.000549287613
             autocorr =       1.315673888292
   target nu stat err =       0.000549287613
   target dn stat err =       0.004649810055
      target stat err =       0.003870288586
              std dev =       0.677236996991
             le_variance =       0.458649950093


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266239610620e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+38, overlap shift 6.2500e+39 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+39, overlap shift 2.5000e+40 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+40, overlap shift 1.0000e+41 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738124604781       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.194839 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0021e+01
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.6131
    reference variance = 0.439135
====================================================
  Execution time = 4.3264e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s043
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5865e-01
  Total weights = 2.0000e+06
  Execution time = 3.5900e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478878252
  error estimate for blocks of size 2^( 2) =       0.000502140405
  error estimate for blocks of size 2^( 3) =       0.000523695242
  error estimate for blocks of size 2^( 4) =       0.000539953630
  error estimate for blocks of size 2^( 5) =       0.000549555904
  error estimate for blocks of size 2^( 6) =       0.000554079472
  error estimate for blocks of size 2^( 7) =       0.000557841725

      target function =      -0.738117785071
              le_mean =     -22.661194058670
             les_mean =     513.988364696773
             stat err =       0.000550357683
             autocorr =       1.320808446387
   target nu stat err =       0.000550357683
   target dn stat err =       0.006268789570
      target stat err =       0.005179494068
              std dev =       0.677236119396
             le_variance =       0.458648761415

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478878252
  error estimate for blocks of size 2^( 2) =       0.000502140405
  error estimate for blocks of size 2^( 3) =       0.000523695242
  error estimate for blocks of size 2^( 4) =       0.000539953630
  error estimate for blocks of size 2^( 5) =       0.000549555904
  error estimate for blocks of size 2^( 6) =       0.000554079472
  error estimate for blocks of size 2^( 7) =       0.000557841725

      target function =      -0.738117785071
              le_mean =     -22.661194058670
             les_mean =     513.988364696773
             stat err =       0.000550357683
             autocorr =       1.320808446387
   target nu stat err =       0.000550357683
   target dn stat err =       0.006268789570
      target stat err =       0.005179494068
              std dev =       0.677236119396
             le_variance =       0.458648761415

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478878252
  error estimate for blocks of size 2^( 2) =       0.000502140405
  error estimate for blocks of size 2^( 3) =       0.000523695242
  error estimate for blocks of size 2^( 4) =       0.000539953630
  error estimate for blocks of size 2^( 5) =       0.000549555904
  error estimate for blocks of size 2^( 6) =       0.000554079472
  error estimate for blocks of size 2^( 7) =       0.000557841725

      target function =      -0.738117785071
              le_mean =     -22.661194058670
             les_mean =     513.988364696773
             stat err =       0.000550357683
             autocorr =       1.320808446387
   target nu stat err =       0.000550357683
   target dn stat err =       0.006268789570
      target stat err =       0.005179494068
              std dev =       0.677236119396
             le_variance =       0.458648761415

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.458625784118
                                         uncertainty =       0.006226467147

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478878252
  error estimate for blocks of size 2^( 2) =       0.000502140405
  error estimate for blocks of size 2^( 3) =       0.000523695242
  error estimate for blocks of size 2^( 4) =       0.000539953630
  error estimate for blocks of size 2^( 5) =       0.000549555904
  error estimate for blocks of size 2^( 6) =       0.000554079472
  error estimate for blocks of size 2^( 7) =       0.000557841725

      target function =      -0.738117785071
              le_mean =     -22.661194058670
             les_mean =     513.988364696773
             stat err =       0.000550357683
             autocorr =       1.320808446387
   target nu stat err =       0.000550357683
   target dn stat err =       0.006268789570
      target stat err =       0.005179494068
              std dev =       0.677236119396
             le_variance =       0.458648761415


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.738117785071        initial  <--
     6.2500e+38     6.2500e+39             0.0000e+00        -0.738117785071
     2.5000e+39     2.5000e+40             0.0000e+00        -0.738117785071
     1.0000e+40     1.0000e+41             0.0000e+00        -0.738117785071

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.3032
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2133e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s044 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s044 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=44  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2673e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.6298
    reference variance = 0.304943
====================================================
  Execution time = 4.3846e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s044
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4705e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5302e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447139108229
                                         uncertainty =       0.002642474279

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447139108229
                                         uncertainty =       0.002642474279

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472783752
  error estimate for blocks of size 2^( 2) =       0.000496599302
  error estimate for blocks of size 2^( 3) =       0.000518389240
  error estimate for blocks of size 2^( 4) =       0.000534676457
  error estimate for blocks of size 2^( 5) =       0.000544085892
  error estimate for blocks of size 2^( 6) =       0.000548831245
  error estimate for blocks of size 2^( 7) =       0.000550733805

      target function =      -0.747783958948
              le_mean =     -22.661766849280
             les_mean =     514.002725459587
             stat err =       0.000544581850
             autocorr =       1.326787099482
   target nu stat err =       0.000544581850
   target dn stat err =       0.002646707442
      target stat err =       0.002313479399
              std dev =       0.668617193909
             le_variance =       0.447048951991


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266176684928e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+39, overlap shift 6.2500e+40 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+40, overlap shift 2.5000e+41 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+41, overlap shift 1.0000e+42 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747790216196       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+41 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.195998 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9156e+01
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.5959
    reference variance = 0.30757
====================================================
  Execution time = 4.3405e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s044
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4401e-01
  Total weights = 2.0000e+06
  Execution time = 3.9846e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471171664
  error estimate for blocks of size 2^( 2) =       0.000494915911
  error estimate for blocks of size 2^( 3) =       0.000516928286
  error estimate for blocks of size 2^( 4) =       0.000532739585
  error estimate for blocks of size 2^( 5) =       0.000542891989
  error estimate for blocks of size 2^( 6) =       0.000546108128
  error estimate for blocks of size 2^( 7) =       0.000550026744

      target function =      -0.750356587514
              le_mean =     -22.662111039274
             les_mean =     514.015282007561
             stat err =       0.000542941612
             autocorr =       1.327846666925
   target nu stat err =       0.000542941612
   target dn stat err =       0.002525228626
      target stat err =       0.002230259006
              std dev =       0.666337356882
             le_variance =       0.444005473176

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471171664
  error estimate for blocks of size 2^( 2) =       0.000494915911
  error estimate for blocks of size 2^( 3) =       0.000516928286
  error estimate for blocks of size 2^( 4) =       0.000532739585
  error estimate for blocks of size 2^( 5) =       0.000542891989
  error estimate for blocks of size 2^( 6) =       0.000546108128
  error estimate for blocks of size 2^( 7) =       0.000550026744

      target function =      -0.750356587514
              le_mean =     -22.662111039274
             les_mean =     514.015282007561
             stat err =       0.000542941612
             autocorr =       1.327846666925
   target nu stat err =       0.000542941612
   target dn stat err =       0.002525228626
      target stat err =       0.002230259006
              std dev =       0.666337356882
             le_variance =       0.444005473176

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471171664
  error estimate for blocks of size 2^( 2) =       0.000494915911
  error estimate for blocks of size 2^( 3) =       0.000516928286
  error estimate for blocks of size 2^( 4) =       0.000532739585
  error estimate for blocks of size 2^( 5) =       0.000542891989
  error estimate for blocks of size 2^( 6) =       0.000546108128
  error estimate for blocks of size 2^( 7) =       0.000550026744

      target function =      -0.750356587514
              le_mean =     -22.662111039274
             les_mean =     514.015282007561
             stat err =       0.000542941612
             autocorr =       1.327846666925
   target nu stat err =       0.000542941612
   target dn stat err =       0.002525228626
      target stat err =       0.002230259006
              std dev =       0.666337356882
             le_variance =       0.444005473176

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.443958474125
                                         uncertainty =       0.002642445372

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471171664
  error estimate for blocks of size 2^( 2) =       0.000494915911
  error estimate for blocks of size 2^( 3) =       0.000516928286
  error estimate for blocks of size 2^( 4) =       0.000532739585
  error estimate for blocks of size 2^( 5) =       0.000542891989
  error estimate for blocks of size 2^( 6) =       0.000546108128
  error estimate for blocks of size 2^( 7) =       0.000550026744

      target function =      -0.750356587514
              le_mean =     -22.662111039274
             les_mean =     514.015282007561
             stat err =       0.000542941612
             autocorr =       1.327846666925
   target nu stat err =       0.000542941612
   target dn stat err =       0.002525228626
      target stat err =       0.002230259006
              std dev =       0.666337356882
             le_variance =       0.444005473176


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.750356587514        initial  <--
     6.2500e+39     6.2500e+40             0.0000e+00        -0.750356587514
     2.5000e+40     2.5000e+41             0.0000e+00        -0.750356587514
     1.0000e+41     1.0000e+42             0.0000e+00        -0.750356587514

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.0540
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2124e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s045 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s045 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=45  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.7092
    reference variance = 0.462719
====================================================
  Execution time = 4.4001e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s045
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4999e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4879e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450035022386
                                         uncertainty =       0.002898290433

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450035022386
                                         uncertainty =       0.002898290433

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474337655
  error estimate for blocks of size 2^( 2) =       0.000498036199
  error estimate for blocks of size 2^( 3) =       0.000519695569
  error estimate for blocks of size 2^( 4) =       0.000535443724
  error estimate for blocks of size 2^( 5) =       0.000544633167
  error estimate for blocks of size 2^( 6) =       0.000549307336
  error estimate for blocks of size 2^( 7) =       0.000551779220

      target function =      -0.745306484862
              le_mean =     -22.662082024635
             les_mean =     514.019953888217
             stat err =       0.000545290862
             autocorr =       1.321542805331
   target nu stat err =       0.000545290862
   target dn stat err =       0.002872077720
      target stat err =       0.002482477379
              std dev =       0.670814744855
             le_variance =       0.449992421915


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266208202464e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+40, overlap shift 6.2500e+41 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745313749702       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745313749702       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745313749702       residual = 2.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745313749702       residual = 6.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+40 is 1.233419e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+41, overlap shift 2.5000e+42 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745313749702       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745313749702       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745313749702       residual = 2.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745313749690       residual = 6.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+41 is 3.083547e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+42, overlap shift 1.0000e+43 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.745313749702       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.745313749702       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.745313749702       residual = 2.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.745313749702       residual = 6.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+42 is 7.708868e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.197684 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.8888e+01
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.6648
    reference variance = 0.295109
====================================================
  Execution time = 4.3719e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s045
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.7015e-01
  Total weights = 2.0000e+06
  Execution time = 3.6149e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000484846756
  error estimate for blocks of size 2^( 2) =       0.000508109615
  error estimate for blocks of size 2^( 3) =       0.000529821584
  error estimate for blocks of size 2^( 4) =       0.000544177939
  error estimate for blocks of size 2^( 5) =       0.000553591326
  error estimate for blocks of size 2^( 6) =       0.000558362548
  error estimate for blocks of size 2^( 7) =       0.000559983775

      target function =      -0.728543140236
              le_mean =     -22.663291073258
             les_mean =     514.094914789189
             stat err =       0.000554028897
             autocorr =       1.305737409313
   target nu stat err =       0.000554028897
   target dn stat err =       0.015597139837
      target stat err =       0.012524273353
              std dev =       0.685676857613
             le_variance =       0.470152753066

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000484846756
  error estimate for blocks of size 2^( 2) =       0.000508109615
  error estimate for blocks of size 2^( 3) =       0.000529821584
  error estimate for blocks of size 2^( 4) =       0.000544177939
  error estimate for blocks of size 2^( 5) =       0.000553591326
  error estimate for blocks of size 2^( 6) =       0.000558362548
  error estimate for blocks of size 2^( 7) =       0.000559983775

      target function =      -0.728543140236
              le_mean =     -22.663291073258
             les_mean =     514.094914789189
             stat err =       0.000554028897
             autocorr =       1.305737409313
   target nu stat err =       0.000554028897
   target dn stat err =       0.015597139837
      target stat err =       0.012524273353
              std dev =       0.685676857613
             le_variance =       0.470152753066

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000484846756
  error estimate for blocks of size 2^( 2) =       0.000508109615
  error estimate for blocks of size 2^( 3) =       0.000529821584
  error estimate for blocks of size 2^( 4) =       0.000544177939
  error estimate for blocks of size 2^( 5) =       0.000553591326
  error estimate for blocks of size 2^( 6) =       0.000558362548
  error estimate for blocks of size 2^( 7) =       0.000559983775

      target function =      -0.728543140236
              le_mean =     -22.663291073258
             les_mean =     514.094914789189
             stat err =       0.000554028897
             autocorr =       1.305737409313
   target nu stat err =       0.000554028897
   target dn stat err =       0.015597139837
      target stat err =       0.012524273353
              std dev =       0.685676857613
             le_variance =       0.470152753066

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.470129077450
                                         uncertainty =       0.015112040755

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000484846756
  error estimate for blocks of size 2^( 2) =       0.000508109615
  error estimate for blocks of size 2^( 3) =       0.000529821584
  error estimate for blocks of size 2^( 4) =       0.000544177939
  error estimate for blocks of size 2^( 5) =       0.000553591326
  error estimate for blocks of size 2^( 6) =       0.000558362548
  error estimate for blocks of size 2^( 7) =       0.000559983775

      target function =      -0.728543140236
              le_mean =     -22.663291073258
             les_mean =     514.094914789189
             stat err =       0.000554028897
             autocorr =       1.305737409313
   target nu stat err =       0.000554028897
   target dn stat err =       0.015597139837
      target stat err =       0.012524273353
              std dev =       0.685676857613
             le_variance =       0.470152753066


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.728543140236        initial  <--
     6.2500e+40     6.2500e+41             1.2334e-45        -0.728543140236
     2.5000e+41     2.5000e+42             3.0835e-46        -0.728543140236
     1.0000e+42     1.0000e+43             7.7089e-47        -0.728543140236

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8907
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2078e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s046 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s046 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=46  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.6824
    reference variance = 0.328585
====================================================
  Execution time = 4.4281e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s046
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5497e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5431e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455040707189
                                         uncertainty =       0.003385776985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455040707189
                                         uncertainty =       0.003385776985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476953590
  error estimate for blocks of size 2^( 2) =       0.000500881294
  error estimate for blocks of size 2^( 3) =       0.000522696054
  error estimate for blocks of size 2^( 4) =       0.000538340459
  error estimate for blocks of size 2^( 5) =       0.000546882892
  error estimate for blocks of size 2^( 6) =       0.000549909700
  error estimate for blocks of size 2^( 7) =       0.000549380161

      target function =      -0.741174924552
              le_mean =     -22.661036619692
             les_mean =     513.977549905183
             stat err =       0.000546128303
             autocorr =       1.311103947186
   target nu stat err =       0.000546128303
   target dn stat err =       0.003681055615
      target stat err =       0.003104773979
              std dev =       0.674514235328
             le_variance =       0.454969453660


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266103661969e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+41, overlap shift 6.2500e+42 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741186984603       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741186984603       residual = 5.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741187095642       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+41 is 8.927242e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+42, overlap shift 2.5000e+43 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741186984603       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741186984603       residual = 5.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741186141968       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+42 is 2.231811e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+43, overlap shift 1.0000e+44 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741186984603       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741186984603       residual = 5.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.741188049316       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+43 is 5.579526e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.199119 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9719e+01
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.591
    reference variance = 0.315353
====================================================
  Execution time = 4.3558e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s046
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.5483e-01
  Total weights = 2.0000e+06
  Execution time = 3.6005e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476879238
  error estimate for blocks of size 2^( 2) =       0.000501004623
  error estimate for blocks of size 2^( 3) =       0.000523481578
  error estimate for blocks of size 2^( 4) =       0.000540175258
  error estimate for blocks of size 2^( 5) =       0.000550838551
  error estimate for blocks of size 2^( 6) =       0.000554165858
  error estimate for blocks of size 2^( 7) =       0.000556824999

      target function =      -0.741247219188
              le_mean =     -22.661156969230
             les_mean =     513.982862571730
             stat err =       0.000550501167
             autocorr =       1.332599535821
   target nu stat err =       0.000550501167
   target dn stat err =       0.007715874874
      target stat err =       0.006413614787
              std dev =       0.674409085848
             le_variance =       0.454827615074

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476879238
  error estimate for blocks of size 2^( 2) =       0.000501004623
  error estimate for blocks of size 2^( 3) =       0.000523481578
  error estimate for blocks of size 2^( 4) =       0.000540175258
  error estimate for blocks of size 2^( 5) =       0.000550838551
  error estimate for blocks of size 2^( 6) =       0.000554165858
  error estimate for blocks of size 2^( 7) =       0.000556824999

      target function =      -0.741247219188
              le_mean =     -22.661156969230
             les_mean =     513.982862571730
             stat err =       0.000550501167
             autocorr =       1.332599535821
   target nu stat err =       0.000550501167
   target dn stat err =       0.007715874874
      target stat err =       0.006413614787
              std dev =       0.674409085848
             le_variance =       0.454827615074

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476879238
  error estimate for blocks of size 2^( 2) =       0.000501004623
  error estimate for blocks of size 2^( 3) =       0.000523481578
  error estimate for blocks of size 2^( 4) =       0.000540175258
  error estimate for blocks of size 2^( 5) =       0.000550838551
  error estimate for blocks of size 2^( 6) =       0.000554165858
  error estimate for blocks of size 2^( 7) =       0.000556824999

      target function =      -0.741247219188
              le_mean =     -22.661156969230
             les_mean =     513.982862571730
             stat err =       0.000550501167
             autocorr =       1.332599535821
   target nu stat err =       0.000550501167
   target dn stat err =       0.007715874874
      target stat err =       0.006413614787
              std dev =       0.674409085848
             le_variance =       0.454827615074

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.454811454359
                                         uncertainty =       0.007681183927

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476879238
  error estimate for blocks of size 2^( 2) =       0.000501004623
  error estimate for blocks of size 2^( 3) =       0.000523481578
  error estimate for blocks of size 2^( 4) =       0.000540175258
  error estimate for blocks of size 2^( 5) =       0.000550838551
  error estimate for blocks of size 2^( 6) =       0.000554165858
  error estimate for blocks of size 2^( 7) =       0.000556824999

      target function =      -0.741247219188
              le_mean =     -22.661156969230
             les_mean =     513.982862571730
             stat err =       0.000550501167
             autocorr =       1.332599535821
   target nu stat err =       0.000550501167
   target dn stat err =       0.007715874874
      target stat err =       0.006413614787
              std dev =       0.674409085848
             le_variance =       0.454827615074


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.741247219188        initial  <--
     6.2500e+41     6.2500e+42             8.9272e-47        -0.741247219188
     2.5000e+42     2.5000e+43             2.2318e-47        -0.741247219188
     1.0000e+43     1.0000e+44             5.5795e-48        -0.741247219188

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6662
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2139e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s047 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s047 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=47  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.7098
    reference variance = 0.415648
====================================================
  Execution time = 4.5619e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s047
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4634e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5075e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446354771188
                                         uncertainty =       0.004148798086

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446354771188
                                         uncertainty =       0.004148798086

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472411133
  error estimate for blocks of size 2^( 2) =       0.000496306744
  error estimate for blocks of size 2^( 3) =       0.000517817919
  error estimate for blocks of size 2^( 4) =       0.000533431317
  error estimate for blocks of size 2^( 5) =       0.000542918164
  error estimate for blocks of size 2^( 6) =       0.000547397247
  error estimate for blocks of size 2^( 7) =       0.000550999782

      target function =      -0.748364835308
              le_mean =     -22.662568514525
             les_mean =     514.038356010321
             stat err =       0.000543686627
             autocorr =       1.324515526499
   target nu stat err =       0.000543686627
   target dn stat err =       0.003706290152
      target stat err =       0.003191843489
              std dev =       0.668090231909
             le_variance =       0.446344557972


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266256851452e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+42, overlap shift 6.2500e+43 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+43, overlap shift 2.5000e+44 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+44, overlap shift 1.0000e+45 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748377560559       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.200282 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0701e+01
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.6885
    reference variance = 0.373134
====================================================
  Execution time = 4.3728e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s047
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.7488e-01
  Total weights = 2.0000e+06
  Execution time = 3.6187e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000487277874
  error estimate for blocks of size 2^( 2) =       0.000510709061
  error estimate for blocks of size 2^( 3) =       0.000531782684
  error estimate for blocks of size 2^( 4) =       0.000547387228
  error estimate for blocks of size 2^( 5) =       0.000556431021
  error estimate for blocks of size 2^( 6) =       0.000561868401
  error estimate for blocks of size 2^( 7) =       0.000564761917

      target function =      -0.724637344066
              le_mean =     -22.663048382149
             les_mean =     514.088641186536
             stat err =       0.000557612142
             autocorr =       1.309516758694
   target nu stat err =       0.000557612142
   target dn stat err =       0.020343514016
      target stat err =       0.016150539779
              std dev =       0.689114977611
             le_variance =       0.474879452367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000487277874
  error estimate for blocks of size 2^( 2) =       0.000510709061
  error estimate for blocks of size 2^( 3) =       0.000531782684
  error estimate for blocks of size 2^( 4) =       0.000547387228
  error estimate for blocks of size 2^( 5) =       0.000556431021
  error estimate for blocks of size 2^( 6) =       0.000561868401
  error estimate for blocks of size 2^( 7) =       0.000564761917

      target function =      -0.724637344066
              le_mean =     -22.663048382149
             les_mean =     514.088641186536
             stat err =       0.000557612142
             autocorr =       1.309516758694
   target nu stat err =       0.000557612142
   target dn stat err =       0.020343514016
      target stat err =       0.016150539779
              std dev =       0.689114977611
             le_variance =       0.474879452367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000487277874
  error estimate for blocks of size 2^( 2) =       0.000510709061
  error estimate for blocks of size 2^( 3) =       0.000531782684
  error estimate for blocks of size 2^( 4) =       0.000547387228
  error estimate for blocks of size 2^( 5) =       0.000556431021
  error estimate for blocks of size 2^( 6) =       0.000561868401
  error estimate for blocks of size 2^( 7) =       0.000564761917

      target function =      -0.724637344066
              le_mean =     -22.663048382149
             les_mean =     514.088641186536
             stat err =       0.000557612142
             autocorr =       1.309516758694
   target nu stat err =       0.000557612142
   target dn stat err =       0.020343514016
      target stat err =       0.016150539779
              std dev =       0.689114977611
             le_variance =       0.474879452367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.474962815135
                                         uncertainty =       0.019705203814

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000487277874
  error estimate for blocks of size 2^( 2) =       0.000510709061
  error estimate for blocks of size 2^( 3) =       0.000531782684
  error estimate for blocks of size 2^( 4) =       0.000547387228
  error estimate for blocks of size 2^( 5) =       0.000556431021
  error estimate for blocks of size 2^( 6) =       0.000561868401
  error estimate for blocks of size 2^( 7) =       0.000564761917

      target function =      -0.724637344066
              le_mean =     -22.663048382149
             les_mean =     514.088641186536
             stat err =       0.000557612142
             autocorr =       1.309516758694
   target nu stat err =       0.000557612142
   target dn stat err =       0.020343514016
      target stat err =       0.016150539779
              std dev =       0.689114977611
             le_variance =       0.474879452367


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.724637344066        initial  <--
     6.2500e+42     6.2500e+43             0.0000e+00        -0.724637344066
     2.5000e+43     2.5000e+44             0.0000e+00        -0.724637344066
     1.0000e+44     1.0000e+45             0.0000e+00        -0.724637344066

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9032
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2261e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s048 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s048 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=48  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.6558
    reference variance = 0.332313
====================================================
  Execution time = 4.4485e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s048
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4745e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5164e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447611079760
                                         uncertainty =       0.003317527619

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447611079760
                                         uncertainty =       0.003317527619

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472997387
  error estimate for blocks of size 2^( 2) =       0.000496927554
  error estimate for blocks of size 2^( 3) =       0.000518740701
  error estimate for blocks of size 2^( 4) =       0.000534434656
  error estimate for blocks of size 2^( 5) =       0.000543021532
  error estimate for blocks of size 2^( 6) =       0.000547249326
  error estimate for blocks of size 2^( 7) =       0.000548646466

      target function =      -0.747432670664
              le_mean =     -22.662425024114
             les_mean =     514.032960805438
             stat err =       0.000543337995
             autocorr =       1.319540333154
   target nu stat err =       0.000543337995
   target dn stat err =       0.003450210830
      target stat err =       0.002971766353
              std dev =       0.668919319191
             le_variance =       0.447453055587


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266242502411e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+43, overlap shift 6.2500e+44 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+44, overlap shift 2.5000e+45 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+45, overlap shift 1.0000e+46 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.747443402796       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.201462 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9657e+01
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.5396
    reference variance = 0.412184
====================================================
  Execution time = 4.3653e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s048
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5597e-01
  Total weights = 2.0000e+06
  Execution time = 3.6226e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477476836
  error estimate for blocks of size 2^( 2) =       0.000500555593
  error estimate for blocks of size 2^( 3) =       0.000522071107
  error estimate for blocks of size 2^( 4) =       0.000537159779
  error estimate for blocks of size 2^( 5) =       0.000546320898
  error estimate for blocks of size 2^( 6) =       0.000549765849
  error estimate for blocks of size 2^( 7) =       0.000553052045

      target function =      -0.740321512672
              le_mean =     -22.662307063030
             les_mean =     514.036129449416
             stat err =       0.000546574643
             autocorr =       1.310371214494
   target nu stat err =       0.000546574643
   target dn stat err =       0.004155578684
      target stat err =       0.003489306661
              std dev =       0.675254217558
             le_variance =       0.455968258330

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477476836
  error estimate for blocks of size 2^( 2) =       0.000500555593
  error estimate for blocks of size 2^( 3) =       0.000522071107
  error estimate for blocks of size 2^( 4) =       0.000537159779
  error estimate for blocks of size 2^( 5) =       0.000546320898
  error estimate for blocks of size 2^( 6) =       0.000549765849
  error estimate for blocks of size 2^( 7) =       0.000553052045

      target function =      -0.740321512672
              le_mean =     -22.662307063030
             les_mean =     514.036129449416
             stat err =       0.000546574643
             autocorr =       1.310371214494
   target nu stat err =       0.000546574643
   target dn stat err =       0.004155578684
      target stat err =       0.003489306661
              std dev =       0.675254217558
             le_variance =       0.455968258330

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477476836
  error estimate for blocks of size 2^( 2) =       0.000500555593
  error estimate for blocks of size 2^( 3) =       0.000522071107
  error estimate for blocks of size 2^( 4) =       0.000537159779
  error estimate for blocks of size 2^( 5) =       0.000546320898
  error estimate for blocks of size 2^( 6) =       0.000549765849
  error estimate for blocks of size 2^( 7) =       0.000553052045

      target function =      -0.740321512672
              le_mean =     -22.662307063030
             les_mean =     514.036129449416
             stat err =       0.000546574643
             autocorr =       1.310371214494
   target nu stat err =       0.000546574643
   target dn stat err =       0.004155578684
      target stat err =       0.003489306661
              std dev =       0.675254217558
             le_variance =       0.455968258330

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456005668193
                                         uncertainty =       0.004073552056

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477476836
  error estimate for blocks of size 2^( 2) =       0.000500555593
  error estimate for blocks of size 2^( 3) =       0.000522071107
  error estimate for blocks of size 2^( 4) =       0.000537159779
  error estimate for blocks of size 2^( 5) =       0.000546320898
  error estimate for blocks of size 2^( 6) =       0.000549765849
  error estimate for blocks of size 2^( 7) =       0.000553052045

      target function =      -0.740321512672
              le_mean =     -22.662307063030
             les_mean =     514.036129449416
             stat err =       0.000546574643
             autocorr =       1.310371214494
   target nu stat err =       0.000546574643
   target dn stat err =       0.004155578684
      target stat err =       0.003489306661
              std dev =       0.675254217558
             le_variance =       0.455968258330


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.740321512672        initial  <--
     6.2500e+43     6.2500e+44             0.0000e+00        -0.740321512672
     2.5000e+44     2.5000e+45             0.0000e+00        -0.740321512672
     1.0000e+45     1.0000e+46             0.0000e+00        -0.740321512672

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8594
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2152e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s049 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s049 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=49  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.7027
    reference variance = 0.4005
====================================================
  Execution time = 4.3977e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s049
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.8449e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5364e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.484522758122
                                         uncertainty =       0.025103940259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.484522758122
                                         uncertainty =       0.025103940259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000492182082
  error estimate for blocks of size 2^( 2) =       0.000514891911
  error estimate for blocks of size 2^( 3) =       0.000535872602
  error estimate for blocks of size 2^( 4) =       0.000550419539
  error estimate for blocks of size 2^( 5) =       0.000560150797
  error estimate for blocks of size 2^( 6) =       0.000565484809
  error estimate for blocks of size 2^( 7) =       0.000569612486

      target function =      -0.716965226329
              le_mean =     -22.661808594962
             les_mean =     514.042054956018
             stat err =       0.000561416908
             autocorr =       1.301126066390
   target nu stat err =       0.000561416908
   target dn stat err =       0.025687645269
      target stat err =       0.019926795408
              std dev =       0.696050575454
             le_variance =       0.484486403590


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266180859496e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+44, overlap shift 6.2500e+45 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717513795884       residual = 1.33e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+44 is 4.226193e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+45, overlap shift 2.5000e+46 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717513795884       residual = 1.33e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+45 is 1.056548e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+46, overlap shift 1.0000e+47 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.717513795884       residual = 1.33e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.717513795884       residual = 8.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+46 is 2.641371e-50

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.202896 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9348e+01
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.7303
    reference variance = 0.640342
====================================================
  Execution time = 4.5416e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s049
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4888e-01
  Total weights = 2.0000e+06
  Execution time = 3.5864e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473751789
  error estimate for blocks of size 2^( 2) =       0.000497436278
  error estimate for blocks of size 2^( 3) =       0.000518822426
  error estimate for blocks of size 2^( 4) =       0.000534183062
  error estimate for blocks of size 2^( 5) =       0.000543497912
  error estimate for blocks of size 2^( 6) =       0.000547511294
  error estimate for blocks of size 2^( 7) =       0.000549936244

      target function =      -0.746230967684
              le_mean =     -22.662414919802
             les_mean =     514.033931288009
             stat err =       0.000543782128
             autocorr =       1.317492446060
   target nu stat err =       0.000543782128
   target dn stat err =       0.003389965114
      target stat err =       0.002912977037
              std dev =       0.669986205216
             le_variance =       0.448881515180

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473751789
  error estimate for blocks of size 2^( 2) =       0.000497436278
  error estimate for blocks of size 2^( 3) =       0.000518822426
  error estimate for blocks of size 2^( 4) =       0.000534183062
  error estimate for blocks of size 2^( 5) =       0.000543497912
  error estimate for blocks of size 2^( 6) =       0.000547511294
  error estimate for blocks of size 2^( 7) =       0.000549936244

      target function =      -0.746230967684
              le_mean =     -22.662414919802
             les_mean =     514.033931288009
             stat err =       0.000543782128
             autocorr =       1.317492446060
   target nu stat err =       0.000543782128
   target dn stat err =       0.003389965114
      target stat err =       0.002912977037
              std dev =       0.669986205216
             le_variance =       0.448881515180

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473751789
  error estimate for blocks of size 2^( 2) =       0.000497436278
  error estimate for blocks of size 2^( 3) =       0.000518822426
  error estimate for blocks of size 2^( 4) =       0.000534183062
  error estimate for blocks of size 2^( 5) =       0.000543497912
  error estimate for blocks of size 2^( 6) =       0.000547511294
  error estimate for blocks of size 2^( 7) =       0.000549936244

      target function =      -0.746230967684
              le_mean =     -22.662414919802
             les_mean =     514.033931288009
             stat err =       0.000543782128
             autocorr =       1.317492446060
   target nu stat err =       0.000543782128
   target dn stat err =       0.003389965114
      target stat err =       0.002912977037
              std dev =       0.669986205216
             le_variance =       0.448881515180

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.448969177309
                                         uncertainty =       0.003428845000

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000473751789
  error estimate for blocks of size 2^( 2) =       0.000497436278
  error estimate for blocks of size 2^( 3) =       0.000518822426
  error estimate for blocks of size 2^( 4) =       0.000534183062
  error estimate for blocks of size 2^( 5) =       0.000543497912
  error estimate for blocks of size 2^( 6) =       0.000547511294
  error estimate for blocks of size 2^( 7) =       0.000549936244

      target function =      -0.746230967684
              le_mean =     -22.662414919802
             les_mean =     514.033931288009
             stat err =       0.000543782128
             autocorr =       1.317492446060
   target nu stat err =       0.000543782128
   target dn stat err =       0.003389965114
      target stat err =       0.002912977037
              std dev =       0.669986205216
             le_variance =       0.448881515180


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.746230967684        initial  <--
     6.2500e+44     6.2500e+45             4.2262e-49        -0.746230967684
     2.5000e+45     2.5000e+46             1.0565e-49        -0.746230967684
     1.0000e+46     1.0000e+47             2.6414e-50        -0.746230967684

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4235
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2278e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s050 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s050 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=50  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.6254
    reference variance = 0.360097
====================================================
  Execution time = 4.3904e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s050
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5786e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5092e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457953421819
                                         uncertainty =       0.007199125809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.457953421819
                                         uncertainty =       0.007199125809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000478468406
  error estimate for blocks of size 2^( 2) =       0.000502016158
  error estimate for blocks of size 2^( 3) =       0.000523023487
  error estimate for blocks of size 2^( 4) =       0.000538268247
  error estimate for blocks of size 2^( 5) =       0.000547191731
  error estimate for blocks of size 2^( 6) =       0.000551877544
  error estimate for blocks of size 2^( 7) =       0.000554513842

      target function =      -0.738740249808
              le_mean =     -22.661750372047
             les_mean =     514.012793727913
             stat err =       0.000547962841
             autocorr =       1.311582716034
   target nu stat err =       0.000547962841
   target dn stat err =       0.007081314514
      target stat err =       0.005856507261
              std dev =       0.676656509527
             le_variance =       0.457864031885


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266175037205e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+45, overlap shift 6.2500e+46 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+46, overlap shift 2.5000e+47 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+47, overlap shift 1.0000e+48 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.738785578352       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.204065 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9003e+01
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.6803
    reference variance = 0.348185
====================================================
  Execution time = 4.4258e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s050
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5000e-01
  Total weights = 2.0000e+06
  Execution time = 3.6028e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474340726
  error estimate for blocks of size 2^( 2) =       0.000498168855
  error estimate for blocks of size 2^( 3) =       0.000520617366
  error estimate for blocks of size 2^( 4) =       0.000536121304
  error estimate for blocks of size 2^( 5) =       0.000545747897
  error estimate for blocks of size 2^( 6) =       0.000550478381
  error estimate for blocks of size 2^( 7) =       0.000552816384

      target function =      -0.745291353849
              le_mean =     -22.662553193167
             les_mean =     514.041315257679
             stat err =       0.000546290991
             autocorr =       1.326377814359
   target nu stat err =       0.000546290991
   target dn stat err =       0.003508896924
      target stat err =       0.003004518727
              std dev =       0.670819088559
             le_variance =       0.449998249575

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474340726
  error estimate for blocks of size 2^( 2) =       0.000498168855
  error estimate for blocks of size 2^( 3) =       0.000520617366
  error estimate for blocks of size 2^( 4) =       0.000536121304
  error estimate for blocks of size 2^( 5) =       0.000545747897
  error estimate for blocks of size 2^( 6) =       0.000550478381
  error estimate for blocks of size 2^( 7) =       0.000552816384

      target function =      -0.745291353849
              le_mean =     -22.662553193167
             les_mean =     514.041315257679
             stat err =       0.000546290991
             autocorr =       1.326377814355
   target nu stat err =       0.000546290991
   target dn stat err =       0.003508896924
      target stat err =       0.003004518727
              std dev =       0.670819088559
             le_variance =       0.449998249575

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474340726
  error estimate for blocks of size 2^( 2) =       0.000498168855
  error estimate for blocks of size 2^( 3) =       0.000520617366
  error estimate for blocks of size 2^( 4) =       0.000536121304
  error estimate for blocks of size 2^( 5) =       0.000545747897
  error estimate for blocks of size 2^( 6) =       0.000550478381
  error estimate for blocks of size 2^( 7) =       0.000552816384

      target function =      -0.745291353849
              le_mean =     -22.662553193167
             les_mean =     514.041315257679
             stat err =       0.000546290991
             autocorr =       1.326377814355
   target nu stat err =       0.000546290991
   target dn stat err =       0.003508896924
      target stat err =       0.003004518727
              std dev =       0.670819088559
             le_variance =       0.449998249575

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450077316031
                                         uncertainty =       0.003509899195

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474340726
  error estimate for blocks of size 2^( 2) =       0.000498168855
  error estimate for blocks of size 2^( 3) =       0.000520617366
  error estimate for blocks of size 2^( 4) =       0.000536121304
  error estimate for blocks of size 2^( 5) =       0.000545747897
  error estimate for blocks of size 2^( 6) =       0.000550478381
  error estimate for blocks of size 2^( 7) =       0.000552816384

      target function =      -0.745291353849
              le_mean =     -22.662553193167
             les_mean =     514.041315257679
             stat err =       0.000546290991
             autocorr =       1.326377814355
   target nu stat err =       0.000546290991
   target dn stat err =       0.003508896924
      target stat err =       0.003004518727
              std dev =       0.670819088559
             le_variance =       0.449998249575


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745291353849        initial  <--
     6.2500e+45     6.2500e+46             0.0000e+00        -0.745291353849
     2.5000e+46     2.5000e+47             0.0000e+00        -0.745291353849
     1.0000e+47     1.0000e+48             0.0000e+00        -0.745291353849

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.3571
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2137e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s051 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s051 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=51  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.6432
    reference variance = 0.554339
====================================================
  Execution time = 4.4222e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s051
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5501e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5112e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455102560635
                                         uncertainty =       0.005184806052

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455102560635
                                         uncertainty =       0.005184806052

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000476973549
  error estimate for blocks of size 2^( 2) =       0.000500839157
  error estimate for blocks of size 2^( 3) =       0.000522169792
  error estimate for blocks of size 2^( 4) =       0.000537035522
  error estimate for blocks of size 2^( 5) =       0.000546097846
  error estimate for blocks of size 2^( 6) =       0.000550953309
  error estimate for blocks of size 2^( 7) =       0.000556617189

      target function =      -0.741112504958
              le_mean =     -22.662141045923
             les_mean =     514.027644090824
             stat err =       0.000547675967
             autocorr =       1.318435158015
   target nu stat err =       0.000547675967
   target dn stat err =       0.005056846729
      target stat err =       0.004233025966
              std dev =       0.674542461969
             le_variance =       0.455007533000


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266214104592e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+46, overlap shift 6.2500e+47 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+47, overlap shift 2.5000e+48 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+48, overlap shift 1.0000e+49 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.741135476088       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.205297 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9341e+01
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.671
    reference variance = 0.668047
====================================================
  Execution time = 4.4005e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s051
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4957e-01
  Total weights = 2.0000e+06
  Execution time = 3.6013e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474115901
  error estimate for blocks of size 2^( 2) =       0.000498031654
  error estimate for blocks of size 2^( 3) =       0.000520082579
  error estimate for blocks of size 2^( 4) =       0.000535818902
  error estimate for blocks of size 2^( 5) =       0.000545934802
  error estimate for blocks of size 2^( 6) =       0.000550194113
  error estimate for blocks of size 2^( 7) =       0.000554231514

      target function =      -0.745650291113
              le_mean =     -22.662717374780
             les_mean =     514.048330360035
             stat err =       0.000546544833
             autocorr =       1.328870140051
   target nu stat err =       0.000546544833
   target dn stat err =       0.002937947110
      target stat err =       0.002541027506
              std dev =       0.670501137719
             le_variance =       0.449571775683

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474115901
  error estimate for blocks of size 2^( 2) =       0.000498031654
  error estimate for blocks of size 2^( 3) =       0.000520082579
  error estimate for blocks of size 2^( 4) =       0.000535818902
  error estimate for blocks of size 2^( 5) =       0.000545934802
  error estimate for blocks of size 2^( 6) =       0.000550194113
  error estimate for blocks of size 2^( 7) =       0.000554231514

      target function =      -0.745650291113
              le_mean =     -22.662717374780
             les_mean =     514.048330360035
             stat err =       0.000546544833
             autocorr =       1.328870140051
   target nu stat err =       0.000546544833
   target dn stat err =       0.002937947110
      target stat err =       0.002541027506
              std dev =       0.670501137719
             le_variance =       0.449571775683

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474115901
  error estimate for blocks of size 2^( 2) =       0.000498031654
  error estimate for blocks of size 2^( 3) =       0.000520082579
  error estimate for blocks of size 2^( 4) =       0.000535818902
  error estimate for blocks of size 2^( 5) =       0.000545934802
  error estimate for blocks of size 2^( 6) =       0.000550194113
  error estimate for blocks of size 2^( 7) =       0.000554231514

      target function =      -0.745650291113
              le_mean =     -22.662717374780
             les_mean =     514.048330360035
             stat err =       0.000546544833
             autocorr =       1.328870140051
   target nu stat err =       0.000546544833
   target dn stat err =       0.002937947110
      target stat err =       0.002541027506
              std dev =       0.670501137719
             le_variance =       0.449571775683

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449438425052
                                         uncertainty =       0.002750528799

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474115901
  error estimate for blocks of size 2^( 2) =       0.000498031654
  error estimate for blocks of size 2^( 3) =       0.000520082579
  error estimate for blocks of size 2^( 4) =       0.000535818902
  error estimate for blocks of size 2^( 5) =       0.000545934802
  error estimate for blocks of size 2^( 6) =       0.000550194113
  error estimate for blocks of size 2^( 7) =       0.000554231514

      target function =      -0.745650291113
              le_mean =     -22.662717374780
             les_mean =     514.048330360035
             stat err =       0.000546544833
             autocorr =       1.328870140051
   target nu stat err =       0.000546544833
   target dn stat err =       0.002937947110
      target stat err =       0.002541027506
              std dev =       0.670501137719
             le_variance =       0.449571775683


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745650291113        initial  <--
     6.2500e+46     6.2500e+47             0.0000e+00        -0.745650291113
     2.5000e+47     2.5000e+48             0.0000e+00        -0.745650291113
     1.0000e+48     1.0000e+49             0.0000e+00        -0.745650291113

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.1026
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2145e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s052 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s052 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=52  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.5835
    reference variance = 0.539826
====================================================
  Execution time = 4.5617e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s052
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4529e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5532e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445303551761
                                         uncertainty =       0.002629189756

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445303551761
                                         uncertainty =       0.002629189756

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000471853528
  error estimate for blocks of size 2^( 2) =       0.000495488334
  error estimate for blocks of size 2^( 3) =       0.000517501163
  error estimate for blocks of size 2^( 4) =       0.000533599341
  error estimate for blocks of size 2^( 5) =       0.000542274749
  error estimate for blocks of size 2^( 6) =       0.000548812047
  error estimate for blocks of size 2^( 7) =       0.000551765542

      target function =      -0.749267180460
              le_mean =     -22.661867205943
             les_mean =     514.005516540384
             stat err =       0.000544112920
             autocorr =       1.329730603220
   target nu stat err =       0.000544112920
   target dn stat err =       0.002688229323
      target stat err =       0.002356458334
              std dev =       0.667301658341
             le_variance =       0.445291503225


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266186720594e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+47, overlap shift 6.2500e+48 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+48, overlap shift 2.5000e+49 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+49, overlap shift 1.0000e+50 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.749273647297       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.206464 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1156e+01
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.7293
    reference variance = 0.325129
====================================================
  Execution time = 4.3657e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s052
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4741e-01
  Total weights = 2.0000e+06
  Execution time = 3.6049e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472972450
  error estimate for blocks of size 2^( 2) =       0.000497090587
  error estimate for blocks of size 2^( 3) =       0.000518776578
  error estimate for blocks of size 2^( 4) =       0.000534965506
  error estimate for blocks of size 2^( 5) =       0.000544275817
  error estimate for blocks of size 2^( 6) =       0.000549697912
  error estimate for blocks of size 2^( 7) =       0.000552949173

      target function =      -0.747484296682
              le_mean =     -22.661448023571
             les_mean =     513.988632178657
             stat err =       0.000545472102
             autocorr =       1.330066632175
   target nu stat err =       0.000545472102
   target dn stat err =       0.003020253316
      target stat err =       0.002615290578
              std dev =       0.668884053755
             le_variance =       0.447405877368

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472972450
  error estimate for blocks of size 2^( 2) =       0.000497090587
  error estimate for blocks of size 2^( 3) =       0.000518776578
  error estimate for blocks of size 2^( 4) =       0.000534965506
  error estimate for blocks of size 2^( 5) =       0.000544275817
  error estimate for blocks of size 2^( 6) =       0.000549697912
  error estimate for blocks of size 2^( 7) =       0.000552949173

      target function =      -0.747484296682
              le_mean =     -22.661448023571
             les_mean =     513.988632178657
             stat err =       0.000545472102
             autocorr =       1.330066632175
   target nu stat err =       0.000545472102
   target dn stat err =       0.003020253316
      target stat err =       0.002615290578
              std dev =       0.668884053755
             le_variance =       0.447405877368

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472972450
  error estimate for blocks of size 2^( 2) =       0.000497090587
  error estimate for blocks of size 2^( 3) =       0.000518776578
  error estimate for blocks of size 2^( 4) =       0.000534965506
  error estimate for blocks of size 2^( 5) =       0.000544275817
  error estimate for blocks of size 2^( 6) =       0.000549697912
  error estimate for blocks of size 2^( 7) =       0.000552949173

      target function =      -0.747484296682
              le_mean =     -22.661448023571
             les_mean =     513.988632178657
             stat err =       0.000545472102
             autocorr =       1.330066632175
   target nu stat err =       0.000545472102
   target dn stat err =       0.003020253316
      target stat err =       0.002615290578
              std dev =       0.668884053755
             le_variance =       0.447405877368

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.447412359755
                                         uncertainty =       0.002946479016

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472972450
  error estimate for blocks of size 2^( 2) =       0.000497090587
  error estimate for blocks of size 2^( 3) =       0.000518776578
  error estimate for blocks of size 2^( 4) =       0.000534965506
  error estimate for blocks of size 2^( 5) =       0.000544275817
  error estimate for blocks of size 2^( 6) =       0.000549697912
  error estimate for blocks of size 2^( 7) =       0.000552949173

      target function =      -0.747484296682
              le_mean =     -22.661448023571
             les_mean =     513.988632178657
             stat err =       0.000545472102
             autocorr =       1.330066632175
   target nu stat err =       0.000545472102
   target dn stat err =       0.003020253316
      target stat err =       0.002615290578
              std dev =       0.668884053755
             le_variance =       0.447405877368


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.747484296682        initial  <--
     6.2500e+47     6.2500e+48             0.0000e+00        -0.747484296682
     2.5000e+48     2.5000e+49             0.0000e+00        -0.747484296682
     1.0000e+49     1.0000e+50             0.0000e+00        -0.747484296682

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7732
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2293e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s053 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s053 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=53  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.7174
    reference variance = 0.463065
====================================================
  Execution time = 4.4987e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s053
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.6046e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5233e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460441198496
                                         uncertainty =       0.006561938425

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460441198496
                                         uncertainty =       0.006561938425

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479825268
  error estimate for blocks of size 2^( 2) =       0.000503291744
  error estimate for blocks of size 2^( 3) =       0.000524632882
  error estimate for blocks of size 2^( 4) =       0.000539815737
  error estimate for blocks of size 2^( 5) =       0.000548359585
  error estimate for blocks of size 2^( 6) =       0.000554635088
  error estimate for blocks of size 2^( 7) =       0.000557858027

      target function =      -0.736617371635
              le_mean =     -22.661645806315
             les_mean =     514.010654995976
             stat err =       0.000550167109
             autocorr =       1.314688965852
   target nu stat err =       0.000550167109
   target dn stat err =       0.006503244066
      target stat err =       0.005352520104
              std dev =       0.678575401362
             le_variance =       0.460464575334


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266164580631e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+48, overlap shift 6.2500e+49 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+49, overlap shift 2.5000e+50 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+50, overlap shift 1.0000e+51 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736655175534       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.207620 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0227e+01
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.7043
    reference variance = 0.353146
====================================================
  Execution time = 4.3765e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s053
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.6256e-01
  Total weights = 2.0000e+06
  Execution time = 3.6256e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000480915116
  error estimate for blocks of size 2^( 2) =       0.000503985184
  error estimate for blocks of size 2^( 3) =       0.000525128091
  error estimate for blocks of size 2^( 4) =       0.000541090178
  error estimate for blocks of size 2^( 5) =       0.000549021448
  error estimate for blocks of size 2^( 6) =       0.000554041074
  error estimate for blocks of size 2^( 7) =       0.000556826763

      target function =      -0.734882497267
              le_mean =     -22.662516447380
             les_mean =     514.052210193806
             stat err =       0.000550244866
             autocorr =       1.309106991329
   target nu stat err =       0.000550244866
   target dn stat err =       0.006657290324
      target stat err =       0.005459253618
              std dev =       0.680116679180
             le_variance =       0.462558697299

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000480915116
  error estimate for blocks of size 2^( 2) =       0.000503985184
  error estimate for blocks of size 2^( 3) =       0.000525128091
  error estimate for blocks of size 2^( 4) =       0.000541090178
  error estimate for blocks of size 2^( 5) =       0.000549021448
  error estimate for blocks of size 2^( 6) =       0.000554041074
  error estimate for blocks of size 2^( 7) =       0.000556826763

      target function =      -0.734882497267
              le_mean =     -22.662516447380
             les_mean =     514.052210193806
             stat err =       0.000550244866
             autocorr =       1.309106991329
   target nu stat err =       0.000550244866
   target dn stat err =       0.006657290324
      target stat err =       0.005459253618
              std dev =       0.680116679180
             le_variance =       0.462558697299

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000480915116
  error estimate for blocks of size 2^( 2) =       0.000503985184
  error estimate for blocks of size 2^( 3) =       0.000525128091
  error estimate for blocks of size 2^( 4) =       0.000541090178
  error estimate for blocks of size 2^( 5) =       0.000549021448
  error estimate for blocks of size 2^( 6) =       0.000554041074
  error estimate for blocks of size 2^( 7) =       0.000556826763

      target function =      -0.734882497267
              le_mean =     -22.662516447380
             les_mean =     514.052210193806
             stat err =       0.000550244866
             autocorr =       1.309106991329
   target nu stat err =       0.000550244866
   target dn stat err =       0.006657290324
      target stat err =       0.005459253618
              std dev =       0.680116679180
             le_variance =       0.462558697299

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.462443081333
                                         uncertainty =       0.006434058875

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000480915116
  error estimate for blocks of size 2^( 2) =       0.000503985184
  error estimate for blocks of size 2^( 3) =       0.000525128091
  error estimate for blocks of size 2^( 4) =       0.000541090178
  error estimate for blocks of size 2^( 5) =       0.000549021448
  error estimate for blocks of size 2^( 6) =       0.000554041074
  error estimate for blocks of size 2^( 7) =       0.000556826763

      target function =      -0.734882497267
              le_mean =     -22.662516447380
             les_mean =     514.052210193806
             stat err =       0.000550244866
             autocorr =       1.309106991329
   target nu stat err =       0.000550244866
   target dn stat err =       0.006657290324
      target stat err =       0.005459253618
              std dev =       0.680116679180
             le_variance =       0.462558697299


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.734882497267        initial  <--
     6.2500e+48     6.2500e+49             0.0000e+00        -0.734882497267
     2.5000e+49     2.5000e+50             0.0000e+00        -0.734882497267
     1.0000e+50     1.0000e+51             0.0000e+00        -0.734882497267

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.0040
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2224e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s054 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s054 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=54  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.6867
    reference variance = 0.377324
====================================================
  Execution time = 4.4872e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s054
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.7565e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5440e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.475797122782
                                         uncertainty =       0.023292251686

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.475797122782
                                         uncertainty =       0.023292251686

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000487670822
  error estimate for blocks of size 2^( 2) =       0.000511327888
  error estimate for blocks of size 2^( 3) =       0.000532887688
  error estimate for blocks of size 2^( 4) =       0.000548025579
  error estimate for blocks of size 2^( 5) =       0.000556796689
  error estimate for blocks of size 2^( 6) =       0.000561655409
  error estimate for blocks of size 2^( 7) =       0.000562853145

      target function =      -0.723985163878
              le_mean =     -22.661653411810
             les_mean =     514.026180779833
             stat err =       0.000557332706
             autocorr =       1.306097249921
   target nu stat err =       0.000557332706
   target dn stat err =       0.023224533314
      target stat err =       0.018365514916
              std dev =       0.689670690010
             le_variance =       0.475645660659


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266165341181e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+49, overlap shift 6.2500e+50 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+50, overlap shift 2.5000e+51 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+51, overlap shift 1.0000e+52 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.724446691706       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.208778 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0319e+01
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.6515
    reference variance = 0.333237
====================================================
  Execution time = 4.5417e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s054
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.4248e-01
  Total weights = 2.0000e+06
  Execution time = 3.5942e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470359585
  error estimate for blocks of size 2^( 2) =       0.000494390599
  error estimate for blocks of size 2^( 3) =       0.000516188847
  error estimate for blocks of size 2^( 4) =       0.000531638254
  error estimate for blocks of size 2^( 5) =       0.000540870555
  error estimate for blocks of size 2^( 6) =       0.000547072141
  error estimate for blocks of size 2^( 7) =       0.000551408953

      target function =      -0.751655438301
              le_mean =     -22.662526419412
             les_mean =     514.032579767744
             stat err =       0.000542747476
             autocorr =       1.331483004600
   target nu stat err =       0.000542747476
   target dn stat err =       0.002563023557
      target stat err =       0.002270031804
              std dev =       0.665188904325
             le_variance =       0.442476278437

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470359585
  error estimate for blocks of size 2^( 2) =       0.000494390599
  error estimate for blocks of size 2^( 3) =       0.000516188847
  error estimate for blocks of size 2^( 4) =       0.000531638254
  error estimate for blocks of size 2^( 5) =       0.000540870555
  error estimate for blocks of size 2^( 6) =       0.000547072141
  error estimate for blocks of size 2^( 7) =       0.000551408953

      target function =      -0.751655438301
              le_mean =     -22.662526419412
             les_mean =     514.032579767744
             stat err =       0.000542747476
             autocorr =       1.331483004600
   target nu stat err =       0.000542747476
   target dn stat err =       0.002563023557
      target stat err =       0.002270031804
              std dev =       0.665188904325
             le_variance =       0.442476278437

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470359585
  error estimate for blocks of size 2^( 2) =       0.000494390599
  error estimate for blocks of size 2^( 3) =       0.000516188847
  error estimate for blocks of size 2^( 4) =       0.000531638254
  error estimate for blocks of size 2^( 5) =       0.000540870555
  error estimate for blocks of size 2^( 6) =       0.000547072141
  error estimate for blocks of size 2^( 7) =       0.000551408953

      target function =      -0.751655438301
              le_mean =     -22.662526419412
             les_mean =     514.032579767744
             stat err =       0.000542747476
             autocorr =       1.331483004600
   target nu stat err =       0.000542747476
   target dn stat err =       0.002563023557
      target stat err =       0.002270031804
              std dev =       0.665188904325
             le_variance =       0.442476278437

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.442540679329
                                         uncertainty =       0.002591849979

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000470359585
  error estimate for blocks of size 2^( 2) =       0.000494390599
  error estimate for blocks of size 2^( 3) =       0.000516188847
  error estimate for blocks of size 2^( 4) =       0.000531638254
  error estimate for blocks of size 2^( 5) =       0.000540870555
  error estimate for blocks of size 2^( 6) =       0.000547072141
  error estimate for blocks of size 2^( 7) =       0.000551408953

      target function =      -0.751655438301
              le_mean =     -22.662526419412
             les_mean =     514.032579767744
             stat err =       0.000542747476
             autocorr =       1.331483004600
   target nu stat err =       0.000542747476
   target dn stat err =       0.002563023557
      target stat err =       0.002270031804
              std dev =       0.665188904325
             le_variance =       0.442476278437


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.751655438301        initial  <--
     6.2500e+49     6.2500e+50             0.0000e+00        -0.751655438301
     2.5000e+50     2.5000e+51             0.0000e+00        -0.751655438301
     1.0000e+51     1.0000e+52             0.0000e+00        -0.751655438301

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4729
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2380e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s055 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s055 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=55  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.6408
    reference variance = 0.304018
====================================================
  Execution time = 4.4549e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s055
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4622e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4904e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445590962847
                                         uncertainty =       0.002047664132

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.445590962847
                                         uncertainty =       0.002047664132

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472342979
  error estimate for blocks of size 2^( 2) =       0.000496279340
  error estimate for blocks of size 2^( 3) =       0.000517766809
  error estimate for blocks of size 2^( 4) =       0.000532678517
  error estimate for blocks of size 2^( 5) =       0.000541997458
  error estimate for blocks of size 2^( 6) =       0.000547319758
  error estimate for blocks of size 2^( 7) =       0.000550872245

      target function =      -0.748483897764
              le_mean =     -22.662275450837
             les_mean =     514.024944166168
             stat err =       0.000543216995
             autocorr =       1.322609897256
   target nu stat err =       0.000543216995
   target dn stat err =       0.002368654997
      target stat err =       0.002093358574
              std dev =       0.667993847018
             le_variance =       0.446215779653


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266227545084e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+50, overlap shift 6.2500e+51 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+51, overlap shift 2.5000e+52 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+52, overlap shift 1.0000e+53 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.748488968866       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.209918 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9460e+01
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.7192
    reference variance = 0.354923
====================================================
  Execution time = 4.4328e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s055
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5163e-01
  Total weights = 2.0000e+06
  Execution time = 3.6054e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475200890
  error estimate for blocks of size 2^( 2) =       0.000498714698
  error estimate for blocks of size 2^( 3) =       0.000520874057
  error estimate for blocks of size 2^( 4) =       0.000536473812
  error estimate for blocks of size 2^( 5) =       0.000545864405
  error estimate for blocks of size 2^( 6) =       0.000550420575
  error estimate for blocks of size 2^( 7) =       0.000554966677

      target function =      -0.743936047951
              le_mean =     -22.661699583775
             les_mean =     514.004259571705
             stat err =       0.000546931367
             autocorr =       1.324680586497
   target nu stat err =       0.000546931367
   target dn stat err =       0.003726167751
      target stat err =       0.003167711887
              std dev =       0.672035543903
             le_variance =       0.451631772269

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475200890
  error estimate for blocks of size 2^( 2) =       0.000498714698
  error estimate for blocks of size 2^( 3) =       0.000520874057
  error estimate for blocks of size 2^( 4) =       0.000536473812
  error estimate for blocks of size 2^( 5) =       0.000545864405
  error estimate for blocks of size 2^( 6) =       0.000550420575
  error estimate for blocks of size 2^( 7) =       0.000554966677

      target function =      -0.743936047951
              le_mean =     -22.661699583775
             les_mean =     514.004259571705
             stat err =       0.000546931367
             autocorr =       1.324680586497
   target nu stat err =       0.000546931367
   target dn stat err =       0.003726167751
      target stat err =       0.003167711887
              std dev =       0.672035543903
             le_variance =       0.451631772269

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475200890
  error estimate for blocks of size 2^( 2) =       0.000498714698
  error estimate for blocks of size 2^( 3) =       0.000520874057
  error estimate for blocks of size 2^( 4) =       0.000536473812
  error estimate for blocks of size 2^( 5) =       0.000545864405
  error estimate for blocks of size 2^( 6) =       0.000550420575
  error estimate for blocks of size 2^( 7) =       0.000554966677

      target function =      -0.743936047951
              le_mean =     -22.661699583775
             les_mean =     514.004259571705
             stat err =       0.000546931367
             autocorr =       1.324680586497
   target nu stat err =       0.000546931367
   target dn stat err =       0.003726167751
      target stat err =       0.003167711887
              std dev =       0.672035543903
             le_variance =       0.451631772269

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451592244557
                                         uncertainty =       0.003520977978

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475200890
  error estimate for blocks of size 2^( 2) =       0.000498714698
  error estimate for blocks of size 2^( 3) =       0.000520874057
  error estimate for blocks of size 2^( 4) =       0.000536473812
  error estimate for blocks of size 2^( 5) =       0.000545864405
  error estimate for blocks of size 2^( 6) =       0.000550420575
  error estimate for blocks of size 2^( 7) =       0.000554966677

      target function =      -0.743936047951
              le_mean =     -22.661699583775
             les_mean =     514.004259571705
             stat err =       0.000546931367
             autocorr =       1.324680586497
   target nu stat err =       0.000546931367
   target dn stat err =       0.003726167751
      target stat err =       0.003167711887
              std dev =       0.672035543903
             le_variance =       0.451631772269


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.743936047951        initial  <--
     6.2500e+50     6.2500e+51             0.0000e+00        -0.743936047951
     2.5000e+51     2.5000e+52             0.0000e+00        -0.743936047951
     1.0000e+52     1.0000e+53             0.0000e+00        -0.743936047951

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.4383
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2190e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s056 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s056 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=56  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2672e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.6537
    reference variance = 0.445464
====================================================
  Execution time = 4.4213e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s056
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5655e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5356e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456661818220
                                         uncertainty =       0.005079109858

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.456661818220
                                         uncertainty =       0.005079109858

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477782681
  error estimate for blocks of size 2^( 2) =       0.000501355448
  error estimate for blocks of size 2^( 3) =       0.000522954619
  error estimate for blocks of size 2^( 4) =       0.000538091620
  error estimate for blocks of size 2^( 5) =       0.000546156885
  error estimate for blocks of size 2^( 6) =       0.000552188986
  error estimate for blocks of size 2^( 7) =       0.000555951097

      target function =      -0.739835540064
              le_mean =     -22.662148183928
             les_mean =     514.029512662975
             stat err =       0.000548097147
             autocorr =       1.315995111956
   target nu stat err =       0.000548097147
   target dn stat err =       0.004929207654
      target stat err =       0.004114494760
              std dev =       0.675686747653
             le_variance =       0.456552580954


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266214818393e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+51, overlap shift 6.2500e+52 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739857744712       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.60e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+51 is 7.286440e-57

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+52, overlap shift 2.5000e+53 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739857744712       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+52 is 1.821610e-57

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+53, overlap shift 1.0000e+54 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.739857744712       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.60e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.739857744712       residual = 2.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+53 is 4.554025e-58

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.211558 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9576e+01
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.6096
    reference variance = 0.448293
====================================================
  Execution time = 4.3739e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s056
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.4682e-01
  Total weights = 2.0000e+06
  Execution time = 3.6021e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472662162
  error estimate for blocks of size 2^( 2) =       0.000497021135
  error estimate for blocks of size 2^( 3) =       0.000518970043
  error estimate for blocks of size 2^( 4) =       0.000534188792
  error estimate for blocks of size 2^( 5) =       0.000543155924
  error estimate for blocks of size 2^( 6) =       0.000547976624
  error estimate for blocks of size 2^( 7) =       0.000548663025

      target function =      -0.747975392621
              le_mean =     -22.661761206402
             les_mean =     514.002239790789
             stat err =       0.000543496091
             autocorr =       1.322181804517
   target nu stat err =       0.000543496091
   target dn stat err =       0.003102944114
      target stat err =       0.002687189953
              std dev =       0.668445239508
             le_variance =       0.446819038221

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472662162
  error estimate for blocks of size 2^( 2) =       0.000497021135
  error estimate for blocks of size 2^( 3) =       0.000518970043
  error estimate for blocks of size 2^( 4) =       0.000534188792
  error estimate for blocks of size 2^( 5) =       0.000543155924
  error estimate for blocks of size 2^( 6) =       0.000547976624
  error estimate for blocks of size 2^( 7) =       0.000548663025

      target function =      -0.747975392621
              le_mean =     -22.661761206402
             les_mean =     514.002239790789
             stat err =       0.000543496091
             autocorr =       1.322181804517
   target nu stat err =       0.000543496091
   target dn stat err =       0.003102944114
      target stat err =       0.002687189953
              std dev =       0.668445239508
             le_variance =       0.446819038221

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472662162
  error estimate for blocks of size 2^( 2) =       0.000497021135
  error estimate for blocks of size 2^( 3) =       0.000518970043
  error estimate for blocks of size 2^( 4) =       0.000534188792
  error estimate for blocks of size 2^( 5) =       0.000543155924
  error estimate for blocks of size 2^( 6) =       0.000547976624
  error estimate for blocks of size 2^( 7) =       0.000548663025

      target function =      -0.747975392621
              le_mean =     -22.661761206402
             les_mean =     514.002239790789
             stat err =       0.000543496091
             autocorr =       1.322181804517
   target nu stat err =       0.000543496091
   target dn stat err =       0.003102944114
      target stat err =       0.002687189953
              std dev =       0.668445239508
             le_variance =       0.446819038221

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.446745526412
                                         uncertainty =       0.002833956915

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000472662162
  error estimate for blocks of size 2^( 2) =       0.000497021135
  error estimate for blocks of size 2^( 3) =       0.000518970043
  error estimate for blocks of size 2^( 4) =       0.000534188792
  error estimate for blocks of size 2^( 5) =       0.000543155924
  error estimate for blocks of size 2^( 6) =       0.000547976624
  error estimate for blocks of size 2^( 7) =       0.000548663025

      target function =      -0.747975392621
              le_mean =     -22.661761206402
             les_mean =     514.002239790789
             stat err =       0.000543496091
             autocorr =       1.322181804517
   target nu stat err =       0.000543496091
   target dn stat err =       0.003102944114
      target stat err =       0.002687189953
              std dev =       0.668445239508
             le_variance =       0.446819038221


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.747975392621        initial  <--
     6.2500e+51     6.2500e+52             7.2864e-57        -0.747975392621
     2.5000e+52     2.5000e+53             1.8216e-57        -0.747975392621
     1.0000e+53     1.0000e+54             4.5540e-58        -0.747975392621

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.8601
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2144e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s057 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s057 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=57  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.6649
    reference variance = 0.52234
====================================================
  Execution time = 4.6161e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s057
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5541e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5202e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455401559553
                                         uncertainty =       0.005841939136

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.455401559553
                                         uncertainty =       0.005841939136

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000477184234
  error estimate for blocks of size 2^( 2) =       0.000501053793
  error estimate for blocks of size 2^( 3) =       0.000523025827
  error estimate for blocks of size 2^( 4) =       0.000538597346
  error estimate for blocks of size 2^( 5) =       0.000547975108
  error estimate for blocks of size 2^( 6) =       0.000553360233
  error estimate for blocks of size 2^( 7) =       0.000557666832

      target function =      -0.740784756739
              le_mean =     -22.661984478440
             les_mean =     514.020949860549
             stat err =       0.000549399880
             autocorr =       1.325576958639
   target nu stat err =       0.000549399880
   target dn stat err =       0.004777986939
      target stat err =       0.004000455233
              std dev =       0.674840416114
             le_variance =       0.455409587221


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266198447844e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+52, overlap shift 6.2500e+53 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740805638018       residual = 4.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.60e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+52 is 6.520530e-58

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+53, overlap shift 2.5000e+54 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+54, overlap shift 1.0000e+55 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.740805638018       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.212935 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1373e+01
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.5978
    reference variance = 0.332906
====================================================
  Execution time = 4.3548e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s057
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5155e-01
  Total weights = 2.0000e+06
  Execution time = 3.5944e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475156912
  error estimate for blocks of size 2^( 2) =       0.000498123936
  error estimate for blocks of size 2^( 3) =       0.000519965621
  error estimate for blocks of size 2^( 4) =       0.000536090601
  error estimate for blocks of size 2^( 5) =       0.000543470464
  error estimate for blocks of size 2^( 6) =       0.000548380644
  error estimate for blocks of size 2^( 7) =       0.000551921629

      target function =      -0.744007760315
              le_mean =     -22.661768207185
             les_mean =     514.007286232241
             stat err =       0.000544965835
             autocorr =       1.315420027983
   target nu stat err =       0.000544965835
   target dn stat err =       0.003311581550
      target stat err =       0.002829596952
              std dev =       0.671973349043
             le_variance =       0.451548181825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475156912
  error estimate for blocks of size 2^( 2) =       0.000498123936
  error estimate for blocks of size 2^( 3) =       0.000519965621
  error estimate for blocks of size 2^( 4) =       0.000536090601
  error estimate for blocks of size 2^( 5) =       0.000543470464
  error estimate for blocks of size 2^( 6) =       0.000548380644
  error estimate for blocks of size 2^( 7) =       0.000551921629

      target function =      -0.744007760315
              le_mean =     -22.661768207185
             les_mean =     514.007286232241
             stat err =       0.000544965835
             autocorr =       1.315420027983
   target nu stat err =       0.000544965835
   target dn stat err =       0.003311581550
      target stat err =       0.002829596952
              std dev =       0.671973349043
             le_variance =       0.451548181825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475156912
  error estimate for blocks of size 2^( 2) =       0.000498123936
  error estimate for blocks of size 2^( 3) =       0.000519965621
  error estimate for blocks of size 2^( 4) =       0.000536090601
  error estimate for blocks of size 2^( 5) =       0.000543470464
  error estimate for blocks of size 2^( 6) =       0.000548380644
  error estimate for blocks of size 2^( 7) =       0.000551921629

      target function =      -0.744007760315
              le_mean =     -22.661768207185
             les_mean =     514.007286232241
             stat err =       0.000544965835
             autocorr =       1.315420027983
   target nu stat err =       0.000544965835
   target dn stat err =       0.003311581550
      target stat err =       0.002829596952
              std dev =       0.671973349043
             le_variance =       0.451548181825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451411717667
                                         uncertainty =       0.003369307856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000475156912
  error estimate for blocks of size 2^( 2) =       0.000498123936
  error estimate for blocks of size 2^( 3) =       0.000519965621
  error estimate for blocks of size 2^( 4) =       0.000536090601
  error estimate for blocks of size 2^( 5) =       0.000543470464
  error estimate for blocks of size 2^( 6) =       0.000548380644
  error estimate for blocks of size 2^( 7) =       0.000551921629

      target function =      -0.744007760315
              le_mean =     -22.661768207185
             les_mean =     514.007286232241
             stat err =       0.000544965835
             autocorr =       1.315420027983
   target nu stat err =       0.000544965835
   target dn stat err =       0.003311581550
      target stat err =       0.002829596952
              std dev =       0.671973349043
             le_variance =       0.451548181825


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744007760315        initial  <--
     6.2500e+52     6.2500e+53             6.5205e-58        -0.744007760315
     2.5000e+53     2.5000e+54             0.0000e+00        -0.744007760315
     1.0000e+54     1.0000e+55             0.0000e+00        -0.744007760315

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.6068
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2298e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s058 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s058 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=58  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2670e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.6657
    reference variance = 0.406646
====================================================
  Execution time = 4.4153e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s058
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.6041e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5541e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460517813847
                                         uncertainty =       0.007564088559

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.460517813847
                                         uncertainty =       0.007564088559

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000479796014
  error estimate for blocks of size 2^( 2) =       0.000503470228
  error estimate for blocks of size 2^( 3) =       0.000525374434
  error estimate for blocks of size 2^( 4) =       0.000540613854
  error estimate for blocks of size 2^( 5) =       0.000550022919
  error estimate for blocks of size 2^( 6) =       0.000555525619
  error estimate for blocks of size 2^( 7) =       0.000557914452

      target function =      -0.736643173885
              le_mean =     -22.661760878049
             les_mean =     514.015814292977
             stat err =       0.000551019211
             autocorr =       1.318925335112
   target nu stat err =       0.000551019211
   target dn stat err =       0.007800302183
      target stat err =       0.006409112385
              std dev =       0.678534029598
             le_variance =       0.460408429322


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266176087805e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+53, overlap shift 6.2500e+54 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736698241350       residual = 8.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+53 is 7.240876e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+54, overlap shift 2.5000e+55 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736698241350       residual = 8.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+54 is 1.810219e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+55, overlap shift 1.0000e+56 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.736698241350       residual = 8.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.736698241350       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+55 is 4.525547e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.214357 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9701e+01
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.754
    reference variance = 0.503593
====================================================
  Execution time = 4.4069e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s058
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2663e+01
  VMC Evar = 4.5050e-01
  Total weights = 2.0000e+06
  Execution time = 3.6493e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474606765
  error estimate for blocks of size 2^( 2) =       0.000498161286
  error estimate for blocks of size 2^( 3) =       0.000519173020
  error estimate for blocks of size 2^( 4) =       0.000534301792
  error estimate for blocks of size 2^( 5) =       0.000543042351
  error estimate for blocks of size 2^( 6) =       0.000547340792
  error estimate for blocks of size 2^( 7) =       0.000549863435

      target function =      -0.744799102976
              le_mean =     -22.662696504161
             les_mean =     514.048315778029
             stat err =       0.000543637093
             autocorr =       1.312049780571
   target nu stat err =       0.000543637093
   target dn stat err =       0.009203153571
      target stat err =       0.007730135501
              std dev =       0.671195324467
             le_variance =       0.450503163587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474606765
  error estimate for blocks of size 2^( 2) =       0.000498161286
  error estimate for blocks of size 2^( 3) =       0.000519173020
  error estimate for blocks of size 2^( 4) =       0.000534301792
  error estimate for blocks of size 2^( 5) =       0.000543042351
  error estimate for blocks of size 2^( 6) =       0.000547340792
  error estimate for blocks of size 2^( 7) =       0.000549863435

      target function =      -0.744799102976
              le_mean =     -22.662696504161
             les_mean =     514.048315778029
             stat err =       0.000543637093
             autocorr =       1.312049780573
   target nu stat err =       0.000543637093
   target dn stat err =       0.009203153571
      target stat err =       0.007730135501
              std dev =       0.671195324467
             le_variance =       0.450503163587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474606765
  error estimate for blocks of size 2^( 2) =       0.000498161286
  error estimate for blocks of size 2^( 3) =       0.000519173020
  error estimate for blocks of size 2^( 4) =       0.000534301792
  error estimate for blocks of size 2^( 5) =       0.000543042351
  error estimate for blocks of size 2^( 6) =       0.000547340792
  error estimate for blocks of size 2^( 7) =       0.000549863435

      target function =      -0.744799102976
              le_mean =     -22.662696504161
             les_mean =     514.048315778029
             stat err =       0.000543637093
             autocorr =       1.312049780573
   target nu stat err =       0.000543637093
   target dn stat err =       0.009203153571
      target stat err =       0.007730135501
              std dev =       0.671195324467
             le_variance =       0.450503163587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.450376672610
                                         uncertainty =       0.008949386328

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474606765
  error estimate for blocks of size 2^( 2) =       0.000498161286
  error estimate for blocks of size 2^( 3) =       0.000519173020
  error estimate for blocks of size 2^( 4) =       0.000534301792
  error estimate for blocks of size 2^( 5) =       0.000543042351
  error estimate for blocks of size 2^( 6) =       0.000547340792
  error estimate for blocks of size 2^( 7) =       0.000549863435

      target function =      -0.744799102976
              le_mean =     -22.662696504161
             les_mean =     514.048315778029
             stat err =       0.000543637093
             autocorr =       1.312049780573
   target nu stat err =       0.000543637093
   target dn stat err =       0.009203153571
      target stat err =       0.007730135501
              std dev =       0.671195324467
             le_variance =       0.450503163587


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.744799102976        initial  <--
     6.2500e+53     6.2500e+54             7.2409e-59        -0.744799102976
     2.5000e+54     2.5000e+55             1.8102e-59        -0.744799102976
     1.0000e+55     1.0000e+56             4.5255e-60        -0.744799102976

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.2283
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2193e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s059 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s059 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=59  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2671e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 29288 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.6862
    reference variance = 0.454079
====================================================
  Execution time = 4.4432e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s059
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2662e+01
  VMC Evar = 4.5103e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5063e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451140007088
                                         uncertainty =       0.003236566268

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.451140007088
                                         uncertainty =       0.003236566268

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474883436
  error estimate for blocks of size 2^( 2) =       0.000498422274
  error estimate for blocks of size 2^( 3) =       0.000520625090
  error estimate for blocks of size 2^( 4) =       0.000536215174
  error estimate for blocks of size 2^( 5) =       0.000545424780
  error estimate for blocks of size 2^( 6) =       0.000549699927
  error estimate for blocks of size 2^( 7) =       0.000550288737

      target function =      -0.744434521084
              le_mean =     -22.662265234758
             les_mean =     514.029293899729
             stat err =       0.000545407154
             autocorr =       1.319069317781
   target nu stat err =       0.000545407154
   target dn stat err =       0.003311496206
      target stat err =       0.002834929384
              std dev =       0.671586595096
             le_variance =       0.451028554712


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.266226523476e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+54, overlap shift 6.2500e+55 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744444270353       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744444270353       residual = 2.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744444270353       residual = 2.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744444270353       residual = 9.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744444270353       residual = 8.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.744444170474       residual = 6.95e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.744084887661       residual = 1.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+54 is 1.310082e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+55, overlap shift 2.5000e+56 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744444270353       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744444270353       residual = 2.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744444270353       residual = 2.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744444270353       residual = 9.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 4.24e+02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 2.37e+04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =       0.000000000000       residual = 2.52e+16           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+55 is 2.661122e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+56, overlap shift 1.0000e+57 and omega -2.3325e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.744444270353       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.744444270353       residual = 2.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.744444270353       residual = 2.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.744444270353       residual = 9.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.744444270353       residual = 8.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 7.21e+07           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+56 is 7.536274e-61

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.217022 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9504e+01
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.6356
    reference variance = 0.413083
====================================================
  Execution time = 4.5850e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s059
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2661e+01
  VMC Evar = 4.4958e-01
  Total weights = 2.0000e+06
  Execution time = 3.5962e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474121704
  error estimate for blocks of size 2^( 2) =       0.000497837544
  error estimate for blocks of size 2^( 3) =       0.000519657656
  error estimate for blocks of size 2^( 4) =       0.000535096131
  error estimate for blocks of size 2^( 5) =       0.000545237760
  error estimate for blocks of size 2^( 6) =       0.000549817938
  error estimate for blocks of size 2^( 7) =       0.000552777632

      target function =      -0.745654099489
              le_mean =     -22.661426905117
             les_mean =     513.989851931240
             stat err =       0.000545732365
             autocorr =       1.324889776463
   target nu stat err =       0.000545732365
   target dn stat err =       0.003455180765
      target stat err =       0.002958121711
              std dev =       0.670509343752
             le_variance =       0.449582780059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474121704
  error estimate for blocks of size 2^( 2) =       0.000497837544
  error estimate for blocks of size 2^( 3) =       0.000519657656
  error estimate for blocks of size 2^( 4) =       0.000535096131
  error estimate for blocks of size 2^( 5) =       0.000545237760
  error estimate for blocks of size 2^( 6) =       0.000549817938
  error estimate for blocks of size 2^( 7) =       0.000552777632

      target function =      -0.745654099489
              le_mean =     -22.661426905117
             les_mean =     513.989851931240
             stat err =       0.000545732365
             autocorr =       1.324889776463
   target nu stat err =       0.000545732365
   target dn stat err =       0.003455180765
      target stat err =       0.002958121711
              std dev =       0.670509343752
             le_variance =       0.449582780059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474121704
  error estimate for blocks of size 2^( 2) =       0.000497837544
  error estimate for blocks of size 2^( 3) =       0.000519657656
  error estimate for blocks of size 2^( 4) =       0.000535096131
  error estimate for blocks of size 2^( 5) =       0.000545237760
  error estimate for blocks of size 2^( 6) =       0.000549817938
  error estimate for blocks of size 2^( 7) =       0.000552777632

      target function =      -0.745654099489
              le_mean =     -22.661426905117
             les_mean =     513.989851931240
             stat err =       0.000545732365
             autocorr =       1.324889776463
   target nu stat err =       0.000545732365
   target dn stat err =       0.003455180765
      target stat err =       0.002958121711
              std dev =       0.670509343752
             le_variance =       0.449582780059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.449506464904
                                         uncertainty =       0.003273602674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000474121704
  error estimate for blocks of size 2^( 2) =       0.000497837544
  error estimate for blocks of size 2^( 3) =       0.000519657656
  error estimate for blocks of size 2^( 4) =       0.000535096131
  error estimate for blocks of size 2^( 5) =       0.000545237760
  error estimate for blocks of size 2^( 6) =       0.000549817938
  error estimate for blocks of size 2^( 7) =       0.000552777632

      target function =      -0.745654099489
              le_mean =     -22.661426905117
             les_mean =     513.989851931240
             stat err =       0.000545732365
             autocorr =       1.324889776463
   target nu stat err =       0.000545732365
   target dn stat err =       0.003455180765
      target stat err =       0.002958121711
              std dev =       0.670509343752
             le_variance =       0.449582780059


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.745654099489        initial  <--
     6.2500e+54     6.2500e+55             1.3101e-59        -0.745654099489
     2.5000e+55     2.5000e+56             2.6611e-60        -0.745654099489
     1.0000e+56     1.0000e+57             7.5363e-61        -0.745654099489

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.9383
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 3.376605e-01 1 1  ON 0
 uu_1                 1.767718e-01 1 1  ON 1
 uu_2                 7.723728e-02 1 1  ON 2
 uu_3                 1.710004e-02 1 1  ON 3
 uu_4                -1.910459e-02 1 1  ON 4
 uu_5                -4.280304e-02 1 1  ON 5
 uu_6                -5.785204e-02 1 1  ON 6
 uu_7                -6.393266e-02 1 1  ON 7
 uu_8                -5.909684e-02 1 1  ON 8
 uu_9                -4.158284e-02 1 1  ON 9
 ud_0                 3.949806e-01 1 1  ON 10
 ud_1                 1.544390e-01 1 1  ON 11
 ud_2                 3.547833e-02 1 1  ON 12
 ud_3                -2.628345e-02 1 1  ON 13
 ud_4                -6.009293e-02 1 1  ON 14
 ud_5                -7.932808e-02 1 1  ON 15
 ud_6                -8.808073e-02 1 1  ON 16
 ud_7                -8.737226e-02 1 1  ON 17
 ud_8                -7.743479e-02 1 1  ON 18
 ud_9                -5.391827e-02 1 1  ON 19
 eC_0                -4.823946e-01 1 1  ON 20
 eC_1                -3.665890e-01 1 1  ON 21
 eC_2                -1.701695e-01 1 1  ON 22
 eC_3                -7.185681e-02 1 1  ON 23
 eC_4                -5.170423e-02 1 1  ON 24
 eC_5                 3.187715e-02 1 1  ON 25
 eC_6                 1.415405e-01 1 1  ON 26
 eC_7                 3.067080e-01 1 1  ON 27
 eC_8                 4.123941e-01 1 1  ON 28
 eC_9                 2.340638e-01 1 1  ON 29
 eO_0                -1.052897e+00 1 1  ON 30
 eO_1                -7.482421e-01 1 1  ON 31
 eO_2                -3.414708e-01 1 1  ON 32
 eO_3                -4.201517e-02 1 1  ON 33
 eO_4                 1.479195e-01 1 1  ON 34
 eO_5                 3.007146e-01 1 1  ON 35
 eO_6                 3.501199e-01 1 1  ON 36
 eO_7                 3.647544e-01 1 1  ON 37
 eO_8                 3.143343e-01 1 1  ON 38
 eO_9                 3.237420e-01 1 1  ON 39
eH1_0                -2.436100e-01 1 1  ON 40
eH1_1                -1.410507e-01 1 1  ON 41
eH1_2                -9.420369e-02 1 1  ON 42
eH1_3                -6.742883e-02 1 1  ON 43
eH1_4                 7.012899e-03 1 1  ON 44
eH1_5                 6.648303e-02 1 1  ON 45
eH1_6                 1.029657e-01 1 1  ON 46
eH1_7                 7.841590e-02 1 1  ON 47
eH1_8                 4.345977e-02 1 1  ON 48
eH1_9                 1.390192e-02 1 1  ON 49
eH2_0                -2.403491e-01 1 1  ON 50
eH2_1                -1.394467e-01 1 1  ON 51
eH2_2                -9.471563e-02 1 1  ON 52
eH2_3                -6.879321e-02 1 1  ON 53
eH2_4                 5.917577e-03 1 1  ON 54
eH2_5                 6.770113e-02 1 1  ON 55
eH2_6                 1.052555e-01 1 1  ON 56
eH2_7                 7.452344e-02 1 1  ON 57
eH2_8                 3.347000e-02 1 1  ON 58
eH2_9                -2.106280e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2345e+02 secs
  Total Execution time = 7.3295e+03 secs

=========================================================
  A new xml input file : FORM.s059.cont.xml
