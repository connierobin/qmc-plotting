Rank =    0  Free Memory = 90954 MB
Rank =    1  Free Memory = 90953 MB
Rank =    2  Free Memory = 90953 MB
Rank =    3  Free Memory = 90953 MB
Rank =    4  Free Memory = 90953 MB
Rank =    5  Free Memory = 90952 MB
Rank =    6  Free Memory = 90952 MB
Rank =    7  Free Memory = 90952 MB
Rank =    8  Free Memory = 90952 MB
Rank =    9  Free Memory = 90952 MB
Rank =   10  Free Memory = 90952 MB
Rank =   11  Free Memory = 90952 MB
Rank =   12  Free Memory = 90952 MB
Rank =   13  Free Memory = 90952 MB
Rank =   14  Free Memory = 90952 MB
Rank =   15  Free Memory = 90937 MB
Rank =   16  Free Memory = 90936 MB
Rank =   17  Free Memory = 90936 MB
Rank =   18  Free Memory = 90936 MB
Rank =   19  Free Memory = 90936 MB
Rank =   20  Free Memory = 90936 MB
Rank =   21  Free Memory = 90936 MB
Rank =   22  Free Memory = 90936 MB
Rank =   23  Free Memory = 90936 MB
Rank =   24  Free Memory = 90936 MB
Rank =   25  Free Memory = 90936 MB
Rank =   26  Free Memory = 90936 MB
Rank =   27  Free Memory = 90936 MB
Rank =   28  Free Memory = 90936 MB
Rank =   29  Free Memory = 90936 MB
Rank =   30  Free Memory = 90936 MB
Rank =   31  Free Memory = 90936 MB
Rank =   32  Free Memory = 90912 MB
Rank =   33  Free Memory = 90912 MB
Rank =   34  Free Memory = 90912 MB
Rank =   35  Free Memory = 90912 MB
Rank =   36  Free Memory = 90912 MB
Rank =   37  Free Memory = 90912 MB
Rank =   38  Free Memory = 90912 MB
Rank =   39  Free Memory = 90912 MB
Rank =   40  Free Memory = 90912 MB
Rank =   41  Free Memory = 90912 MB
Rank =   42  Free Memory = 90912 MB
Rank =   43  Free Memory = 90912 MB
Rank =   44  Free Memory = 90912 MB
Rank =   45  Free Memory = 90912 MB
Rank =   46  Free Memory = 90912 MB
Rank =   47  Free Memory = 90912 MB
Rank =   48  Free Memory = 90912 MB
Rank =   49  Free Memory = 90912 MB
Rank =   50  Free Memory = 90912 MB
Rank =   51  Free Memory = 90912 MB
Rank =   52  Free Memory = 90912 MB
Rank =   53  Free Memory = 90912 MB
Rank =   54  Free Memory = 90912 MB
Rank =   55  Free Memory = 90912 MB
Rank =   56  Free Memory = 90912 MB
Rank =   57  Free Memory = 90912 MB
Rank =   58  Free Memory = 90912 MB
Rank =   59  Free Memory = 90912 MB
Rank =   60  Free Memory = 90912 MB
Rank =   61  Free Memory = 90912 MB
Rank =   62  Free Memory = 90912 MB
Rank =   63  Free Memory = 90912 MB
Rank =   64  Free Memory = 90792 MB
Rank =   65  Free Memory = 90792 MB
Rank =   66  Free Memory = 90792 MB
Rank =   67  Free Memory = 90792 MB
Rank =   68  Free Memory = 90792 MB
Rank =   69  Free Memory = 90792 MB
Rank =   70  Free Memory = 90792 MB
Rank =   71  Free Memory = 90792 MB
Rank =   72  Free Memory = 90792 MB
Rank =   73  Free Memory = 90792 MB
Rank =   74  Free Memory = 90792 MB
Rank =   75  Free Memory = 90792 MB
Rank =   76  Free Memory = 90792 MB
Rank =   77  Free Memory = 90792 MB
Rank =   78  Free Memory = 90792 MB
Rank =   79  Free Memory = 90792 MB
Rank =   80  Free Memory = 90792 MB
Rank =   81  Free Memory = 90792 MB
Rank =   82  Free Memory = 90792 MB
Rank =   83  Free Memory = 90792 MB
Rank =   84  Free Memory = 90792 MB
Rank =   85  Free Memory = 90792 MB
Rank =   86  Free Memory = 90792 MB
Rank =   87  Free Memory = 90792 MB
Rank =   88  Free Memory = 90792 MB
Rank =   89  Free Memory = 90792 MB
Rank =   90  Free Memory = 90792 MB
Rank =   91  Free Memory = 90792 MB
Rank =   92  Free Memory = 90792 MB
Rank =   93  Free Memory = 90792 MB
Rank =   94  Free Memory = 90792 MB
Rank =   95  Free Memory = 90792 MB
Rank =   96  Free Memory = 90171 MB
Rank =   97  Free Memory = 90171 MB
Rank =   98  Free Memory = 90171 MB
Rank =   99  Free Memory = 90171 MB
Rank =  100  Free Memory = 90170 MB
Rank =  101  Free Memory = 90170 MB
Rank =  102  Free Memory = 90170 MB
Rank =  103  Free Memory = 90170 MB
Rank =  104  Free Memory = 90170 MB
Rank =  105  Free Memory = 90170 MB
Rank =  106  Free Memory = 90170 MB
Rank =  107  Free Memory = 90170 MB
Rank =  108  Free Memory = 90170 MB
Rank =  109  Free Memory = 90170 MB
Rank =  110  Free Memory = 90170 MB
Rank =  111  Free Memory = 90170 MB
Rank =  112  Free Memory = 90170 MB
Rank =  113  Free Memory = 90170 MB
Rank =  114  Free Memory = 90170 MB
Rank =  115  Free Memory = 90170 MB
Rank =  116  Free Memory = 90170 MB
Rank =  117  Free Memory = 90170 MB
Rank =  118  Free Memory = 90170 MB
Rank =  119  Free Memory = 90170 MB
Rank =  120  Free Memory = 90170 MB
Rank =  121  Free Memory = 90170 MB
Rank =  122  Free Memory = 90170 MB
Rank =  123  Free Memory = 90170 MB
Rank =  124  Free Memory = 90170 MB
Rank =  125  Free Memory = 90170 MB
Rank =  126  Free Memory = 90170 MB
Rank =  127  Free Memory = 90170 MB
  Input file(s): opt_form_pi2pistar_tett_run001d.xml 

=====================================================
                    QMCPACK 3.7.9

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: gvp
  Last git commit: a1d851bbe8d902a0d3168a885b757a378aeaab54-dirty
  Last git commit date: Mon Feb 13 11:52:39 2023 -0800
  Last git commit subject: Print param update magnitude and largest update
=====================================================
  Global options 

  Total number of MPI ranks = 128
  Number of MPI groups      = 1
  MPI group ID              = 0
  Number of ranks in group  = 128
  MPI ranks per node        = 32
  OMP 1st level threads     = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Structure-of-arrays (SoA) optimization enabled

  Input XML = opt_form_pi2pistar_tett_run001d.xml

  Project = FORM
  date    = 2023-02-21 18:03:36 PST
  host    = n0043.savio3

 Random Number
 -------------
  Offset for the random number seeds based on time: 1016

  Range of prime numbers to use as seeds over processors and threads = 8093-9241


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 12

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 4

 Wavefunction setup: 
 ------------------- 
  Name: psi0

   Jastrow
   -------
    Name: J2   Type: Two-Body   Function: Bspline

    Radial function for species: u - u
     Number of parameters: 10
     Cusp: -0.25
     Cutoff radius: 10

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     uu_0                 2.649825e-01    1         1  ON     0
     uu_1                 1.031922e-01    1         1  ON     1
     uu_2                 2.671327e-03    1         1  ON     2
     uu_3                -5.839186e-02    1         1  ON     3
     uu_4                -9.406147e-02    1         1  ON     4
     uu_5                -1.156986e-01    1         1  ON     5
     uu_6                -1.263122e-01    1         1  ON     6
     uu_7                -1.217707e-01    1         1  ON     7
     uu_8                -1.011989e-01    1         1  ON     8
     uu_9                -5.737995e-02    1         1  ON     9

    Radial function for species: u - d
     Number of parameters: 10
     Cusp: -5.000000e-01
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     ud_0                 3.591613e-01    1         1  ON     0
     ud_1                 1.194849e-01    1         1  ON     1
     ud_2                 1.542462e-03    1         1  ON     2
     ud_3                -6.053600e-02    1         1  ON     3
     ud_4                -9.584507e-02    1         1  ON     4
     ud_5                -1.170942e-01    1         1  ON     5
     ud_6                -1.270522e-01    1         1  ON     6
     ud_7                -1.257851e-01    1         1  ON     7
     ud_8                -1.013484e-01    1         1  ON     8
     ud_9                -5.357665e-02    1         1  ON     9


   Jastrow
   -------
    Name: J1   Type: One-Body   Function: Bspline

    Radial function for element: C
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eC_0                -4.878054e-01    1         1  ON     0
     eC_1                -3.456323e-01    1         1  ON     1
     eC_2                -9.886234e-02    1         1  ON     2
     eC_3                 7.030298e-02    1         1  ON     3
     eC_4                 1.480204e-01    1         1  ON     4
     eC_5                 2.406073e-01    1         1  ON     5
     eC_6                 2.433777e-01    1         1  ON     6
     eC_7                 1.830765e-01    1         1  ON     7
     eC_8                 4.380190e-02    1         1  ON     8
     eC_9                 1.161657e-03    1         1  ON     9

    Radial function for element: O
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eO_0                -8.730713e-01    1         1  ON     0
     eO_1                -5.673305e-01    1         1  ON     1
     eO_2                -1.620356e-01    1         1  ON     2
     eO_3                 1.022998e-01    1         1  ON     3
     eO_4                 2.515925e-01    1         1  ON     4
     eO_5                 3.518854e-01    1         1  ON     5
     eO_6                 3.433105e-01    1         1  ON     6
     eO_7                 2.994457e-01    1         1  ON     7
     eO_8                 1.677334e-01    1         1  ON     8
     eO_9                 6.765612e-02    1         1  ON     9

    Radial function for element: H1
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH1_0                -1.428379e-01    1         1  ON     0
     eH1_1                -3.992997e-02    1         1  ON     1
     eH1_2                -2.219788e-02    1         1  ON     2
     eH1_3                -2.961675e-02    1         1  ON     3
     eH1_4                 3.124522e-03    1         1  ON     4
     eH1_5                 2.093487e-02    1         1  ON     5
     eH1_6                 4.051066e-02    1         1  ON     6
     eH1_7                 3.432390e-02    1         1  ON     7
     eH1_8                 5.291659e-02    1         1  ON     8
     eH1_9                 5.937429e-02    1         1  ON     9

    Radial function for element: H2
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH2_0                -1.535627e-01    1         1  ON     0
     eH2_1                -5.047042e-02    1         1  ON     1
     eH2_2                -2.833244e-02    1         1  ON     2
     eH2_3                -3.306173e-02    1         1  ON     3
     eH2_4                -5.914283e-03    1         1  ON     4
     eH2_5                 8.108544e-03    1         1  ON     5
     eH2_6                 3.304818e-02    1         1  ON     6
     eH2_7                 4.808722e-02    1         1  ON     7
     eH2_8                 8.349927e-02    1         1  ON     8
     eH2_9                 7.876878e-02    1         1  ON     9

  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  LCAO: SoaAtomicBasisSet<MultiQuintic,0>
  AO BasisSet for C
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for O
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.018591e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for H1
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

  AO BasisSet for H2
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with '' basis set.
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with '' basis set.
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 140 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 1.011529e+00
Norm of qchem ci vector (sum of qchem_ci^2): 0.000000e+00
Found 28 unique up determinants.
Found 28 unique down determinants.
Number of terms in pairs array: 12
Number of terms in pairs array: 12
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec

  ECPotential builder for pseudopotential 

  Adding pseudopotential for C
   Linear grid  ri=0.000000e+00 rf=1.000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.405000e+00
  Using global grid with delta = 1.000000e-03
   Making L=1 a local potential with a radial cutoff of 9.999000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.405000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.4050000000e+00

  Adding pseudopotential for O
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0750000000e+00
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0750000000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0750000000e+00

  Adding pseudopotential for H1
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03

  Adding pseudopotential for H2
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03
  QMCHamiltonian::addOperator LocalECP to H, physical Hamiltonian 

  Using NonLocalECP potential 
    Maximum grid on a sphere for NonLocalECPotential: 12
  QMCHamiltonian::addOperator NonLocalECP to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type pseudo named NonLocalECP
  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    5 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 10
ParticleSetPool::randomize 
  Initialization Execution time = 2.6106e-01 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet 'e' contains 12 particles :  u(6) d(6)

    u  4.0107225728e-02 -5.0659535091e-01 -4.8356690577e-01
    u -2.0203417087e-01 -1.2691590666e+00 -2.1169263951e+00
    u  2.9913287695e-01 -2.3710879234e-01  2.0101719070e+00
    u  4.8474243406e-02 -5.3051852953e-01  9.5378285444e-01
    u -5.5511775119e-01 -9.8683271286e-02  1.4043240644e+00
    u  6.9646297924e-01  2.5004217823e+00 -2.4744046405e+00
    d -1.1004432466e+00 -7.1118992563e-01 -1.4300801983e+00
    d -3.6824818327e-02  7.5687344105e-01 -1.6708867165e+00
    d -9.4375526199e-01  1.5348935511e-01  1.1974289766e+00
    d -8.9321447322e-02 -6.9596903295e-02  1.4810785623e+00
    (... and 2 more particle positions ...)

  Distance table for similar particles (A-A):
    source/target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  ParticleSet 'ion0' contains 4 particles :  C(1) O(1) H1(1) H2(1)

    C  0.0000000000e+00  0.0000000000e+00 -1.1394765782e+00
    O  0.0000000000e+00  0.0000000000e+00  1.1440287480e+00
    H1  0.0000000000e+00  1.7662761033e+00 -2.2339863698e+00
    H2  0.0000000000e+00 -1.7662761033e+00 -2.2339863698e+00

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  LocalECP        LocalECPotential: ion0
  NonLocalECP     NonLocalECPotential: ion0
  IonIon          CoulombAA source/target ion0


Loop execution max-interations = 60
Inside LM engine constructor, num_params is: 0 and _total_num_params is: 0

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s000 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02

=========================================================
  Start VMC
  File Root FORM.s000 append = no 
=========================================================
Resetting walkers
  Using the current 1 walkers.
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000000000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000000000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000000000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000000000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000000000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: 0 and ratio_threshold_: 0.0000000000e+00
Allocating full size _hmat_temp and _smat_temp
Inside LM engine's get_param, num_params is: 60
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.4064
    reference variance = 0.548062
====================================================
  Execution time = 4.8824e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s000
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9713e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4997e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497194506392
                                         uncertainty =       0.004832580990

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497194506392
                                         uncertainty =       0.004832580990

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498564703
  error estimate for blocks of size 2^( 2) =       0.000525565288
  error estimate for blocks of size 2^( 3) =       0.000551674334
  error estimate for blocks of size 2^( 4) =       0.000571707447
  error estimate for blocks of size 2^( 5) =       0.000583564425
  error estimate for blocks of size 2^( 6) =       0.000592258848
  error estimate for blocks of size 2^( 7) =       0.000598789276

      target function =      -0.709051603128
              le_mean =     -22.425840981133
             les_mean =     503.415476988136
             stat err =       0.000586579999
             autocorr =       1.384240158405
   target nu stat err =       0.000586579999
   target dn stat err =       0.004931580616
      target stat err =       0.003617329829
              std dev =       0.705076964343
             le_variance =       0.497133525647


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy-2.242584098113e+01 
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e-01, overlap shift 2.5000e+00 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709069285329       residual = 3.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709092016140       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709111732530       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709122476169       residual = 4.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709127397210       residual = 4.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709130278381       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709133442445       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.709136376724       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709138526899       residual = 8.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709140158615       residual = 1.06e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709141212469       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709143226403       residual = 2.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709144865712       residual = 4.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709145528801       residual = 2.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709146403409       residual = 3.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709147369216       residual = 1.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709148653965       residual = 8.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709149343055       residual = 9.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709150675713       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709151534795       residual = 9.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709152244769       residual = 4.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709152525585       residual = 4.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709152686577       residual = 2.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709152921225       residual = 1.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709153078125       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709153368786       residual = 3.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709153276084       residual = 1.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709153316032       residual = 8.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709153303005       residual = 4.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.709153306020       residual = 1.67e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.709153348204       residual = 1.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709153342255       residual = 9.87e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e-01 is 2.809323e-03

solving harmonic davidson linear method for identity shift 1.0000e+00, overlap shift 1.0000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709069285329       residual = 3.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709075760830       residual = 1.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709081603593       residual = 1.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709084601408       residual = 4.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709086059074       residual = 4.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709086790420       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709087741049       residual = 1.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.709088582317       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709089223369       residual = 7.40e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709089712400       residual = 9.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709089885478       residual = 2.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709090508056       residual = 3.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709090606625       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709091129456       residual = 1.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709091414239       residual = 2.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709091639938       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709091878079       residual = 7.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709092184012       residual = 8.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709092246983       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709092676877       residual = 6.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709092769331       residual = 3.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709092836311       residual = 2.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709092866641       residual = 2.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709092922519       residual = 7.47e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709092950671       residual = 8.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709093013818       residual = 2.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709092991067       residual = 8.47e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709092996612       residual = 5.73e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709092993334       residual = 3.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.709092994461       residual = 9.79e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+00 is 7.040482e-04

solving harmonic davidson linear method for identity shift 4.0000e+00, overlap shift 4.0000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709069285329       residual = 3.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709070962704       residual = 1.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709072494176       residual = 9.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709073265871       residual = 4.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709073648154       residual = 4.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709073830631       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709074079972       residual = 1.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.709074299011       residual = 1.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709074466325       residual = 7.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709074594699       residual = 8.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709074630905       residual = 2.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709074788913       residual = 4.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709074816061       residual = 2.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709074948808       residual = 1.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709075037959       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709075092240       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709075138087       residual = 8.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709075218510       residual = 9.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709075227801       residual = 1.03e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709075336442       residual = 6.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709075360983       residual = 3.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709075375832       residual = 2.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709075383305       residual = 1.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709075396972       residual = 6.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709075403226       residual = 7.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709075418386       residual = 2.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709075412801       residual = 7.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709075413899       residual = 5.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709075413106       residual = 2.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.709075413418       residual = 8.44e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+00 is 1.763341e-04

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.180858 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.4009e+01
  </log>
  <optVariables href="FORM.s000.opt.xml">
uu_0  2.652793e-01                 1 1 ON  0
uu_1  1.033940e-01                 1 1 ON  1
uu_2  2.742502e-03                 1 1 ON  2
uu_3  -5.839366e-02                1 1 ON  3
uu_4  -9.409702e-02                1 1 ON  4
uu_5  -1.157455e-01                1 1 ON  5
uu_6  -1.263550e-01                1 1 ON  6
uu_7  -1.219602e-01                1 1 ON  7
uu_8  -1.014907e-01                1 1 ON  8
uu_9  -5.752657e-02                1 1 ON  9
ud_0  3.593404e-01                 1 1 ON  10
ud_1  1.195338e-01                 1 1 ON  11
ud_2  1.523927e-03                 1 1 ON  12
ud_3  -6.055039e-02                1 1 ON  13
ud_4  -9.584483e-02                1 1 ON  14
ud_5  -1.170428e-01                1 1 ON  15
ud_6  -1.269691e-01                1 1 ON  16
ud_7  -1.256484e-01                1 1 ON  17
ud_8  -1.015203e-01                1 1 ON  18
ud_9  -5.387157e-02                1 1 ON  19
eC_0  -4.882631e-01                1 1 ON  20
eC_1  -3.458196e-01                1 1 ON  21
eC_2  -9.896019e-02                1 1 ON  22
eC_3  7.016014e-02                 1 1 ON  23
eC_4  1.481287e-01                 1 1 ON  24
eC_5  2.405069e-01                 1 1 ON  25
eC_6  2.432456e-01                 1 1 ON  26
eC_7  1.837733e-01                 1 1 ON  27
eC_8  4.410247e-02                 1 1 ON  28
eC_9  1.167144e-03                 1 1 ON  29
eO_0  -8.736431e-01                1 1 ON  30
eO_1  -5.677333e-01                1 1 ON  31
eO_2  -1.621693e-01                1 1 ON  32
eO_3  1.022253e-01                 1 1 ON  33
eO_4  2.516632e-01                 1 1 ON  34
eO_5  3.517360e-01                 1 1 ON  35
eO_6  3.432840e-01                 1 1 ON  36
eO_7  2.997169e-01                 1 1 ON  37
eO_8  1.684374e-01                 1 1 ON  38
eO_9  6.790445e-02                 1 1 ON  39
eH1_0 -1.428997e-01                1 1 ON  40
eH1_1 -4.000288e-02                1 1 ON  41
eH1_2 -2.230235e-02                1 1 ON  42
eH1_3 -2.963347e-02                1 1 ON  43
eH1_4 2.961454e-03                 1 1 ON  44
eH1_5 2.077974e-02                 1 1 ON  45
eH1_6 4.035861e-02                 1 1 ON  46
eH1_7 3.469782e-02                 1 1 ON  47
eH1_8 5.297715e-02                 1 1 ON  48
eH1_9 5.954753e-02                 1 1 ON  49
eH2_0 -1.536618e-01                1 1 ON  50
eH2_1 -5.046437e-02                1 1 ON  51
eH2_2 -2.843247e-02                1 1 ON  52
eH2_3 -3.327007e-02                1 1 ON  53
eH2_4 -5.947667e-03                1 1 ON  54
eH2_5 8.289983e-03                 1 1 ON  55
eH2_6 3.308207e-02                 1 1 ON  56
eH2_7 4.803800e-02                 1 1 ON  57
eH2_8 8.335080e-02                 1 1 ON  58
eH2_9 7.905188e-02                 1 1 ON  59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.3441
    reference variance = 0.542195
====================================================
  Execution time = 4.4764e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s000
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9882e-01
  Total weights = 2.0000e+06
  Execution time = 3.8250e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498499551855
                                         uncertainty =       0.004214465896

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498499551855
                                         uncertainty =       0.004214465896

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499367543
  error estimate for blocks of size 2^( 2) =       0.000526170842
  error estimate for blocks of size 2^( 3) =       0.000551518980
  error estimate for blocks of size 2^( 4) =       0.000571058686
  error estimate for blocks of size 2^( 5) =       0.000584316752
  error estimate for blocks of size 2^( 6) =       0.000591186846
  error estimate for blocks of size 2^( 7) =       0.000592394563

      target function =      -0.707893635262
              le_mean =     -22.426101267921
             les_mean =     503.428753714877
             stat err =       0.000584739212
             autocorr =       1.371146356928
   target nu stat err =       0.000584739212
   target dn stat err =       0.004427225110
      target stat err =       0.003248470318
              std dev =       0.706212351339
             le_variance =       0.498735885183

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498810478895
                                         uncertainty =       0.004229170196

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498810478895
                                         uncertainty =       0.004229170196

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499523766
  error estimate for blocks of size 2^( 2) =       0.000526223888
  error estimate for blocks of size 2^( 3) =       0.000551472222
  error estimate for blocks of size 2^( 4) =       0.000570944566
  error estimate for blocks of size 2^( 5) =       0.000584171083
  error estimate for blocks of size 2^( 6) =       0.000591010233
  error estimate for blocks of size 2^( 7) =       0.000592217192

      target function =      -0.707668459043
              le_mean =     -22.426103477532
             les_mean =     503.429164921609
             stat err =       0.000584585769
             autocorr =       1.369569781994
   target nu stat err =       0.000584585769
   target dn stat err =       0.004442117513
      target stat err =       0.003256974414
              std dev =       0.706433285019
             le_variance =       0.499047986182

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498672545229
                                         uncertainty =       0.004222885211

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498672545229
                                         uncertainty =       0.004222885211

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499454473
  error estimate for blocks of size 2^( 2) =       0.000526199252
  error estimate for blocks of size 2^( 3) =       0.000551491041
  error estimate for blocks of size 2^( 4) =       0.000570992859
  error estimate for blocks of size 2^( 5) =       0.000584233351
  error estimate for blocks of size 2^( 6) =       0.000591086075
  error estimate for blocks of size 2^( 7) =       0.000592293781

      target function =      -0.707768342301
              le_mean =     -22.426101557497
             les_mean =     503.428940358333
             stat err =       0.000584651516
             autocorr =       1.370258003051
   target nu stat err =       0.000584651516
   target dn stat err =       0.004435745094
      target stat err =       0.003253364321
              std dev =       0.706335289086
             le_variance =       0.498909540608

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498521264913
                                         uncertainty =       0.004215556653

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498521264913
                                         uncertainty =       0.004215556653

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499378456
  error estimate for blocks of size 2^( 2) =       0.000526174149
  error estimate for blocks of size 2^( 3) =       0.000551514979
  error estimate for blocks of size 2^( 4) =       0.000571049781
  error estimate for blocks of size 2^( 5) =       0.000584305579
  error estimate for blocks of size 2^( 6) =       0.000591173429
  error estimate for blocks of size 2^( 7) =       0.000592381150

      target function =      -0.707877907124
              le_mean =     -22.426101165974
             les_mean =     503.428770940954
             stat err =       0.000584727485
             autocorr =       1.371031435064
   target nu stat err =       0.000584727485
   target dn stat err =       0.004428328780
      target stat err =       0.003249108302
              std dev =       0.706227784666
             le_variance =       0.498757683835


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707893635262        initial  <--
     2.5000e-01     2.5000e+00             2.8093e-03        -0.707668459043
     1.0000e+00     1.0000e+01             7.0405e-04        -0.707768342301
     4.0000e+00     4.0000e+01             1.7633e-04        -0.707877907124

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.8998
  </log>
  <optVariables href="FORM.s000.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2792e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s001 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s001 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=1  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2375e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.3895
    reference variance = 0.402233
====================================================
  Execution time = 4.5758e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s001
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9517e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5198e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495256355112
                                         uncertainty =       0.003009995888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495256355112
                                         uncertainty =       0.003009995888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497580703
  error estimate for blocks of size 2^( 2) =       0.000524535975
  error estimate for blocks of size 2^( 3) =       0.000550604364
  error estimate for blocks of size 2^( 4) =       0.000570445255
  error estimate for blocks of size 2^( 5) =       0.000583720820
  error estimate for blocks of size 2^( 6) =       0.000590754246
  error estimate for blocks of size 2^( 7) =       0.000594088189

      target function =      -0.710492913379
              le_mean =     -22.425100458249
             les_mean =     503.380303427831
             stat err =       0.000584752127
             autocorr =       1.381072767180
   target nu stat err =       0.000584752127
   target dn stat err =       0.003032859162
      target stat err =       0.002280090187
              std dev =       0.703685379159
             le_variance =       0.495173112841


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242510045825e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+00, overlap shift 2.5000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710499300546       residual = 4.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710502718706       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710504558872       residual = 1.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710505867900       residual = 3.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710506775643       residual = 1.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710506997737       residual = 9.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710507268986       residual = 2.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710507509623       residual = 9.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710507741970       residual = 1.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710507943954       residual = 6.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710508144612       residual = 5.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710508334172       residual = 6.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710508585735       residual = 3.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710508719208       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710508815245       residual = 1.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710508932984       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710508971231       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710509070929       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710509124844       residual = 9.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710509246861       residual = 4.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710509279333       residual = 2.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710509326182       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710509369697       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710509356643       residual = 1.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710509361908       residual = 1.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710509383674       residual = 2.17e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710509411471       residual = 9.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710509405649       residual = 3.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710509411646       residual = 3.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710509415921       residual = 1.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.710509416589       residual = 8.64e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+00 is 3.394902e-04

solving harmonic davidson linear method for identity shift 1.0000e+01, overlap shift 1.0000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710499300546       residual = 4.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710500166325       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710500632903       residual = 1.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710500966568       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710501196295       residual = 1.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710501251989       residual = 9.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710501322975       residual = 2.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710501382429       residual = 9.39e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710501441264       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710501492186       residual = 6.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710501543170       residual = 5.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710501590000       residual = 6.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710501654906       residual = 3.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710501688196       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710501713690       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710501740721       residual = 1.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710501759138       residual = 1.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710501784285       residual = 1.30e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710501788727       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710501820658       residual = 4.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710501828410       residual = 2.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710501840116       residual = 1.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710501850922       residual = 2.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710501847538       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710501848796       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710501854060       residual = 2.04e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710501860916       residual = 9.34e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710501859463       residual = 3.86e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710501860926       residual = 3.72e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710501861989       residual = 1.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.710501862153       residual = 8.24e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+01 is 8.544023e-05

solving harmonic davidson linear method for identity shift 4.0000e+01, overlap shift 4.0000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710499300546       residual = 4.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710499517705       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710499634765       residual = 1.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710499718592       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710499776199       residual = 1.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710499790134       residual = 9.48e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710499808087       residual = 2.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710499822902       residual = 9.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710499837657       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710499850419       residual = 6.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710499863215       residual = 5.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710499874897       residual = 6.38e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710499891244       residual = 3.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710499899556       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710499906023       residual = 1.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710499912562       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710499917946       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710499923911       residual = 9.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710499925229       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710499932845       residual = 4.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710499934605       residual = 2.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710499937551       residual = 1.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710499940244       residual = 2.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710499939391       residual = 1.21e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710499939703       residual = 1.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710499941007       residual = 2.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710499942715       residual = 9.22e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710499942352       residual = 3.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710499942716       residual = 3.67e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710499942981       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.710499943022       residual = 8.14e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+01 is 2.139617e-05

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.214782 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0995e+01
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 2.650007e-01 1 1  ON 0
 uu_1                 1.032032e-01 1 1  ON 1
 uu_2                 2.676334e-03 1 1  ON 2
 uu_3                -5.839128e-02 1 1  ON 3
 uu_4                -9.406824e-02 1 1  ON 4
 uu_5                -1.157006e-01 1 1  ON 5
 uu_6                -1.263114e-01 1 1  ON 6
 uu_7                -1.217796e-01 1 1  ON 7
 uu_8                -1.011964e-01 1 1  ON 8
 uu_9                -5.739008e-02 1 1  ON 9
 ud_0                 3.591888e-01 1 1  ON 10
 ud_1                 1.194989e-01 1 1  ON 11
 ud_2                 1.544448e-03 1 1  ON 12
 ud_3                -6.054259e-02 1 1  ON 13
 ud_4                -9.585470e-02 1 1  ON 14
 ud_5                -1.171029e-01 1 1  ON 15
 ud_6                -1.270584e-01 1 1  ON 16
 ud_7                -1.257832e-01 1 1  ON 17
 ud_8                -1.013580e-01 1 1  ON 18
 ud_9                -5.360145e-02 1 1  ON 19
 eC_0                -4.878562e-01 1 1  ON 20
 eC_1                -3.456625e-01 1 1  ON 21
 eC_2                -9.887587e-02 1 1  ON 22
 eC_3                 7.029361e-02 1 1  ON 23
 eC_4                 1.480378e-01 1 1  ON 24
 eC_5                 2.406131e-01 1 1  ON 25
 eC_6                 2.433834e-01 1 1  ON 26
 eC_7                 1.831260e-01 1 1  ON 27
 eC_8                 4.382903e-02 1 1  ON 28
 eC_9                 1.162132e-03 1 1  ON 29
 eO_0                -8.731567e-01 1 1  ON 30
 eO_1                -5.673903e-01 1 1  ON 31
 eO_2                -1.620654e-01 1 1  ON 32
 eO_3                 1.022816e-01 1 1  ON 33
 eO_4                 2.516200e-01 1 1  ON 34
 eO_5                 3.518999e-01 1 1  ON 35
 eO_6                 3.433394e-01 1 1  ON 36
 eO_7                 2.994704e-01 1 1  ON 37
 eO_8                 1.677972e-01 1 1  ON 38
 eO_9                 6.769045e-02 1 1  ON 39
eH1_0                -1.428414e-01 1 1  ON 40
eH1_1                -3.993724e-02 1 1  ON 41
eH1_2                -2.219712e-02 1 1  ON 42
eH1_3                -2.961174e-02 1 1  ON 43
eH1_4                 3.124256e-03 1 1  ON 44
eH1_5                 2.093042e-02 1 1  ON 45
eH1_6                 4.050559e-02 1 1  ON 46
eH1_7                 3.432530e-02 1 1  ON 47
eH1_8                 5.291436e-02 1 1  ON 48
eH1_9                 5.938052e-02 1 1  ON 49
eH2_0                -1.535786e-01 1 1  ON 50
eH2_1                -5.048340e-02 1 1  ON 51
eH2_2                -2.833942e-02 1 1  ON 52
eH2_3                -3.308452e-02 1 1  ON 53
eH2_4                -5.910541e-03 1 1  ON 54
eH2_5                 8.125902e-03 1 1  ON 55
eH2_6                 3.306665e-02 1 1  ON 56
eH2_7                 4.808222e-02 1 1  ON 57
eH2_8                 8.348669e-02 1 1  ON 58
eH2_9                 7.879580e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.3328
    reference variance = 0.496206
====================================================
  Execution time = 4.4109e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s001
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0734e-01
  Total weights = 2.0000e+06
  Execution time = 3.8372e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507408975557
                                         uncertainty =       0.008493576569

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507408975557
                                         uncertainty =       0.008493576569

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503654350
  error estimate for blocks of size 2^( 2) =       0.000530384593
  error estimate for blocks of size 2^( 3) =       0.000556554231
  error estimate for blocks of size 2^( 4) =       0.000576137633
  error estimate for blocks of size 2^( 5) =       0.000588685308
  error estimate for blocks of size 2^( 6) =       0.000596212589
  error estimate for blocks of size 2^( 7) =       0.000599832337

      target function =      -0.701730535355
              le_mean =     -22.425158634110
             les_mean =     503.395074919638
             stat err =       0.000590216967
             autocorr =       1.373277173616
   target nu stat err =       0.000590216967
   target dn stat err =       0.008477135677
      target stat err =       0.006030201926
              std dev =       0.712274812348
             le_variance =       0.507335408306

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507439739337
                                         uncertainty =       0.008500915985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507439739337
                                         uncertainty =       0.008500915985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503669618
  error estimate for blocks of size 2^( 2) =       0.000530383681
  error estimate for blocks of size 2^( 3) =       0.000556536422
  error estimate for blocks of size 2^( 4) =       0.000576108522
  error estimate for blocks of size 2^( 5) =       0.000588648078
  error estimate for blocks of size 2^( 6) =       0.000596169715
  error estimate for blocks of size 2^( 7) =       0.000599787031

      target function =      -0.701708650577
              le_mean =     -22.425159776626
             les_mean =     503.395156922512
             stat err =       0.000590178336
             autocorr =       1.373014165956
   target nu stat err =       0.000590178336
   target dn stat err =       0.008484230636
      target stat err =       0.006034831925
              std dev =       0.712296405302
             le_variance =       0.507366169006

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507424498158
                                         uncertainty =       0.008497289853

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507424498158
                                         uncertainty =       0.008497289853

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503662054
  error estimate for blocks of size 2^( 2) =       0.000530384100
  error estimate for blocks of size 2^( 3) =       0.000556545184
  error estimate for blocks of size 2^( 4) =       0.000576122869
  error estimate for blocks of size 2^( 5) =       0.000588666441
  error estimate for blocks of size 2^( 6) =       0.000596190870
  error estimate for blocks of size 2^( 7) =       0.000599809391

      target function =      -0.701719492845
              le_mean =     -22.425159199319
             les_mean =     503.395115790528
             stat err =       0.000590197393
             autocorr =       1.373144079064
   target nu stat err =       0.000590197393
   target dn stat err =       0.008480724966
      target stat err =       0.006032544658
              std dev =       0.712285707696
             le_variance =       0.507350929387

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507410915300
                                         uncertainty =       0.008494042070

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507410915300
                                         uncertainty =       0.008494042070

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503655313
  error estimate for blocks of size 2^( 2) =       0.000530384528
  error estimate for blocks of size 2^( 3) =       0.000556553092
  error estimate for blocks of size 2^( 4) =       0.000576135777
  error estimate for blocks of size 2^( 5) =       0.000588682938
  error estimate for blocks of size 2^( 6) =       0.000596209862
  error estimate for blocks of size 2^( 7) =       0.000599829456

      target function =      -0.701729155451
              le_mean =     -22.425158703456
             les_mean =     503.395079969361
             stat err =       0.000590214508
             autocorr =       1.373260483748
   target nu stat err =       0.000590214508
   target dn stat err =       0.008477585620
      target stat err =       0.006030495673
              std dev =       0.712276173868
             le_variance =       0.507337347860


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.701730535355        initial  <--
     2.5000e+00     2.5000e+01             3.3949e-04        -0.701708650577
     1.0000e+01     1.0000e+02             8.5440e-05        -0.701719492845
     4.0000e+01     4.0000e+02             2.1396e-05        -0.701729155451

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.1548
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2416e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s002 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s002 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=2  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2368e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.4043
    reference variance = 0.775218
====================================================
  Execution time = 4.5313e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s002
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9752e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5556e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497555353887
                                         uncertainty =       0.005213847465

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497555353887
                                         uncertainty =       0.005213847465

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498759475
  error estimate for blocks of size 2^( 2) =       0.000525779134
  error estimate for blocks of size 2^( 3) =       0.000551879390
  error estimate for blocks of size 2^( 4) =       0.000570729926
  error estimate for blocks of size 2^( 5) =       0.000583368540
  error estimate for blocks of size 2^( 6) =       0.000589890099
  error estimate for blocks of size 2^( 7) =       0.000593420089

      target function =      -0.708768545039
              le_mean =     -22.426212628346
             les_mean =     503.432534630908
             stat err =       0.000584352163
             autocorr =       1.372672693094
   target nu stat err =       0.000584352163
   target dn stat err =       0.004445715388
      target stat err =       0.003269966765
              std dev =       0.705352413975
             le_variance =       0.497522027900


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242621262835e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+01, overlap shift 2.5000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708782647370       residual = 2.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708782875181       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708783088863       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708783261292       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708783302271       residual = 4.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708783348577       residual = 1.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708783407422       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708783480671       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708783527023       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708783543492       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708783567520       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708783600567       residual = 9.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708783604971       residual = 2.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708783626342       residual = 2.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708783637946       residual = 2.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708783648174       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708783651961       residual = 9.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708783652109       residual = 9.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708783659036       residual = 1.00e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708783669091       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708783671983       residual = 1.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708783672503       residual = 1.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708783675683       residual = 1.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708783677145       residual = 1.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708783677570       residual = 9.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708783677962       residual = 5.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708783680223       residual = 1.69e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708783680210       residual = 9.80e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708783681248       residual = 8.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708783681571       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708783682096       residual = 8.14e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+01 is 2.999312e-05

solving harmonic davidson linear method for identity shift 1.0000e+02, overlap shift 1.0000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708782647370       residual = 2.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708782704394       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708782757913       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708782801071       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708782811344       residual = 4.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708782822926       residual = 1.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708782837633       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708782855995       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708782867594       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708782871709       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708782877715       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708782885968       residual = 9.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708782887083       residual = 2.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708782892426       residual = 2.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708782895328       residual = 2.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708782897887       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708782898833       residual = 9.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708782898868       residual = 9.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708782900601       residual = 1.00e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708782903112       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708782903834       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708782903965       residual = 1.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708782904758       residual = 1.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708782905123       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708782905229       residual = 8.99e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708782905326       residual = 5.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708782905890       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708782905887       residual = 9.75e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708782906146       residual = 8.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708782906227       residual = 1.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708782906358       residual = 8.12e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+02 is 7.502871e-06

solving harmonic davidson linear method for identity shift 4.0000e+02, overlap shift 4.0000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708782647370       residual = 2.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708782661630       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708782675016       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708782685809       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708782688379       residual = 4.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708782691275       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708782694951       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708782699545       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708782702445       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708782703474       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708782704975       residual = 8.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708782707037       residual = 9.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708782707317       residual = 2.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708782708654       residual = 2.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708782709379       residual = 2.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708782710020       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708782710255       residual = 9.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708782710265       residual = 9.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708782710698       residual = 1.00e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708782711325       residual = 2.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708782711505       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708782711538       residual = 1.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708782711737       residual = 1.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708782711828       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708782711853       residual = 8.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708782711878       residual = 5.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708782712020       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708782712019       residual = 9.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708782712083       residual = 7.99e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708782712104       residual = 1.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708782712135       residual = 8.11e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+02 is 1.876005e-06

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.247039 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0906e+01
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 2.649848e-01 1 1  ON 0
 uu_1                 1.031943e-01 1 1  ON 1
 uu_2                 2.672567e-03 1 1  ON 2
 uu_3                -5.839130e-02 1 1  ON 3
 uu_4                -9.406150e-02 1 1  ON 4
 uu_5                -1.156989e-01 1 1  ON 5
 uu_6                -1.263129e-01 1 1  ON 6
 uu_7                -1.217733e-01 1 1  ON 7
 uu_8                -1.012015e-01 1 1  ON 8
 uu_9                -5.738246e-02 1 1  ON 9
 ud_0                 3.591609e-01 1 1  ON 10
 ud_1                 1.194840e-01 1 1  ON 11
 ud_2                 1.540725e-03 1 1  ON 12
 ud_3                -6.053797e-02 1 1  ON 13
 ud_4                -9.584676e-02 1 1  ON 14
 ud_5                -1.170949e-01 1 1  ON 15
 ud_6                -1.270520e-01 1 1  ON 16
 ud_7                -1.257821e-01 1 1  ON 17
 ud_8                -1.013469e-01 1 1  ON 18
 ud_9                -5.357663e-02 1 1  ON 19
 eC_0                -4.878084e-01 1 1  ON 20
 eC_1                -3.456340e-01 1 1  ON 21
 eC_2                -9.886236e-02 1 1  ON 22
 eC_3                 7.030472e-02 1 1  ON 23
 eC_4                 1.480227e-01 1 1  ON 24
 eC_5                 2.406053e-01 1 1  ON 25
 eC_6                 2.433739e-01 1 1  ON 26
 eC_7                 1.830790e-01 1 1  ON 27
 eC_8                 4.380566e-02 1 1  ON 28
 eC_9                 1.162038e-03 1 1  ON 29
 eO_0                -8.730788e-01 1 1  ON 30
 eO_1                -5.673363e-01 1 1  ON 31
 eO_2                -1.620385e-01 1 1  ON 32
 eO_3                 1.022988e-01 1 1  ON 33
 eO_4                 2.515948e-01 1 1  ON 34
 eO_5                 3.518848e-01 1 1  ON 35
 eO_6                 3.433123e-01 1 1  ON 36
 eO_7                 2.994501e-01 1 1  ON 37
 eO_8                 1.677390e-01 1 1  ON 38
 eO_9                 6.765865e-02 1 1  ON 39
eH1_0                -1.428368e-01 1 1  ON 40
eH1_1                -3.993037e-02 1 1  ON 41
eH1_2                -2.219672e-02 1 1  ON 42
eH1_3                -2.961514e-02 1 1  ON 43
eH1_4                 3.123913e-03 1 1  ON 44
eH1_5                 2.093249e-02 1 1  ON 45
eH1_6                 4.050974e-02 1 1  ON 46
eH1_7                 3.432428e-02 1 1  ON 47
eH1_8                 5.291509e-02 1 1  ON 48
eH1_9                 5.937520e-02 1 1  ON 49
eH2_0                -1.535605e-01 1 1  ON 50
eH2_1                -5.046859e-02 1 1  ON 51
eH2_2                -2.833083e-02 1 1  ON 52
eH2_3                -3.306228e-02 1 1  ON 53
eH2_4                -5.914379e-03 1 1  ON 54
eH2_5                 8.109450e-03 1 1  ON 55
eH2_6                 3.304777e-02 1 1  ON 56
eH2_7                 4.808318e-02 1 1  ON 57
eH2_8                 8.349414e-02 1 1  ON 58
eH2_9                 7.877077e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.4003
    reference variance = 0.345697
====================================================
  Execution time = 4.6315e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s002
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.1166e-01
  Total weights = 2.0000e+06
  Execution time = 3.7997e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511649988662
                                         uncertainty =       0.007320874143

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511649988662
                                         uncertainty =       0.007320874143

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505796902
  error estimate for blocks of size 2^( 2) =       0.000532699865
  error estimate for blocks of size 2^( 3) =       0.000558136943
  error estimate for blocks of size 2^( 4) =       0.000576715267
  error estimate for blocks of size 2^( 5) =       0.000589168548
  error estimate for blocks of size 2^( 6) =       0.000597183875
  error estimate for blocks of size 2^( 7) =       0.000601420714

      target function =      -0.698694713064
              le_mean =     -22.425176636582
             les_mean =     503.400207938011
             stat err =       0.000591122101
             autocorr =       1.365847036200
   target nu stat err =       0.000591122101
   target dn stat err =       0.007380641266
      target stat err =       0.005213404484
              std dev =       0.715304838464
             le_variance =       0.511661011931

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511651532900
                                         uncertainty =       0.007321032108

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511651532900
                                         uncertainty =       0.007321032108

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505797664
  error estimate for blocks of size 2^( 2) =       0.000532699508
  error estimate for blocks of size 2^( 3) =       0.000558135472
  error estimate for blocks of size 2^( 4) =       0.000576713018
  error estimate for blocks of size 2^( 5) =       0.000589166074
  error estimate for blocks of size 2^( 6) =       0.000597181396
  error estimate for blocks of size 2^( 7) =       0.000601418091

      target function =      -0.698693630948
              le_mean =     -22.425176608463
             les_mean =     503.400208217891
             stat err =       0.000591119645
             autocorr =       1.365831571326
   target nu stat err =       0.000591119645
   target dn stat err =       0.007380792288
      target stat err =       0.005213493252
              std dev =       0.715305915663
             le_variance =       0.511662552983

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511650761413
                                         uncertainty =       0.007320953247

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511650761413
                                         uncertainty =       0.007320953247

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505797283
  error estimate for blocks of size 2^( 2) =       0.000532699686
  error estimate for blocks of size 2^( 3) =       0.000558136206
  error estimate for blocks of size 2^( 4) =       0.000576714141
  error estimate for blocks of size 2^( 5) =       0.000589167309
  error estimate for blocks of size 2^( 6) =       0.000597182634
  error estimate for blocks of size 2^( 7) =       0.000601419401

      target function =      -0.698694171568
              le_mean =     -22.425176622351
             les_mean =     503.400208070890
             stat err =       0.000591120871
             autocorr =       1.365839294194
   target nu stat err =       0.000591120871
   target dn stat err =       0.007380716895
      target stat err =       0.005213448942
              std dev =       0.715305377504
             le_variance =       0.511661783086

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511650085230
                                         uncertainty =       0.007320884034

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.511650085230
                                         uncertainty =       0.007320884034

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505796950
  error estimate for blocks of size 2^( 2) =       0.000532699842
  error estimate for blocks of size 2^( 3) =       0.000558136851
  error estimate for blocks of size 2^( 4) =       0.000576715126
  error estimate for blocks of size 2^( 5) =       0.000589168393
  error estimate for blocks of size 2^( 6) =       0.000597183720
  error estimate for blocks of size 2^( 7) =       0.000601420550

      target function =      -0.698694645396
              le_mean =     -22.425176634785
             les_mean =     503.400207953772
             stat err =       0.000591121947
             autocorr =       1.365846068116
   target nu stat err =       0.000591121947
   target dn stat err =       0.007380650723
      target stat err =       0.005213410044
              std dev =       0.715304905826
             le_variance =       0.511661108299


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.698694713064        initial  <--
     2.5000e+01     2.5000e+02             2.9993e-05        -0.698693630948
     1.0000e+02     1.0000e+03             7.5029e-06        -0.698694171568
     4.0000e+02     4.0000e+03             1.8760e-06        -0.698694645396

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.2806
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2619e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s003 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s003 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=3  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2380e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.4653
    reference variance = 0.363997
====================================================
  Execution time = 4.5189e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s003
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.1002e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5469e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510047583562
                                         uncertainty =       0.008113015622

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510047583562
                                         uncertainty =       0.008113015622

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504985069
  error estimate for blocks of size 2^( 2) =       0.000531583508
  error estimate for blocks of size 2^( 3) =       0.000556569153
  error estimate for blocks of size 2^( 4) =       0.000575672875
  error estimate for blocks of size 2^( 5) =       0.000588976044
  error estimate for blocks of size 2^( 6) =       0.000595915206
  error estimate for blocks of size 2^( 7) =       0.000600032826

      target function =      -0.699857750595
              le_mean =     -22.424717459257
             les_mean =     503.377972712010
             stat err =       0.000590149238
             autocorr =       1.365735588985
   target nu stat err =       0.000590149238
   target dn stat err =       0.007607990315
      target stat err =       0.005386089417
              std dev =       0.714156733158
             le_variance =       0.510019839515


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242471745926e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+02, overlap shift 2.5000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699897921141       residual = 5.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699897975162       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.699898001050       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.699898020136       residual = 3.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.699898029866       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.699898031804       residual = 1.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.699898034169       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.699898037885       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.699898039903       residual = 6.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.699898040576       residual = 5.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.699898041938       residual = 2.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.699898043169       residual = 4.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.699898043732       residual = 2.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.699898045451       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.699898046413       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.699898047590       residual = 6.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.699898047766       residual = 6.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.699898048608       residual = 4.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.699898048965       residual = 6.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.699898049814       residual = 2.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.699898050021       residual = 2.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.699898049983       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.699898050315       residual = 1.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.699898050249       residual = 8.91e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.699898050479       residual = 5.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.699898050662       residual = 3.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.699898050732       residual = 8.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.699898050804       residual = 6.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.699898050813       residual = 2.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.699898050837       residual = 1.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.699898050824       residual = 8.12e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+02 is 2.178594e-06

solving harmonic davidson linear method for identity shift 1.0000e+03, overlap shift 1.0000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699897921141       residual = 5.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699897934648       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.699897941121       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.699897945895       residual = 3.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.699897948326       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.699897948811       residual = 1.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.699897949402       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.699897950331       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.699897950836       residual = 6.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.699897951004       residual = 5.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.699897951343       residual = 2.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.699897951652       residual = 4.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.699897951793       residual = 2.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.699897952222       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.699897952467       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.699897952755       residual = 6.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.699897952802       residual = 6.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.699897953014       residual = 4.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.699897953100       residual = 6.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.699897953312       residual = 2.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.699897953366       residual = 2.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.699897953354       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.699897953438       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.699897953425       residual = 8.91e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.699897953484       residual = 5.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.699897953524       residual = 3.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.699897953544       residual = 8.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.699897953556       residual = 6.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.699897953559       residual = 2.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.699897953567       residual = 1.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.699897953567       residual = 8.11e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+03 is 5.446490e-07

solving harmonic davidson linear method for identity shift 4.0000e+03, overlap shift 4.0000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699897921141       residual = 5.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699897924518       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.699897926136       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.699897927329       residual = 3.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.699897927937       residual = 2.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.699897928061       residual = 1.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.699897928206       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.699897928437       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.699897928565       residual = 6.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.699897928608       residual = 5.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.699897928692       residual = 2.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.699897928769       residual = 4.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.699897928808       residual = 2.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.699897928912       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.699897928971       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.699897929045       residual = 6.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.699897929052       residual = 6.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.699897929102       residual = 4.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.699897929135       residual = 6.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.699897929175       residual = 2.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.699897929188       residual = 2.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.699897929201       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.699897929222       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.699897929215       residual = 8.91e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.699897929231       residual = 5.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.699897929240       residual = 3.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.699897929230       residual = 8.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.699897929234       residual = 6.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.699897929248       residual = 2.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.699897929249       residual = 1.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.699897929259       residual = 8.11e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+03 is 1.361623e-07

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.279041 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0696e+01
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 2.649828e-01 1 1  ON 0
 uu_1                 1.031924e-01 1 1  ON 1
 uu_2                 2.671502e-03 1 1  ON 2
 uu_3                -5.839175e-02 1 1  ON 3
 uu_4                -9.406145e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217709e-01 1 1  ON 7
 uu_8                -1.011992e-01 1 1  ON 8
 uu_9                -5.738016e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542376e-03 1 1  ON 12
 ud_3                -6.053613e-02 1 1  ON 13
 ud_4                -9.584514e-02 1 1  ON 14
 ud_5                -1.170941e-01 1 1  ON 15
 ud_6                -1.270521e-01 1 1  ON 16
 ud_7                -1.257849e-01 1 1  ON 17
 ud_8                -1.013485e-01 1 1  ON 18
 ud_9                -5.357694e-02 1 1  ON 19
 eC_0                -4.878055e-01 1 1  ON 20
 eC_1                -3.456324e-01 1 1  ON 21
 eC_2                -9.886240e-02 1 1  ON 22
 eC_3                 7.030299e-02 1 1  ON 23
 eC_4                 1.480203e-01 1 1  ON 24
 eC_5                 2.406070e-01 1 1  ON 25
 eC_6                 2.433775e-01 1 1  ON 26
 eC_7                 1.830769e-01 1 1  ON 27
 eC_8                 4.380214e-02 1 1  ON 28
 eC_9                 1.161717e-03 1 1  ON 29
 eO_0                -8.730716e-01 1 1  ON 30
 eO_1                -5.673308e-01 1 1  ON 31
 eO_2                -1.620358e-01 1 1  ON 32
 eO_3                 1.022997e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518853e-01 1 1  ON 35
 eO_6                 3.433106e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677339e-01 1 1  ON 38
 eO_9                 6.765640e-02 1 1  ON 39
eH1_0                -1.428382e-01 1 1  ON 40
eH1_1                -3.993024e-02 1 1  ON 41
eH1_2                -2.219810e-02 1 1  ON 42
eH1_3                -2.961654e-02 1 1  ON 43
eH1_4                 3.124572e-03 1 1  ON 44
eH1_5                 2.093478e-02 1 1  ON 45
eH1_6                 4.051082e-02 1 1  ON 46
eH1_7                 3.432426e-02 1 1  ON 47
eH1_8                 5.291656e-02 1 1  ON 48
eH1_9                 5.937440e-02 1 1  ON 49
eH2_0                -1.535626e-01 1 1  ON 50
eH2_1                -5.047026e-02 1 1  ON 51
eH2_2                -2.833222e-02 1 1  ON 52
eH2_3                -3.306183e-02 1 1  ON 53
eH2_4                -5.914229e-03 1 1  ON 54
eH2_5                 8.108687e-03 1 1  ON 55
eH2_6                 3.304819e-02 1 1  ON 56
eH2_7                 4.808689e-02 1 1  ON 57
eH2_8                 8.349872e-02 1 1  ON 58
eH2_9                 7.876891e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.2935
    reference variance = 0.787551
====================================================
  Execution time = 4.4360e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s003
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0547e-01
  Total weights = 2.0000e+06
  Execution time = 3.7938e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589381957
                                         uncertainty =       0.006383137460

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589381957
                                         uncertainty =       0.006383137460

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502729967
  error estimate for blocks of size 2^( 2) =       0.000529367650
  error estimate for blocks of size 2^( 3) =       0.000554954280
  error estimate for blocks of size 2^( 4) =       0.000574360939
  error estimate for blocks of size 2^( 5) =       0.000587681106
  error estimate for blocks of size 2^( 6) =       0.000594576856
  error estimate for blocks of size 2^( 7) =       0.000600247570

      target function =      -0.703055514692
              le_mean =     -22.426033891371
             les_mean =     503.432470683802
             stat err =       0.000589216618
             autocorr =       1.373663713224
   target nu stat err =       0.000589216618
   target dn stat err =       0.006031960243
      target stat err =       0.004332469859
              std dev =       0.710967537671
             le_variance =       0.505474839623

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589505555
                                         uncertainty =       0.006383160019

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589505555
                                         uncertainty =       0.006383160019

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502730028
  error estimate for blocks of size 2^( 2) =       0.000529367630
  error estimate for blocks of size 2^( 3) =       0.000554954183
  error estimate for blocks of size 2^( 4) =       0.000574360795
  error estimate for blocks of size 2^( 5) =       0.000587680935
  error estimate for blocks of size 2^( 6) =       0.000594576671
  error estimate for blocks of size 2^( 7) =       0.000600247374

      target function =      -0.703055426826
              le_mean =     -22.426033885506
             les_mean =     503.432470544212
             stat err =       0.000589216444
             autocorr =       1.373662566402
   target nu stat err =       0.000589216444
   target dn stat err =       0.006031979526
      target stat err =       0.004332482315
              std dev =       0.710967624503
             le_variance =       0.505474963091

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589443760
                                         uncertainty =       0.006383148741

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589443760
                                         uncertainty =       0.006383148741

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502729998
  error estimate for blocks of size 2^( 2) =       0.000529367640
  error estimate for blocks of size 2^( 3) =       0.000554954232
  error estimate for blocks of size 2^( 4) =       0.000574360867
  error estimate for blocks of size 2^( 5) =       0.000587681020
  error estimate for blocks of size 2^( 6) =       0.000594576763
  error estimate for blocks of size 2^( 7) =       0.000600247472

      target function =      -0.703055470756
              le_mean =     -22.426033888436
             les_mean =     503.432470613906
             stat err =       0.000589216531
             autocorr =       1.373663139728
   target nu stat err =       0.000589216531
   target dn stat err =       0.006031969886
      target stat err =       0.004332476088
              std dev =       0.710967581090
             le_variance =       0.505474901361

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589389681
                                         uncertainty =       0.006383138870

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505589389681
                                         uncertainty =       0.006383138870

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502729971
  error estimate for blocks of size 2^( 2) =       0.000529367649
  error estimate for blocks of size 2^( 3) =       0.000554954274
  error estimate for blocks of size 2^( 4) =       0.000574360930
  error estimate for blocks of size 2^( 5) =       0.000587681095
  error estimate for blocks of size 2^( 6) =       0.000594576844
  error estimate for blocks of size 2^( 7) =       0.000600247558

      target function =      -0.703055509200
              le_mean =     -22.426033891004
             les_mean =     503.432470675054
             stat err =       0.000589216607
             autocorr =       1.373663641531
   target nu stat err =       0.000589216607
   target dn stat err =       0.006031961448
      target stat err =       0.004332470638
              std dev =       0.710967543098
             le_variance =       0.505474847339


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.703055514692        initial  <--
     2.5000e+02     2.5000e+03             2.1786e-06        -0.703055426826
     1.0000e+03     1.0000e+04             5.4465e-07        -0.703055470756
     4.0000e+03     4.0000e+04             1.3616e-07        -0.703055509200

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3640
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2407e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s004 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s004 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=4  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2380e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.3991
    reference variance = 0.372263
====================================================
  Execution time = 4.5637e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s004
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0200e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5212e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502011505757
                                         uncertainty =       0.005747777704

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502011505757
                                         uncertainty =       0.005747777704

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500998253
  error estimate for blocks of size 2^( 2) =       0.000527582504
  error estimate for blocks of size 2^( 3) =       0.000552771773
  error estimate for blocks of size 2^( 4) =       0.000571987605
  error estimate for blocks of size 2^( 5) =       0.000584566218
  error estimate for blocks of size 2^( 6) =       0.000588800183
  error estimate for blocks of size 2^( 7) =       0.000593877745

      target function =      -0.705530218756
              le_mean =     -22.426526618605
             les_mean =     503.451094423713
             stat err =       0.000584807938
             autocorr =       1.362555164214
   target nu stat err =       0.000584807938
   target dn stat err =       0.005741900274
      target stat err =       0.004159277355
              std dev =       0.708518524618
             le_variance =       0.501998499727


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242652661860e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+03, overlap shift 2.5000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705553530098       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705553531965       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705553535131       residual = 9.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705553535845       residual = 2.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705553536336       residual = 3.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705553536820       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705553537166       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705553537364       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705553537634       residual = 7.68e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705553537871       residual = 7.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705553537979       residual = 4.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705553538106       residual = 2.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705553538194       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705553538285       residual = 1.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705553538378       residual = 9.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705553538405       residual = 8.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705553538488       residual = 6.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705553538525       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705553538552       residual = 7.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705553538615       residual = 4.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705553538666       residual = 2.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705553538721       residual = 1.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705553538731       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705553538763       residual = 7.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705553538759       residual = 6.61e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705553538775       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705553538781       residual = 7.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705553538777       residual = 4.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705553538773       residual = 3.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705553538777       residual = 1.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705553538785       residual = 6.47e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+03 is 2.668478e-07

solving harmonic davidson linear method for identity shift 1.0000e+04, overlap shift 1.0000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705553530098       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705553530565       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705553531357       residual = 9.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705553531535       residual = 2.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705553531675       residual = 3.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705553531785       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705553531873       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705553531904       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705553531979       residual = 7.68e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705553532041       residual = 7.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705553532065       residual = 4.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705553532104       residual = 2.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705553532084       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705553532143       residual = 1.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705553532166       residual = 9.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705553532178       residual = 8.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705553532206       residual = 6.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705553532203       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705553532211       residual = 7.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705553532259       residual = 4.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705553532270       residual = 2.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705553532249       residual = 1.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705553532254       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705553532287       residual = 7.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705553532263       residual = 6.61e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705553532270       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705553532224       residual = 7.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705553532276       residual = 4.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705553532251       residual = 3.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705553532201       residual = 1.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705553532267       residual = 6.47e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+04 is 6.671249e-08

solving harmonic davidson linear method for identity shift 4.0000e+04, overlap shift 4.0000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705553530098       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705553530215       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705553530413       residual = 9.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705553530457       residual = 2.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705553530494       residual = 3.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705553530504       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705553530628       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705553530448       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705553530603       residual = 7.68e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705553530562       residual = 7.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705553530639       residual = 4.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705553530594       residual = 2.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705553530565       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705553530607       residual = 1.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705553530594       residual = 9.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705553530650       residual = 8.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705553530537       residual = 6.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705553530610       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705553530603       residual = 7.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705553530636       residual = 4.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705553530693       residual = 2.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705553530632       residual = 1.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705553530504       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705553530604       residual = 7.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705553530742       residual = 6.61e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705553530698       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705553530685       residual = 7.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705553530621       residual = 4.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705553530585       residual = 3.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705553530715       residual = 1.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705553530688       residual = 6.47e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+04 is 1.667816e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.311084 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0886e+01
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671319e-03 1 1  ON 2
 uu_3                -5.839187e-02 1 1  ON 3
 uu_4                -9.406148e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737996e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542465e-03 1 1  ON 12
 ud_3                -6.053601e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357667e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886233e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480203e-01 1 1  ON 24
 eC_5                 2.406072e-01 1 1  ON 25
 eC_6                 2.433776e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380193e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994458e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765616e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992996e-02 1 1  ON 41
eH1_2                -2.219786e-02 1 1  ON 42
eH1_3                -2.961674e-02 1 1  ON 43
eH1_4                 3.124520e-03 1 1  ON 44
eH1_5                 2.093485e-02 1 1  ON 45
eH1_6                 4.051065e-02 1 1  ON 46
eH1_7                 3.432388e-02 1 1  ON 47
eH1_8                 5.291655e-02 1 1  ON 48
eH1_9                 5.937430e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047040e-02 1 1  ON 51
eH2_2                -2.833245e-02 1 1  ON 52
eH2_3                -3.306175e-02 1 1  ON 53
eH2_4                -5.914282e-03 1 1  ON 54
eH2_5                 8.108558e-03 1 1  ON 55
eH2_6                 3.304819e-02 1 1  ON 56
eH2_7                 4.808719e-02 1 1  ON 57
eH2_8                 8.349924e-02 1 1  ON 58
eH2_9                 7.876879e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.5179
    reference variance = 0.672203
====================================================
  Execution time = 4.4287e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s004
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9684e-01
  Total weights = 2.0000e+06
  Execution time = 3.7876e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534511681
                                         uncertainty =       0.002805650362

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534511681
                                         uncertainty =       0.002805650362

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498418577
  error estimate for blocks of size 2^( 2) =       0.000525226779
  error estimate for blocks of size 2^( 3) =       0.000550422376
  error estimate for blocks of size 2^( 4) =       0.000570050317
  error estimate for blocks of size 2^( 5) =       0.000582009497
  error estimate for blocks of size 2^( 6) =       0.000589462238
  error estimate for blocks of size 2^( 7) =       0.000592812503

      target function =      -0.709264681947
              le_mean =     -22.426409296514
             les_mean =     503.440675842350
             stat err =       0.000583583639
             autocorr =       1.370937868755
   target nu stat err =       0.000583583639
   target dn stat err =       0.003178909134
      target stat err =       0.002378726939
              std dev =       0.704870311481
             le_variance =       0.496842156007

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534532062
                                         uncertainty =       0.002805650678

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534532062
                                         uncertainty =       0.002805650678

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498418587
  error estimate for blocks of size 2^( 2) =       0.000525226780
  error estimate for blocks of size 2^( 3) =       0.000550422368
  error estimate for blocks of size 2^( 4) =       0.000570050305
  error estimate for blocks of size 2^( 5) =       0.000582009482
  error estimate for blocks of size 2^( 6) =       0.000589462220
  error estimate for blocks of size 2^( 7) =       0.000592812487

      target function =      -0.709264667112
              le_mean =     -22.426409296609
             les_mean =     503.440675867093
             stat err =       0.000583583623
             autocorr =       1.370937740578
   target nu stat err =       0.000583583623
   target dn stat err =       0.003178909715
      target stat err =       0.002378727246
              std dev =       0.704870326004
             le_variance =       0.496842176480

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534521871
                                         uncertainty =       0.002805650520

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534521871
                                         uncertainty =       0.002805650520

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498418582
  error estimate for blocks of size 2^( 2) =       0.000525226779
  error estimate for blocks of size 2^( 3) =       0.000550422372
  error estimate for blocks of size 2^( 4) =       0.000570050311
  error estimate for blocks of size 2^( 5) =       0.000582009490
  error estimate for blocks of size 2^( 6) =       0.000589462229
  error estimate for blocks of size 2^( 7) =       0.000592812495

      target function =      -0.709264674530
              le_mean =     -22.426409296561
             les_mean =     503.440675854721
             stat err =       0.000583583631
             autocorr =       1.370937804664
   target nu stat err =       0.000583583631
   target dn stat err =       0.003178909425
      target stat err =       0.002378727093
              std dev =       0.704870318742
             le_variance =       0.496842166244

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534512954
                                         uncertainty =       0.002805650382

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496534512954
                                         uncertainty =       0.002805650382

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498418578
  error estimate for blocks of size 2^( 2) =       0.000525226779
  error estimate for blocks of size 2^( 3) =       0.000550422375
  error estimate for blocks of size 2^( 4) =       0.000570050316
  error estimate for blocks of size 2^( 5) =       0.000582009496
  error estimate for blocks of size 2^( 6) =       0.000589462237
  error estimate for blocks of size 2^( 7) =       0.000592812502

      target function =      -0.709264681020
              le_mean =     -22.426409296520
             les_mean =     503.440675843896
             stat err =       0.000583583638
             autocorr =       1.370937860740
   target nu stat err =       0.000583583638
   target dn stat err =       0.003178909171
      target stat err =       0.002378726958
              std dev =       0.704870312388
             le_variance =       0.496842157287


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709264681947        initial  <--
     2.5000e+03     2.5000e+04             2.6685e-07        -0.709264667112
     1.0000e+04     1.0000e+05             6.6712e-08        -0.709264674530
     4.0000e+04     4.0000e+05             1.6678e-08        -0.709264681020

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.2477
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2414e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s005 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s005 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=5  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2395e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.4326
    reference variance = 0.410176
====================================================
  Execution time = 4.6682e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s005
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9299e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5242e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493027680217
                                         uncertainty =       0.003114974721

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493027680217
                                         uncertainty =       0.003114974721

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496484964
  error estimate for blocks of size 2^( 2) =       0.000523578465
  error estimate for blocks of size 2^( 3) =       0.000549351293
  error estimate for blocks of size 2^( 4) =       0.000568510973
  error estimate for blocks of size 2^( 5) =       0.000581539522
  error estimate for blocks of size 2^( 6) =       0.000587451517
  error estimate for blocks of size 2^( 7) =       0.000591141502

      target function =      -0.712072433804
              le_mean =     -22.425565240532
             les_mean =     503.398970748886
             stat err =       0.000582160879
             autocorr =       1.374908619300
   target nu stat err =       0.000582160879
   target dn stat err =       0.003060424200
      target stat err =       0.002310145655
              std dev =       0.702135768948
             le_variance =       0.492994638037


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242556524053e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712078935385       residual = 3.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712078935664       residual = 1.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712078935850       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712078935951       residual = 3.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712078935916       residual = 4.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712078936056       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712078936088       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712078936121       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712078936188       residual = 8.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712078936169       residual = 6.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712078936240       residual = 4.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712078936251       residual = 8.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712078936274       residual = 3.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712078936212       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712078936266       residual = 3.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712078936280       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712078936277       residual = 1.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712078936294       residual = 1.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712078936328       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712078936388       residual = 5.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712078936367       residual = 3.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712078936336       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712078936300       residual = 1.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712078936307       residual = 1.21e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712078936276       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712078936347       residual = 2.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712078936365       residual = 6.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712078936447       residual = 4.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712078936283       residual = 3.23e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712078936360       residual = 1.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712078936339       residual = 9.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+04 is 3.106522e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712078935385       residual = 3.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712078935455       residual = 1.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712078935501       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712078935524       residual = 3.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712078935624       residual = 4.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712078935523       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712078935574       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712078935403       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712078935621       residual = 8.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712078935586       residual = 6.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712078935744       residual = 4.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712078935554       residual = 8.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712078935474       residual = 3.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712078935667       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712078935384       residual = 3.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712078935648       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712078935422       residual = 1.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712078935741       residual = 1.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712078935516       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712078935770       residual = 5.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712078935721       residual = 3.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712078935485       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712078935632       residual = 1.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712078935700       residual = 1.21e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712078935612       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712078934962       residual = 2.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712078935446       residual = 6.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712078935820       residual = 4.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712078935047       residual = 3.23e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712078935716       residual = 1.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712078935426       residual = 9.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+05 is 7.766303e-09

solving harmonic davidson linear method for identity shift 4.0000e+05, overlap shift 4.0000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712078935385       residual = 3.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712078935402       residual = 1.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712078935414       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712078935420       residual = 3.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712078935332       residual = 4.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712078935449       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712078934951       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712078935942       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712078935596       residual = 8.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712078935554       residual = 6.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712078934405       residual = 4.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712078934860       residual = 8.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712078935577       residual = 3.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712078936303       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712078934982       residual = 3.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712078935554       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712078935907       residual = 1.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712078935067       residual = 1.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712078936214       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712078935651       residual = 5.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712078935613       residual = 3.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712078935914       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712078936390       residual = 1.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712078935473       residual = 1.21e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712078934522       residual = 6.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712078933523       residual = 2.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712078934434       residual = 6.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712078935810       residual = 4.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712078934385       residual = 3.23e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712078935656       residual = 1.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712078935433       residual = 9.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+05 is 1.941575e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.343318 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1962e+01
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357666e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380191e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765613e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124521e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914282e-03 1 1  ON 54
eH2_5                 8.108546e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808721e-02 1 1  ON 57
eH2_8                 8.349926e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.5034
    reference variance = 0.35798
====================================================
  Execution time = 4.4757e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s005
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0393e-01
  Total weights = 2.0000e+06
  Execution time = 3.7923e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863048797
                                         uncertainty =       0.004735135233

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863048797
                                         uncertainty =       0.004735135233

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501962760
  error estimate for blocks of size 2^( 2) =       0.000528977823
  error estimate for blocks of size 2^( 3) =       0.000553973637
  error estimate for blocks of size 2^( 4) =       0.000573236892
  error estimate for blocks of size 2^( 5) =       0.000586756851
  error estimate for blocks of size 2^( 6) =       0.000593092336
  error estimate for blocks of size 2^( 7) =       0.000597659325

      target function =      -0.704158746177
              le_mean =     -22.426201348300
             les_mean =     503.438439887743
             stat err =       0.000587686351
             autocorr =       1.370718301526
   target nu stat err =       0.000587686351
   target dn stat err =       0.004988332259
      target stat err =       0.003610246589
              std dev =       0.709882543246
             le_variance =       0.503933225205

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863051061
                                         uncertainty =       0.004735135426

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863051061
                                         uncertainty =       0.004735135426

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501962761
  error estimate for blocks of size 2^( 2) =       0.000528977822
  error estimate for blocks of size 2^( 3) =       0.000553973636
  error estimate for blocks of size 2^( 4) =       0.000573236890
  error estimate for blocks of size 2^( 5) =       0.000586756849
  error estimate for blocks of size 2^( 6) =       0.000593092334
  error estimate for blocks of size 2^( 7) =       0.000597659322

      target function =      -0.704158744555
              le_mean =     -22.426201348286
             les_mean =     503.438439889380
             stat err =       0.000587686349
             autocorr =       1.370718283657
   target nu stat err =       0.000587686349
   target dn stat err =       0.004988332452
      target stat err =       0.003610246708
              std dev =       0.709882544845
             le_variance =       0.503933227476

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863049929
                                         uncertainty =       0.004735135330

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863049929
                                         uncertainty =       0.004735135330

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501962761
  error estimate for blocks of size 2^( 2) =       0.000528977823
  error estimate for blocks of size 2^( 3) =       0.000553973637
  error estimate for blocks of size 2^( 4) =       0.000573236891
  error estimate for blocks of size 2^( 5) =       0.000586756850
  error estimate for blocks of size 2^( 6) =       0.000593092335
  error estimate for blocks of size 2^( 7) =       0.000597659323

      target function =      -0.704158745366
              le_mean =     -22.426201348293
             les_mean =     503.438439888561
             stat err =       0.000587686350
             autocorr =       1.370718292587
   target nu stat err =       0.000587686350
   target dn stat err =       0.004988332355
      target stat err =       0.003610246648
              std dev =       0.709882544045
             le_variance =       0.503933226340

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863048938
                                         uncertainty =       0.004735135245

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503863048938
                                         uncertainty =       0.004735135245

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501962760
  error estimate for blocks of size 2^( 2) =       0.000528977823
  error estimate for blocks of size 2^( 3) =       0.000553973637
  error estimate for blocks of size 2^( 4) =       0.000573236892
  error estimate for blocks of size 2^( 5) =       0.000586756851
  error estimate for blocks of size 2^( 6) =       0.000593092336
  error estimate for blocks of size 2^( 7) =       0.000597659325

      target function =      -0.704158746075
              le_mean =     -22.426201348299
             les_mean =     503.438439887845
             stat err =       0.000587686351
             autocorr =       1.370718300407
   target nu stat err =       0.000587686351
   target dn stat err =       0.004988332271
      target stat err =       0.003610246596
              std dev =       0.709882543346
             le_variance =       0.503933225347


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704158746177        initial  <--
     2.5000e+04     2.5000e+05             3.1065e-08        -0.704158744555
     1.0000e+05     1.0000e+06             7.7663e-09        -0.704158745366
     4.0000e+05     4.0000e+06             1.9416e-09        -0.704158746075

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7128
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2568e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s006 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s006 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=6  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2407e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.3804
    reference variance = 0.650946
====================================================
  Execution time = 4.5631e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s006
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.8974e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5261e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.489664414598
                                         uncertainty =       0.003813697144

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.489664414598
                                         uncertainty =       0.003813697144

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000494841978
  error estimate for blocks of size 2^( 2) =       0.000521871940
  error estimate for blocks of size 2^( 3) =       0.000547852629
  error estimate for blocks of size 2^( 4) =       0.000568019532
  error estimate for blocks of size 2^( 5) =       0.000580852280
  error estimate for blocks of size 2^( 6) =       0.000587314110
  error estimate for blocks of size 2^( 7) =       0.000589723809

      target function =      -0.714453759184
              le_mean =     -22.425341106991
             les_mean =     503.385660685898
             stat err =       0.000581477433
             autocorr =       1.380805984658
   target nu stat err =       0.000581477433
   target dn stat err =       0.003783832980
      target stat err =       0.002840562466
              std dev =       0.699812236160
             le_variance =       0.489737165880


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242534110699e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+05, overlap shift 2.5000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714463949017       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714463949053       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.714463949077       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.714463949077       residual = 3.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.714463949221       residual = 4.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.714463949586       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.714463949215       residual = 2.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.714463949275       residual = 9.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.714463949260       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.714463948574       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.714463948546       residual = 6.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.714463949324       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.714463949180       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.714463948626       residual = 1.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.714463948242       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.714463948799       residual = 6.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.714463948805       residual = 4.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.714463948142       residual = 4.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.714463949323       residual = 7.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.714463948551       residual = 3.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.714463949186       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.714463948919       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.714463949249       residual = 7.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.714463949082       residual = 5.73e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.714463948966       residual = 7.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.714463949496       residual = 3.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.714463948148       residual = 6.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.714463949612       residual = 4.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.714463948714       residual = 3.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.714463949454       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.714463949992       residual = 3.56e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+05 is 2.617173e-09

solving harmonic davidson linear method for identity shift 1.0000e+06, overlap shift 1.0000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714463949017       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714463949026       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.714463949032       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.714463948967       residual = 3.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.714463949220       residual = 4.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.714463949038       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.714463947874       residual = 2.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.714463950166       residual = 9.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.714463947073       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.714463946820       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.714463948961       residual = 6.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.714463948824       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.714463947788       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.714463948920       residual = 1.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.714463948961       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.714463944893       residual = 6.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.714463950100       residual = 4.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.714463951061       residual = 4.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.714463951427       residual = 7.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.714463942327       residual = 3.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.714463949899       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.714463949096       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.714463950529       residual = 7.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.714463950077       residual = 5.73e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.714463947170       residual = 7.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.714463946919       residual = 3.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.714463948987       residual = 6.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.714463948379       residual = 4.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.714463950286       residual = 3.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.714463948752       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.714463942571       residual = 3.56e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+06 is 6.542936e-10

solving harmonic davidson linear method for identity shift 4.0000e+06, overlap shift 4.0000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714463949017       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714463949019       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.714463949021       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.714463949009       residual = 3.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.714463948331       residual = 4.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.714463950551       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.714463949030       residual = 2.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.714463947728       residual = 9.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.714463951419       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.714463946051       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.714463950344       residual = 6.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.714463940959       residual = 3.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.714463952083       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.714463952028       residual = 1.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.714463950392       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.714463943343       residual = 6.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.714463958408       residual = 4.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.714463943550       residual = 4.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.714463955851       residual = 7.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.714463939749       residual = 3.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.714463953053       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.714463943704       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.714463948344       residual = 7.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.714463944119       residual = 5.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.714463935764       residual = 7.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.714463941785       residual = 3.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.714463950077       residual = 6.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.714463945633       residual = 4.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.714463951453       residual = 3.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.714463959114       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.714463954571       residual = 3.56e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+06 is 1.635732e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.375441 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0930e+01
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357666e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349926e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.4232
    reference variance = 0.457541
====================================================
  Execution time = 4.4784e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s006
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9829e-01
  Total weights = 2.0000e+06
  Execution time = 3.7801e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277797
                                         uncertainty =       0.002982396005

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277797
                                         uncertainty =       0.002982396005

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499146133
  error estimate for blocks of size 2^( 2) =       0.000525846238
  error estimate for blocks of size 2^( 3) =       0.000551377737
  error estimate for blocks of size 2^( 4) =       0.000570928487
  error estimate for blocks of size 2^( 5) =       0.000583911405
  error estimate for blocks of size 2^( 6) =       0.000592423338
  error estimate for blocks of size 2^( 7) =       0.000597352591

      target function =      -0.708242393078
              le_mean =     -22.424648962423
             les_mean =     503.363174563502
             stat err =       0.000586153955
             autocorr =       1.379011784792
   target nu stat err =       0.000586153955
   target dn stat err =       0.003067124768
      target stat err =       0.002288895191
              std dev =       0.705899231316
             le_variance =       0.498293724772

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266278017
                                         uncertainty =       0.002982396015

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266278017
                                         uncertainty =       0.002982396015

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499146133
  error estimate for blocks of size 2^( 2) =       0.000525846238
  error estimate for blocks of size 2^( 3) =       0.000551377736
  error estimate for blocks of size 2^( 4) =       0.000570928487
  error estimate for blocks of size 2^( 5) =       0.000583911404
  error estimate for blocks of size 2^( 6) =       0.000592423338
  error estimate for blocks of size 2^( 7) =       0.000597352591

      target function =      -0.708242392920
              le_mean =     -22.424648962423
             les_mean =     503.363174563727
             stat err =       0.000586153955
             autocorr =       1.379011782465
   target nu stat err =       0.000586153955
   target dn stat err =       0.003067124778
      target stat err =       0.002288895197
              std dev =       0.705899231471
             le_variance =       0.498293724992

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277907
                                         uncertainty =       0.002982396010

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277907
                                         uncertainty =       0.002982396010

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499146133
  error estimate for blocks of size 2^( 2) =       0.000525846238
  error estimate for blocks of size 2^( 3) =       0.000551377736
  error estimate for blocks of size 2^( 4) =       0.000570928487
  error estimate for blocks of size 2^( 5) =       0.000583911404
  error estimate for blocks of size 2^( 6) =       0.000592423338
  error estimate for blocks of size 2^( 7) =       0.000597352591

      target function =      -0.708242392999
              le_mean =     -22.424648962423
             les_mean =     503.363174563614
             stat err =       0.000586153955
             autocorr =       1.379011783628
   target nu stat err =       0.000586153955
   target dn stat err =       0.003067124773
      target stat err =       0.002288895194
              std dev =       0.705899231393
             le_variance =       0.498293724882

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277811
                                         uncertainty =       0.002982396006

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498266277811
                                         uncertainty =       0.002982396006

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499146133
  error estimate for blocks of size 2^( 2) =       0.000525846238
  error estimate for blocks of size 2^( 3) =       0.000551377736
  error estimate for blocks of size 2^( 4) =       0.000570928487
  error estimate for blocks of size 2^( 5) =       0.000583911404
  error estimate for blocks of size 2^( 6) =       0.000592423338
  error estimate for blocks of size 2^( 7) =       0.000597352591

      target function =      -0.708242393068
              le_mean =     -22.424648962423
             les_mean =     503.363174563516
             stat err =       0.000586153955
             autocorr =       1.379011784647
   target nu stat err =       0.000586153955
   target dn stat err =       0.003067124769
      target stat err =       0.002288895192
              std dev =       0.705899231326
             le_variance =       0.498293724786


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708242393078        initial  <--
     2.5000e+05     2.5000e+06             2.6172e-09        -0.708242392920
     1.0000e+06     1.0000e+07             6.5429e-10        -0.708242392999
     4.0000e+06     4.0000e+07             1.6357e-10        -0.708242393068

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7700
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2472e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s007 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s007 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=7  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2407e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.3596
    reference variance = 0.438008
====================================================
  Execution time = 4.4942e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s007
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.0835e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5404e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508080782201
                                         uncertainty =       0.011300617980

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508080782201
                                         uncertainty =       0.011300617980

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504156138
  error estimate for blocks of size 2^( 2) =       0.000530650082
  error estimate for blocks of size 2^( 3) =       0.000556065381
  error estimate for blocks of size 2^( 4) =       0.000575418442
  error estimate for blocks of size 2^( 5) =       0.000587874181
  error estimate for blocks of size 2^( 6) =       0.000595528806
  error estimate for blocks of size 2^( 7) =       0.000600876638

      target function =      -0.700994151808
              le_mean =     -22.424389128748
             les_mean =     503.361574366090
             stat err =       0.000589924517
             autocorr =       1.369187018195
   target nu stat err =       0.000589924517
   target dn stat err =       0.011387073038
      target stat err =       0.008057178460
              std dev =       0.712984447766
             le_variance =       0.508346822756


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242438912875e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701085006807       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701085006819       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701085006829       residual = 2.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701085006847       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701085006957       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701085012655       residual = 6.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701085007995       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701085008009       residual = 7.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701085008219       residual = 5.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701085001656       residual = 6.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701085002732       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701085012564       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701085004489       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701085008350       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701085012667       residual = 2.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701085007835       residual = 1.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701085010533       residual = 5.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701085008340       residual = 2.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701085004843       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701085011367       residual = 3.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701085006112       residual = 1.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701085008478       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701085007335       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701085011014       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701085003931       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701085006637       residual = 6.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701085010117       residual = 4.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701085005383       residual = 3.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701085010140       residual = 2.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701085000412       residual = 9.47e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701085004257       residual = 7.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701084972029       residual = 6.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701085003986       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701085000611       residual = 8.54e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         33 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+06 is 6.645070e-10

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701085006807       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701085006810       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701085006813       residual = 2.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701085006747       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701085007358       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701084999238       residual = 6.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701084995928       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701084994134       residual = 7.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701085009089       residual = 5.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701085021986       residual = 6.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701084986819       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701085023369       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701085018727       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701084994759       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701085010548       residual = 2.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701085021533       residual = 1.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701085032947       residual = 5.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701084968387       residual = 2.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701085019579       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701084990125       residual = 3.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701085033011       residual = 1.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701084982100       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701085012045       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701085003499       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701084982341       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701084985089       residual = 6.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701084997210       residual = 4.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701085010128       residual = 3.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701085008512       residual = 2.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701084996006       residual = 9.47e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701084983397       residual = 7.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701084999126       residual = 6.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701084923123       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701084985961       residual = 8.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         33 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+07 is 1.661250e-10

solving harmonic davidson linear method for identity shift 4.0000e+07, overlap shift 4.0000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701085006807       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701085006808       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701085006808       residual = 2.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701085006809       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701085006901       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701084987547       residual = 6.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701084910815       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701085003770       residual = 7.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701084999161       residual = 5.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701085038598       residual = 6.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701085022671       residual = 3.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701084983681       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701084910224       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701084950400       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701085046072       residual = 2.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701084991107       residual = 1.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701085011775       residual = 5.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701084900772       residual = 2.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701084996685       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701085028356       residual = 3.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701084999298       residual = 1.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701084994836       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701085035231       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701084906604       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701085038643       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701084927793       residual = 6.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701085036681       residual = 4.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701084979862       residual = 3.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701084926888       residual = 2.96e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701084986621       residual = 9.45e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701084829227       residual = 7.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701084875220       residual = 6.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701085099260       residual = 2.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701084966944       residual = 8.56e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         33 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+07 is 4.153075e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.416888 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0393e+01
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.3915
    reference variance = 0.441405
====================================================
  Execution time = 4.4490e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s007
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9504e-01
  Total weights = 2.0000e+06
  Execution time = 3.8067e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497516427
  error estimate for blocks of size 2^( 2) =       0.000524287472
  error estimate for blocks of size 2^( 3) =       0.000549756038
  error estimate for blocks of size 2^( 4) =       0.000569953995
  error estimate for blocks of size 2^( 5) =       0.000582982569
  error estimate for blocks of size 2^( 6) =       0.000593475952
  error estimate for blocks of size 2^( 7) =       0.000599364186

      target function =      -0.710568329771
              le_mean =     -22.426514132013
             les_mean =     503.443581055750
             stat err =       0.000586444175
             autocorr =       1.389435865459
   target nu stat err =       0.000586444175
   target dn stat err =       0.002979569080
      target stat err =       0.002248285098
              std dev =       0.703594478298
             le_variance =       0.495045189892

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497516427
  error estimate for blocks of size 2^( 2) =       0.000524287472
  error estimate for blocks of size 2^( 3) =       0.000549756038
  error estimate for blocks of size 2^( 4) =       0.000569953995
  error estimate for blocks of size 2^( 5) =       0.000582982569
  error estimate for blocks of size 2^( 6) =       0.000593475952
  error estimate for blocks of size 2^( 7) =       0.000599364186

      target function =      -0.710568329771
              le_mean =     -22.426514132013
             les_mean =     503.443581055736
             stat err =       0.000586444175
             autocorr =       1.389435865356
   target nu stat err =       0.000586444175
   target dn stat err =       0.002979569080
      target stat err =       0.002248285098
              std dev =       0.703594478298
             le_variance =       0.495045189891

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497516427
  error estimate for blocks of size 2^( 2) =       0.000524287472
  error estimate for blocks of size 2^( 3) =       0.000549756038
  error estimate for blocks of size 2^( 4) =       0.000569953995
  error estimate for blocks of size 2^( 5) =       0.000582982569
  error estimate for blocks of size 2^( 6) =       0.000593475952
  error estimate for blocks of size 2^( 7) =       0.000599364186

      target function =      -0.710568329771
              le_mean =     -22.426514132013
             les_mean =     503.443581055743
             stat err =       0.000586444175
             autocorr =       1.389435865410
   target nu stat err =       0.000586444175
   target dn stat err =       0.002979569080
      target stat err =       0.002248285098
              std dev =       0.703594478298
             le_variance =       0.495045189891

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495034497416
                                         uncertainty =       0.002968144980

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497516427
  error estimate for blocks of size 2^( 2) =       0.000524287472
  error estimate for blocks of size 2^( 3) =       0.000549756038
  error estimate for blocks of size 2^( 4) =       0.000569953995
  error estimate for blocks of size 2^( 5) =       0.000582982569
  error estimate for blocks of size 2^( 6) =       0.000593475952
  error estimate for blocks of size 2^( 7) =       0.000599364186

      target function =      -0.710568329771
              le_mean =     -22.426514132013
             les_mean =     503.443581055749
             stat err =       0.000586444175
             autocorr =       1.389435865451
   target nu stat err =       0.000586444175
   target dn stat err =       0.002979569080
      target stat err =       0.002248285098
              std dev =       0.703594478298
             le_variance =       0.495045189891


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710568329771        initial
     2.5000e+06     2.5000e+07             6.6451e-10        -0.710568329771  <--
     1.0000e+07     1.0000e+08             1.6613e-10        -0.710568329771
     4.0000e+07     4.0000e+08             4.1531e-11        -0.710568329771

*****************************************************************************
Applying the update for shift_i =   2.5000e+06     and shift_s =   2.5000e+07
*****************************************************************************

  Execution time = 6.3437e+01
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2384e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s008 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s008 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=8  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2403e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.4798
    reference variance = 0.338053
====================================================
  Execution time = 4.5130e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s008
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2424e+01
  VMC Evar = 4.9814e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5488e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497951538270
                                         uncertainty =       0.005206248139

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497951538270
                                         uncertainty =       0.005206248139

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499069443
  error estimate for blocks of size 2^( 2) =       0.000525768150
  error estimate for blocks of size 2^( 3) =       0.000551698927
  error estimate for blocks of size 2^( 4) =       0.000570856522
  error estimate for blocks of size 2^( 5) =       0.000583984416
  error estimate for blocks of size 2^( 6) =       0.000590369088
  error estimate for blocks of size 2^( 7) =       0.000594069653

      target function =      -0.708346777906
              le_mean =     -22.424307967409
             les_mean =     503.347728186496
             stat err =       0.000584819920
             autocorr =       1.373163824692
   target nu stat err =       0.000584819920
   target dn stat err =       0.004917681831
      target stat err =       0.003592120846
              std dev =       0.705790775210
             le_variance =       0.498140618372


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242430796741e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+05, overlap shift 6.2500e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708363793105       residual = 3.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708363793118       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708363793125       residual = 7.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708363793129       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708363793329       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708363791541       residual = 9.04e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708363792488       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708363792967       residual = 7.45e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708363793958       residual = 1.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708363792216       residual = 5.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708363792721       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708363792164       residual = 3.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708363793137       residual = 2.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708363792173       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708363792076       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708363791827       residual = 9.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708363794708       residual = 7.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708363795679       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708363792430       residual = 9.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708363792984       residual = 5.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708363793018       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708363794667       residual = 1.28e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708363794405       residual = 8.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708363791554       residual = 5.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708363792907       residual = 4.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708363795397       residual = 2.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708363788075       residual = 1.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708363792856       residual = 5.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708363792723       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708363793702       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708363793484       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708363791320       residual = 5.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+05 is 1.087072e-09

solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708363793105       residual = 3.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708363793108       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708363793110       residual = 7.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708363793448       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708363793101       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708363794362       residual = 9.04e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708363794909       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708363799385       residual = 7.45e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708363796428       residual = 1.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708363795463       residual = 5.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708363789598       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708363791935       residual = 3.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708363794563       residual = 2.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708363793113       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708363795207       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708363792381       residual = 9.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708363798324       residual = 7.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708363788438       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708363787512       residual = 9.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708363798613       residual = 5.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708363791559       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708363797049       residual = 1.28e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708363792714       residual = 8.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708363798019       residual = 5.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708363792882       residual = 4.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708363791005       residual = 2.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708363793247       residual = 1.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708363791050       residual = 5.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708363789059       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708363795783       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708363798687       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708363790465       residual = 5.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+06 is 2.717677e-10

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708363793105       residual = 3.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708363793106       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708363793106       residual = 7.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708363793107       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708363793107       residual = 2.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708363793107       residual = 9.04e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708363802084       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708363793107       residual = 7.45e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708363777541       residual = 1.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708363793107       residual = 5.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708363793107       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708363793107       residual = 3.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708363793107       residual = 2.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708363842151       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708363781746       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708363803701       residual = 9.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708363809007       residual = 7.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708363811243       residual = 9.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708363774742       residual = 9.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708363785304       residual = 5.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708363789168       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708363783104       residual = 1.28e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708363799761       residual = 8.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708363793118       residual = 5.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708363811818       residual = 4.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708363779707       residual = 2.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708363794577       residual = 1.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708363793515       residual = 5.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708363802682       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708363804525       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708363842091       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708363784716       residual = 5.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+07 is 6.794399e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.451731 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0658e+01
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542462e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.4789
    reference variance = 0.42594
====================================================
  Execution time = 4.4524e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s008
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9310e-01
  Total weights = 2.0000e+06
  Execution time = 3.7919e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957508
                                         uncertainty =       0.003124193689

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957508
                                         uncertainty =       0.003124193689

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496536644
  error estimate for blocks of size 2^( 2) =       0.000523346043
  error estimate for blocks of size 2^( 3) =       0.000548756555
  error estimate for blocks of size 2^( 4) =       0.000567700510
  error estimate for blocks of size 2^( 5) =       0.000581233778
  error estimate for blocks of size 2^( 6) =       0.000586164469
  error estimate for blocks of size 2^( 7) =       0.000590990448

      target function =      -0.711997239879
              le_mean =     -22.425477436922
             les_mean =     503.395135305767
             stat err =       0.000581522301
             autocorr =       1.371608409176
   target nu stat err =       0.000581522301
   target dn stat err =       0.003300095955
      target stat err =       0.002478445957
              std dev =       0.702208856684
             le_variance =       0.493097278406

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957566
                                         uncertainty =       0.003124193691

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957566
                                         uncertainty =       0.003124193691

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496536644
  error estimate for blocks of size 2^( 2) =       0.000523346043
  error estimate for blocks of size 2^( 3) =       0.000548756554
  error estimate for blocks of size 2^( 4) =       0.000567700510
  error estimate for blocks of size 2^( 5) =       0.000581233777
  error estimate for blocks of size 2^( 6) =       0.000586164469
  error estimate for blocks of size 2^( 7) =       0.000590990448

      target function =      -0.711997239838
              le_mean =     -22.425477436923
             les_mean =     503.395135305875
             stat err =       0.000581522301
             autocorr =       1.371608408402
   target nu stat err =       0.000581522301
   target dn stat err =       0.003300095957
      target stat err =       0.002478445958
              std dev =       0.702208856725
             le_variance =       0.493097278463

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957537
                                         uncertainty =       0.003124193690

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957537
                                         uncertainty =       0.003124193690

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496536644
  error estimate for blocks of size 2^( 2) =       0.000523346043
  error estimate for blocks of size 2^( 3) =       0.000548756555
  error estimate for blocks of size 2^( 4) =       0.000567700510
  error estimate for blocks of size 2^( 5) =       0.000581233777
  error estimate for blocks of size 2^( 6) =       0.000586164469
  error estimate for blocks of size 2^( 7) =       0.000590990448

      target function =      -0.711997239859
              le_mean =     -22.425477436923
             les_mean =     503.395135305821
             stat err =       0.000581522301
             autocorr =       1.371608408788
   target nu stat err =       0.000581522301
   target dn stat err =       0.003300095956
      target stat err =       0.002478445957
              std dev =       0.702208856705
             le_variance =       0.493097278435

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957512
                                         uncertainty =       0.003124193689

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493107957512
                                         uncertainty =       0.003124193689

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496536644
  error estimate for blocks of size 2^( 2) =       0.000523346043
  error estimate for blocks of size 2^( 3) =       0.000548756555
  error estimate for blocks of size 2^( 4) =       0.000567700510
  error estimate for blocks of size 2^( 5) =       0.000581233778
  error estimate for blocks of size 2^( 6) =       0.000586164469
  error estimate for blocks of size 2^( 7) =       0.000590990448

      target function =      -0.711997239877
              le_mean =     -22.425477436922
             les_mean =     503.395135305774
             stat err =       0.000581522301
             autocorr =       1.371608409124
   target nu stat err =       0.000581522301
   target dn stat err =       0.003300095955
      target stat err =       0.002478445957
              std dev =       0.702208856687
             le_variance =       0.493097278409


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711997239879        initial  <--
     6.2500e+05     6.2500e+06             1.0871e-09        -0.711997239838
     2.5000e+06     2.5000e+07             2.7177e-10        -0.711997239859
     1.0000e+07     1.0000e+08             6.7944e-11        -0.711997239877

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4569
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2412e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s009 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s009 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=9  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2411e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.3831
    reference variance = 0.263535
====================================================
  Execution time = 4.5885e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s009
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9260e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5097e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492583094505
                                         uncertainty =       0.002564520823

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492583094505
                                         uncertainty =       0.002564520823

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496288164
  error estimate for blocks of size 2^( 2) =       0.000522736866
  error estimate for blocks of size 2^( 3) =       0.000547754639
  error estimate for blocks of size 2^( 4) =       0.000566596743
  error estimate for blocks of size 2^( 5) =       0.000579485484
  error estimate for blocks of size 2^( 6) =       0.000585184749
  error estimate for blocks of size 2^( 7) =       0.000585063083

      target function =      -0.712355264919
              le_mean =     -22.425920276737
             les_mean =     503.414503895943
             stat err =       0.000579082514
             autocorr =       1.361485646299
   target nu stat err =       0.000579082514
   target dn stat err =       0.002785960840
      target stat err =       0.002119207159
              std dev =       0.701857452531
             le_variance =       0.492603883674


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242592027674e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+06, overlap shift 6.2500e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712360502063       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712360502065       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712360502065       residual = 5.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712360502065       residual = 4.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712360501994       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712360504340       residual = 1.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712360502646       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712360512173       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712360498527       residual = 9.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712360504989       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712360489755       residual = 4.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712360491361       residual = 4.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712360482384       residual = 5.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712360509105       residual = 1.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712360501081       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712360493274       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712360487231       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712360491678       residual = 7.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712360498128       residual = 8.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712360488083       residual = 4.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712360498085       residual = 2.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712360487658       residual = 1.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712360506300       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712360488442       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712360514798       residual = 7.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712360478218       residual = 4.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712360500162       residual = 7.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712360484956       residual = 3.88e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712360512006       residual = 1.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712360503393       residual = 1.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712360483986       residual = 4.93e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+06 is 1.304851e-10

solving harmonic davidson linear method for identity shift 2.5000e+07, overlap shift 2.5000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712360502063       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712360502064       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712360502064       residual = 5.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712360502064       residual = 4.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712360502064       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712360534536       residual = 1.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712360517025       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712360492580       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712360483044       residual = 9.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712360499426       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712360520490       residual = 4.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712360472022       residual = 4.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712360538073       residual = 5.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712360517295       residual = 1.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712360460560       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712360495331       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712360516106       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712360497726       residual = 7.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712360463532       residual = 8.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712360520233       residual = 4.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712360514396       residual = 2.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712360473128       residual = 1.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712360469095       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712360508626       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712360543728       residual = 7.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712360496878       residual = 4.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712360566148       residual = 7.22e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712360549257       residual = 3.88e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712360475760       residual = 1.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712360412036       residual = 1.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712360583959       residual = 4.98e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+07 is 3.262133e-11

solving harmonic davidson linear method for identity shift 1.0000e+08, overlap shift 1.0000e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712360502063       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712360502063       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712360502063       residual = 5.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712360502063       residual = 4.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712360502166       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712360493040       residual = 1.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712360351849       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712360511624       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712360451571       residual = 9.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712360456344       residual = 6.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712360461720       residual = 4.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712360498982       residual = 4.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712360471951       residual = 5.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712360420964       residual = 1.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712360479864       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712360646831       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712360545276       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712360667829       residual = 7.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712360567087       residual = 8.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712360322094       residual = 4.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712360470290       residual = 2.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712360466621       residual = 1.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712360439476       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712360626443       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712360093215       residual = 7.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712360507727       residual = 4.70e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712360300052       residual = 7.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712360494844       residual = 3.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712360691246       residual = 2.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712360558514       residual = 1.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712360609860       residual = 4.96e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+08 is 8.155162e-12

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.484152 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1019e+01
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.3843
    reference variance = 0.414144
====================================================
  Execution time = 4.4724e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s009
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0088e-01
  Total weights = 2.0000e+06
  Execution time = 4.2237e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175648
                                         uncertainty =       0.006167071505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175648
                                         uncertainty =       0.006167071505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500442119
  error estimate for blocks of size 2^( 2) =       0.000527259952
  error estimate for blocks of size 2^( 3) =       0.000552610575
  error estimate for blocks of size 2^( 4) =       0.000572154028
  error estimate for blocks of size 2^( 5) =       0.000585084153
  error estimate for blocks of size 2^( 6) =       0.000590708366
  error estimate for blocks of size 2^( 7) =       0.000594797466

      target function =      -0.706347253562
              le_mean =     -22.425273726270
             les_mean =     503.393786076222
             stat err =       0.000585686003
             autocorr =       1.369689046574
   target nu stat err =       0.000585686003
   target dn stat err =       0.006389868987
      target stat err =       0.004621972091
              std dev =       0.707732031585
             le_variance =       0.500884628531

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175655
                                         uncertainty =       0.006167071506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175655
                                         uncertainty =       0.006167071506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500442119
  error estimate for blocks of size 2^( 2) =       0.000527259952
  error estimate for blocks of size 2^( 3) =       0.000552610575
  error estimate for blocks of size 2^( 4) =       0.000572154028
  error estimate for blocks of size 2^( 5) =       0.000585084153
  error estimate for blocks of size 2^( 6) =       0.000590708366
  error estimate for blocks of size 2^( 7) =       0.000594797466

      target function =      -0.706347253557
              le_mean =     -22.425273726270
             les_mean =     503.393786076237
             stat err =       0.000585686003
             autocorr =       1.369689046495
   target nu stat err =       0.000585686003
   target dn stat err =       0.006389868988
      target stat err =       0.004621972092
              std dev =       0.707732031590
             le_variance =       0.500884628538

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175652
                                         uncertainty =       0.006167071506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175652
                                         uncertainty =       0.006167071506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500442119
  error estimate for blocks of size 2^( 2) =       0.000527259952
  error estimate for blocks of size 2^( 3) =       0.000552610575
  error estimate for blocks of size 2^( 4) =       0.000572154028
  error estimate for blocks of size 2^( 5) =       0.000585084153
  error estimate for blocks of size 2^( 6) =       0.000590708366
  error estimate for blocks of size 2^( 7) =       0.000594797466

      target function =      -0.706347253560
              le_mean =     -22.425273726270
             les_mean =     503.393786076230
             stat err =       0.000585686003
             autocorr =       1.369689046541
   target nu stat err =       0.000585686003
   target dn stat err =       0.006389868987
      target stat err =       0.004621972091
              std dev =       0.707732031587
             le_variance =       0.500884628535

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175649
                                         uncertainty =       0.006167071505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500948175649
                                         uncertainty =       0.006167071505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500442119
  error estimate for blocks of size 2^( 2) =       0.000527259952
  error estimate for blocks of size 2^( 3) =       0.000552610575
  error estimate for blocks of size 2^( 4) =       0.000572154028
  error estimate for blocks of size 2^( 5) =       0.000585084153
  error estimate for blocks of size 2^( 6) =       0.000590708366
  error estimate for blocks of size 2^( 7) =       0.000594797466

      target function =      -0.706347253562
              le_mean =     -22.425273726270
             les_mean =     503.393786076223
             stat err =       0.000585686003
             autocorr =       1.369689046576
   target nu stat err =       0.000585686003
   target dn stat err =       0.006389868987
      target stat err =       0.004621972091
              std dev =       0.707732031585
             le_variance =       0.500884628532


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706347253562        initial  <--
     6.2500e+06     6.2500e+07             1.3049e-10        -0.706347253557
     2.5000e+07     2.5000e+08             3.2621e-11        -0.706347253560
     1.0000e+08     1.0000e+09             8.1552e-12        -0.706347253562

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.2653
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2529e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s010 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s010 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=10  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2409e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.4786
    reference variance = 0.458388
====================================================
  Execution time = 4.5568e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s010
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9362e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5296e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493598635404
                                         uncertainty =       0.003086162587

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493598635404
                                         uncertainty =       0.003086162587

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496798481
  error estimate for blocks of size 2^( 2) =       0.000523894028
  error estimate for blocks of size 2^( 3) =       0.000549747767
  error estimate for blocks of size 2^( 4) =       0.000569475123
  error estimate for blocks of size 2^( 5) =       0.000582076387
  error estimate for blocks of size 2^( 6) =       0.000589512747
  error estimate for blocks of size 2^( 7) =       0.000593676874

      target function =      -0.711622915251
              le_mean =     -22.425075643816
             les_mean =     503.377634845672
             stat err =       0.000583685283
             autocorr =       1.380374624494
   target nu stat err =       0.000583685283
   target dn stat err =       0.003196635130
      target stat err =       0.002402005875
              std dev =       0.702579149722
             le_variance =       0.493617461624


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242507564382e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+07, overlap shift 6.2500e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711630064516       residual = 3.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711630064516       residual = 1.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711630064516       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711630064516       residual = 2.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711630064515       residual = 2.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711630006962       residual = 1.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711630180233       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711629988034       residual = 9.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711630019381       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711630013223       residual = 3.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711630299495       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711630218091       residual = 4.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711630051278       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711630164609       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711629911974       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711630288577       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711629943898       residual = 7.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711630131577       residual = 7.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711630141625       residual = 5.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711630067700       residual = 4.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711630189489       residual = 2.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711630015051       residual = 1.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711629970043       residual = 1.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711629956464       residual = 1.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711629902961       residual = 7.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711629790250       residual = 3.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711630009650       residual = 7.43e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711629951963       residual = 4.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711630109453       residual = 2.92e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711630220873       residual = 1.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.711629907120       residual = 5.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+07 is 1.181630e-11

solving harmonic davidson linear method for identity shift 2.5000e+08, overlap shift 2.5000e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711630064516       residual = 3.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711630064516       residual = 1.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711630064516       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711630064514       residual = 2.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711630063938       residual = 2.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711630176699       residual = 1.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711629993223       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711630304241       residual = 9.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711630068680       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711629988615       residual = 3.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711629527891       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711630247203       residual = 4.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711630452460       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711630193207       residual = 2.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711630711680       residual = 1.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711629999372       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711630137069       residual = 7.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711630257744       residual = 7.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711629097791       residual = 5.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711629199321       residual = 4.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711629483656       residual = 2.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711630672341       residual = 1.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711630546006       residual = 1.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711630446418       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711629445415       residual = 7.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711629863438       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711629385066       residual = 7.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711629620215       residual = 3.97e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711630512638       residual = 2.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711629084186       residual = 1.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.711630451856       residual = 5.75e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+08 is 2.954778e-12

solving harmonic davidson linear method for identity shift 1.0000e+09, overlap shift 1.0000e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711630064516       residual = 3.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711630064516       residual = 1.45e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711630064516       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711630064516       residual = 2.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711629639866       residual = 2.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711629936427       residual = 1.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711628247218       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711629987671       residual = 9.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711629898544       residual = 1.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711627999889       residual = 3.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711628506466       residual = 4.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711628094916       residual = 4.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711631762595       residual = 3.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711630469019       residual = 2.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711630589736       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711631091681       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711630243586       residual = 7.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711629995873       residual = 7.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711634331713       residual = 5.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711631247213       residual = 4.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711631649451       residual = 2.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711630105648       residual = 1.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711632848513       residual = 1.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711630166534       residual = 1.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711630387403       residual = 7.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711632199252       residual = 3.96e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711631488078       residual = 7.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711628266506       residual = 4.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711628935779       residual = 2.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711625938570       residual = 2.18e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.711631222533       residual = 7.09e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+09 is 7.379084e-13

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.516500 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0902e+01
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.4805
    reference variance = 0.52081
====================================================
  Execution time = 4.5587e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s010
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9519e-01
  Total weights = 2.0000e+06
  Execution time = 3.7995e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497589218
  error estimate for blocks of size 2^( 2) =       0.000524377097
  error estimate for blocks of size 2^( 3) =       0.000549637158
  error estimate for blocks of size 2^( 4) =       0.000569573341
  error estimate for blocks of size 2^( 5) =       0.000581709420
  error estimate for blocks of size 2^( 6) =       0.000586664782
  error estimate for blocks of size 2^( 7) =       0.000591181143

      target function =      -0.710475654435
              le_mean =     -22.425379071170
             les_mean =     503.392816297878
             stat err =       0.000582282172
             autocorr =       1.369383414209
   target nu stat err =       0.000582282172
   target dn stat err =       0.003384570192
      target stat err =       0.002527556563
              std dev =       0.703697420619
             le_variance =       0.495190059786

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497589218
  error estimate for blocks of size 2^( 2) =       0.000524377097
  error estimate for blocks of size 2^( 3) =       0.000549637158
  error estimate for blocks of size 2^( 4) =       0.000569573341
  error estimate for blocks of size 2^( 5) =       0.000581709420
  error estimate for blocks of size 2^( 6) =       0.000586664782
  error estimate for blocks of size 2^( 7) =       0.000591181143

      target function =      -0.710475654434
              le_mean =     -22.425379071170
             les_mean =     503.392816297879
             stat err =       0.000582282172
             autocorr =       1.369383414208
   target nu stat err =       0.000582282172
   target dn stat err =       0.003384570192
      target stat err =       0.002527556564
              std dev =       0.703697420619
             le_variance =       0.495190059786

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497589218
  error estimate for blocks of size 2^( 2) =       0.000524377097
  error estimate for blocks of size 2^( 3) =       0.000549637158
  error estimate for blocks of size 2^( 4) =       0.000569573341
  error estimate for blocks of size 2^( 5) =       0.000581709420
  error estimate for blocks of size 2^( 6) =       0.000586664782
  error estimate for blocks of size 2^( 7) =       0.000591181143

      target function =      -0.710475654434
              le_mean =     -22.425379071170
             les_mean =     503.392816297878
             stat err =       0.000582282172
             autocorr =       1.369383414214
   target nu stat err =       0.000582282172
   target dn stat err =       0.003384570192
      target stat err =       0.002527556563
              std dev =       0.703697420619
             le_variance =       0.495190059786

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495267662766
                                         uncertainty =       0.003532813284

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497589218
  error estimate for blocks of size 2^( 2) =       0.000524377097
  error estimate for blocks of size 2^( 3) =       0.000549637158
  error estimate for blocks of size 2^( 4) =       0.000569573341
  error estimate for blocks of size 2^( 5) =       0.000581709420
  error estimate for blocks of size 2^( 6) =       0.000586664782
  error estimate for blocks of size 2^( 7) =       0.000591181143

      target function =      -0.710475654435
              le_mean =     -22.425379071170
             les_mean =     503.392816297878
             stat err =       0.000582282172
             autocorr =       1.369383414215
   target nu stat err =       0.000582282172
   target dn stat err =       0.003384570192
      target stat err =       0.002527556563
              std dev =       0.703697420619
             le_variance =       0.495190059786


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710475654435        initial  <--
     6.2500e+07     6.2500e+08             1.1816e-11        -0.710475654434
     2.5000e+08     2.5000e+09             2.9548e-12        -0.710475654434
     1.0000e+09     1.0000e+10             7.3791e-13        -0.710475654435

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.6231
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2553e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s011 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s011 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=11  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.4512
    reference variance = 0.258626
====================================================
  Execution time = 4.5405e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s011
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0382e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4967e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503951842733
                                         uncertainty =       0.005234575533

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503951842733
                                         uncertainty =       0.005234575533

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501906492
  error estimate for blocks of size 2^( 2) =       0.000528750981
  error estimate for blocks of size 2^( 3) =       0.000554412226
  error estimate for blocks of size 2^( 4) =       0.000573899048
  error estimate for blocks of size 2^( 5) =       0.000586698335
  error estimate for blocks of size 2^( 6) =       0.000591415772
  error estimate for blocks of size 2^( 7) =       0.000595290626

      target function =      -0.704241043116
              le_mean =     -22.425949003516
             les_mean =     503.427008708798
             stat err =       0.000586825945
             autocorr =       1.367014082654
   target nu stat err =       0.000586825945
   target dn stat err =       0.005473981356
      target stat err =       0.003951940370
              std dev =       0.709802967324
             le_variance =       0.503820252421


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242594900352e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+08, overlap shift 6.2500e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704262478061       residual = 4.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704262478061       residual = 1.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.704262478061       residual = 1.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.704262478061       residual = 3.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.704262494541       residual = 4.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.704262643600       residual = 2.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.704263193221       residual = 3.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.704261205334       residual = 2.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.704263006032       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.704263380895       residual = 1.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.704262006870       residual = 6.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704262237520       residual = 6.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.704262211632       residual = 5.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.704265085303       residual = 2.98e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.704262896412       residual = 1.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.704262933587       residual = 1.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.704260422134       residual = 1.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.704263691780       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.704263044208       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.704263448557       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.704262346437       residual = 3.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.704262859083       residual = 1.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704264858356       residual = 1.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.704263077015       residual = 1.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.704261556016       residual = 8.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.704264273785       residual = 4.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.704262733542       residual = 1.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.704260986377       residual = 9.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.704263737020       residual = 5.77e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.704261090961       residual = 3.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.704259960424       residual = 2.65e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.704263723931       residual = 1.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.704262242477       residual = 6.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+08 is 1.492248e-12

solving harmonic davidson linear method for identity shift 2.5000e+09, overlap shift 2.5000e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704262478061       residual = 4.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704262478061       residual = 1.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.704262478061       residual = 1.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.704262478061       residual = 3.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.704262673199       residual = 4.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.704266328958       residual = 2.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.704262643328       residual = 3.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.704269091112       residual = 2.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.704262403840       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.704261771534       residual = 1.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.704261498490       residual = 6.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704261696899       residual = 6.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.704258764491       residual = 5.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.704266190354       residual = 2.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.704259978749       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.704265910539       residual = 1.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.704259013923       residual = 1.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.704267264068       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.704261188821       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.704259205141       residual = 8.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.704256066673       residual = 2.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.704263521939       residual = 1.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704262797729       residual = 1.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.704255413969       residual = 1.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.704264351460       residual = 7.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.704271075165       residual = 5.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.704265987410       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.704263697471       residual = 1.11e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.704256994698       residual = 6.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.704270577910       residual = 6.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.704258763536       residual = 3.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.704257468450       residual = 3.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.704263179326       residual = 7.34e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+09 is 3.735412e-13

solving harmonic davidson linear method for identity shift 1.0000e+10, overlap shift 1.0000e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704262478061       residual = 4.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704262478061       residual = 1.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.704262478061       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.704262478061       residual = 3.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.704254820654       residual = 4.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.704261716691       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.704259651279       residual = 3.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.704244429204       residual = 2.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.704256849943       residual = 1.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.704267175338       residual = 1.80e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.704251572199       residual = 6.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704240785214       residual = 7.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.704277125562       residual = 4.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.704261240331       residual = 2.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.704254095306       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.704245402573       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.704294270983       residual = 1.30e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.704267132099       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.704262578143       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.704268549627       residual = 6.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.704268453384       residual = 3.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.704250298625       residual = 1.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704273563933       residual = 1.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.704269892693       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.704265012637       residual = 7.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.704233264554       residual = 8.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.704294993308       residual = 1.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.704254764550       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.704192167379       residual = 2.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.704248908995       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.704248302794       residual = 1.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.704277622788       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.704262840033       residual = 7.34e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.704205375460       residual = 1.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.704274699461       residual = 1.60e-07           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.704265320956       residual = 5.66e-08           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.704247389722       residual = 2.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.704218535559       residual = 9.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.704287632233       residual = 5.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.704233467511       residual = 7.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.704284285908       residual = 5.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.704369793408       residual = 6.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.704224637147       residual = 1.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.703923930713       residual = 6.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.704225808783       residual = 6.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.703912254118       residual = 6.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.704145714130       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.704199765350       residual = 5.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.704012003203       residual = 4.00e-05           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.705124196443       residual = 4.70e-04           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.703889524947       residual = 7.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.706286078044       residual = 2.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.704406614942       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.696746478618       residual = 2.98e-02           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.704970428592       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration   55:   krylov dim =  56   tar_fn =      -0.710222768013       residual = 2.70e-02           smallest_sin_value = 9.96e-01
davidson iteration   56 stopping due to small subspace S singular value of 9.82e-01
davidson solver did not converge after         56 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+10 is 9.271427e-14

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.608018 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0469e+01
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.3669
    reference variance = 0.31504
====================================================
  Execution time = 4.6376e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s011
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.8677e-01
  Total weights = 2.0000e+06
  Execution time = 3.8030e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000541648321
  error estimate for blocks of size 2^( 2) =       0.000566392585
  error estimate for blocks of size 2^( 3) =       0.000590874005
  error estimate for blocks of size 2^( 4) =       0.000610053012
  error estimate for blocks of size 2^( 5) =       0.000621513056
  error estimate for blocks of size 2^( 6) =       0.000629852939
  error estimate for blocks of size 2^( 7) =       0.000631062377

      target function =      -0.645682427801
              le_mean =     -22.424479149090
             les_mean =     503.444030622721
             stat err =       0.000623120346
             autocorr =       1.323454638864
   target nu stat err =       0.000623120346
   target dn stat err =       0.085601415870
      target stat err =       0.051576851083
              std dev =       0.766006402154
             le_variance =       0.586765808141

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629250
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629250
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000541648321
  error estimate for blocks of size 2^( 2) =       0.000566392585
  error estimate for blocks of size 2^( 3) =       0.000590874005
  error estimate for blocks of size 2^( 4) =       0.000610053012
  error estimate for blocks of size 2^( 5) =       0.000621513056
  error estimate for blocks of size 2^( 6) =       0.000629852939
  error estimate for blocks of size 2^( 7) =       0.000631062377

      target function =      -0.645682427801
              le_mean =     -22.424479149090
             les_mean =     503.444030622721
             stat err =       0.000623120346
             autocorr =       1.323454638863
   target nu stat err =       0.000623120346
   target dn stat err =       0.085601415870
      target stat err =       0.051576851083
              std dev =       0.766006402154
             le_variance =       0.586765808141

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000541648321
  error estimate for blocks of size 2^( 2) =       0.000566392585
  error estimate for blocks of size 2^( 3) =       0.000590874005
  error estimate for blocks of size 2^( 4) =       0.000610053012
  error estimate for blocks of size 2^( 5) =       0.000621513056
  error estimate for blocks of size 2^( 6) =       0.000629852939
  error estimate for blocks of size 2^( 7) =       0.000631062377

      target function =      -0.645682427801
              le_mean =     -22.424479149090
             les_mean =     503.444030622721
             stat err =       0.000623120346
             autocorr =       1.323454638859
   target nu stat err =       0.000623120346
   target dn stat err =       0.085601415870
      target stat err =       0.051576851083
              std dev =       0.766006402154
             le_variance =       0.586765808141

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.586944629249
                                         uncertainty =       0.084790903353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000541648321
  error estimate for blocks of size 2^( 2) =       0.000566392585
  error estimate for blocks of size 2^( 3) =       0.000590874005
  error estimate for blocks of size 2^( 4) =       0.000610053012
  error estimate for blocks of size 2^( 5) =       0.000621513056
  error estimate for blocks of size 2^( 6) =       0.000629852939
  error estimate for blocks of size 2^( 7) =       0.000631062377

      target function =      -0.645682427801
              le_mean =     -22.424479149090
             les_mean =     503.444030622721
             stat err =       0.000623120346
             autocorr =       1.323454638862
   target nu stat err =       0.000623120346
   target dn stat err =       0.085601415870
      target stat err =       0.051576851083
              std dev =       0.766006402154
             le_variance =       0.586765808141


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.645682427801        initial  <--
     6.2500e+08     6.2500e+09             1.4922e-12        -0.645682427801
     2.5000e+09     2.5000e+10             3.7354e-13        -0.645682427801
     1.0000e+10     1.0000e+11             9.2714e-14        -0.645682427801

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.4562
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2593e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s012 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s012 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=12  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2414e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.468
    reference variance = 0.447485
====================================================
  Execution time = 4.7362e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s012
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9695e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5020e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497033932094
                                         uncertainty =       0.003541956487

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497033932094
                                         uncertainty =       0.003541956487

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498474681
  error estimate for blocks of size 2^( 2) =       0.000525524494
  error estimate for blocks of size 2^( 3) =       0.000550913878
  error estimate for blocks of size 2^( 4) =       0.000569638715
  error estimate for blocks of size 2^( 5) =       0.000581469015
  error estimate for blocks of size 2^( 6) =       0.000587900618
  error estimate for blocks of size 2^( 7) =       0.000594419710

      target function =      -0.709193539948
              le_mean =     -22.425523165373
             les_mean =     503.401043008367
             stat err =       0.000583357015
             autocorr =       1.369564970980
   target nu stat err =       0.000583357015
   target dn stat err =       0.003812194632
      target stat err =       0.002821000279
              std dev =       0.704949655071
             le_variance =       0.496954016185


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242552316537e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+09, overlap shift 6.2500e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709203698845       residual = 3.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709203698845       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709203698845       residual = 9.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709203698846       residual = 2.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709202635173       residual = 3.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709202242548       residual = 8.89e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709208071637       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.709200480581       residual = 8.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709205532268       residual = 8.17e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709209898130       residual = 5.98e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709199277566       residual = 2.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709201242582       residual = 4.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709204280251       residual = 2.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709201520510       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709216316119       residual = 1.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709213446534       residual = 1.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709211457873       residual = 8.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709209613410       residual = 8.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709196819801       residual = 6.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709188919712       residual = 2.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709204700568       residual = 1.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709185240520       residual = 2.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709207659899       residual = 2.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709192552902       residual = 1.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709209595456       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709185052560       residual = 4.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709210525900       residual = 1.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709219680633       residual = 1.85e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709204719988       residual = 4.65e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.709170752902       residual = 5.51e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.709184009363       residual = 2.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709252149714       residual = 1.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.709209525231       residual = 2.66e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.709199222414       residual = 8.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.709224572015       residual = 2.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.709177165461       residual = 4.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.709204520735       residual = 2.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.709166444582       residual = 6.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.709225911455       residual = 2.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.709216726884       residual = 8.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.709163345694       residual = 7.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.709159798836       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.709152216708       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.709210489269       residual = 2.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.709285822833       residual = 3.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.709272883211       residual = 2.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.709193691034       residual = 7.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.709130509476       residual = 2.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.709269021088       residual = 2.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.709286403603       residual = 4.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.709351504609       residual = 5.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.711766056419       residual = 3.60e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.711367757233       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.711442630387       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.709687203911       residual = 2.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   55:   krylov dim =  56   tar_fn =      -0.708248834175       residual = 7.46e-03           smallest_sin_value = 1.00e+00
davidson iteration   56 stopping due to small subspace S singular value of 9.42e-01
davidson solver did not converge after         56 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+09 is 1.117976e-13

solving harmonic davidson linear method for identity shift 2.5000e+10, overlap shift 2.5000e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709203698845       residual = 3.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709203698845       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709203698845       residual = 9.78e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709203698845       residual = 2.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709203698882       residual = 3.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709231193562       residual = 8.80e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709171707007       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.709215717409       residual = 8.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709201674573       residual = 7.63e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709260155272       residual = 6.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709185667836       residual = 2.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709164040666       residual = 4.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709162421590       residual = 3.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709202090033       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709171044230       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709149047004       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709254962349       residual = 9.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709170501203       residual = 9.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709196708965       residual = 5.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709180239639       residual = 3.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709120852485       residual = 5.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709140716516       residual = 2.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709174718630       residual = 1.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709231317088       residual = 1.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709178174106       residual = 1.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709180048278       residual = 1.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709186004913       residual = 5.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709186215709       residual = 6.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709211653252       residual = 6.99e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.709213892493       residual = 4.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.709124916351       residual = 3.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709207746295       residual = 1.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.709171279091       residual = 8.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.709193937494       residual = 4.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.709171234900       residual = 8.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.709270954256       residual = 2.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.709059139652       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.709162250442       residual = 1.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.709318632249       residual = 8.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.709868770503       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.708972391857       residual = 2.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.709071274604       residual = 1.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.708333405463       residual = 3.88e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.708274247550       residual = 4.48e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.708963564606       residual = 2.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.708566783536       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.709810034435       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.708761306954       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.708911801057       residual = 8.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.708974496400       residual = 9.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.708919475549       residual = 2.72e-04           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.712757821570       residual = 7.26e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.698138365791       residual = 6.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.714222173534       residual = 1.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.719386556611       residual = 5.80e-02           smallest_sin_value = 9.98e-01
davidson iteration   55 stopping due to small subspace S singular value of 9.69e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+10 is 2.743046e-14

solving harmonic davidson linear method for identity shift 1.0000e+11, overlap shift 1.0000e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709203698845       residual = 3.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709203698845       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709203698845       residual = 9.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709228506574       residual = 2.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709203698821       residual = 3.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709203561033       residual = 9.34e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.709157686577       residual = 1.40e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708975296468       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708982978404       residual = 9.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709042843800       residual = 8.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.709202520740       residual = 3.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709078770619       residual = 6.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709088728262       residual = 3.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709302027534       residual = 2.85e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709398553121       residual = 5.00e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.709382734052       residual = 3.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.709053303154       residual = 2.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.709292265091       residual = 1.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.709264552742       residual = 1.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.709002387623       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709157801134       residual = 2.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709297596232       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709412627343       residual = 2.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708697783107       residual = 1.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.709063760489       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708946441892       residual = 3.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.709304121862       residual = 9.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708914727377       residual = 6.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.709361980910       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708938201038       residual = 4.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708771485268       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709177774088       residual = 5.58e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.709235473947       residual = 9.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.708440912812       residual = 3.03e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.709142061971       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.709373609031       residual = 2.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.709888483029       residual = 2.72e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.709009126250       residual = 2.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.709442399009       residual = 5.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.707667087798       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.709130164148       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.710660855894       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.711408629705       residual = 2.45e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.711834368729       residual = 3.90e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.707408503506       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.709177741246       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.708288529508       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.706778320184       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.711713899221       residual = 7.31e-03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.721928672854       residual = 8.52e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.707376573108       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.775405409966       residual = 2.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.720577048651       residual = 1.35e-01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.754119659693       residual = 9.99e-01           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.625022608471       residual = 3.79e+00           smallest_sin_value = 1.00e+00
davidson iteration   55 stopping due to small subspace S singular value of 9.88e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+11 is 7.216806e-15

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.791486 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2572e+01
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.38
    reference variance = 0.586232
====================================================
  Execution time = 4.4724e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s012
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9916e-01
  Total weights = 2.0000e+06
  Execution time = 3.8040e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499578406
  error estimate for blocks of size 2^( 2) =       0.000526403345
  error estimate for blocks of size 2^( 3) =       0.000552178859
  error estimate for blocks of size 2^( 4) =       0.000572003790
  error estimate for blocks of size 2^( 5) =       0.000584414194
  error estimate for blocks of size 2^( 6) =       0.000594388888
  error estimate for blocks of size 2^( 7) =       0.000597574658

      target function =      -0.707601836227
              le_mean =     -22.425671544438
             les_mean =     503.409901137343
             stat err =       0.000587095382
             autocorr =       1.381051941069
   target nu stat err =       0.000587095382
   target dn stat err =       0.003625846525
      target stat err =       0.002679039914
              std dev =       0.706510557536
             le_variance =       0.499157167910

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499578406
  error estimate for blocks of size 2^( 2) =       0.000526403345
  error estimate for blocks of size 2^( 3) =       0.000552178859
  error estimate for blocks of size 2^( 4) =       0.000572003790
  error estimate for blocks of size 2^( 5) =       0.000584414194
  error estimate for blocks of size 2^( 6) =       0.000594388888
  error estimate for blocks of size 2^( 7) =       0.000597574658

      target function =      -0.707601836227
              le_mean =     -22.425671544438
             les_mean =     503.409901137343
             stat err =       0.000587095382
             autocorr =       1.381051941071
   target nu stat err =       0.000587095382
   target dn stat err =       0.003625846525
      target stat err =       0.002679039914
              std dev =       0.706510557536
             le_variance =       0.499157167910

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499578406
  error estimate for blocks of size 2^( 2) =       0.000526403345
  error estimate for blocks of size 2^( 3) =       0.000552178859
  error estimate for blocks of size 2^( 4) =       0.000572003790
  error estimate for blocks of size 2^( 5) =       0.000584414194
  error estimate for blocks of size 2^( 6) =       0.000594388888
  error estimate for blocks of size 2^( 7) =       0.000597574658

      target function =      -0.707601836227
              le_mean =     -22.425671544438
             les_mean =     503.409901137343
             stat err =       0.000587095382
             autocorr =       1.381051941065
   target nu stat err =       0.000587095382
   target dn stat err =       0.003625846525
      target stat err =       0.002679039914
              std dev =       0.706510557536
             le_variance =       0.499157167910

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498685819822
                                         uncertainty =       0.003514544798

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499578406
  error estimate for blocks of size 2^( 2) =       0.000526403345
  error estimate for blocks of size 2^( 3) =       0.000552178859
  error estimate for blocks of size 2^( 4) =       0.000572003790
  error estimate for blocks of size 2^( 5) =       0.000584414194
  error estimate for blocks of size 2^( 6) =       0.000594388888
  error estimate for blocks of size 2^( 7) =       0.000597574658

      target function =      -0.707601836227
              le_mean =     -22.425671544438
             les_mean =     503.409901137343
             stat err =       0.000587095382
             autocorr =       1.381051941063
   target nu stat err =       0.000587095382
   target dn stat err =       0.003625846525
      target stat err =       0.002679039914
              std dev =       0.706510557536
             le_variance =       0.499157167910


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707601836227        initial  <--
     6.2500e+09     6.2500e+10             1.1180e-13        -0.707601836227
     2.5000e+10     2.5000e+11             2.7430e-14        -0.707601836227
     1.0000e+11     1.0000e+12             7.2168e-15        -0.707601836227

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7725
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2635e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s013 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s013 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=13  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.4788
    reference variance = 0.342544
====================================================
  Execution time = 4.5420e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s013
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9064e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5019e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490676697526
                                         uncertainty =       0.002440554406

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490676697526
                                         uncertainty =       0.002440554406

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495299818
  error estimate for blocks of size 2^( 2) =       0.000522032034
  error estimate for blocks of size 2^( 3) =       0.000547661612
  error estimate for blocks of size 2^( 4) =       0.000566721492
  error estimate for blocks of size 2^( 5) =       0.000580519997
  error estimate for blocks of size 2^( 6) =       0.000587113553
  error estimate for blocks of size 2^( 7) =       0.000590082994

      target function =      -0.713783772909
              le_mean =     -22.426639771508
             les_mean =     503.444815015522
             stat err =       0.000581109509
             autocorr =       1.376510811175
   target nu stat err =       0.000581109509
   target dn stat err =       0.002611824947
      target stat err =       0.002007817831
              std dev =       0.700459720362
             le_variance =       0.490643819850


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242663977151e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+10, overlap shift 6.2500e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713788434161       residual = 3.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713788434161       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713788434161       residual = 9.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.713788434161       residual = 3.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.713819027921       residual = 3.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.713780207557       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.713868594441       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.713842743128       residual = 1.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.713837164123       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.713824322943       residual = 6.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.713651977376       residual = 4.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.713763341635       residual = 3.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.713971789291       residual = 4.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.713886145808       residual = 1.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.714024144236       residual = 4.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.713785316737       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.713849414382       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.713863843918       residual = 9.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.713888176644       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.713680567126       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.713956708298       residual = 1.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.713795803123       residual = 3.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.713844732522       residual = 9.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.713917589802       residual = 9.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.713766524570       residual = 4.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.713820289168       residual = 4.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.713886463628       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.713640917952       residual = 1.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.713099683002       residual = 2.43e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.713972965964       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.713933450389       residual = 1.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.713573383045       residual = 2.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.713783249690       residual = 2.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.714062730061       residual = 4.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.713913962773       residual = 1.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.713567685789       residual = 3.03e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.714014408900       residual = 3.30e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.714204040107       residual = 9.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.712335392989       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.713687558369       residual = 7.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.714347615464       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.714284478814       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.714452624607       residual = 2.46e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.713116000800       residual = 2.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.713931680844       residual = 2.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.712482824569       residual = 9.77e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.710116333107       residual = 6.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.711765702204       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.711788136792       residual = 2.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.716071966860       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.699217956809       residual = 1.21e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.717307008401       residual = 1.64e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.688168597537       residual = 3.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.729672892220       residual = 1.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   54 stopping due to small subspace S singular value of 9.76e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+10 is 1.275434e-14

solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713788434161       residual = 3.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713788434161       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713788434161       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.713788434161       residual = 3.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.713788434161       residual = 3.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.713896699710       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.713582473853       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.713491095857       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.713357396224       residual = 1.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.714155526733       residual = 3.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.713030230714       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.713631003599       residual = 5.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.713800205656       residual = 6.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.714138850359       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.713265392579       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.714073376639       residual = 9.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.713494494806       residual = 9.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.713848826113       residual = 4.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712958847413       residual = 3.89e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.713365946625       residual = 1.42e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.714090216747       residual = 6.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.713494063213       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.715100198608       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712374733030       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.713163708649       residual = 2.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.713114375917       residual = 2.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.714922889590       residual = 7.01e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712875489404       residual = 4.15e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.714442425644       residual = 2.96e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.714006488745       residual = 6.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.715334449106       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.714600235856       residual = 3.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.713575294544       residual = 4.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.712644609945       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.713611661224       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.713296167282       residual = 2.70e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.712096231059       residual = 1.50e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.714614362858       residual = 5.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.713941081613       residual = 6.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.710125894467       residual = 6.98e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.710033471758       residual = 7.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.712311010734       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.715015761660       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.710831607221       residual = 4.60e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.717142481050       residual = 5.67e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.707093406687       residual = 2.30e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.703294737608       residual = 5.67e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.699804003083       residual = 9.99e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.697003231475       residual = 2.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -1.033260752854       residual = 5.10e+01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.737461714359       residual = 3.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.842363375144       residual = 1.07e+01           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.766701804336       residual = 2.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -1.010803579438       residual = 4.37e+01           smallest_sin_value = 9.99e-01
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.559844813217       residual = 1.16e+01           smallest_sin_value = 9.91e-01
davidson iteration   55 stopping due to small subspace S singular value of 6.40e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+11 is 2.128366e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713788434161       residual = 3.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713788434161       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713788434161       residual = 9.40e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.713788434160       residual = 3.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.713788513487       residual = 3.67e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.713925510899       residual = 3.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.713709383883       residual = 1.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.713328655561       residual = 1.10e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712386629266       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.714442241468       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.714644937075       residual = 5.59e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.714861298440       residual = 9.30e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.713071130853       residual = 1.45e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.715010148044       residual = 7.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710598838522       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712115651756       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.713764051326       residual = 2.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.713927944671       residual = 1.91e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.713568033623       residual = 1.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.714690622865       residual = 1.50e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712759776227       residual = 7.81e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.714816344753       residual = 6.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.714947458774       residual = 1.69e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.717466851562       residual = 6.57e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.718688603387       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.713650501466       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.717392396320       residual = 6.56e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710620191342       residual = 5.69e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.703467646557       residual = 5.74e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711029136647       residual = 4.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.717994132369       residual = 1.05e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.711605539177       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.708920802327       residual = 1.31e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.723180897668       residual = 4.57e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.714338409465       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.709113809303       residual = 1.75e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.704496273278       residual = 4.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.708850484966       residual = 1.33e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.723988804495       residual = 5.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.713968493168       residual = 2.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.709968418439       residual = 8.40e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.723920644228       residual = 5.38e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.712396590683       residual = 5.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.715075337878       residual = 4.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.728941535181       residual = 1.17e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.695662402845       residual = 1.99e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.756760086953       residual = 9.78e-01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.694996480545       residual = 3.69e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.703989887979       residual = 9.52e-01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.558435243964       residual = 1.97e+01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.781041322335       residual = 3.09e+00           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.642305817977       residual = 2.59e+01           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.289322006946       residual = 9.55e+01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.234701753634       residual = 1.29e+02           smallest_sin_value = 1.00e+00
davidson iteration   54 stopping due to small subspace S singular value of 9.77e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+12 is 4.426010e-16

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.966868 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0620e+01
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.3723
    reference variance = 0.295419
====================================================
  Execution time = 4.5511e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s013
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9683e-01
  Total weights = 2.0000e+06
  Execution time = 3.8007e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498410443
  error estimate for blocks of size 2^( 2) =       0.000525490031
  error estimate for blocks of size 2^( 3) =       0.000551602141
  error estimate for blocks of size 2^( 4) =       0.000571293539
  error estimate for blocks of size 2^( 5) =       0.000583379926
  error estimate for blocks of size 2^( 6) =       0.000591151097
  error estimate for blocks of size 2^( 7) =       0.000594525977

      target function =      -0.709285424425
              le_mean =     -22.425860600107
             les_mean =     503.416049345832
             stat err =       0.000585087635
             autocorr =       1.378058244443
   target nu stat err =       0.000585087635
   target dn stat err =       0.003001178722
      target stat err =       0.002253066150
              std dev =       0.704858807700
             le_variance =       0.496825938792

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498410443
  error estimate for blocks of size 2^( 2) =       0.000525490031
  error estimate for blocks of size 2^( 3) =       0.000551602141
  error estimate for blocks of size 2^( 4) =       0.000571293539
  error estimate for blocks of size 2^( 5) =       0.000583379926
  error estimate for blocks of size 2^( 6) =       0.000591151097
  error estimate for blocks of size 2^( 7) =       0.000594525977

      target function =      -0.709285424425
              le_mean =     -22.425860600107
             les_mean =     503.416049345832
             stat err =       0.000585087635
             autocorr =       1.378058244442
   target nu stat err =       0.000585087635
   target dn stat err =       0.003001178722
      target stat err =       0.002253066150
              std dev =       0.704858807700
             le_variance =       0.496825938792

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498410443
  error estimate for blocks of size 2^( 2) =       0.000525490031
  error estimate for blocks of size 2^( 3) =       0.000551602141
  error estimate for blocks of size 2^( 4) =       0.000571293539
  error estimate for blocks of size 2^( 5) =       0.000583379926
  error estimate for blocks of size 2^( 6) =       0.000591151097
  error estimate for blocks of size 2^( 7) =       0.000594525977

      target function =      -0.709285424425
              le_mean =     -22.425860600107
             les_mean =     503.416049345832
             stat err =       0.000585087635
             autocorr =       1.378058244442
   target nu stat err =       0.000585087635
   target dn stat err =       0.003001178722
      target stat err =       0.002253066150
              std dev =       0.704858807700
             le_variance =       0.496825938792

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496701009277
                                         uncertainty =       0.003097492806

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498410443
  error estimate for blocks of size 2^( 2) =       0.000525490031
  error estimate for blocks of size 2^( 3) =       0.000551602141
  error estimate for blocks of size 2^( 4) =       0.000571293539
  error estimate for blocks of size 2^( 5) =       0.000583379926
  error estimate for blocks of size 2^( 6) =       0.000591151097
  error estimate for blocks of size 2^( 7) =       0.000594525977

      target function =      -0.709285424425
              le_mean =     -22.425860600107
             les_mean =     503.416049345832
             stat err =       0.000585087635
             autocorr =       1.378058244443
   target nu stat err =       0.000585087635
   target dn stat err =       0.003001178722
      target stat err =       0.002253066150
              std dev =       0.704858807700
             le_variance =       0.496825938792


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709285424425        initial  <--
     6.2500e+10     6.2500e+11             1.2754e-14        -0.709285424425
     2.5000e+11     2.5000e+12             2.1284e-15        -0.709285424425
     1.0000e+12     1.0000e+13             4.4260e-16        -0.709285424425

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.5341
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2516e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s014 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s014 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=14  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.379
    reference variance = 0.550139
====================================================
  Execution time = 4.5690e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s014
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0257e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4997e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502570194679
                                         uncertainty =       0.004335291889

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502570194679
                                         uncertainty =       0.004335291889

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501281888
  error estimate for blocks of size 2^( 2) =       0.000527799659
  error estimate for blocks of size 2^( 3) =       0.000553638926
  error estimate for blocks of size 2^( 4) =       0.000572558465
  error estimate for blocks of size 2^( 5) =       0.000585039002
  error estimate for blocks of size 2^( 6) =       0.000592867247
  error estimate for blocks of size 2^( 7) =       0.000598290624

      target function =      -0.705145769938
              le_mean =     -22.425925107817
             les_mean =     503.424683751727
             stat err =       0.000587188834
             autocorr =       1.372118284790
   target nu stat err =       0.000587188834
   target dn stat err =       0.004287068453
      target stat err =       0.003124855868
              std dev =       0.708919643957
             le_variance =       0.502567061588


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242592510782e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+11, overlap shift 6.2500e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705158564024       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705158564024       residual = 1.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705158564024       residual = 6.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705158564024       residual = 3.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705158564024       residual = 4.42e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705158564024       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705158564024       residual = 2.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705158564024       residual = 3.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705158564024       residual = 1.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706304453333       residual = 8.80e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705333887583       residual = 3.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704532086106       residual = 5.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.704355612536       residual = 8.73e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.704716277662       residual = 2.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705987590211       residual = 8.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705590640242       residual = 5.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706307845965       residual = 8.10e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705044913516       residual = 4.22e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706215136641       residual = 7.25e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.702819622345       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.706688880127       residual = 1.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701218483686       residual = 8.86e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704244772549       residual = 5.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.703293298722       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.704852393978       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.696915171732       residual = 3.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.702853267787       residual = 2.71e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.709786628820       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.698655712808       residual = 2.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710288923430       residual = 1.26e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.709720835398       residual = 1.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.711896940865       residual = 2.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.703509144017       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.710656526545       residual = 1.68e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.703023558233       residual = 3.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.701664907895       residual = 7.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.714131403351       residual = 4.32e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.700248352805       residual = 1.29e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.699820816977       residual = 1.56e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.699295817772       residual = 1.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.696800443946       residual = 3.77e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.702612463761       residual = 4.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.699013549994       residual = 2.27e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.714073156018       residual = 4.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.688946829041       residual = 1.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.729670010040       residual = 3.08e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.710233732124       residual = 1.35e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.686175851814       residual = 2.58e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.694938866880       residual = 1.86e-01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.685653456013       residual = 2.52e-01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.520238862641       residual = 2.33e+01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.837581584147       residual = 8.89e+00           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.694062111612       residual = 5.26e+01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.906312400850       residual = 2.62e+01           smallest_sin_value = 9.95e-01
davidson iteration   54 stopping due to small subspace S singular value of 7.59e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+11 is 9.349083e-16

solving harmonic davidson linear method for identity shift 2.5000e+12, overlap shift 2.5000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705158564024       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705158564024       residual = 1.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705158564024       residual = 2.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705158564024       residual = 2.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.704717660974       residual = 2.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706120169022       residual = 8.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.702669531456       residual = 4.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708746066772       residual = 6.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.704670439764       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708517082368       residual = 1.01e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.702240622903       residual = 4.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.703036795841       residual = 4.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701730082630       residual = 9.35e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.703923742598       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.700094302317       residual = 2.22e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.694588099599       residual = 6.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.687269609639       residual = 1.55e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.715311947162       residual = 6.85e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.697113166362       residual = 4.95e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.720023079683       residual = 1.29e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.709161960882       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.713666629221       residual = 4.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705176682567       residual = 2.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.702704716593       residual = 1.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.699128815301       residual = 2.26e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711985137548       residual = 4.46e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.702411777433       residual = 8.34e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.721558443482       residual = 1.69e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.702254693698       residual = 1.01e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.698952748817       residual = 1.91e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706271310499       residual = 3.90e-03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.699791512637       residual = 3.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.702073549468       residual = 1.02e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.721587013341       residual = 2.34e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.710441454916       residual = 2.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.705984901107       residual = 8.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.705461766445       residual = 1.40e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.673438885950       residual = 5.75e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.697088829975       residual = 6.61e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.702586280313       residual = 9.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.741241985152       residual = 6.91e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.683995300116       residual = 2.76e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.662107929236       residual = 1.01e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.662568978361       residual = 8.96e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.637338666955       residual = 2.89e+00           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.716134566694       residual = 1.21e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.577013311606       residual = 9.11e+00           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.555969100371       residual = 1.55e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.576589316779       residual = 9.81e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.753974627010       residual = 3.02e+00           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -1.027194132230       residual = 7.78e+01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.765599777097       residual = 5.00e+00           smallest_sin_value = 9.98e-01
davidson iteration   52 stopping due to small subspace S singular value of 9.81e-01
davidson solver did not converge after         52 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+12 is 7.918723e-17

solving harmonic davidson linear method for identity shift 1.0000e+13, overlap shift 1.0000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705158564024       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705158564024       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.23e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+13 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.078776 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0804e+01
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.5649
    reference variance = 0.587096
====================================================
  Execution time = 4.7262e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s014
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1034e-01
  Total weights = 2.0000e+06
  Execution time = 3.7931e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505144554
  error estimate for blocks of size 2^( 2) =       0.000531884944
  error estimate for blocks of size 2^( 3) =       0.000557111753
  error estimate for blocks of size 2^( 4) =       0.000576227495
  error estimate for blocks of size 2^( 5) =       0.000589441367
  error estimate for blocks of size 2^( 6) =       0.000595502052
  error estimate for blocks of size 2^( 7) =       0.000599319441

      target function =      -0.699605480228
              le_mean =     -22.425508627955
             les_mean =     503.413779009141
             stat err =       0.000590122589
             autocorr =       1.364750074885
   target nu stat err =       0.000590122589
   target dn stat err =       0.008026075372
      target stat err =       0.005680994255
              std dev =       0.714382279893
             le_variance =       0.510342041825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505144554
  error estimate for blocks of size 2^( 2) =       0.000531884944
  error estimate for blocks of size 2^( 3) =       0.000557111753
  error estimate for blocks of size 2^( 4) =       0.000576227495
  error estimate for blocks of size 2^( 5) =       0.000589441367
  error estimate for blocks of size 2^( 6) =       0.000595502052
  error estimate for blocks of size 2^( 7) =       0.000599319441

      target function =      -0.699605480228
              le_mean =     -22.425508627955
             les_mean =     503.413779009141
             stat err =       0.000590122589
             autocorr =       1.364750074889
   target nu stat err =       0.000590122589
   target dn stat err =       0.008026075372
      target stat err =       0.005680994255
              std dev =       0.714382279893
             le_variance =       0.510342041825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505144554
  error estimate for blocks of size 2^( 2) =       0.000531884944
  error estimate for blocks of size 2^( 3) =       0.000557111753
  error estimate for blocks of size 2^( 4) =       0.000576227495
  error estimate for blocks of size 2^( 5) =       0.000589441367
  error estimate for blocks of size 2^( 6) =       0.000595502052
  error estimate for blocks of size 2^( 7) =       0.000599319441

      target function =      -0.699605480228
              le_mean =     -22.425508627955
             les_mean =     503.413779009141
             stat err =       0.000590122589
             autocorr =       1.364750074890
   target nu stat err =       0.000590122589
   target dn stat err =       0.008026075372
      target stat err =       0.005680994255
              std dev =       0.714382279893
             le_variance =       0.510342041825

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510288811168
                                         uncertainty =       0.007790949102

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505144554
  error estimate for blocks of size 2^( 2) =       0.000531884944
  error estimate for blocks of size 2^( 3) =       0.000557111753
  error estimate for blocks of size 2^( 4) =       0.000576227495
  error estimate for blocks of size 2^( 5) =       0.000589441367
  error estimate for blocks of size 2^( 6) =       0.000595502052
  error estimate for blocks of size 2^( 7) =       0.000599319441

      target function =      -0.699605480228
              le_mean =     -22.425508627955
             les_mean =     503.413779009141
             stat err =       0.000590122589
             autocorr =       1.364750074884
   target nu stat err =       0.000590122589
   target dn stat err =       0.008026075372
      target stat err =       0.005680994255
              std dev =       0.714382279893
             le_variance =       0.510342041825


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.699605480228        initial
     6.2500e+11     6.2500e+12             9.3491e-16        -0.699605480228  <--
     2.5000e+12     2.5000e+13             7.9187e-17        -0.699605480228
     1.0000e+13     1.0000e+14             0.0000e+00        -0.699605480228

*****************************************************************************
Applying the update for shift_i =   6.2500e+11     and shift_s =   6.2500e+12
*****************************************************************************

  Execution time = 6.6188e+01
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2700e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s015 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s015 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=15  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2420e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.3823
    reference variance = 0.328114
====================================================
  Execution time = 4.5677e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s015
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9754e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4987e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497694729967
                                         uncertainty =       0.003741399920

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497694729967
                                         uncertainty =       0.003741399920

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498768428
  error estimate for blocks of size 2^( 2) =       0.000525683431
  error estimate for blocks of size 2^( 3) =       0.000551483083
  error estimate for blocks of size 2^( 4) =       0.000570860326
  error estimate for blocks of size 2^( 5) =       0.000585586557
  error estimate for blocks of size 2^( 6) =       0.000591916936
  error estimate for blocks of size 2^( 7) =       0.000594140257

      target function =      -0.708770941814
              le_mean =     -22.425424655863
             les_mean =     503.397210635902
             stat err =       0.000585626019
             autocorr =       1.378614426128
   target nu stat err =       0.000585626019
   target dn stat err =       0.003909623719
      target stat err =       0.002886628365
              std dev =       0.705365074899
             le_variance =       0.497539888888


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242542465586e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+11, overlap shift 1.5625e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708781588681       residual = 4.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708781588681       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708781588681       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708782394831       residual = 3.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708778095474       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708781588681       residual = 9.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708850754431       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708727167650       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708498957140       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708716717178       residual = 9.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708392968960       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708880929424       residual = 6.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709002109568       residual = 9.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708856652751       residual = 3.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708654756218       residual = 4.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708580607036       residual = 5.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708682930638       residual = 2.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708468801997       residual = 6.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708753831640       residual = 2.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708468256011       residual = 7.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708677936977       residual = 2.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708969162780       residual = 3.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.709129110080       residual = 9.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708601555591       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708185935999       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.709199787114       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.707643179111       residual = 7.04e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.707025856171       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708508153585       residual = 4.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708802134207       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.710122994561       residual = 9.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709164577261       residual = 1.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.710080096375       residual = 8.65e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.708922582118       residual = 7.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.708720795724       residual = 2.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.709260007338       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.709247365050       residual = 2.42e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.711057640783       residual = 2.79e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.709905632512       residual = 7.15e-04           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.706834780650       residual = 2.09e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.711179164658       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.704520532256       residual = 9.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.708815981894       residual = 2.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.709504182132       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.706150728088       residual = 3.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.708656845754       residual = 2.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.706568296754       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.709975984503       residual = 8.70e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.708106889397       residual = 4.45e-04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.707859273107       residual = 2.65e-03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.735108563976       residual = 3.80e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.706863642622       residual = 1.61e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.747542846783       residual = 8.83e-01           smallest_sin_value = 9.99e-01
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.687583434962       residual = 3.70e-01           smallest_sin_value = 9.97e-01
davidson iteration   54 stopping due to small subspace S singular value of 8.42e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+11 is 5.058409e-15

solving harmonic davidson linear method for identity shift 6.2500e+11, overlap shift 6.2500e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708781588681       residual = 4.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708781588681       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708781588681       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708781588681       residual = 3.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708781588681       residual = 3.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708781588681       residual = 9.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708655876987       residual = 3.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708689082342       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708353015378       residual = 2.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709734982309       residual = 7.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708322808534       residual = 6.66e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.709424293886       residual = 4.69e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705950565437       residual = 4.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.709066928320       residual = 5.77e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.709419533516       residual = 4.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708757072715       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708293166899       residual = 2.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.707581717520       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711346459427       residual = 3.21e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711754423508       residual = 5.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708312909138       residual = 1.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705991730685       residual = 4.18e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.703437600766       residual = 1.57e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.709765015130       residual = 7.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.700663698982       residual = 3.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708177359518       residual = 3.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706457690659       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701705403489       residual = 2.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710103812627       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710171908379       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.713455194160       residual = 1.16e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708047564828       residual = 7.55e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.702219647556       residual = 2.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701709226358       residual = 2.66e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.707839317914       residual = 9.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.703751771248       residual = 1.42e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.705160504799       residual = 6.48e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.700654450988       residual = 3.78e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.696907025066       residual = 7.27e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.711988505344       residual = 5.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.713385327472       residual = 1.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.699117300235       residual = 4.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.704705724438       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.709046245520       residual = 6.86e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.709316296395       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.728753193126       residual = 2.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.694483529823       residual = 1.17e-01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.738132946395       residual = 4.69e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.642311296212       residual = 2.29e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.739503578488       residual = 7.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.625942898896       residual = 6.39e+00           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.326205659507       residual = 2.15e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.696349740860       residual = 5.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =       0.041876618976       residual = 2.94e+02           smallest_sin_value = 9.98e-01
davidson iteration   54 stopping due to small subspace S singular value of 7.12e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+11 is 3.263030e-16

solving harmonic davidson linear method for identity shift 2.5000e+12, overlap shift 2.5000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708781588681       residual = 4.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708781588681       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708781588681       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708781588681       residual = 3.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708955289801       residual = 3.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708440579700       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.707385218896       residual = 1.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705586385224       residual = 8.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710116596918       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705834453869       residual = 8.32e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.707358996716       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704421219605       residual = 1.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708930240033       residual = 3.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710675007845       residual = 1.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.700645316680       residual = 3.54e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.698692545292       residual = 5.58e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.717178717856       residual = 3.80e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706330760401       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.714453888787       residual = 2.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.704864480427       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.698639250158       residual = 5.90e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711067401886       residual = 1.24e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704503694482       residual = 1.23e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710237707125       residual = 6.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.691201488868       residual = 1.63e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.698441805696       residual = 5.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.723841339886       residual = 1.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.707114776923       residual = 5.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.699871176941       residual = 5.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.694015101974       residual = 1.23e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.692041391383       residual = 1.49e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.680968556308       residual = 4.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.713820500318       residual = 1.62e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.691533246440       residual = 1.63e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.736520878002       residual = 4.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.640475649183       residual = 2.38e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.714403196060       residual = 3.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.683192350263       residual = 3.37e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.689531700312       residual = 1.91e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.679475569282       residual = 4.42e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.685741328787       residual = 4.25e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.735729790605       residual = 4.41e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.808047990920       residual = 5.03e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.798105067703       residual = 3.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.734805697047       residual = 6.34e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.879074296617       residual = 1.41e+01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.839144212444       residual = 1.07e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.680184888480       residual = 7.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =       0.263565078296       residual = 5.24e+02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -1.000652678987       residual = 4.63e+01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =       1.135357397332       residual = 1.66e+03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -3.142531122259       residual = 3.04e+03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -1.724450825242       residual = 5.38e+02           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.065642809394       residual = 6.33e+02           smallest_sin_value = 9.99e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.37e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+12 is 6.327548e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.251528 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0842e+01
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.4269
    reference variance = 0.473077
====================================================
  Execution time = 4.5468e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s015
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9510e-01
  Total weights = 2.0000e+06
  Execution time = 3.7814e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497543949
  error estimate for blocks of size 2^( 2) =       0.000524215282
  error estimate for blocks of size 2^( 3) =       0.000549751230
  error estimate for blocks of size 2^( 4) =       0.000568353239
  error estimate for blocks of size 2^( 5) =       0.000581510650
  error estimate for blocks of size 2^( 6) =       0.000587370340
  error estimate for blocks of size 2^( 7) =       0.000591120786

      target function =      -0.710541050828
              le_mean =     -22.425387122827
             les_mean =     503.393087323272
             stat err =       0.000582088754
             autocorr =       1.368722856925
   target nu stat err =       0.000582088754
   target dn stat err =       0.003375695770
      target stat err =       0.002521730300
              std dev =       0.703633400397
             le_variance =       0.495099962154

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497543949
  error estimate for blocks of size 2^( 2) =       0.000524215282
  error estimate for blocks of size 2^( 3) =       0.000549751230
  error estimate for blocks of size 2^( 4) =       0.000568353239
  error estimate for blocks of size 2^( 5) =       0.000581510650
  error estimate for blocks of size 2^( 6) =       0.000587370340
  error estimate for blocks of size 2^( 7) =       0.000591120786

      target function =      -0.710541050828
              le_mean =     -22.425387122827
             les_mean =     503.393087323272
             stat err =       0.000582088754
             autocorr =       1.368722856925
   target nu stat err =       0.000582088754
   target dn stat err =       0.003375695770
      target stat err =       0.002521730300
              std dev =       0.703633400397
             le_variance =       0.495099962154

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497543949
  error estimate for blocks of size 2^( 2) =       0.000524215282
  error estimate for blocks of size 2^( 3) =       0.000549751230
  error estimate for blocks of size 2^( 4) =       0.000568353239
  error estimate for blocks of size 2^( 5) =       0.000581510650
  error estimate for blocks of size 2^( 6) =       0.000587370340
  error estimate for blocks of size 2^( 7) =       0.000591120786

      target function =      -0.710541050828
              le_mean =     -22.425387122827
             les_mean =     503.393087323272
             stat err =       0.000582088754
             autocorr =       1.368722856925
   target nu stat err =       0.000582088754
   target dn stat err =       0.003375695770
      target stat err =       0.002521730300
              std dev =       0.703633400397
             le_variance =       0.495099962154

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495117392268
                                         uncertainty =       0.003231656065

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497543949
  error estimate for blocks of size 2^( 2) =       0.000524215282
  error estimate for blocks of size 2^( 3) =       0.000549751230
  error estimate for blocks of size 2^( 4) =       0.000568353239
  error estimate for blocks of size 2^( 5) =       0.000581510650
  error estimate for blocks of size 2^( 6) =       0.000587370340
  error estimate for blocks of size 2^( 7) =       0.000591120786

      target function =      -0.710541050828
              le_mean =     -22.425387122827
             les_mean =     503.393087323272
             stat err =       0.000582088754
             autocorr =       1.368722856925
   target nu stat err =       0.000582088754
   target dn stat err =       0.003375695770
      target stat err =       0.002521730300
              std dev =       0.703633400397
             le_variance =       0.495099962154


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710541050828        initial  <--
     1.5625e+11     1.5625e+12             5.0584e-15        -0.710541050828
     6.2500e+11     6.2500e+12             3.2630e-16        -0.710541050828
     2.5000e+12     2.5000e+13             6.3275e-17        -0.710541050828

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.4282
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2528e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s016 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s016 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=16  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.4718
    reference variance = 0.49592
====================================================
  Execution time = 4.5707e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s016
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 6.0767e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5031e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.607788495004
                                         uncertainty =       0.109946903566

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.607788495004
                                         uncertainty =       0.109946903566

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000551211211
  error estimate for blocks of size 2^( 2) =       0.000576440966
  error estimate for blocks of size 2^( 3) =       0.000600159841
  error estimate for blocks of size 2^( 4) =       0.000617796509
  error estimate for blocks of size 2^( 5) =       0.000629121591
  error estimate for blocks of size 2^( 6) =       0.000636736614
  error estimate for blocks of size 2^( 7) =       0.000640866301

      target function =      -0.630857300745
              le_mean =     -22.425080401276
             les_mean =     503.491898299161
             stat err =       0.000631130254
             autocorr =       1.310997649194
   target nu stat err =       0.000631130254
   target dn stat err =       0.110485768283
      target stat err =       0.063844975110
              std dev =       0.779530370996
             le_variance =       0.607667599306


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242508040128e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.5625e+12, overlap shift 1.5625e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.637290170920       residual = 1.07e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.637290170920       residual = 8.76e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.637290170920       residual = 3.12e-02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.636915947911       residual = 1.06e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.637156715341       residual = 1.03e-02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.637290170920       residual = 8.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.635443289897       residual = 8.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.635797339890       residual = 4.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.634067957692       residual = 8.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.642054652697       residual = 1.95e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.640223131800       residual = 9.00e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.638597213691       residual = 5.02e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.638957624188       residual = 4.96e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.633598606640       residual = 9.72e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.636801032711       residual = 2.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.637665175180       residual = 6.82e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.635294660186       residual = 6.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.639466325757       residual = 3.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.633969360089       residual = 7.96e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.636517856775       residual = 7.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.634189410913       residual = 5.57e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.635279915226       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.637895253357       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.638136813553       residual = 1.31e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.639725471972       residual = 3.65e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.632064299484       residual = 1.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.637492650177       residual = 6.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.631490182506       residual = 1.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.634013111095       residual = 6.29e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.652680928744       residual = 1.34e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.648322964462       residual = 6.80e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.627734435688       residual = 5.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.636745441158       residual = 1.26e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.628854814800       residual = 4.25e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.598217440365       residual = 8.60e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.659206887719       residual = 2.81e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.632858917214       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.639967935179       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.644458417860       residual = 3.05e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.643807983842       residual = 2.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.644220695426       residual = 2.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.630625813206       residual = 9.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.618018216881       residual = 2.23e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.659471371198       residual = 3.64e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.647920623780       residual = 6.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.555579960905       residual = 3.85e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.879785020543       residual = 3.31e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.566190138176       residual = 3.09e+00           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.618750896661       residual = 1.96e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.747338824554       residual = 7.54e+00           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.679415106871       residual = 1.10e+00           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.169271174455       residual = 1.61e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.524810796311       residual = 1.65e+01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.504856974242       residual = 2.75e+01           smallest_sin_value = 9.99e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.71e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.5625e+12 is 1.720995e-15

solving harmonic davidson linear method for identity shift 6.2500e+12, overlap shift 6.2500e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.637290170920       residual = 1.07e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.637290170920       residual = 8.76e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.637290170920       residual = 3.27e-02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.637289341345       residual = 1.07e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.637290170920       residual = 1.03e-02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.637290170920       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.637290170920       residual = 5.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.637290170920       residual = 3.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.637290170920       residual = 4.38e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.613877455590       residual = 3.35e-01           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.633946993443       residual = 1.54e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.648711562538       residual = 9.08e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.632978172638       residual = 3.16e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.636488724398       residual = 2.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.636397876155       residual = 4.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.642533926649       residual = 4.88e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.637201474252       residual = 5.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.639019415666       residual = 1.71e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.639781015045       residual = 7.22e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.676271571381       residual = 9.57e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.639859718149       residual = 2.41e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.628133991911       residual = 6.43e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.632949122180       residual = 1.83e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.623403262295       residual = 1.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.601212530703       residual = 7.85e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.619314015662       residual = 1.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.659712589757       residual = 2.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.631428881759       residual = 4.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.552609478461       residual = 4.10e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.595888882029       residual = 1.03e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.613171600343       residual = 3.57e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.601260617683       residual = 7.00e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.732488718812       residual = 5.03e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.560166194651       residual = 3.37e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.586253854178       residual = 1.45e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.718429492974       residual = 3.68e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.502685228440       residual = 1.02e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.699312737238       residual = 2.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.678116701209       residual = 9.83e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.600794566613       residual = 9.45e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.754546017205       residual = 7.60e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.711029554514       residual = 4.39e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.502519608892       residual = 1.17e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.630994403559       residual = 6.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.531727097232       residual = 1.38e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.510391614787       residual = 1.05e+01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.632887907873       residual = 3.99e-01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.523746717612       residual = 7.78e+00           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -1.265990191006       residual = 2.52e+02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.476321791060       residual = 3.60e+01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -1.688756991587       residual = 8.51e+02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.947028199030       residual = 1.06e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.136954590650       residual = 1.75e+02           smallest_sin_value = 9.98e-01
davidson iteration   53:   krylov dim =  54   tar_fn =       0.813912573386       residual = 2.29e+03           smallest_sin_value = 9.93e-01
davidson iteration   54 stopping due to small subspace S singular value of 6.73e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+12 is 3.074532e-16

solving harmonic davidson linear method for identity shift 2.5000e+13, overlap shift 2.5000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.637290170920       residual = 1.07e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.637290170920       residual = 8.76e-02           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.637290170920       residual = 3.19e-02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.637290170920       residual = 6.84e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.637290170920       residual = 1.37e-01           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.637290170920       residual = 1.54e-01           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.641516536822       residual = 1.69e-01           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.605302527731       residual = 7.45e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.674833668904       residual = 1.96e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.588067504644       residual = 1.44e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.630227146492       residual = 3.41e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.628134438199       residual = 2.87e-01           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.601573963493       residual = 1.35e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.628291737294       residual = 4.75e-01           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.676505781306       residual = 1.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.586227138910       residual = 1.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.891177339899       residual = 3.61e+01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.373731579101       residual = 4.20e+01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.647358729313       residual = 2.48e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.683864933037       residual = 1.47e+00           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.609052915775       residual = 1.03e+00           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.645048748236       residual = 3.11e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.542781643432       residual = 6.08e+00           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.662763825618       residual = 9.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.646660672399       residual = 1.66e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.567086219672       residual = 4.13e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.680793261520       residual = 1.65e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.313031783062       residual = 6.31e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.527744725375       residual = 7.00e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.615111735948       residual = 3.80e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.529011969758       residual = 6.60e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.721516440236       residual = 4.53e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.155882077369       residual = 1.41e+02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.740408067296       residual = 6.90e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.264246259230       residual = 7.66e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.463127304750       residual = 1.87e+01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.470045311464       residual = 1.87e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.378425841754       residual = 4.03e+01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.931975215108       residual = 4.90e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.714587830240       residual = 6.64e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.821184694761       residual = 1.94e+01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.862654852932       residual = 2.73e+01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.717804423819       residual = 1.29e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.490045204477       residual = 1.32e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.295852657034       residual = 6.71e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.438666671251       residual = 2.25e+01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =       0.043343980697       residual = 2.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.648094340868       residual = 2.98e+00           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.348275774396       residual = 1.63e+02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =       0.763360738112       residual = 1.10e+03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =       0.121487988459       residual = 4.05e+02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.997493011081       residual = 1.88e+03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -1.937098751374       residual = 9.04e+02           smallest_sin_value = 9.99e-01
davidson iteration   53 stopping due to too large eigenvalue change
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+13 is 3.654229e-17

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.425422 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0918e+01
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.4066
    reference variance = 0.457268
====================================================
  Execution time = 4.4865e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s016
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9590e-01
  Total weights = 2.0000e+06
  Execution time = 3.7930e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497943749
  error estimate for blocks of size 2^( 2) =       0.000524779116
  error estimate for blocks of size 2^( 3) =       0.000550806278
  error estimate for blocks of size 2^( 4) =       0.000570083801
  error estimate for blocks of size 2^( 5) =       0.000582790029
  error estimate for blocks of size 2^( 6) =       0.000590210078
  error estimate for blocks of size 2^( 7) =       0.000591001971

      target function =      -0.709959394056
              le_mean =     -22.425221656464
             les_mean =     503.386462048065
             stat err =       0.000583521470
             autocorr =       1.373261074713
   target nu stat err =       0.000583521470
   target dn stat err =       0.004491478819
      target stat err =       0.003308567435
              std dev =       0.704198803243
             le_variance =       0.495895954489

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497943749
  error estimate for blocks of size 2^( 2) =       0.000524779116
  error estimate for blocks of size 2^( 3) =       0.000550806278
  error estimate for blocks of size 2^( 4) =       0.000570083801
  error estimate for blocks of size 2^( 5) =       0.000582790029
  error estimate for blocks of size 2^( 6) =       0.000590210078
  error estimate for blocks of size 2^( 7) =       0.000591001971

      target function =      -0.709959394056
              le_mean =     -22.425221656464
             les_mean =     503.386462048065
             stat err =       0.000583521470
             autocorr =       1.373261074718
   target nu stat err =       0.000583521470
   target dn stat err =       0.004491478819
      target stat err =       0.003308567435
              std dev =       0.704198803243
             le_variance =       0.495895954489

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497943749
  error estimate for blocks of size 2^( 2) =       0.000524779116
  error estimate for blocks of size 2^( 3) =       0.000550806278
  error estimate for blocks of size 2^( 4) =       0.000570083801
  error estimate for blocks of size 2^( 5) =       0.000582790029
  error estimate for blocks of size 2^( 6) =       0.000590210078
  error estimate for blocks of size 2^( 7) =       0.000591001971

      target function =      -0.709959394056
              le_mean =     -22.425221656464
             les_mean =     503.386462048065
             stat err =       0.000583521470
             autocorr =       1.373261074711
   target nu stat err =       0.000583521470
   target dn stat err =       0.004491478819
      target stat err =       0.003308567435
              std dev =       0.704198803243
             le_variance =       0.495895954489

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055831098
                                         uncertainty =       0.004557850377

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497943749
  error estimate for blocks of size 2^( 2) =       0.000524779116
  error estimate for blocks of size 2^( 3) =       0.000550806278
  error estimate for blocks of size 2^( 4) =       0.000570083801
  error estimate for blocks of size 2^( 5) =       0.000582790029
  error estimate for blocks of size 2^( 6) =       0.000590210078
  error estimate for blocks of size 2^( 7) =       0.000591001971

      target function =      -0.709959394056
              le_mean =     -22.425221656464
             les_mean =     503.386462048065
             stat err =       0.000583521470
             autocorr =       1.373261074712
   target nu stat err =       0.000583521470
   target dn stat err =       0.004491478819
      target stat err =       0.003308567435
              std dev =       0.704198803243
             le_variance =       0.495895954489


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709959394056        initial
     1.5625e+12     1.5625e+13             1.7210e-15        -0.709959394056
     6.2500e+12     6.2500e+13             3.0745e-16        -0.709959394056
     2.5000e+13     2.5000e+14             3.6542e-17        -0.709959394056  <--

*****************************************************************************
Applying the update for shift_i =   2.5000e+13     and shift_s =   2.5000e+14
*****************************************************************************

  Execution time = 6.3860e+01
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2478e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s017 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s017 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=17  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2420e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.436
    reference variance = 0.410117
====================================================
  Execution time = 4.7227e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s017
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0697e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4918e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507045351514
                                         uncertainty =       0.006241409321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507045351514
                                         uncertainty =       0.006241409321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503474045
  error estimate for blocks of size 2^( 2) =       0.000530354730
  error estimate for blocks of size 2^( 3) =       0.000556269897
  error estimate for blocks of size 2^( 4) =       0.000575828267
  error estimate for blocks of size 2^( 5) =       0.000588200847
  error estimate for blocks of size 2^( 6) =       0.000594832402
  error estimate for blocks of size 2^( 7) =       0.000597148731

      target function =      -0.702006693105
              le_mean =     -22.425362626199
             les_mean =     503.403860891097
             stat err =       0.000589002562
             autocorr =       1.368611528115
   target nu stat err =       0.000589002562
   target dn stat err =       0.006204301510
      target stat err =       0.004436475939
              std dev =       0.712019822802
             le_variance =       0.506972228063


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242536262620e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+12, overlap shift 6.2500e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702034077906       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702034077906       residual = 1.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702034077906       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.702034077906       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.700941181737       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.703058230727       residual = 4.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.703401239053       residual = 6.89e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701562960584       residual = 2.25e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.709546438636       residual = 3.66e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.702243791162       residual = 1.15e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701085736318       residual = 1.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.704258535434       residual = 9.33e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.698096133247       residual = 2.72e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.696754178521       residual = 1.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.714776624662       residual = 1.54e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.700067412736       residual = 3.38e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.697037051914       residual = 3.95e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.698881233177       residual = 4.78e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.721927365403       residual = 2.20e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.693874947482       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.686518665761       residual = 1.15e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.680200977956       residual = 2.74e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.656104918996       residual = 1.12e+00           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.697059448260       residual = 3.13e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.694618476312       residual = 6.17e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.681011807487       residual = 2.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.697703528588       residual = 3.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.717257486641       residual = 1.25e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.721175352111       residual = 2.36e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710606384794       residual = 7.64e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.691926583909       residual = 1.57e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.707734050649       residual = 6.45e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.723402464989       residual = 3.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.564380525918       residual = 9.67e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.645333098112       residual = 1.66e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.727452623803       residual = 3.91e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.729354140614       residual = 3.91e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.637290396225       residual = 2.21e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.892145589709       residual = 1.89e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.711896563877       residual = 1.67e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.680549297817       residual = 7.89e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.668808514031       residual = 7.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.658889018346       residual = 1.01e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.714173701967       residual = 2.82e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.737509021085       residual = 8.45e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.702187283387       residual = 2.90e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.959162766503       residual = 3.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.356757544059       residual = 9.22e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =       0.690227383157       residual = 9.67e+02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.995391232966       residual = 4.91e+02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -1.939347064889       residual = 9.18e+02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -3.932107465933       residual = 5.45e+03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -1.528021459382       residual = 1.31e+03           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =       4.105831136608       residual = 1.23e+04           smallest_sin_value = 9.99e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.89e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+12 is 3.790398e-17

solving harmonic davidson linear method for identity shift 2.5000e+13, overlap shift 2.5000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702034077906       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702034077906       residual = 1.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702034077906       residual = 2.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.702034077906       residual = 4.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701466909858       residual = 3.21e-02           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.702034078074       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.702034078632       residual = 2.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.720854478491       residual = 3.66e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.633477812031       residual = 2.54e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.666439007161       residual = 6.80e-01           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.688128333494       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.744138629422       residual = 1.62e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.698163957495       residual = 1.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.700625711400       residual = 8.89e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708577513932       residual = 3.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.707193102446       residual = 9.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.671991102816       residual = 7.72e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.751952824834       residual = 1.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.662455386057       residual = 7.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.789233664680       residual = 3.85e+00           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701194228482       residual = 1.59e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.660407303777       residual = 1.35e+00           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.668685228963       residual = 1.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.641370393235       residual = 2.14e+00           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.849471722479       residual = 1.08e+01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.821625883994       residual = 7.80e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.427628454068       residual = 3.77e+01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.601301552815       residual = 5.73e+00           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.856085319890       residual = 1.25e+01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.702739822615       residual = 8.04e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.811936250250       residual = 7.04e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.590863413465       residual = 7.00e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.637621531056       residual = 3.30e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.374407225749       residual = 5.23e+01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.861843245815       residual = 1.39e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.741129332893       residual = 1.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.505896657338       residual = 2.21e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.504046825443       residual = 1.95e+01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.586987704604       residual = 7.66e+00           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.142885542131       residual = 1.03e+02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.719269146777       residual = 1.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.929614932731       residual = 2.85e+01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.617247294346       residual = 6.01e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.171370165824       residual = 1.47e+02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.115478372247       residual = 1.79e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       0.139008746836       residual = 3.64e+02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.967845559851       residual = 4.32e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.498193939347       residual = 2.16e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.656876857291       residual = 2.68e+01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =       0.905621345755       residual = 5.36e+03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -2.979866314340       residual = 2.86e+03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =       1.008183656330       residual = 2.76e+03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =       3.636157394392       residual = 5.62e+04           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -6.689092594096       residual = 2.22e+04           smallest_sin_value = 9.93e-01
davidson iteration   54 stopping due to small subspace S singular value of 9.81e-01
davidson solver did not converge after         54 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+13 is 9.391973e-18

solving harmonic davidson linear method for identity shift 1.0000e+14, overlap shift 1.0000e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702034077906       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702034077906       residual = 1.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702034077906       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.702034077906       residual = 4.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.695524045883       residual = 4.20e-01           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.732420755576       residual = 7.87e-01           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.788712221521       residual = 3.82e+00           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.633857238527       residual = 2.74e+00           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.727657499261       residual = 2.34e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.760000747226       residual = 3.63e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.639155867043       residual = 5.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.717111132382       residual = 5.72e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.673011580836       residual = 5.14e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -1.052824621019       residual = 7.32e+01           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.831030485851       residual = 1.03e+01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.260422911796       residual = 1.06e+02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.516510358546       residual = 1.86e+01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.834321703069       residual = 1.50e+01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.263630518539       residual = 1.10e+02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.297072308053       residual = 8.56e+01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =       0.188772143000       residual = 3.99e+02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.687482740484       residual = 4.24e+00           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.898995929766       residual = 2.40e+01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.991416777917       residual = 4.50e+01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.473696495814       residual = 3.12e+01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.790396609996       residual = 5.82e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.744270121301       residual = 9.71e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.811948670894       residual = 1.84e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.407740997498       residual = 4.92e+01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.291738857550       residual = 9.88e+01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.447715819587       residual = 3.89e+01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =       0.374165650445       residual = 5.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.826262661074       residual = 2.87e+01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -1.918809811063       residual = 7.91e+02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -1.628089807596       residual = 4.72e+02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.695467141551       residual = 7.71e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.327366163868       residual = 9.24e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.854989754193       residual = 1.86e+01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -2.833411194408       residual = 2.36e+03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.061889274924       residual = 1.15e+02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -2.874245388092       residual = 2.51e+03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.912078133724       residual = 8.10e+02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.314354770526       residual = 3.71e+02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.388868368027       residual = 1.22e+02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -3.225382008332       residual = 3.96e+03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       0.313884157894       residual = 5.40e+02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.462175965937       residual = 1.24e+02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -3.283546285256       residual = 3.79e+03           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =       1.854200060214       residual = 5.09e+03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =       4.685566922425       residual = 1.65e+04           smallest_sin_value = 1.00e+00
davidson iteration   50 stopping due to too large eigenvalue change
davidson solver did not converge after         50 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+14 is 1.725604e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.590669 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2316e+01
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.4982
    reference variance = 0.301843
====================================================
  Execution time = 4.4559e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s017
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0590e-01
  Total weights = 2.0000e+06
  Execution time = 3.7861e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502943168
  error estimate for blocks of size 2^( 2) =       0.000529398760
  error estimate for blocks of size 2^( 3) =       0.000554913582
  error estimate for blocks of size 2^( 4) =       0.000574932418
  error estimate for blocks of size 2^( 5) =       0.000588942478
  error estimate for blocks of size 2^( 6) =       0.000595038952
  error estimate for blocks of size 2^( 7) =       0.000601263289

      target function =      -0.702774186642
              le_mean =     -22.425357019217
             les_mean =     503.402540846022
             stat err =       0.000590044284
             autocorr =       1.376357931712
   target nu stat err =       0.000590044284
   target dn stat err =       0.005076147538
      target stat err =       0.003653799300
              std dev =       0.711269048699
             le_variance =       0.505903659637

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502943168
  error estimate for blocks of size 2^( 2) =       0.000529398760
  error estimate for blocks of size 2^( 3) =       0.000554913582
  error estimate for blocks of size 2^( 4) =       0.000574932418
  error estimate for blocks of size 2^( 5) =       0.000588942478
  error estimate for blocks of size 2^( 6) =       0.000595038952
  error estimate for blocks of size 2^( 7) =       0.000601263289

      target function =      -0.702774186642
              le_mean =     -22.425357019217
             les_mean =     503.402540846022
             stat err =       0.000590044284
             autocorr =       1.376357931712
   target nu stat err =       0.000590044284
   target dn stat err =       0.005076147538
      target stat err =       0.003653799300
              std dev =       0.711269048699
             le_variance =       0.505903659637

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502943168
  error estimate for blocks of size 2^( 2) =       0.000529398760
  error estimate for blocks of size 2^( 3) =       0.000554913582
  error estimate for blocks of size 2^( 4) =       0.000574932418
  error estimate for blocks of size 2^( 5) =       0.000588942478
  error estimate for blocks of size 2^( 6) =       0.000595038952
  error estimate for blocks of size 2^( 7) =       0.000601263289

      target function =      -0.702774186642
              le_mean =     -22.425357019217
             les_mean =     503.402540846022
             stat err =       0.000590044284
             autocorr =       1.376357931713
   target nu stat err =       0.000590044284
   target dn stat err =       0.005076147538
      target stat err =       0.003653799300
              std dev =       0.711269048699
             le_variance =       0.505903659637

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505788127389
                                         uncertainty =       0.004973099201

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502943168
  error estimate for blocks of size 2^( 2) =       0.000529398760
  error estimate for blocks of size 2^( 3) =       0.000554913582
  error estimate for blocks of size 2^( 4) =       0.000574932418
  error estimate for blocks of size 2^( 5) =       0.000588942478
  error estimate for blocks of size 2^( 6) =       0.000595038952
  error estimate for blocks of size 2^( 7) =       0.000601263289

      target function =      -0.702774186642
              le_mean =     -22.425357019217
             les_mean =     503.402540846022
             stat err =       0.000590044284
             autocorr =       1.376357931708
   target nu stat err =       0.000590044284
   target dn stat err =       0.005076147538
      target stat err =       0.003653799300
              std dev =       0.711269048699
             le_variance =       0.505903659637


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702774186642        initial  <--
     6.2500e+12     6.2500e+13             3.7904e-17        -0.702774186642
     2.5000e+13     2.5000e+14             9.3920e-18        -0.702774186642
     1.0000e+14     1.0000e+15             1.7256e-18        -0.702774186642

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.5131
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2584e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s018 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s018 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=18  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2423e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.3392
    reference variance = 0.4484
====================================================
  Execution time = 4.6134e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s018
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9034e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5298e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490385829428
                                         uncertainty =       0.002408767449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490385829428
                                         uncertainty =       0.002408767449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495147904
  error estimate for blocks of size 2^( 2) =       0.000522296448
  error estimate for blocks of size 2^( 3) =       0.000548403312
  error estimate for blocks of size 2^( 4) =       0.000567599242
  error estimate for blocks of size 2^( 5) =       0.000580338588
  error estimate for blocks of size 2^( 6) =       0.000587569670
  error estimate for blocks of size 2^( 7) =       0.000591640915

      target function =      -0.714009361362
              le_mean =     -22.426144107297
             les_mean =     503.422282170676
             stat err =       0.000581787104
             autocorr =       1.380569547667
   target nu stat err =       0.000581787104
   target dn stat err =       0.002502910894
      target stat err =       0.001931650189
              std dev =       0.700244881893
             le_variance =       0.490342894617


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242614410730e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+13, overlap shift 6.2500e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.20e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+13 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+14, overlap shift 2.5000e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+15, overlap shift 1.0000e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714013585948       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+15 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.591747 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1438e+01
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.3393
    reference variance = 0.40289
====================================================
  Execution time = 4.4810e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s018
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0272e-01
  Total weights = 2.0000e+06
  Execution time = 3.7973e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501359513
  error estimate for blocks of size 2^( 2) =       0.000527859292
  error estimate for blocks of size 2^( 3) =       0.000553223890
  error estimate for blocks of size 2^( 4) =       0.000572128309
  error estimate for blocks of size 2^( 5) =       0.000585094971
  error estimate for blocks of size 2^( 6) =       0.000591942056
  error estimate for blocks of size 2^( 7) =       0.000597586522

      target function =      -0.705030934603
              le_mean =     -22.425989664280
             les_mean =     503.427734893584
             stat err =       0.000586687965
             autocorr =       1.369354327247
   target nu stat err =       0.000586687965
   target dn stat err =       0.004594111710
      target stat err =       0.003339945329
              std dev =       0.709029422915
             le_variance =       0.502722722560

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501359513
  error estimate for blocks of size 2^( 2) =       0.000527859292
  error estimate for blocks of size 2^( 3) =       0.000553223890
  error estimate for blocks of size 2^( 4) =       0.000572128309
  error estimate for blocks of size 2^( 5) =       0.000585094971
  error estimate for blocks of size 2^( 6) =       0.000591942056
  error estimate for blocks of size 2^( 7) =       0.000597586522

      target function =      -0.705030934603
              le_mean =     -22.425989664280
             les_mean =     503.427734893584
             stat err =       0.000586687965
             autocorr =       1.369354327252
   target nu stat err =       0.000586687965
   target dn stat err =       0.004594111710
      target stat err =       0.003339945329
              std dev =       0.709029422915
             le_variance =       0.502722722560

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501359513
  error estimate for blocks of size 2^( 2) =       0.000527859292
  error estimate for blocks of size 2^( 3) =       0.000553223890
  error estimate for blocks of size 2^( 4) =       0.000572128309
  error estimate for blocks of size 2^( 5) =       0.000585094971
  error estimate for blocks of size 2^( 6) =       0.000591942056
  error estimate for blocks of size 2^( 7) =       0.000597586522

      target function =      -0.705030934603
              le_mean =     -22.425989664280
             les_mean =     503.427734893584
             stat err =       0.000586687965
             autocorr =       1.369354327252
   target nu stat err =       0.000586687965
   target dn stat err =       0.004594111710
      target stat err =       0.003339945329
              std dev =       0.709029422915
             le_variance =       0.502722722560

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502738329545
                                         uncertainty =       0.004419050076

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501359513
  error estimate for blocks of size 2^( 2) =       0.000527859292
  error estimate for blocks of size 2^( 3) =       0.000553223890
  error estimate for blocks of size 2^( 4) =       0.000572128309
  error estimate for blocks of size 2^( 5) =       0.000585094971
  error estimate for blocks of size 2^( 6) =       0.000591942056
  error estimate for blocks of size 2^( 7) =       0.000597586522

      target function =      -0.705030934603
              le_mean =     -22.425989664280
             les_mean =     503.427734893584
             stat err =       0.000586687965
             autocorr =       1.369354327252
   target nu stat err =       0.000586687965
   target dn stat err =       0.004594111710
      target stat err =       0.003339945329
              std dev =       0.709029422915
             le_variance =       0.502722722560


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705030934603        initial  <--
     6.2500e+13     6.2500e+14             0.0000e+00        -0.705030934603
     2.5000e+14     2.5000e+15             0.0000e+00        -0.705030934603
     1.0000e+15     1.0000e+16             0.0000e+00        -0.705030934603

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7485
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2519e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s019 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s019 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=19  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2418e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.3084
    reference variance = 0.463567
====================================================
  Execution time = 4.5300e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s019
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1040e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5133e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510400352834
                                         uncertainty =       0.010565096619

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.510400352834
                                         uncertainty =       0.010565096619

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000505174689
  error estimate for blocks of size 2^( 2) =       0.000531739919
  error estimate for blocks of size 2^( 3) =       0.000557328124
  error estimate for blocks of size 2^( 4) =       0.000576959071
  error estimate for blocks of size 2^( 5) =       0.000589511997
  error estimate for blocks of size 2^( 6) =       0.000596256954
  error estimate for blocks of size 2^( 7) =       0.000597351496

      target function =      -0.699558014582
              le_mean =     -22.425507203299
             les_mean =     503.413776002905
             stat err =       0.000590019879
             autocorr =       1.364112294448
   target nu stat err =       0.000590019879
   target dn stat err =       0.008429675625
      target stat err =       0.005962834423
              std dev =       0.714424896599
             le_variance =       0.510402932881


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242550720330e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+14, overlap shift 6.2500e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+15, overlap shift 2.5000e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.44e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+16, overlap shift 1.0000e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.699607404373       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+16 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.592839 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0439e+01
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.4452
    reference variance = 0.46726
====================================================
  Execution time = 4.5590e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s019
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9875e-01
  Total weights = 2.0000e+06
  Execution time = 3.7930e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499375190
  error estimate for blocks of size 2^( 2) =       0.000526049825
  error estimate for blocks of size 2^( 3) =       0.000552233073
  error estimate for blocks of size 2^( 4) =       0.000572395573
  error estimate for blocks of size 2^( 5) =       0.000585830360
  error estimate for blocks of size 2^( 6) =       0.000592536274
  error estimate for blocks of size 2^( 7) =       0.000595717946

      target function =      -0.707906142198
              le_mean =     -22.424862913132
             les_mean =     503.373227584761
             stat err =       0.000586620038
             autocorr =       1.379938920164
   target nu stat err =       0.000586620038
   target dn stat err =       0.003784901955
      target stat err =       0.002789831225
              std dev =       0.706223166834
             le_variance =       0.498751161373

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499375190
  error estimate for blocks of size 2^( 2) =       0.000526049825
  error estimate for blocks of size 2^( 3) =       0.000552233073
  error estimate for blocks of size 2^( 4) =       0.000572395573
  error estimate for blocks of size 2^( 5) =       0.000585830360
  error estimate for blocks of size 2^( 6) =       0.000592536274
  error estimate for blocks of size 2^( 7) =       0.000595717946

      target function =      -0.707906142198
              le_mean =     -22.424862913132
             les_mean =     503.373227584761
             stat err =       0.000586620038
             autocorr =       1.379938920164
   target nu stat err =       0.000586620038
   target dn stat err =       0.003784901955
      target stat err =       0.002789831225
              std dev =       0.706223166834
             le_variance =       0.498751161373

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499375190
  error estimate for blocks of size 2^( 2) =       0.000526049825
  error estimate for blocks of size 2^( 3) =       0.000552233073
  error estimate for blocks of size 2^( 4) =       0.000572395573
  error estimate for blocks of size 2^( 5) =       0.000585830360
  error estimate for blocks of size 2^( 6) =       0.000592536274
  error estimate for blocks of size 2^( 7) =       0.000595717946

      target function =      -0.707906142198
              le_mean =     -22.424862913132
             les_mean =     503.373227584761
             stat err =       0.000586620038
             autocorr =       1.379938920164
   target nu stat err =       0.000586620038
   target dn stat err =       0.003784901955
      target stat err =       0.002789831225
              std dev =       0.706223166834
             le_variance =       0.498751161373

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498692674040
                                         uncertainty =       0.003480735451

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499375190
  error estimate for blocks of size 2^( 2) =       0.000526049825
  error estimate for blocks of size 2^( 3) =       0.000552233073
  error estimate for blocks of size 2^( 4) =       0.000572395573
  error estimate for blocks of size 2^( 5) =       0.000585830360
  error estimate for blocks of size 2^( 6) =       0.000592536274
  error estimate for blocks of size 2^( 7) =       0.000595717946

      target function =      -0.707906142198
              le_mean =     -22.424862913132
             les_mean =     503.373227584761
             stat err =       0.000586620038
             autocorr =       1.379938920164
   target nu stat err =       0.000586620038
   target dn stat err =       0.003784901955
      target stat err =       0.002789831225
              std dev =       0.706223166834
             le_variance =       0.498751161373


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707906142198        initial  <--
     6.2500e+14     6.2500e+15             0.0000e+00        -0.707906142198
     2.5000e+15     2.5000e+16             0.0000e+00        -0.707906142198
     1.0000e+16     1.0000e+17             0.0000e+00        -0.707906142198

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.5765
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2502e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s020 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s020 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=20  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.3193
    reference variance = 0.409826
====================================================
  Execution time = 4.7065e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s020
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0755e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4982e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507586596842
                                         uncertainty =       0.010349033480

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507586596842
                                         uncertainty =       0.010349033480

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503763071
  error estimate for blocks of size 2^( 2) =       0.000529936644
  error estimate for blocks of size 2^( 3) =       0.000556210095
  error estimate for blocks of size 2^( 4) =       0.000576935736
  error estimate for blocks of size 2^( 5) =       0.000589236128
  error estimate for blocks of size 2^( 6) =       0.000596134786
  error estimate for blocks of size 2^( 7) =       0.000600812120

      target function =      -0.701533893599
              le_mean =     -22.425708855049
             les_mean =     503.419971861719
             stat err =       0.000590779693
             autocorr =       1.375303222965
   target nu stat err =       0.000590779693
   target dn stat err =       0.010537595121
      target stat err =       0.007485091035
              std dev =       0.712428567695
             le_variance =       0.507554464068


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242570885505e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+15, overlap shift 6.2500e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+15 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+16, overlap shift 2.5000e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.19e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+16 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+17, overlap shift 1.0000e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701613229902       residual = 1.38e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+17 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.593953 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2054e+01
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.4418
    reference variance = 0.476576
====================================================
  Execution time = 4.5411e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s020
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9514e-01
  Total weights = 2.0000e+06
  Execution time = 3.8013e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564030
  error estimate for blocks of size 2^( 2) =       0.000524143105
  error estimate for blocks of size 2^( 3) =       0.000550106598
  error estimate for blocks of size 2^( 4) =       0.000569123015
  error estimate for blocks of size 2^( 5) =       0.000581303607
  error estimate for blocks of size 2^( 6) =       0.000589167333
  error estimate for blocks of size 2^( 7) =       0.000594405440

      target function =      -0.710490189444
              le_mean =     -22.425800326665
             les_mean =     503.411659972310
             stat err =       0.000583499849
             autocorr =       1.375255979185
   target nu stat err =       0.000583499849
   target dn stat err =       0.005817734277
      target stat err =       0.004267305800
              std dev =       0.703661799762
             le_variance =       0.495139928444

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564030
  error estimate for blocks of size 2^( 2) =       0.000524143105
  error estimate for blocks of size 2^( 3) =       0.000550106598
  error estimate for blocks of size 2^( 4) =       0.000569123015
  error estimate for blocks of size 2^( 5) =       0.000581303607
  error estimate for blocks of size 2^( 6) =       0.000589167333
  error estimate for blocks of size 2^( 7) =       0.000594405440

      target function =      -0.710490189444
              le_mean =     -22.425800326665
             les_mean =     503.411659972310
             stat err =       0.000583499849
             autocorr =       1.375255979187
   target nu stat err =       0.000583499849
   target dn stat err =       0.005817734277
      target stat err =       0.004267305800
              std dev =       0.703661799762
             le_variance =       0.495139928444

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564030
  error estimate for blocks of size 2^( 2) =       0.000524143105
  error estimate for blocks of size 2^( 3) =       0.000550106598
  error estimate for blocks of size 2^( 4) =       0.000569123015
  error estimate for blocks of size 2^( 5) =       0.000581303607
  error estimate for blocks of size 2^( 6) =       0.000589167333
  error estimate for blocks of size 2^( 7) =       0.000594405440

      target function =      -0.710490189444
              le_mean =     -22.425800326665
             les_mean =     503.411659972310
             stat err =       0.000583499849
             autocorr =       1.375255979187
   target nu stat err =       0.000583499849
   target dn stat err =       0.005817734277
      target stat err =       0.004267305800
              std dev =       0.703661799762
             le_variance =       0.495139928444

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495071018769
                                         uncertainty =       0.005886308693

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564030
  error estimate for blocks of size 2^( 2) =       0.000524143105
  error estimate for blocks of size 2^( 3) =       0.000550106598
  error estimate for blocks of size 2^( 4) =       0.000569123015
  error estimate for blocks of size 2^( 5) =       0.000581303607
  error estimate for blocks of size 2^( 6) =       0.000589167333
  error estimate for blocks of size 2^( 7) =       0.000594405440

      target function =      -0.710490189444
              le_mean =     -22.425800326665
             les_mean =     503.411659972310
             stat err =       0.000583499849
             autocorr =       1.375255979187
   target nu stat err =       0.000583499849
   target dn stat err =       0.005817734277
      target stat err =       0.004267305800
              std dev =       0.703661799762
             le_variance =       0.495139928444


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710490189444        initial  <--
     6.2500e+15     6.2500e+16             0.0000e+00        -0.710490189444
     2.5000e+16     2.5000e+17             0.0000e+00        -0.710490189444
     1.0000e+17     1.0000e+18             0.0000e+00        -0.710490189444

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.4496
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2651e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s021 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s021 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=21  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2414e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.4657
    reference variance = 0.404282
====================================================
  Execution time = 4.6102e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s021
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0207e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5120e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502151021235
                                         uncertainty =       0.003444596197

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502151021235
                                         uncertainty =       0.003444596197

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501035017
  error estimate for blocks of size 2^( 2) =       0.000527734266
  error estimate for blocks of size 2^( 3) =       0.000553614264
  error estimate for blocks of size 2^( 4) =       0.000573462382
  error estimate for blocks of size 2^( 5) =       0.000585795890
  error estimate for blocks of size 2^( 6) =       0.000592609869
  error estimate for blocks of size 2^( 7) =       0.000596269615

      target function =      -0.705521493532
              le_mean =     -22.424873555364
             les_mean =     503.377025898704
             stat err =       0.000587034439
             autocorr =       1.372748577682
   target nu stat err =       0.000587034439
   target dn stat err =       0.004033510090
      target stat err =       0.002945541081
              std dev =       0.708570515658
             le_variance =       0.502072175660


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242487355536e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+16, overlap shift 6.2500e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705532789339       residual = 9.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+16 is 8.609387e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+17, overlap shift 2.5000e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705532789339       residual = 9.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+17 is 2.152347e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+18, overlap shift 1.0000e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705532789339       residual = 9.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705532789339       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+18 is 5.380867e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.595314 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1229e+01
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.4514
    reference variance = 0.468569
====================================================
  Execution time = 4.6780e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s021
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0376e-01
  Total weights = 2.0000e+06
  Execution time = 3.7926e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501876044
  error estimate for blocks of size 2^( 2) =       0.000528340209
  error estimate for blocks of size 2^( 3) =       0.000554176518
  error estimate for blocks of size 2^( 4) =       0.000572296617
  error estimate for blocks of size 2^( 5) =       0.000584936878
  error estimate for blocks of size 2^( 6) =       0.000592192807
  error estimate for blocks of size 2^( 7) =       0.000595985231

      target function =      -0.704272675457
              le_mean =     -22.424981915545
             les_mean =     503.383572786859
             stat err =       0.000586352883
             autocorr =       1.364976576096
   target nu stat err =       0.000586352883
   target dn stat err =       0.008601310275
      target stat err =       0.006159949031
              std dev =       0.709759907434
             le_variance =       0.503759126200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501876044
  error estimate for blocks of size 2^( 2) =       0.000528340209
  error estimate for blocks of size 2^( 3) =       0.000554176518
  error estimate for blocks of size 2^( 4) =       0.000572296617
  error estimate for blocks of size 2^( 5) =       0.000584936878
  error estimate for blocks of size 2^( 6) =       0.000592192807
  error estimate for blocks of size 2^( 7) =       0.000595985231

      target function =      -0.704272675457
              le_mean =     -22.424981915545
             les_mean =     503.383572786859
             stat err =       0.000586352883
             autocorr =       1.364976576098
   target nu stat err =       0.000586352883
   target dn stat err =       0.008601310275
      target stat err =       0.006159949031
              std dev =       0.709759907434
             le_variance =       0.503759126200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501876044
  error estimate for blocks of size 2^( 2) =       0.000528340209
  error estimate for blocks of size 2^( 3) =       0.000554176518
  error estimate for blocks of size 2^( 4) =       0.000572296617
  error estimate for blocks of size 2^( 5) =       0.000584936878
  error estimate for blocks of size 2^( 6) =       0.000592192807
  error estimate for blocks of size 2^( 7) =       0.000595985231

      target function =      -0.704272675457
              le_mean =     -22.424981915545
             les_mean =     503.383572786859
             stat err =       0.000586352883
             autocorr =       1.364976576098
   target nu stat err =       0.000586352883
   target dn stat err =       0.008601310275
      target stat err =       0.006159949031
              std dev =       0.709759907434
             le_variance =       0.503759126200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503815889413
                                         uncertainty =       0.008372112766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501876044
  error estimate for blocks of size 2^( 2) =       0.000528340209
  error estimate for blocks of size 2^( 3) =       0.000554176518
  error estimate for blocks of size 2^( 4) =       0.000572296617
  error estimate for blocks of size 2^( 5) =       0.000584936878
  error estimate for blocks of size 2^( 6) =       0.000592192807
  error estimate for blocks of size 2^( 7) =       0.000595985231

      target function =      -0.704272675457
              le_mean =     -22.424981915545
             les_mean =     503.383572786859
             stat err =       0.000586352883
             autocorr =       1.364976576098
   target nu stat err =       0.000586352883
   target dn stat err =       0.008601310275
      target stat err =       0.006159949031
              std dev =       0.709759907434
             le_variance =       0.503759126200


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704272675457        initial  <--
     6.2500e+16     6.2500e+17             8.6094e-22        -0.704272675457
     2.5000e+17     2.5000e+18             2.1523e-22        -0.704272675457
     1.0000e+18     1.0000e+19             5.3809e-23        -0.704272675457

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.7858
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2702e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s022 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s022 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=22  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.3183
    reference variance = 0.370133
====================================================
  Execution time = 4.5647e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s022
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0021e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5276e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500136209281
                                         uncertainty =       0.005517242491

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500136209281
                                         uncertainty =       0.005517242491

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500105675
  error estimate for blocks of size 2^( 2) =       0.000526777695
  error estimate for blocks of size 2^( 3) =       0.000552380788
  error estimate for blocks of size 2^( 4) =       0.000571844134
  error estimate for blocks of size 2^( 5) =       0.000584419475
  error estimate for blocks of size 2^( 6) =       0.000591762988
  error estimate for blocks of size 2^( 7) =       0.000597172084

      target function =      -0.706832686653
              le_mean =     -22.425585979794
             les_mean =     503.407117659225
             stat err =       0.000586299670
             autocorr =       1.374408190388
   target nu stat err =       0.000586299670
   target dn stat err =       0.005498288695
      target stat err =       0.003995863160
              std dev =       0.707256228092
             le_variance =       0.500211372176


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242558597979e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+17, overlap shift 6.2500e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706854180207       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706854180207       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706854180207       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+17 is 1.475013e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+18, overlap shift 2.5000e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706854180207       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706854180207       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706854180207       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+18 is 3.687533e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+19, overlap shift 1.0000e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706854180207       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706854180207       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706854180207       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706854180207       residual = 1.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+19 is 2.347888e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.596764 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0929e+01
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.5621
    reference variance = 0.336482
====================================================
  Execution time = 4.4961e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s022
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9816e-01
  Total weights = 2.0000e+06
  Execution time = 3.7972e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499079751
  error estimate for blocks of size 2^( 2) =       0.000526069171
  error estimate for blocks of size 2^( 3) =       0.000551644895
  error estimate for blocks of size 2^( 4) =       0.000571447811
  error estimate for blocks of size 2^( 5) =       0.000582716212
  error estimate for blocks of size 2^( 6) =       0.000590536879
  error estimate for blocks of size 2^( 7) =       0.000595060346

      target function =      -0.708323840447
              le_mean =     -22.425028853133
             les_mean =     503.380080009653
             stat err =       0.000584940312
             autocorr =       1.373672506649
   target nu stat err =       0.000584940312
   target dn stat err =       0.004565829531
      target stat err =       0.003345681361
              std dev =       0.705805351982
             le_variance =       0.498161194886

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499079751
  error estimate for blocks of size 2^( 2) =       0.000526069171
  error estimate for blocks of size 2^( 3) =       0.000551644895
  error estimate for blocks of size 2^( 4) =       0.000571447811
  error estimate for blocks of size 2^( 5) =       0.000582716212
  error estimate for blocks of size 2^( 6) =       0.000590536879
  error estimate for blocks of size 2^( 7) =       0.000595060346

      target function =      -0.708323840447
              le_mean =     -22.425028853133
             les_mean =     503.380080009653
             stat err =       0.000584940312
             autocorr =       1.373672506649
   target nu stat err =       0.000584940312
   target dn stat err =       0.004565829531
      target stat err =       0.003345681361
              std dev =       0.705805351982
             le_variance =       0.498161194886

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499079751
  error estimate for blocks of size 2^( 2) =       0.000526069171
  error estimate for blocks of size 2^( 3) =       0.000551644895
  error estimate for blocks of size 2^( 4) =       0.000571447811
  error estimate for blocks of size 2^( 5) =       0.000582716212
  error estimate for blocks of size 2^( 6) =       0.000590536879
  error estimate for blocks of size 2^( 7) =       0.000595060346

      target function =      -0.708323840447
              le_mean =     -22.425028853133
             les_mean =     503.380080009653
             stat err =       0.000584940312
             autocorr =       1.373672506649
   target nu stat err =       0.000584940312
   target dn stat err =       0.004565829531
      target stat err =       0.003345681361
              std dev =       0.705805351982
             le_variance =       0.498161194886

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498216246717
                                         uncertainty =       0.004524371985

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499079751
  error estimate for blocks of size 2^( 2) =       0.000526069171
  error estimate for blocks of size 2^( 3) =       0.000551644895
  error estimate for blocks of size 2^( 4) =       0.000571447811
  error estimate for blocks of size 2^( 5) =       0.000582716212
  error estimate for blocks of size 2^( 6) =       0.000590536879
  error estimate for blocks of size 2^( 7) =       0.000595060346

      target function =      -0.708323840447
              le_mean =     -22.425028853133
             les_mean =     503.380080009653
             stat err =       0.000584940312
             autocorr =       1.373672506649
   target nu stat err =       0.000584940312
   target dn stat err =       0.004565829531
      target stat err =       0.003345681361
              std dev =       0.705805351982
             le_variance =       0.498161194886


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708323840447        initial  <--
     6.2500e+17     6.2500e+18             1.4750e-22        -0.708323840447
     2.5000e+18     2.5000e+19             3.6875e-23        -0.708323840447
     1.0000e+19     1.0000e+20             2.3479e-24        -0.708323840447

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.9576
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2490e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s023 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s023 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=23  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2417e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.401
    reference variance = 0.318135
====================================================
  Execution time = 4.5509e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s023
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0158e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5257e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501450142024
                                         uncertainty =       0.005008326681

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501450142024
                                         uncertainty =       0.005008326681

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500788157
  error estimate for blocks of size 2^( 2) =       0.000527644045
  error estimate for blocks of size 2^( 3) =       0.000553468777
  error estimate for blocks of size 2^( 4) =       0.000572035454
  error estimate for blocks of size 2^( 5) =       0.000584711519
  error estimate for blocks of size 2^( 6) =       0.000588762112
  error estimate for blocks of size 2^( 7) =       0.000594518015

      target function =      -0.705855404272
              le_mean =     -22.425523540933
             les_mean =     503.405683390951
             stat err =       0.000585006775
             autocorr =       1.364626156723
   target nu stat err =       0.000585006775
   target dn stat err =       0.005215420110
      target stat err =       0.003784071035
              std dev =       0.708221403813
             le_variance =       0.501577556819


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242552354093e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+18, overlap shift 6.2500e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705874918311       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705874918311       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705874918311       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705874918308       residual = 5.16e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+18 is 9.461120e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+19, overlap shift 2.5000e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705874918311       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705874918311       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705874918311       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705874918305       residual = 5.48e+02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705874918311       residual = 2.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705890490862       residual = 6.07e+01           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+19 is 4.691909e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+20, overlap shift 1.0000e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705874918311       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705874918311       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705874918311       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705874918311       residual = 2.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705874913527       residual = 6.13e+03           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+20 is 1.001472e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.598726 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0774e+01
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.2993
    reference variance = 0.49066
====================================================
  Execution time = 4.4865e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s023
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0008e-01
  Total weights = 2.0000e+06
  Execution time = 3.7879e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500041293
  error estimate for blocks of size 2^( 2) =       0.000526904709
  error estimate for blocks of size 2^( 3) =       0.000553354408
  error estimate for blocks of size 2^( 4) =       0.000573143834
  error estimate for blocks of size 2^( 5) =       0.000586109998
  error estimate for blocks of size 2^( 6) =       0.000591503311
  error estimate for blocks of size 2^( 7) =       0.000594422610

      target function =      -0.706941143408
              le_mean =     -22.425332441228
             les_mean =     503.395617438116
             stat err =       0.000586294938
             autocorr =       1.374739942637
   target nu stat err =       0.000586294938
   target dn stat err =       0.003815718126
      target stat err =       0.002805845423
              std dev =       0.707165177715
             le_variance =       0.500082588573

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500041293
  error estimate for blocks of size 2^( 2) =       0.000526904709
  error estimate for blocks of size 2^( 3) =       0.000553354408
  error estimate for blocks of size 2^( 4) =       0.000573143834
  error estimate for blocks of size 2^( 5) =       0.000586109998
  error estimate for blocks of size 2^( 6) =       0.000591503311
  error estimate for blocks of size 2^( 7) =       0.000594422610

      target function =      -0.706941143408
              le_mean =     -22.425332441228
             les_mean =     503.395617438116
             stat err =       0.000586294938
             autocorr =       1.374739942642
   target nu stat err =       0.000586294938
   target dn stat err =       0.003815718126
      target stat err =       0.002805845423
              std dev =       0.707165177715
             le_variance =       0.500082588573

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500041293
  error estimate for blocks of size 2^( 2) =       0.000526904709
  error estimate for blocks of size 2^( 3) =       0.000553354408
  error estimate for blocks of size 2^( 4) =       0.000573143834
  error estimate for blocks of size 2^( 5) =       0.000586109998
  error estimate for blocks of size 2^( 6) =       0.000591503311
  error estimate for blocks of size 2^( 7) =       0.000594422610

      target function =      -0.706941143408
              le_mean =     -22.425332441228
             les_mean =     503.395617438116
             stat err =       0.000586294938
             autocorr =       1.374739942642
   target nu stat err =       0.000586294938
   target dn stat err =       0.003815718126
      target stat err =       0.002805845423
              std dev =       0.707165177715
             le_variance =       0.500082588573

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499557068007
                                         uncertainty =       0.003509277109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500041293
  error estimate for blocks of size 2^( 2) =       0.000526904709
  error estimate for blocks of size 2^( 3) =       0.000553354408
  error estimate for blocks of size 2^( 4) =       0.000573143834
  error estimate for blocks of size 2^( 5) =       0.000586109998
  error estimate for blocks of size 2^( 6) =       0.000591503311
  error estimate for blocks of size 2^( 7) =       0.000594422610

      target function =      -0.706941143408
              le_mean =     -22.425332441228
             les_mean =     503.395617438116
             stat err =       0.000586294938
             autocorr =       1.374739942642
   target nu stat err =       0.000586294938
   target dn stat err =       0.003815718126
      target stat err =       0.002805845423
              std dev =       0.707165177715
             le_variance =       0.500082588573


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706941143408        initial  <--
     6.2500e+18     6.2500e+19             9.4611e-24        -0.706941143408
     2.5000e+19     2.5000e+20             4.6919e-24        -0.706941143408
     1.0000e+20     1.0000e+21             1.0015e-24        -0.706941143408

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.8004
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2458e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s024 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s024 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=24  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.4804
    reference variance = 0.39071
====================================================
  Execution time = 4.6854e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s024
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9574e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5457e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495838241400
                                         uncertainty =       0.003581624797

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495838241400
                                         uncertainty =       0.003581624797

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497865021
  error estimate for blocks of size 2^( 2) =       0.000525007456
  error estimate for blocks of size 2^( 3) =       0.000550217940
  error estimate for blocks of size 2^( 4) =       0.000570236145
  error estimate for blocks of size 2^( 5) =       0.000582497206
  error estimate for blocks of size 2^( 6) =       0.000589092659
  error estimate for blocks of size 2^( 7) =       0.000592918481

      target function =      -0.710080369928
              le_mean =     -22.425160582072
             les_mean =     503.383566041539
             stat err =       0.000583686123
             autocorr =       1.374470765671
   target nu stat err =       0.000583686123
   target dn stat err =       0.003331751406
      target stat err =       0.002487182443
              std dev =       0.704087464532
             le_variance =       0.495739157711


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242516058207e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+19, overlap shift 6.2500e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+20, overlap shift 2.5000e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+21, overlap shift 1.0000e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710088103837       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.599837 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2317e+01
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.5453
    reference variance = 1.09864
====================================================
  Execution time = 4.4938e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s024
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9783e-01
  Total weights = 2.0000e+06
  Execution time = 3.7955e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498911737
  error estimate for blocks of size 2^( 2) =       0.000525326536
  error estimate for blocks of size 2^( 3) =       0.000550978073
  error estimate for blocks of size 2^( 4) =       0.000570756724
  error estimate for blocks of size 2^( 5) =       0.000582636788
  error estimate for blocks of size 2^( 6) =       0.000587608219
  error estimate for blocks of size 2^( 7) =       0.000590108168

      target function =      -0.708571060566
              le_mean =     -22.425145337314
             les_mean =     503.384968993439
             stat err =       0.000582777475
             autocorr =       1.364451405308
   target nu stat err =       0.000582777475
   target dn stat err =       0.003395562691
      target stat err =       0.002521381999
              std dev =       0.705567744935
             le_variance =       0.497825842693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498911737
  error estimate for blocks of size 2^( 2) =       0.000525326536
  error estimate for blocks of size 2^( 3) =       0.000550978073
  error estimate for blocks of size 2^( 4) =       0.000570756724
  error estimate for blocks of size 2^( 5) =       0.000582636788
  error estimate for blocks of size 2^( 6) =       0.000587608219
  error estimate for blocks of size 2^( 7) =       0.000590108168

      target function =      -0.708571060566
              le_mean =     -22.425145337314
             les_mean =     503.384968993439
             stat err =       0.000582777475
             autocorr =       1.364451405306
   target nu stat err =       0.000582777475
   target dn stat err =       0.003395562691
      target stat err =       0.002521381999
              std dev =       0.705567744935
             le_variance =       0.497825842693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498911737
  error estimate for blocks of size 2^( 2) =       0.000525326536
  error estimate for blocks of size 2^( 3) =       0.000550978073
  error estimate for blocks of size 2^( 4) =       0.000570756724
  error estimate for blocks of size 2^( 5) =       0.000582636788
  error estimate for blocks of size 2^( 6) =       0.000587608219
  error estimate for blocks of size 2^( 7) =       0.000590108168

      target function =      -0.708571060566
              le_mean =     -22.425145337314
             les_mean =     503.384968993439
             stat err =       0.000582777475
             autocorr =       1.364451405306
   target nu stat err =       0.000582777475
   target dn stat err =       0.003395562691
      target stat err =       0.002521381999
              std dev =       0.705567744935
             le_variance =       0.497825842693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497843875128
                                         uncertainty =       0.003277426811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498911737
  error estimate for blocks of size 2^( 2) =       0.000525326536
  error estimate for blocks of size 2^( 3) =       0.000550978073
  error estimate for blocks of size 2^( 4) =       0.000570756724
  error estimate for blocks of size 2^( 5) =       0.000582636788
  error estimate for blocks of size 2^( 6) =       0.000587608219
  error estimate for blocks of size 2^( 7) =       0.000590108168

      target function =      -0.708571060566
              le_mean =     -22.425145337314
             les_mean =     503.384968993439
             stat err =       0.000582777475
             autocorr =       1.364451405306
   target nu stat err =       0.000582777475
   target dn stat err =       0.003395562691
      target stat err =       0.002521381999
              std dev =       0.705567744935
             le_variance =       0.497825842693


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708571060566        initial  <--
     6.2500e+19     6.2500e+20             0.0000e+00        -0.708571060566
     2.5000e+20     2.5000e+21             0.0000e+00        -0.708571060566
     1.0000e+21     1.0000e+22             0.0000e+00        -0.708571060566

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.9163
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2624e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s025 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s025 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=25  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.4145
    reference variance = 0.803248
====================================================
  Execution time = 4.5823e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s025
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9884e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5111e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498902812123
                                         uncertainty =       0.005721371461

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498902812123
                                         uncertainty =       0.005721371461

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499418915
  error estimate for blocks of size 2^( 2) =       0.000526373280
  error estimate for blocks of size 2^( 3) =       0.000551764875
  error estimate for blocks of size 2^( 4) =       0.000571863128
  error estimate for blocks of size 2^( 5) =       0.000584415090
  error estimate for blocks of size 2^( 6) =       0.000590230337
  error estimate for blocks of size 2^( 7) =       0.000594476294

      target function =      -0.707822180530
              le_mean =     -22.425276242119
             les_mean =     503.391852792224
             stat err =       0.000585246212
             autocorr =       1.373242541541
   target nu stat err =       0.000585246212
   target dn stat err =       0.005913183396
      target stat err =       0.004300769120
              std dev =       0.706285003603
             le_variance =       0.498838506315


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242527624212e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+20, overlap shift 6.2500e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+21, overlap shift 2.5000e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+22, overlap shift 1.0000e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707847039389       residual = 2.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.600937 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0941e+01
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.3534
    reference variance = 0.376882
====================================================
  Execution time = 4.5356e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s025
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9885e-01
  Total weights = 2.0000e+06
  Execution time = 3.7927e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499423167
  error estimate for blocks of size 2^( 2) =       0.000526316649
  error estimate for blocks of size 2^( 3) =       0.000552014310
  error estimate for blocks of size 2^( 4) =       0.000572818784
  error estimate for blocks of size 2^( 5) =       0.000585595412
  error estimate for blocks of size 2^( 6) =       0.000594047179
  error estimate for blocks of size 2^( 7) =       0.000597914698

      target function =      -0.707821296656
              le_mean =     -22.426096995956
             les_mean =     503.428673221618
             stat err =       0.000587594018
             autocorr =       1.384259025189
   target nu stat err =       0.000587594018
   target dn stat err =       0.003034865070
      target stat err =       0.002268966668
              std dev =       0.706291015800
             le_variance =       0.498846998999

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499423167
  error estimate for blocks of size 2^( 2) =       0.000526316649
  error estimate for blocks of size 2^( 3) =       0.000552014310
  error estimate for blocks of size 2^( 4) =       0.000572818784
  error estimate for blocks of size 2^( 5) =       0.000585595412
  error estimate for blocks of size 2^( 6) =       0.000594047179
  error estimate for blocks of size 2^( 7) =       0.000597914698

      target function =      -0.707821296656
              le_mean =     -22.426096995956
             les_mean =     503.428673221618
             stat err =       0.000587594018
             autocorr =       1.384259025192
   target nu stat err =       0.000587594018
   target dn stat err =       0.003034865070
      target stat err =       0.002268966668
              std dev =       0.706291015800
             le_variance =       0.498846998999

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499423167
  error estimate for blocks of size 2^( 2) =       0.000526316649
  error estimate for blocks of size 2^( 3) =       0.000552014310
  error estimate for blocks of size 2^( 4) =       0.000572818784
  error estimate for blocks of size 2^( 5) =       0.000585595412
  error estimate for blocks of size 2^( 6) =       0.000594047179
  error estimate for blocks of size 2^( 7) =       0.000597914698

      target function =      -0.707821296656
              le_mean =     -22.426096995956
             les_mean =     503.428673221618
             stat err =       0.000587594018
             autocorr =       1.384259025192
   target nu stat err =       0.000587594018
   target dn stat err =       0.003034865070
      target stat err =       0.002268966668
              std dev =       0.706291015800
             le_variance =       0.498846998999

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498670324788
                                         uncertainty =       0.003473082458

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499423167
  error estimate for blocks of size 2^( 2) =       0.000526316649
  error estimate for blocks of size 2^( 3) =       0.000552014310
  error estimate for blocks of size 2^( 4) =       0.000572818784
  error estimate for blocks of size 2^( 5) =       0.000585595412
  error estimate for blocks of size 2^( 6) =       0.000594047179
  error estimate for blocks of size 2^( 7) =       0.000597914698

      target function =      -0.707821296656
              le_mean =     -22.426096995956
             les_mean =     503.428673221618
             stat err =       0.000587594018
             autocorr =       1.384259025192
   target nu stat err =       0.000587594018
   target dn stat err =       0.003034865070
      target stat err =       0.002268966668
              std dev =       0.706291015800
             le_variance =       0.498846998999


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707821296656        initial  <--
     6.2500e+20     6.2500e+21             0.0000e+00        -0.707821296656
     2.5000e+21     2.5000e+22             0.0000e+00        -0.707821296656
     1.0000e+22     1.0000e+23             0.0000e+00        -0.707821296656

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.3548
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2530e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s026 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s026 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=26  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2417e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.4183
    reference variance = 0.306802
====================================================
  Execution time = 4.5249e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s026
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0588e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5187e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505864356647
                                         uncertainty =       0.009060292862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505864356647
                                         uncertainty =       0.009060292862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502932298
  error estimate for blocks of size 2^( 2) =       0.000529281483
  error estimate for blocks of size 2^( 3) =       0.000555465766
  error estimate for blocks of size 2^( 4) =       0.000574948407
  error estimate for blocks of size 2^( 5) =       0.000586797962
  error estimate for blocks of size 2^( 6) =       0.000593788514
  error estimate for blocks of size 2^( 7) =       0.000598071314

      target function =      -0.702726636073
              le_mean =     -22.426144874766
             les_mean =     503.437855483567
             stat err =       0.000588401549
             autocorr =       1.368763960884
   target nu stat err =       0.000588401549
   target dn stat err =       0.009344761891
      target stat err =       0.006669842080
              std dev =       0.711253676620
             le_variance =       0.505881792506


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242614487477e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+21, overlap shift 6.2500e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+22, overlap shift 2.5000e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+23, overlap shift 1.0000e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702789486806       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.602069 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0443e+01
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.4741
    reference variance = 0.818396
====================================================
  Execution time = 4.6374e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s026
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.0769e-01
  Total weights = 2.0000e+06
  Execution time = 3.7876e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503829940
  error estimate for blocks of size 2^( 2) =       0.000530374469
  error estimate for blocks of size 2^( 3) =       0.000555360014
  error estimate for blocks of size 2^( 4) =       0.000575346083
  error estimate for blocks of size 2^( 5) =       0.000586542802
  error estimate for blocks of size 2^( 6) =       0.000593411371
  error estimate for blocks of size 2^( 7) =       0.000598479427

      target function =      -0.701529393296
              le_mean =     -22.424291642082
             les_mean =     503.356544611496
             stat err =       0.000588444921
             autocorr =       1.364092101844
   target nu stat err =       0.000588444921
   target dn stat err =       0.005654870953
      target stat err =       0.004039210164
              std dev =       0.712523133785
             le_variance =       0.507689216179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503829940
  error estimate for blocks of size 2^( 2) =       0.000530374469
  error estimate for blocks of size 2^( 3) =       0.000555360014
  error estimate for blocks of size 2^( 4) =       0.000575346083
  error estimate for blocks of size 2^( 5) =       0.000586542802
  error estimate for blocks of size 2^( 6) =       0.000593411371
  error estimate for blocks of size 2^( 7) =       0.000598479427

      target function =      -0.701529393296
              le_mean =     -22.424291642082
             les_mean =     503.356544611496
             stat err =       0.000588444921
             autocorr =       1.364092101844
   target nu stat err =       0.000588444921
   target dn stat err =       0.005654870953
      target stat err =       0.004039210164
              std dev =       0.712523133785
             le_variance =       0.507689216179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503829940
  error estimate for blocks of size 2^( 2) =       0.000530374469
  error estimate for blocks of size 2^( 3) =       0.000555360014
  error estimate for blocks of size 2^( 4) =       0.000575346083
  error estimate for blocks of size 2^( 5) =       0.000586542802
  error estimate for blocks of size 2^( 6) =       0.000593411371
  error estimate for blocks of size 2^( 7) =       0.000598479427

      target function =      -0.701529393296
              le_mean =     -22.424291642082
             les_mean =     503.356544611496
             stat err =       0.000588444921
             autocorr =       1.364092101844
   target nu stat err =       0.000588444921
   target dn stat err =       0.005654870953
      target stat err =       0.004039210164
              std dev =       0.712523133785
             le_variance =       0.507689216179

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507813154360
                                         uncertainty =       0.005162760748

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503829940
  error estimate for blocks of size 2^( 2) =       0.000530374469
  error estimate for blocks of size 2^( 3) =       0.000555360014
  error estimate for blocks of size 2^( 4) =       0.000575346083
  error estimate for blocks of size 2^( 5) =       0.000586542802
  error estimate for blocks of size 2^( 6) =       0.000593411371
  error estimate for blocks of size 2^( 7) =       0.000598479427

      target function =      -0.701529393296
              le_mean =     -22.424291642082
             les_mean =     503.356544611496
             stat err =       0.000588444921
             autocorr =       1.364092101844
   target nu stat err =       0.000588444921
   target dn stat err =       0.005654870953
      target stat err =       0.004039210164
              std dev =       0.712523133785
             le_variance =       0.507689216179


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.701529393296        initial  <--
     6.2500e+21     6.2500e+22             0.0000e+00        -0.701529393296
     2.5000e+22     2.5000e+23             0.0000e+00        -0.701529393296
     1.0000e+23     1.0000e+24             0.0000e+00        -0.701529393296

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.3470
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2580e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s027 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s027 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=27  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2418e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.4564
    reference variance = 0.373834
====================================================
  Execution time = 4.6199e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s027
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0203e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5026e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502164010732
                                         uncertainty =       0.004138477676

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502164010732
                                         uncertainty =       0.004138477676

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501013282
  error estimate for blocks of size 2^( 2) =       0.000527805485
  error estimate for blocks of size 2^( 3) =       0.000553274650
  error estimate for blocks of size 2^( 4) =       0.000572460562
  error estimate for blocks of size 2^( 5) =       0.000586384665
  error estimate for blocks of size 2^( 6) =       0.000593756666
  error estimate for blocks of size 2^( 7) =       0.000597654287

      target function =      -0.705518143279
              le_mean =     -22.426615949949
             les_mean =     503.455131332122
             stat err =       0.000587564045
             autocorr =       1.375345928578
   target nu stat err =       0.000587564045
   target dn stat err =       0.004121669721
      target stat err =       0.003014949399
              std dev =       0.708539777736
             le_variance =       0.502028616634


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242661594995e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+22, overlap shift 6.2500e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+23, overlap shift 2.5000e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+24, overlap shift 1.0000e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705530092474       residual = 3.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.603198 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1231e+01
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.4307
    reference variance = 0.842992
====================================================
  Execution time = 4.4621e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s027
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0165e-01
  Total weights = 2.0000e+06
  Execution time = 3.7820e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500823448
  error estimate for blocks of size 2^( 2) =       0.000527767915
  error estimate for blocks of size 2^( 3) =       0.000553343782
  error estimate for blocks of size 2^( 4) =       0.000573129616
  error estimate for blocks of size 2^( 5) =       0.000586020174
  error estimate for blocks of size 2^( 6) =       0.000592145908
  error estimate for blocks of size 2^( 7) =       0.000598457783

      target function =      -0.705803083618
              le_mean =     -22.425935601164
             les_mean =     503.424235589851
             stat err =       0.000587438370
             autocorr =       1.375800021830
   target nu stat err =       0.000587438370
   target dn stat err =       0.004348448798
      target stat err =       0.003173882936
              std dev =       0.708271313204
             le_variance =       0.501648253108

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500823448
  error estimate for blocks of size 2^( 2) =       0.000527767915
  error estimate for blocks of size 2^( 3) =       0.000553343782
  error estimate for blocks of size 2^( 4) =       0.000573129616
  error estimate for blocks of size 2^( 5) =       0.000586020174
  error estimate for blocks of size 2^( 6) =       0.000592145908
  error estimate for blocks of size 2^( 7) =       0.000598457783

      target function =      -0.705803083618
              le_mean =     -22.425935601164
             les_mean =     503.424235589851
             stat err =       0.000587438370
             autocorr =       1.375800021830
   target nu stat err =       0.000587438370
   target dn stat err =       0.004348448798
      target stat err =       0.003173882936
              std dev =       0.708271313204
             le_variance =       0.501648253108

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500823448
  error estimate for blocks of size 2^( 2) =       0.000527767915
  error estimate for blocks of size 2^( 3) =       0.000553343782
  error estimate for blocks of size 2^( 4) =       0.000573129616
  error estimate for blocks of size 2^( 5) =       0.000586020174
  error estimate for blocks of size 2^( 6) =       0.000592145908
  error estimate for blocks of size 2^( 7) =       0.000598457783

      target function =      -0.705803083618
              le_mean =     -22.425935601164
             les_mean =     503.424235589851
             stat err =       0.000587438370
             autocorr =       1.375800021830
   target nu stat err =       0.000587438370
   target dn stat err =       0.004348448798
      target stat err =       0.003173882936
              std dev =       0.708271313204
             le_variance =       0.501648253108

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501741085056
                                         uncertainty =       0.004343219243

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500823448
  error estimate for blocks of size 2^( 2) =       0.000527767915
  error estimate for blocks of size 2^( 3) =       0.000553343782
  error estimate for blocks of size 2^( 4) =       0.000573129616
  error estimate for blocks of size 2^( 5) =       0.000586020174
  error estimate for blocks of size 2^( 6) =       0.000592145908
  error estimate for blocks of size 2^( 7) =       0.000598457783

      target function =      -0.705803083618
              le_mean =     -22.425935601164
             les_mean =     503.424235589851
             stat err =       0.000587438370
             autocorr =       1.375800021830
   target nu stat err =       0.000587438370
   target dn stat err =       0.004348448798
      target stat err =       0.003173882936
              std dev =       0.708271313204
             le_variance =       0.501648253108


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705803083618        initial  <--
     6.2500e+22     6.2500e+23             0.0000e+00        -0.705803083618
     2.5000e+23     2.5000e+24             0.0000e+00        -0.705803083618
     1.0000e+24     1.0000e+25             0.0000e+00        -0.705803083618

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.6170
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2485e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s028 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s028 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=28  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.3396
    reference variance = 0.45054
====================================================
  Execution time = 4.5617e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s028
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.1675e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4690e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516776075230
                                         uncertainty =       0.017360276636

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516776075230
                                         uncertainty =       0.017360276636

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000508307355
  error estimate for blocks of size 2^( 2) =       0.000534662505
  error estimate for blocks of size 2^( 3) =       0.000560912131
  error estimate for blocks of size 2^( 4) =       0.000579372849
  error estimate for blocks of size 2^( 5) =       0.000591464355
  error estimate for blocks of size 2^( 6) =       0.000599791321
  error estimate for blocks of size 2^( 7) =       0.000602872225

      target function =      -0.694919107585
              le_mean =     -22.426664919519
             les_mean =     503.472051887487
             stat err =       0.000593375187
             autocorr =       1.362717951018
   target nu stat err =       0.000593375187
   target dn stat err =       0.017352091482
      target stat err =       0.012089258987
              std dev =       0.718855154713
             le_variance =       0.516752733458


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242666491952e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+23, overlap shift 6.2500e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.695126696634       residual = 4.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+23 is 2.058062e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+24, overlap shift 2.5000e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.695126696634       residual = 4.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+24 is 5.145156e-29

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+25, overlap shift 1.0000e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.695126696634       residual = 4.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.695126696634       residual = 9.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+25 is 1.286289e-29

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.604576 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0314e+01
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.4492
    reference variance = 0.320095
====================================================
  Execution time = 4.4740e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s028
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9869e-01
  Total weights = 2.0000e+06
  Execution time = 3.7840e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499344251
  error estimate for blocks of size 2^( 2) =       0.000526094796
  error estimate for blocks of size 2^( 3) =       0.000552004969
  error estimate for blocks of size 2^( 4) =       0.000571140076
  error estimate for blocks of size 2^( 5) =       0.000583765197
  error estimate for blocks of size 2^( 6) =       0.000590636024
  error estimate for blocks of size 2^( 7) =       0.000595529541

      target function =      -0.707956139244
              le_mean =     -22.424615830493
             les_mean =     503.362084256971
             stat err =       0.000585267710
             autocorr =       1.373754158949
   target nu stat err =       0.000585267710
   target dn stat err =       0.003449305621
      target stat err =       0.002553419717
              std dev =       0.706179411430
             le_variance =       0.498689361128

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499344251
  error estimate for blocks of size 2^( 2) =       0.000526094796
  error estimate for blocks of size 2^( 3) =       0.000552004969
  error estimate for blocks of size 2^( 4) =       0.000571140076
  error estimate for blocks of size 2^( 5) =       0.000583765197
  error estimate for blocks of size 2^( 6) =       0.000590636024
  error estimate for blocks of size 2^( 7) =       0.000595529541

      target function =      -0.707956139244
              le_mean =     -22.424615830493
             les_mean =     503.362084256971
             stat err =       0.000585267710
             autocorr =       1.373754158951
   target nu stat err =       0.000585267710
   target dn stat err =       0.003449305621
      target stat err =       0.002553419717
              std dev =       0.706179411430
             le_variance =       0.498689361128

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499344251
  error estimate for blocks of size 2^( 2) =       0.000526094796
  error estimate for blocks of size 2^( 3) =       0.000552004969
  error estimate for blocks of size 2^( 4) =       0.000571140076
  error estimate for blocks of size 2^( 5) =       0.000583765197
  error estimate for blocks of size 2^( 6) =       0.000590636024
  error estimate for blocks of size 2^( 7) =       0.000595529541

      target function =      -0.707956139244
              le_mean =     -22.424615830493
             les_mean =     503.362084256971
             stat err =       0.000585267710
             autocorr =       1.373754158951
   target nu stat err =       0.000585267710
   target dn stat err =       0.003449305621
      target stat err =       0.002553419717
              std dev =       0.706179411430
             le_variance =       0.498689361128

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498709188476
                                         uncertainty =       0.003200868487

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499344251
  error estimate for blocks of size 2^( 2) =       0.000526094796
  error estimate for blocks of size 2^( 3) =       0.000552004969
  error estimate for blocks of size 2^( 4) =       0.000571140076
  error estimate for blocks of size 2^( 5) =       0.000583765197
  error estimate for blocks of size 2^( 6) =       0.000590636024
  error estimate for blocks of size 2^( 7) =       0.000595529541

      target function =      -0.707956139244
              le_mean =     -22.424615830493
             les_mean =     503.362084256971
             stat err =       0.000585267710
             autocorr =       1.373754158951
   target nu stat err =       0.000585267710
   target dn stat err =       0.003449305621
      target stat err =       0.002553419717
              std dev =       0.706179411430
             le_variance =       0.498689361128


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707956139244        initial  <--
     6.2500e+23     6.2500e+24             2.0581e-28        -0.707956139244
     2.5000e+24     2.5000e+25             5.1452e-29        -0.707956139244
     1.0000e+25     1.0000e+26             1.2863e-29        -0.707956139244

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 67.1323
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2745e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s029 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s029 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=29  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2418e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.4139
    reference variance = 0.372416
====================================================
  Execution time = 4.6368e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s029
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0000e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5261e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500019230812
                                         uncertainty =       0.005070482946

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500019230812
                                         uncertainty =       0.005070482946

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499999559
  error estimate for blocks of size 2^( 2) =       0.000527066882
  error estimate for blocks of size 2^( 3) =       0.000553075159
  error estimate for blocks of size 2^( 4) =       0.000572352025
  error estimate for blocks of size 2^( 5) =       0.000585777900
  error estimate for blocks of size 2^( 6) =       0.000592161282
  error estimate for blocks of size 2^( 7) =       0.000594858197

      target function =      -0.706999507326
              le_mean =     -22.425104683722
             les_mean =     503.385318944248
             stat err =       0.000586287351
             autocorr =       1.374933854676
   target nu stat err =       0.000586287351
   target dn stat err =       0.004676779655
      target stat err =       0.003412448340
              std dev =       0.707106157775
             le_variance =       0.499999118364


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242510468372e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+24, overlap shift 6.2500e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+25, overlap shift 2.5000e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+26, overlap shift 1.0000e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707014839671       residual = 4.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.605675 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1635e+01
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.3126
    reference variance = 0.55995
====================================================
  Execution time = 4.4426e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s029
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9464e-01
  Total weights = 2.0000e+06
  Execution time = 3.7852e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497314879
  error estimate for blocks of size 2^( 2) =       0.000524752866
  error estimate for blocks of size 2^( 3) =       0.000551247110
  error estimate for blocks of size 2^( 4) =       0.000571030219
  error estimate for blocks of size 2^( 5) =       0.000583607013
  error estimate for blocks of size 2^( 6) =       0.000589766144
  error estimate for blocks of size 2^( 7) =       0.000593374535

      target function =      -0.710863601558
              le_mean =     -22.426320670894
             les_mean =     503.434502763445
             stat err =       0.000584444478
             autocorr =       1.381095193279
   target nu stat err =       0.000584444478
   target dn stat err =       0.002757731266
      target stat err =       0.002093760771
              std dev =       0.703309446109
             le_variance =       0.494644176986

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497314879
  error estimate for blocks of size 2^( 2) =       0.000524752866
  error estimate for blocks of size 2^( 3) =       0.000551247110
  error estimate for blocks of size 2^( 4) =       0.000571030219
  error estimate for blocks of size 2^( 5) =       0.000583607013
  error estimate for blocks of size 2^( 6) =       0.000589766144
  error estimate for blocks of size 2^( 7) =       0.000593374535

      target function =      -0.710863601558
              le_mean =     -22.426320670894
             les_mean =     503.434502763445
             stat err =       0.000584444478
             autocorr =       1.381095193279
   target nu stat err =       0.000584444478
   target dn stat err =       0.002757731266
      target stat err =       0.002093760771
              std dev =       0.703309446109
             le_variance =       0.494644176986

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497314879
  error estimate for blocks of size 2^( 2) =       0.000524752866
  error estimate for blocks of size 2^( 3) =       0.000551247110
  error estimate for blocks of size 2^( 4) =       0.000571030219
  error estimate for blocks of size 2^( 5) =       0.000583607013
  error estimate for blocks of size 2^( 6) =       0.000589766144
  error estimate for blocks of size 2^( 7) =       0.000593374535

      target function =      -0.710863601558
              le_mean =     -22.426320670894
             les_mean =     503.434502763445
             stat err =       0.000584444478
             autocorr =       1.381095193279
   target nu stat err =       0.000584444478
   target dn stat err =       0.002757731266
      target stat err =       0.002093760771
              std dev =       0.703309446109
             le_variance =       0.494644176986

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494729537745
                                         uncertainty =       0.002688438922

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497314879
  error estimate for blocks of size 2^( 2) =       0.000524752866
  error estimate for blocks of size 2^( 3) =       0.000551247110
  error estimate for blocks of size 2^( 4) =       0.000571030219
  error estimate for blocks of size 2^( 5) =       0.000583607013
  error estimate for blocks of size 2^( 6) =       0.000589766144
  error estimate for blocks of size 2^( 7) =       0.000593374535

      target function =      -0.710863601558
              le_mean =     -22.426320670894
             les_mean =     503.434502763445
             stat err =       0.000584444478
             autocorr =       1.381095193279
   target nu stat err =       0.000584444478
   target dn stat err =       0.002757731266
      target stat err =       0.002093760771
              std dev =       0.703309446109
             le_variance =       0.494644176986


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710863601558        initial  <--
     6.2500e+24     6.2500e+25             0.0000e+00        -0.710863601558
     2.5000e+25     2.5000e+26             0.0000e+00        -0.710863601558
     1.0000e+26     1.0000e+27             0.0000e+00        -0.710863601558

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3898
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2503e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s030 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s030 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=30  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2417e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.4632
    reference variance = 0.631314
====================================================
  Execution time = 4.5368e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s030
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.0246e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5309e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502428399442
                                         uncertainty =       0.003771004682

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502428399442
                                         uncertainty =       0.003771004682

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501230551
  error estimate for blocks of size 2^( 2) =       0.000527843211
  error estimate for blocks of size 2^( 3) =       0.000553549655
  error estimate for blocks of size 2^( 4) =       0.000572851228
  error estimate for blocks of size 2^( 5) =       0.000585000662
  error estimate for blocks of size 2^( 6) =       0.000590591786
  error estimate for blocks of size 2^( 7) =       0.000592571417

      target function =      -0.705250118245
              le_mean =     -22.424463000865
             les_mean =     503.359004756091
             stat err =       0.000585253773
             autocorr =       1.363368880172
   target nu stat err =       0.000585253773
   target dn stat err =       0.003798772278
      target stat err =       0.002777203986
              std dev =       0.708847042839
             le_variance =       0.502464130142


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242446300087e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+25, overlap shift 6.2500e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705260064500       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705260064500       residual = 8.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705260064500       residual = 9.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705260064453       residual = 5.88e+01           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705260064453       residual = 9.77e+00           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+25 is 6.890431e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+26, overlap shift 2.5000e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705260064500       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705260064500       residual = 8.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705260064500       residual = 9.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705260064453       residual = 5.88e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+26 is 1.722608e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+27, overlap shift 1.0000e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705260064500       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705260064500       residual = 8.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705260064500       residual = 9.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705260064453       residual = 5.88e+01           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705260064453       residual = 1.24e+01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+27 is 4.306519e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.607501 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0684e+01
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.528
    reference variance = 0.986196
====================================================
  Execution time = 4.5115e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s030
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.1270e-01
  Total weights = 2.0000e+06
  Execution time = 3.8097e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506309222
  error estimate for blocks of size 2^( 2) =       0.000532749261
  error estimate for blocks of size 2^( 3) =       0.000557580650
  error estimate for blocks of size 2^( 4) =       0.000576167868
  error estimate for blocks of size 2^( 5) =       0.000588442210
  error estimate for blocks of size 2^( 6) =       0.000595994167
  error estimate for blocks of size 2^( 7) =       0.000599967178

      target function =      -0.697953304968
              le_mean =     -22.424860530414
             les_mean =     503.387067608372
             stat err =       0.000590142855
             autocorr =       1.358571914512
   target nu stat err =       0.000590142855
   target dn stat err =       0.009401667543
      target stat err =       0.006607572037
              std dev =       0.716029368258
             le_variance =       0.512698056208

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506309222
  error estimate for blocks of size 2^( 2) =       0.000532749261
  error estimate for blocks of size 2^( 3) =       0.000557580650
  error estimate for blocks of size 2^( 4) =       0.000576167868
  error estimate for blocks of size 2^( 5) =       0.000588442210
  error estimate for blocks of size 2^( 6) =       0.000595994167
  error estimate for blocks of size 2^( 7) =       0.000599967178

      target function =      -0.697953304968
              le_mean =     -22.424860530414
             les_mean =     503.387067608372
             stat err =       0.000590142855
             autocorr =       1.358571914512
   target nu stat err =       0.000590142855
   target dn stat err =       0.009401667543
      target stat err =       0.006607572037
              std dev =       0.716029368258
             le_variance =       0.512698056208

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506309222
  error estimate for blocks of size 2^( 2) =       0.000532749261
  error estimate for blocks of size 2^( 3) =       0.000557580650
  error estimate for blocks of size 2^( 4) =       0.000576167868
  error estimate for blocks of size 2^( 5) =       0.000588442210
  error estimate for blocks of size 2^( 6) =       0.000595994167
  error estimate for blocks of size 2^( 7) =       0.000599967178

      target function =      -0.697953304968
              le_mean =     -22.424860530414
             les_mean =     503.387067608372
             stat err =       0.000590142855
             autocorr =       1.358571914512
   target nu stat err =       0.000590142855
   target dn stat err =       0.009401667543
      target stat err =       0.006607572037
              std dev =       0.716029368258
             le_variance =       0.512698056208

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512535150962
                                         uncertainty =       0.008797566236

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506309222
  error estimate for blocks of size 2^( 2) =       0.000532749261
  error estimate for blocks of size 2^( 3) =       0.000557580650
  error estimate for blocks of size 2^( 4) =       0.000576167868
  error estimate for blocks of size 2^( 5) =       0.000588442210
  error estimate for blocks of size 2^( 6) =       0.000595994167
  error estimate for blocks of size 2^( 7) =       0.000599967178

      target function =      -0.697953304968
              le_mean =     -22.424860530414
             les_mean =     503.387067608372
             stat err =       0.000590142855
             autocorr =       1.358571914512
   target nu stat err =       0.000590142855
   target dn stat err =       0.009401667543
      target stat err =       0.006607572037
              std dev =       0.716029368258
             le_variance =       0.512698056208


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.697953304968        initial  <--
     6.2500e+25     6.2500e+26             6.8904e-31        -0.697953304968
     2.5000e+26     2.5000e+27             1.7226e-31        -0.697953304968
     1.0000e+27     1.0000e+28             4.3065e-32        -0.697953304968

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.1432
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2483e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s031 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s031 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=31  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.5241
    reference variance = 0.848016
====================================================
  Execution time = 4.7040e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s031
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0498e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5027e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505033386263
                                         uncertainty =       0.003760225061

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505033386263
                                         uncertainty =       0.003760225061

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502482622
  error estimate for blocks of size 2^( 2) =       0.000528928722
  error estimate for blocks of size 2^( 3) =       0.000554435495
  error estimate for blocks of size 2^( 4) =       0.000573715434
  error estimate for blocks of size 2^( 5) =       0.000586545494
  error estimate for blocks of size 2^( 6) =       0.000592921740
  error estimate for blocks of size 2^( 7) =       0.000598941064

      target function =      -0.703445579210
              le_mean =     -22.424971658763
             les_mean =     503.384331214981
             stat err =       0.000588030933
             autocorr =       1.369488064527
   target nu stat err =       0.000588030933
   target dn stat err =       0.004366979148
      target stat err =       0.003161775941
              std dev =       0.710617739107
             le_variance =       0.504977571133


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242497165876e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+26, overlap shift 6.2500e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703458823411       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703458823411       residual = 9.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703458823409       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+26 is 7.570347e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+27, overlap shift 2.5000e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703458823411       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703458823411       residual = 9.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703458823438       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+27 is 1.892587e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+28, overlap shift 1.0000e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703458823411       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703458823411       residual = 9.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703458823380       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+28 is 4.731467e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.608962 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2075e+01
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.3733
    reference variance = 0.334675
====================================================
  Execution time = 4.4867e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s031
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9838e-01
  Total weights = 2.0000e+06
  Execution time = 3.7834e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499189209
  error estimate for blocks of size 2^( 2) =       0.000525770494
  error estimate for blocks of size 2^( 3) =       0.000551502957
  error estimate for blocks of size 2^( 4) =       0.000570469037
  error estimate for blocks of size 2^( 5) =       0.000583546969
  error estimate for blocks of size 2^( 6) =       0.000589863951
  error estimate for blocks of size 2^( 7) =       0.000593322811

      target function =      -0.708167831894
              le_mean =     -22.425411995108
             les_mean =     503.397482634560
             stat err =       0.000584300692
             autocorr =       1.370068947280
   target nu stat err =       0.000584300692
   target dn stat err =       0.003350645272
      target stat err =       0.002488459051
              std dev =       0.705960150029
             le_variance =       0.498379733429

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499189209
  error estimate for blocks of size 2^( 2) =       0.000525770494
  error estimate for blocks of size 2^( 3) =       0.000551502957
  error estimate for blocks of size 2^( 4) =       0.000570469037
  error estimate for blocks of size 2^( 5) =       0.000583546969
  error estimate for blocks of size 2^( 6) =       0.000589863951
  error estimate for blocks of size 2^( 7) =       0.000593322811

      target function =      -0.708167831894
              le_mean =     -22.425411995108
             les_mean =     503.397482634560
             stat err =       0.000584300692
             autocorr =       1.370068947280
   target nu stat err =       0.000584300692
   target dn stat err =       0.003350645272
      target stat err =       0.002488459051
              std dev =       0.705960150029
             le_variance =       0.498379733429

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499189209
  error estimate for blocks of size 2^( 2) =       0.000525770494
  error estimate for blocks of size 2^( 3) =       0.000551502957
  error estimate for blocks of size 2^( 4) =       0.000570469037
  error estimate for blocks of size 2^( 5) =       0.000583546969
  error estimate for blocks of size 2^( 6) =       0.000589863951
  error estimate for blocks of size 2^( 7) =       0.000593322811

      target function =      -0.708167831894
              le_mean =     -22.425411995108
             les_mean =     503.397482634560
             stat err =       0.000584300692
             autocorr =       1.370068947280
   target nu stat err =       0.000584300692
   target dn stat err =       0.003350645272
      target stat err =       0.002488459051
              std dev =       0.705960150029
             le_variance =       0.498379733429

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498433714451
                                         uncertainty =       0.002873919803

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499189209
  error estimate for blocks of size 2^( 2) =       0.000525770494
  error estimate for blocks of size 2^( 3) =       0.000551502957
  error estimate for blocks of size 2^( 4) =       0.000570469037
  error estimate for blocks of size 2^( 5) =       0.000583546969
  error estimate for blocks of size 2^( 6) =       0.000589863951
  error estimate for blocks of size 2^( 7) =       0.000593322811

      target function =      -0.708167831894
              le_mean =     -22.425411995108
             les_mean =     503.397482634560
             stat err =       0.000584300692
             autocorr =       1.370068947280
   target nu stat err =       0.000584300692
   target dn stat err =       0.003350645272
      target stat err =       0.002488459051
              std dev =       0.705960150029
             le_variance =       0.498379733429


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708167831894        initial  <--
     6.2500e+26     6.2500e+27             7.5703e-32        -0.708167831894
     2.5000e+27     2.5000e+28             1.8926e-32        -0.708167831894
     1.0000e+28     1.0000e+29             4.7315e-33        -0.708167831894

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.8221
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2590e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s032 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s032 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=32  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2420e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.4606
    reference variance = 0.354718
====================================================
  Execution time = 4.5455e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s032
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9155e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5253e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491471338226
                                         uncertainty =       0.002344557410

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491471338226
                                         uncertainty =       0.002344557410

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495757183
  error estimate for blocks of size 2^( 2) =       0.000523009391
  error estimate for blocks of size 2^( 3) =       0.000548770517
  error estimate for blocks of size 2^( 4) =       0.000568018375
  error estimate for blocks of size 2^( 5) =       0.000581316936
  error estimate for blocks of size 2^( 6) =       0.000588108680
  error estimate for blocks of size 2^( 7) =       0.000592294491

      target function =      -0.713126481940
              le_mean =     -22.425897519818
             les_mean =     503.412429692714
             stat err =       0.000582434621
             autocorr =       1.380245478535
   target nu stat err =       0.000582434621
   target dn stat err =       0.002542756852
      target stat err =       0.001954368380
              std dev =       0.701106531911
             le_variance =       0.491550369088


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242589751982e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+27, overlap shift 6.2500e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713130846062       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713130846062       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713130846062       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+27 is 1.010219e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+28, overlap shift 2.5000e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713130846062       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713130846062       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713130846154       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+28 is 2.525547e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+29, overlap shift 1.0000e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713130846062       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713130846062       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713130846062       residual = 2.90e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+29 is 6.313868e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.610313 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0715e+01
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.5072
    reference variance = 0.569242
====================================================
  Execution time = 4.5099e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s032
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0131e-01
  Total weights = 2.0000e+06
  Execution time = 3.7867e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500653519
  error estimate for blocks of size 2^( 2) =       0.000527563610
  error estimate for blocks of size 2^( 3) =       0.000553482667
  error estimate for blocks of size 2^( 4) =       0.000573349648
  error estimate for blocks of size 2^( 5) =       0.000587167119
  error estimate for blocks of size 2^( 6) =       0.000594421558
  error estimate for blocks of size 2^( 7) =       0.000597260820

      target function =      -0.706047237766
              le_mean =     -22.425889332722
             les_mean =     503.421820004300
             stat err =       0.000588049786
             autocorr =       1.379601466841
   target nu stat err =       0.000588049786
   target dn stat err =       0.004493263654
      target stat err =       0.003278032281
              std dev =       0.708030996113
             le_variance =       0.501307891456

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500653519
  error estimate for blocks of size 2^( 2) =       0.000527563610
  error estimate for blocks of size 2^( 3) =       0.000553482667
  error estimate for blocks of size 2^( 4) =       0.000573349648
  error estimate for blocks of size 2^( 5) =       0.000587167119
  error estimate for blocks of size 2^( 6) =       0.000594421558
  error estimate for blocks of size 2^( 7) =       0.000597260820

      target function =      -0.706047237766
              le_mean =     -22.425889332722
             les_mean =     503.421820004300
             stat err =       0.000588049786
             autocorr =       1.379601466841
   target nu stat err =       0.000588049786
   target dn stat err =       0.004493263654
      target stat err =       0.003278032281
              std dev =       0.708030996113
             le_variance =       0.501307891456

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500653519
  error estimate for blocks of size 2^( 2) =       0.000527563610
  error estimate for blocks of size 2^( 3) =       0.000553482667
  error estimate for blocks of size 2^( 4) =       0.000573349648
  error estimate for blocks of size 2^( 5) =       0.000587167119
  error estimate for blocks of size 2^( 6) =       0.000594421558
  error estimate for blocks of size 2^( 7) =       0.000597260820

      target function =      -0.706047237766
              le_mean =     -22.425889332722
             les_mean =     503.421820004300
             stat err =       0.000588049786
             autocorr =       1.379601466841
   target nu stat err =       0.000588049786
   target dn stat err =       0.004493263654
      target stat err =       0.003278032281
              std dev =       0.708030996113
             le_variance =       0.501307891456

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501432565208
                                         uncertainty =       0.004193250435

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500653519
  error estimate for blocks of size 2^( 2) =       0.000527563610
  error estimate for blocks of size 2^( 3) =       0.000553482667
  error estimate for blocks of size 2^( 4) =       0.000573349648
  error estimate for blocks of size 2^( 5) =       0.000587167119
  error estimate for blocks of size 2^( 6) =       0.000594421558
  error estimate for blocks of size 2^( 7) =       0.000597260820

      target function =      -0.706047237766
              le_mean =     -22.425889332722
             les_mean =     503.421820004300
             stat err =       0.000588049786
             autocorr =       1.379601466841
   target nu stat err =       0.000588049786
   target dn stat err =       0.004493263654
      target stat err =       0.003278032281
              std dev =       0.708030996113
             le_variance =       0.501307891456


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706047237766        initial  <--
     6.2500e+27     6.2500e+28             1.0102e-32        -0.706047237766
     2.5000e+28     2.5000e+29             2.5255e-33        -0.706047237766
     1.0000e+29     1.0000e+30             6.3139e-34        -0.706047237766

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.0514
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2477e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s033 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s033 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=33  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2422e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.3493
    reference variance = 0.367604
====================================================
  Execution time = 4.5376e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s033
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0558e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5113e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505726274690
                                         uncertainty =       0.005116759526

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505726274690
                                         uncertainty =       0.005116759526

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502780418
  error estimate for blocks of size 2^( 2) =       0.000529565177
  error estimate for blocks of size 2^( 3) =       0.000554947981
  error estimate for blocks of size 2^( 4) =       0.000574795090
  error estimate for blocks of size 2^( 5) =       0.000586842688
  error estimate for blocks of size 2^( 6) =       0.000592809596
  error estimate for blocks of size 2^( 7) =       0.000595882279

      target function =      -0.703006602029
              le_mean =     -22.425591272547
             les_mean =     503.412719967194
             stat err =       0.000587582413
             autocorr =       1.365780375855
   target nu stat err =       0.000587582413
   target dn stat err =       0.004330691453
      target stat err =       0.003135296839
              std dev =       0.711038885475
             le_variance =       0.505576296657


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242559127255e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+28, overlap shift 6.2500e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+29, overlap shift 2.5000e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+30, overlap shift 1.0000e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703019540439       residual = 5.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.612526 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0499e+01
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.4378
    reference variance = 0.375069
====================================================
  Execution time = 4.6101e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s033
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0271e-01
  Total weights = 2.0000e+06
  Execution time = 3.7961e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501354697
  error estimate for blocks of size 2^( 2) =       0.000528283247
  error estimate for blocks of size 2^( 3) =       0.000554425023
  error estimate for blocks of size 2^( 4) =       0.000574952073
  error estimate for blocks of size 2^( 5) =       0.000586270665
  error estimate for blocks of size 2^( 6) =       0.000592974677
  error estimate for blocks of size 2^( 7) =       0.000595502448

      target function =      -0.705044929908
              le_mean =     -22.425847218065
             les_mean =     503.421336260621
             stat err =       0.000587424966
             autocorr =       1.372823245898
   target nu stat err =       0.000587424966
   target dn stat err =       0.003927003889
      target stat err =       0.002871281846
              std dev =       0.709022611744
             le_variance =       0.502713063965

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501354697
  error estimate for blocks of size 2^( 2) =       0.000528283247
  error estimate for blocks of size 2^( 3) =       0.000554425023
  error estimate for blocks of size 2^( 4) =       0.000574952073
  error estimate for blocks of size 2^( 5) =       0.000586270665
  error estimate for blocks of size 2^( 6) =       0.000592974677
  error estimate for blocks of size 2^( 7) =       0.000595502448

      target function =      -0.705044929908
              le_mean =     -22.425847218065
             les_mean =     503.421336260621
             stat err =       0.000587424966
             autocorr =       1.372823245898
   target nu stat err =       0.000587424966
   target dn stat err =       0.003927003889
      target stat err =       0.002871281846
              std dev =       0.709022611744
             le_variance =       0.502713063965

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501354697
  error estimate for blocks of size 2^( 2) =       0.000528283247
  error estimate for blocks of size 2^( 3) =       0.000554425023
  error estimate for blocks of size 2^( 4) =       0.000574952073
  error estimate for blocks of size 2^( 5) =       0.000586270665
  error estimate for blocks of size 2^( 6) =       0.000592974677
  error estimate for blocks of size 2^( 7) =       0.000595502448

      target function =      -0.705044929908
              le_mean =     -22.425847218065
             les_mean =     503.421336260621
             stat err =       0.000587424966
             autocorr =       1.372823245898
   target nu stat err =       0.000587424966
   target dn stat err =       0.003927003889
      target stat err =       0.002871281846
              std dev =       0.709022611744
             le_variance =       0.502713063965

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502551250514
                                         uncertainty =       0.003825805032

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501354697
  error estimate for blocks of size 2^( 2) =       0.000528283247
  error estimate for blocks of size 2^( 3) =       0.000554425023
  error estimate for blocks of size 2^( 4) =       0.000574952073
  error estimate for blocks of size 2^( 5) =       0.000586270665
  error estimate for blocks of size 2^( 6) =       0.000592974677
  error estimate for blocks of size 2^( 7) =       0.000595502448

      target function =      -0.705044929908
              le_mean =     -22.425847218065
             les_mean =     503.421336260621
             stat err =       0.000587424966
             autocorr =       1.372823245898
   target nu stat err =       0.000587424966
   target dn stat err =       0.003927003889
      target stat err =       0.002871281846
              std dev =       0.709022611744
             le_variance =       0.502713063965


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705044929908        initial  <--
     6.2500e+28     6.2500e+29             0.0000e+00        -0.705044929908
     2.5000e+29     2.5000e+30             0.0000e+00        -0.705044929908
     1.0000e+30     1.0000e+31             0.0000e+00        -0.705044929908

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.1075
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2561e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s034 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s034 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=34  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2421e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.4008
    reference variance = 0.40471
====================================================
  Execution time = 4.5047e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s034
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9598e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5078e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055571711
                                         uncertainty =       0.003241073766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496055571711
                                         uncertainty =       0.003241073766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497987710
  error estimate for blocks of size 2^( 2) =       0.000524050474
  error estimate for blocks of size 2^( 3) =       0.000549933026
  error estimate for blocks of size 2^( 4) =       0.000570021804
  error estimate for blocks of size 2^( 5) =       0.000582033863
  error estimate for blocks of size 2^( 6) =       0.000588842854
  error estimate for blocks of size 2^( 7) =       0.000592697550

      target function =      -0.709896816466
              le_mean =     -22.425723172420
             les_mean =     503.409043075873
             stat err =       0.000583399018
             autocorr =       1.372442436672
   target nu stat err =       0.000583399018
   target dn stat err =       0.003166311934
      target stat err =       0.002371595288
              std dev =       0.704260972830
             le_variance =       0.495983517852


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242572317242e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+29, overlap shift 6.2500e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+30, overlap shift 2.5000e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+31, overlap shift 1.0000e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709903774799       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.613615 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0132e+01
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.4139
    reference variance = 0.39064
====================================================
  Execution time = 4.5042e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s034
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9699e-01
  Total weights = 2.0000e+06
  Execution time = 3.7663e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498494912
  error estimate for blocks of size 2^( 2) =       0.000525399647
  error estimate for blocks of size 2^( 3) =       0.000550684104
  error estimate for blocks of size 2^( 4) =       0.000569537415
  error estimate for blocks of size 2^( 5) =       0.000581533486
  error estimate for blocks of size 2^( 6) =       0.000587945903
  error estimate for blocks of size 2^( 7) =       0.000589088387

      target function =      -0.709175228761
              le_mean =     -22.424556416279
             les_mean =     503.357724573495
             stat err =       0.000582026298
             autocorr =       1.363213113381
   target nu stat err =       0.000582026298
   target dn stat err =       0.004156387945
      target stat err =       0.003060155960
              std dev =       0.704978265705
             le_variance =       0.496994355116

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498494912
  error estimate for blocks of size 2^( 2) =       0.000525399647
  error estimate for blocks of size 2^( 3) =       0.000550684104
  error estimate for blocks of size 2^( 4) =       0.000569537415
  error estimate for blocks of size 2^( 5) =       0.000581533486
  error estimate for blocks of size 2^( 6) =       0.000587945903
  error estimate for blocks of size 2^( 7) =       0.000589088387

      target function =      -0.709175228761
              le_mean =     -22.424556416279
             les_mean =     503.357724573495
             stat err =       0.000582026298
             autocorr =       1.363213113380
   target nu stat err =       0.000582026298
   target dn stat err =       0.004156387945
      target stat err =       0.003060155960
              std dev =       0.704978265705
             le_variance =       0.496994355116

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498494912
  error estimate for blocks of size 2^( 2) =       0.000525399647
  error estimate for blocks of size 2^( 3) =       0.000550684104
  error estimate for blocks of size 2^( 4) =       0.000569537415
  error estimate for blocks of size 2^( 5) =       0.000581533486
  error estimate for blocks of size 2^( 6) =       0.000587945903
  error estimate for blocks of size 2^( 7) =       0.000589088387

      target function =      -0.709175228761
              le_mean =     -22.424556416279
             les_mean =     503.357724573495
             stat err =       0.000582026298
             autocorr =       1.363213113380
   target nu stat err =       0.000582026298
   target dn stat err =       0.004156387945
      target stat err =       0.003060155960
              std dev =       0.704978265705
             le_variance =       0.496994355116

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497032387010
                                         uncertainty =       0.004329058674

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498494912
  error estimate for blocks of size 2^( 2) =       0.000525399647
  error estimate for blocks of size 2^( 3) =       0.000550684104
  error estimate for blocks of size 2^( 4) =       0.000569537415
  error estimate for blocks of size 2^( 5) =       0.000581533486
  error estimate for blocks of size 2^( 6) =       0.000587945903
  error estimate for blocks of size 2^( 7) =       0.000589088387

      target function =      -0.709175228761
              le_mean =     -22.424556416279
             les_mean =     503.357724573495
             stat err =       0.000582026298
             autocorr =       1.363213113380
   target nu stat err =       0.000582026298
   target dn stat err =       0.004156387945
      target stat err =       0.003060155960
              std dev =       0.704978265705
             le_variance =       0.496994355116


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709175228761        initial  <--
     6.2500e+29     6.2500e+30             0.0000e+00        -0.709175228761
     2.5000e+30     2.5000e+31             0.0000e+00        -0.709175228761
     1.0000e+31     1.0000e+32             0.0000e+00        -0.709175228761

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.9723
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2413e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s035 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s035 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=35  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2421e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.3373
    reference variance = 0.634019
====================================================
  Execution time = 4.5555e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s035
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9355e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5252e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493652146751
                                         uncertainty =       0.003024689862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493652146751
                                         uncertainty =       0.003024689862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496765837
  error estimate for blocks of size 2^( 2) =       0.000524053265
  error estimate for blocks of size 2^( 3) =       0.000549380712
  error estimate for blocks of size 2^( 4) =       0.000569515681
  error estimate for blocks of size 2^( 5) =       0.000581977524
  error estimate for blocks of size 2^( 6) =       0.000588396287
  error estimate for blocks of size 2^( 7) =       0.000593420179

      target function =      -0.711672505046
              le_mean =     -22.424920582860
             les_mean =     503.370615494740
             stat err =       0.000583327418
             autocorr =       1.378863693588
   target nu stat err =       0.000583327418
   target dn stat err =       0.003054216719
      target stat err =       0.002301444341
              std dev =       0.702532984230
             le_variance =       0.493552593931


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242492058286e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+30, overlap shift 6.2500e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711678796705       residual = 2.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711678796705       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711678796705       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+30 is 1.436347e-35

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+31, overlap shift 2.5000e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711678796705       residual = 2.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711678796705       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711678796705       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+31 is 3.590868e-36

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+32, overlap shift 1.0000e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711678796705       residual = 2.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711678796705       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711678796705       residual = 7.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+32 is 8.977169e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.614907 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0814e+01
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.2424
    reference variance = 1.15883
====================================================
  Execution time = 4.4896e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s035
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.0193e-01
  Total weights = 2.0000e+06
  Execution time = 3.7772e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500962724
  error estimate for blocks of size 2^( 2) =       0.000527335746
  error estimate for blocks of size 2^( 3) =       0.000552828636
  error estimate for blocks of size 2^( 4) =       0.000571743136
  error estimate for blocks of size 2^( 5) =       0.000583581999
  error estimate for blocks of size 2^( 6) =       0.000588644154
  error estimate for blocks of size 2^( 7) =       0.000590332652

      target function =      -0.705637073893
              le_mean =     -22.424235952442
             les_mean =     503.348285102162
             stat err =       0.000583575485
             autocorr =       1.357010648651
   target nu stat err =       0.000583575485
   target dn stat err =       0.003894819170
      target stat err =       0.002846036275
              std dev =       0.708468278999
             le_variance =       0.501927302348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500962724
  error estimate for blocks of size 2^( 2) =       0.000527335746
  error estimate for blocks of size 2^( 3) =       0.000552828636
  error estimate for blocks of size 2^( 4) =       0.000571743136
  error estimate for blocks of size 2^( 5) =       0.000583581999
  error estimate for blocks of size 2^( 6) =       0.000588644154
  error estimate for blocks of size 2^( 7) =       0.000590332652

      target function =      -0.705637073893
              le_mean =     -22.424235952442
             les_mean =     503.348285102162
             stat err =       0.000583575485
             autocorr =       1.357010648651
   target nu stat err =       0.000583575485
   target dn stat err =       0.003894819170
      target stat err =       0.002846036275
              std dev =       0.708468278999
             le_variance =       0.501927302348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500962724
  error estimate for blocks of size 2^( 2) =       0.000527335746
  error estimate for blocks of size 2^( 3) =       0.000552828636
  error estimate for blocks of size 2^( 4) =       0.000571743136
  error estimate for blocks of size 2^( 5) =       0.000583581999
  error estimate for blocks of size 2^( 6) =       0.000588644154
  error estimate for blocks of size 2^( 7) =       0.000590332652

      target function =      -0.705637073893
              le_mean =     -22.424235952442
             les_mean =     503.348285102162
             stat err =       0.000583575485
             autocorr =       1.357010648651
   target nu stat err =       0.000583575485
   target dn stat err =       0.003894819170
      target stat err =       0.002846036275
              std dev =       0.708468278999
             le_variance =       0.501927302348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501861172161
                                         uncertainty =       0.003759418902

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500962724
  error estimate for blocks of size 2^( 2) =       0.000527335746
  error estimate for blocks of size 2^( 3) =       0.000552828636
  error estimate for blocks of size 2^( 4) =       0.000571743136
  error estimate for blocks of size 2^( 5) =       0.000583581999
  error estimate for blocks of size 2^( 6) =       0.000588644154
  error estimate for blocks of size 2^( 7) =       0.000590332652

      target function =      -0.705637073893
              le_mean =     -22.424235952442
             les_mean =     503.348285102162
             stat err =       0.000583575485
             autocorr =       1.357010648651
   target nu stat err =       0.000583575485
   target dn stat err =       0.003894819170
      target stat err =       0.002846036275
              std dev =       0.708468278999
             le_variance =       0.501927302348


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705637073893        initial  <--
     6.2500e+30     6.2500e+31             1.4363e-35        -0.705637073893
     2.5000e+31     2.5000e+32             3.5909e-36        -0.705637073893
     1.0000e+32     1.0000e+33             8.9772e-37        -0.705637073893

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.8163
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2464e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s036 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s036 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=36  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2417e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.3968
    reference variance = 0.464696
====================================================
  Execution time = 4.6767e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s036
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0103e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5361e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500957254623
                                         uncertainty =       0.003730578734

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500957254623
                                         uncertainty =       0.003730578734

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500513100
  error estimate for blocks of size 2^( 2) =       0.000527093165
  error estimate for blocks of size 2^( 3) =       0.000553043043
  error estimate for blocks of size 2^( 4) =       0.000572110480
  error estimate for blocks of size 2^( 5) =       0.000583908438
  error estimate for blocks of size 2^( 6) =       0.000589766644
  error estimate for blocks of size 2^( 7) =       0.000594390244

      target function =      -0.706264219680
              le_mean =     -22.425273204323
             les_mean =     503.393904763829
             stat err =       0.000585043951
             autocorr =       1.366300068590
   target nu stat err =       0.000585043951
   target dn stat err =       0.003802302366
      target stat err =       0.002790687188
              std dev =       0.707832413641
             le_variance =       0.501026725801


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242527320432e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+31, overlap shift 6.2500e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+32, overlap shift 2.5000e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+33, overlap shift 1.0000e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706274340991       residual = 2.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.616001 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.2135e+01
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.4706
    reference variance = 0.525076
====================================================
  Execution time = 4.4572e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s036
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0704e-01
  Total weights = 2.0000e+06
  Execution time = 3.7847e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503508636
  error estimate for blocks of size 2^( 2) =       0.000530100907
  error estimate for blocks of size 2^( 3) =       0.000555347894
  error estimate for blocks of size 2^( 4) =       0.000574632957
  error estimate for blocks of size 2^( 5) =       0.000586937357
  error estimate for blocks of size 2^( 6) =       0.000593770251
  error estimate for blocks of size 2^( 7) =       0.000597943904

      target function =      -0.701955370329
              le_mean =     -22.425935527016
             les_mean =     503.429625901126
             stat err =       0.000588321117
             autocorr =       1.365258934724
   target nu stat err =       0.000588321117
   target dn stat err =       0.004736007287
      target stat err =       0.003410401320
              std dev =       0.712068741602
             le_variance =       0.507041892766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503508636
  error estimate for blocks of size 2^( 2) =       0.000530100907
  error estimate for blocks of size 2^( 3) =       0.000555347894
  error estimate for blocks of size 2^( 4) =       0.000574632957
  error estimate for blocks of size 2^( 5) =       0.000586937357
  error estimate for blocks of size 2^( 6) =       0.000593770251
  error estimate for blocks of size 2^( 7) =       0.000597943904

      target function =      -0.701955370329
              le_mean =     -22.425935527016
             les_mean =     503.429625901126
             stat err =       0.000588321117
             autocorr =       1.365258934724
   target nu stat err =       0.000588321117
   target dn stat err =       0.004736007287
      target stat err =       0.003410401320
              std dev =       0.712068741602
             le_variance =       0.507041892766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503508636
  error estimate for blocks of size 2^( 2) =       0.000530100907
  error estimate for blocks of size 2^( 3) =       0.000555347894
  error estimate for blocks of size 2^( 4) =       0.000574632957
  error estimate for blocks of size 2^( 5) =       0.000586937357
  error estimate for blocks of size 2^( 6) =       0.000593770251
  error estimate for blocks of size 2^( 7) =       0.000597943904

      target function =      -0.701955370329
              le_mean =     -22.425935527016
             les_mean =     503.429625901126
             stat err =       0.000588321117
             autocorr =       1.365258934724
   target nu stat err =       0.000588321117
   target dn stat err =       0.004736007287
      target stat err =       0.003410401320
              std dev =       0.712068741602
             le_variance =       0.507041892766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507043107992
                                         uncertainty =       0.004796609108

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503508636
  error estimate for blocks of size 2^( 2) =       0.000530100907
  error estimate for blocks of size 2^( 3) =       0.000555347894
  error estimate for blocks of size 2^( 4) =       0.000574632957
  error estimate for blocks of size 2^( 5) =       0.000586937357
  error estimate for blocks of size 2^( 6) =       0.000593770251
  error estimate for blocks of size 2^( 7) =       0.000597943904

      target function =      -0.701955370329
              le_mean =     -22.425935527016
             les_mean =     503.429625901126
             stat err =       0.000588321117
             autocorr =       1.365258934724
   target nu stat err =       0.000588321117
   target dn stat err =       0.004736007287
      target stat err =       0.003410401320
              std dev =       0.712068741602
             le_variance =       0.507041892766


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.701955370329        initial  <--
     6.2500e+31     6.2500e+32             0.0000e+00        -0.701955370329
     2.5000e+32     2.5000e+33             0.0000e+00        -0.701955370329
     1.0000e+33     1.0000e+34             0.0000e+00        -0.701955370329

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4954
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2564e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s037 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s037 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=37  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2418e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.3151
    reference variance = 0.442318
====================================================
  Execution time = 4.4690e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s037
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9262e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5157e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492546785113
                                         uncertainty =       0.002699224171

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492546785113
                                         uncertainty =       0.002699224171

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496298711
  error estimate for blocks of size 2^( 2) =       0.000523179720
  error estimate for blocks of size 2^( 3) =       0.000549014481
  error estimate for blocks of size 2^( 4) =       0.000568807706
  error estimate for blocks of size 2^( 5) =       0.000581770020
  error estimate for blocks of size 2^( 6) =       0.000587900103
  error estimate for blocks of size 2^( 7) =       0.000590749848

      target function =      -0.712335813823
              le_mean =     -22.426261837856
             les_mean =     503.429844595237
             stat err =       0.000582306919
             autocorr =       1.376631195089
   target nu stat err =       0.000582306919
   target dn stat err =       0.002904042401
      target stat err =       0.002203976143
              std dev =       0.701872368348
             le_variance =       0.492624821450


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242626183786e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+32, overlap shift 6.2500e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+33, overlap shift 2.5000e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+34, overlap shift 1.0000e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712341645790       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.617085 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9854e+01
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.3881
    reference variance = 0.23817
====================================================
  Execution time = 4.4854e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s037
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9847e-01
  Total weights = 2.0000e+06
  Execution time = 3.7779e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499237028
  error estimate for blocks of size 2^( 2) =       0.000526179852
  error estimate for blocks of size 2^( 3) =       0.000551760867
  error estimate for blocks of size 2^( 4) =       0.000571402869
  error estimate for blocks of size 2^( 5) =       0.000583483046
  error estimate for blocks of size 2^( 6) =       0.000591121148
  error estimate for blocks of size 2^( 7) =       0.000592162148

      target function =      -0.708068404679
              le_mean =     -22.426743422355
             les_mean =     503.457295502997
             stat err =       0.000584542303
             autocorr =       1.370939577711
   target nu stat err =       0.000584542303
   target dn stat err =       0.004771840021
      target stat err =       0.003498033186
              std dev =       0.706027775736
             le_variance =       0.498475220111

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499237028
  error estimate for blocks of size 2^( 2) =       0.000526179852
  error estimate for blocks of size 2^( 3) =       0.000551760867
  error estimate for blocks of size 2^( 4) =       0.000571402869
  error estimate for blocks of size 2^( 5) =       0.000583483046
  error estimate for blocks of size 2^( 6) =       0.000591121148
  error estimate for blocks of size 2^( 7) =       0.000592162148

      target function =      -0.708068404679
              le_mean =     -22.426743422355
             les_mean =     503.457295502997
             stat err =       0.000584542303
             autocorr =       1.370939577712
   target nu stat err =       0.000584542303
   target dn stat err =       0.004771840021
      target stat err =       0.003498033186
              std dev =       0.706027775736
             le_variance =       0.498475220111

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499237028
  error estimate for blocks of size 2^( 2) =       0.000526179852
  error estimate for blocks of size 2^( 3) =       0.000551760867
  error estimate for blocks of size 2^( 4) =       0.000571402869
  error estimate for blocks of size 2^( 5) =       0.000583483046
  error estimate for blocks of size 2^( 6) =       0.000591121148
  error estimate for blocks of size 2^( 7) =       0.000592162148

      target function =      -0.708068404679
              le_mean =     -22.426743422355
             les_mean =     503.457295502997
             stat err =       0.000584542303
             autocorr =       1.370939577712
   target nu stat err =       0.000584542303
   target dn stat err =       0.004771840021
      target stat err =       0.003498033186
              std dev =       0.706027775736
             le_variance =       0.498475220111

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498431168053
                                         uncertainty =       0.004838675886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499237028
  error estimate for blocks of size 2^( 2) =       0.000526179852
  error estimate for blocks of size 2^( 3) =       0.000551760867
  error estimate for blocks of size 2^( 4) =       0.000571402869
  error estimate for blocks of size 2^( 5) =       0.000583483046
  error estimate for blocks of size 2^( 6) =       0.000591121148
  error estimate for blocks of size 2^( 7) =       0.000592162148

      target function =      -0.708068404679
              le_mean =     -22.426743422355
             les_mean =     503.457295502997
             stat err =       0.000584542303
             autocorr =       1.370939577712
   target nu stat err =       0.000584542303
   target dn stat err =       0.004771840021
      target stat err =       0.003498033186
              std dev =       0.706027775736
             le_variance =       0.498475220111


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708068404679        initial  <--
     6.2500e+32     6.2500e+33             0.0000e+00        -0.708068404679
     2.5000e+33     2.5000e+34             0.0000e+00        -0.708068404679
     1.0000e+34     1.0000e+35             0.0000e+00        -0.708068404679

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7562
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2362e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s038 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s038 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=38  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.4444
    reference variance = 0.428943
====================================================
  Execution time = 4.4551e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s038
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1817e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5169e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.518224246305
                                         uncertainty =       0.022599627203

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.518224246305
                                         uncertainty =       0.022599627203

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509003677
  error estimate for blocks of size 2^( 2) =       0.000535169596
  error estimate for blocks of size 2^( 3) =       0.000560161721
  error estimate for blocks of size 2^( 4) =       0.000578838632
  error estimate for blocks of size 2^( 5) =       0.000591227112
  error estimate for blocks of size 2^( 6) =       0.000598805468
  error estimate for blocks of size 2^( 7) =       0.000601261245

      target function =      -0.693821290759
              le_mean =     -22.425794008100
             les_mean =     503.434406120379
             stat err =       0.000592533114
             autocorr =       1.355137656934
   target nu stat err =       0.000592533114
   target dn stat err =       0.022649373091
      target stat err =       0.015705795383
              std dev =       0.719839902854
             le_variance =       0.518169485741


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242579400810e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+33, overlap shift 6.2500e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+34, overlap shift 2.5000e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+35, overlap shift 1.0000e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.694172961510       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.618182 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9726e+01
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.3254
    reference variance = 0.441886
====================================================
  Execution time = 4.5802e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s038
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0684e-01
  Total weights = 2.0000e+06
  Execution time = 3.7653e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503408602
  error estimate for blocks of size 2^( 2) =       0.000529865931
  error estimate for blocks of size 2^( 3) =       0.000555557903
  error estimate for blocks of size 2^( 4) =       0.000574424288
  error estimate for blocks of size 2^( 5) =       0.000586342313
  error estimate for blocks of size 2^( 6) =       0.000595656851
  error estimate for blocks of size 2^( 7) =       0.000599518039

      target function =      -0.702075215427
              le_mean =     -22.425676657496
             les_mean =     503.417813734167
             stat err =       0.000588985373
             autocorr =       1.368887490126
   target nu stat err =       0.000588985373
   target dn stat err =       0.007980147119
      target stat err =       0.005689827962
              std dev =       0.711927272287
             le_variance =       0.506840441026

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503408602
  error estimate for blocks of size 2^( 2) =       0.000529865931
  error estimate for blocks of size 2^( 3) =       0.000555557903
  error estimate for blocks of size 2^( 4) =       0.000574424288
  error estimate for blocks of size 2^( 5) =       0.000586342313
  error estimate for blocks of size 2^( 6) =       0.000595656851
  error estimate for blocks of size 2^( 7) =       0.000599518039

      target function =      -0.702075215427
              le_mean =     -22.425676657496
             les_mean =     503.417813734167
             stat err =       0.000588985373
             autocorr =       1.368887490126
   target nu stat err =       0.000588985373
   target dn stat err =       0.007980147119
      target stat err =       0.005689827962
              std dev =       0.711927272287
             le_variance =       0.506840441026

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503408602
  error estimate for blocks of size 2^( 2) =       0.000529865931
  error estimate for blocks of size 2^( 3) =       0.000555557903
  error estimate for blocks of size 2^( 4) =       0.000574424288
  error estimate for blocks of size 2^( 5) =       0.000586342313
  error estimate for blocks of size 2^( 6) =       0.000595656851
  error estimate for blocks of size 2^( 7) =       0.000599518039

      target function =      -0.702075215427
              le_mean =     -22.425676657496
             les_mean =     503.417813734167
             stat err =       0.000588985373
             autocorr =       1.368887490126
   target nu stat err =       0.000588985373
   target dn stat err =       0.007980147119
      target stat err =       0.005689827962
              std dev =       0.711927272287
             le_variance =       0.506840441026

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506831297149
                                         uncertainty =       0.008197766172

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503408602
  error estimate for blocks of size 2^( 2) =       0.000529865931
  error estimate for blocks of size 2^( 3) =       0.000555557903
  error estimate for blocks of size 2^( 4) =       0.000574424288
  error estimate for blocks of size 2^( 5) =       0.000586342313
  error estimate for blocks of size 2^( 6) =       0.000595656851
  error estimate for blocks of size 2^( 7) =       0.000599518039

      target function =      -0.702075215427
              le_mean =     -22.425676657496
             les_mean =     503.417813734167
             stat err =       0.000588985373
             autocorr =       1.368887490126
   target nu stat err =       0.000588985373
   target dn stat err =       0.007980147119
      target stat err =       0.005689827962
              std dev =       0.711927272287
             le_variance =       0.506840441026


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702075215427        initial  <--
     6.2500e+33     6.2500e+34             0.0000e+00        -0.702075215427
     2.5000e+34     2.5000e+35             0.0000e+00        -0.702075215427
     1.0000e+35     1.0000e+36             0.0000e+00        -0.702075215427

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.6948
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2443e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s039 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s039 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=39  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.3476
    reference variance = 0.32101
====================================================
  Execution time = 4.5404e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s039
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2424e+01
  VMC Evar = 5.0089e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5054e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500899627205
                                         uncertainty =       0.004107986030

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500899627205
                                         uncertainty =       0.004107986030

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500446613
  error estimate for blocks of size 2^( 2) =       0.000527399428
  error estimate for blocks of size 2^( 3) =       0.000553580729
  error estimate for blocks of size 2^( 4) =       0.000572911995
  error estimate for blocks of size 2^( 5) =       0.000585570375
  error estimate for blocks of size 2^( 6) =       0.000593830736
  error estimate for blocks of size 2^( 7) =       0.000598920956

      target function =      -0.706378317493
              le_mean =     -22.424067861959
             les_mean =     503.339712852537
             stat err =       0.000587808515
             autocorr =       1.379609694982
   target nu stat err =       0.000587808515
   target dn stat err =       0.004075162174
      target stat err =       0.002978518179
              std dev =       0.707738387562
             le_variance =       0.500893625229


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242406786196e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+34, overlap shift 6.2500e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+35, overlap shift 2.5000e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+36, overlap shift 1.0000e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706389942772       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+36 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.619253 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0464e+01
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.4302
    reference variance = 0.467155
====================================================
  Execution time = 4.4661e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s039
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9165e-01
  Total weights = 2.0000e+06
  Execution time = 3.7864e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495808629
  error estimate for blocks of size 2^( 2) =       0.000523358233
  error estimate for blocks of size 2^( 3) =       0.000549528460
  error estimate for blocks of size 2^( 4) =       0.000569583842
  error estimate for blocks of size 2^( 5) =       0.000582404747
  error estimate for blocks of size 2^( 6) =       0.000590311621
  error estimate for blocks of size 2^( 7) =       0.000594105329

      target function =      -0.713051557856
              le_mean =     -22.425929301816
             les_mean =     503.413957198365
             stat err =       0.000584101385
             autocorr =       1.387868467860
   target nu stat err =       0.000584101385
   target dn stat err =       0.002549535504
      target stat err =       0.001959311333
              std dev =       0.701179288170
             le_variance =       0.491652394158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495808629
  error estimate for blocks of size 2^( 2) =       0.000523358233
  error estimate for blocks of size 2^( 3) =       0.000549528460
  error estimate for blocks of size 2^( 4) =       0.000569583842
  error estimate for blocks of size 2^( 5) =       0.000582404747
  error estimate for blocks of size 2^( 6) =       0.000590311621
  error estimate for blocks of size 2^( 7) =       0.000594105329

      target function =      -0.713051557856
              le_mean =     -22.425929301816
             les_mean =     503.413957198365
             stat err =       0.000584101385
             autocorr =       1.387868467860
   target nu stat err =       0.000584101385
   target dn stat err =       0.002549535504
      target stat err =       0.001959311333
              std dev =       0.701179288170
             le_variance =       0.491652394158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495808629
  error estimate for blocks of size 2^( 2) =       0.000523358233
  error estimate for blocks of size 2^( 3) =       0.000549528460
  error estimate for blocks of size 2^( 4) =       0.000569583842
  error estimate for blocks of size 2^( 5) =       0.000582404747
  error estimate for blocks of size 2^( 6) =       0.000590311621
  error estimate for blocks of size 2^( 7) =       0.000594105329

      target function =      -0.713051557856
              le_mean =     -22.425929301816
             les_mean =     503.413957198365
             stat err =       0.000584101385
             autocorr =       1.387868467860
   target nu stat err =       0.000584101385
   target dn stat err =       0.002549535504
      target stat err =       0.001959311333
              std dev =       0.701179288170
             le_variance =       0.491652394158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491629485101
                                         uncertainty =       0.002442173516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495808629
  error estimate for blocks of size 2^( 2) =       0.000523358233
  error estimate for blocks of size 2^( 3) =       0.000549528460
  error estimate for blocks of size 2^( 4) =       0.000569583842
  error estimate for blocks of size 2^( 5) =       0.000582404747
  error estimate for blocks of size 2^( 6) =       0.000590311621
  error estimate for blocks of size 2^( 7) =       0.000594105329

      target function =      -0.713051557856
              le_mean =     -22.425929301816
             les_mean =     503.413957198365
             stat err =       0.000584101385
             autocorr =       1.387868467860
   target nu stat err =       0.000584101385
   target dn stat err =       0.002549535504
      target stat err =       0.001959311333
              std dev =       0.701179288170
             le_variance =       0.491652394158


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.713051557856        initial  <--
     6.2500e+34     6.2500e+35             0.0000e+00        -0.713051557856
     2.5000e+35     2.5000e+36             0.0000e+00        -0.713051557856
     1.0000e+36     1.0000e+37             0.0000e+00        -0.713051557856

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.6015
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2407e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s040 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s040 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=40  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2414e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.4375
    reference variance = 0.469744
====================================================
  Execution time = 4.5443e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s040
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9767e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4891e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497478665126
                                         uncertainty =       0.003926162965

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497478665126
                                         uncertainty =       0.003926162965

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498835658
  error estimate for blocks of size 2^( 2) =       0.000525541674
  error estimate for blocks of size 2^( 3) =       0.000551486940
  error estimate for blocks of size 2^( 4) =       0.000571252398
  error estimate for blocks of size 2^( 5) =       0.000583109086
  error estimate for blocks of size 2^( 6) =       0.000590834040
  error estimate for blocks of size 2^( 7) =       0.000598005047

      target function =      -0.708678172244
              le_mean =     -22.425171544709
             les_mean =     503.385992588046
             stat err =       0.000585800143
             autocorr =       1.379062552501
   target nu stat err =       0.000585800143
   target dn stat err =       0.003831094438
      target stat err =       0.002829431511
              std dev =       0.705460152857
             le_variance =       0.497674027269


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242517154471e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+35, overlap shift 6.2500e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708688348652       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708688348652       residual = 1.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708688735962       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+35 is 8.994559e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+36, overlap shift 2.5000e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708688348652       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708688348652       residual = 1.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708686828613       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+36 is 2.248640e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+37, overlap shift 1.0000e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708688348652       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708688348652       residual = 1.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708686828613       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+37 is 5.621600e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.620604 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0341e+01
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.4194
    reference variance = 0.331845
====================================================
  Execution time = 4.4275e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s040
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0068e-01
  Total weights = 2.0000e+06
  Execution time = 3.7558e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500340234
  error estimate for blocks of size 2^( 2) =       0.000527169658
  error estimate for blocks of size 2^( 3) =       0.000552754314
  error estimate for blocks of size 2^( 4) =       0.000572126199
  error estimate for blocks of size 2^( 5) =       0.000584631522
  error estimate for blocks of size 2^( 6) =       0.000590749113
  error estimate for blocks of size 2^( 7) =       0.000596361604

      target function =      -0.706507820541
              le_mean =     -22.424555549127
             les_mean =     503.361372025076
             stat err =       0.000585967110
             autocorr =       1.371562569759
   target nu stat err =       0.000585967110
   target dn stat err =       0.006092034766
      target stat err =       0.004407654636
              std dev =       0.707587944731
             le_variance =       0.500680699529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500340234
  error estimate for blocks of size 2^( 2) =       0.000527169658
  error estimate for blocks of size 2^( 3) =       0.000552754314
  error estimate for blocks of size 2^( 4) =       0.000572126199
  error estimate for blocks of size 2^( 5) =       0.000584631522
  error estimate for blocks of size 2^( 6) =       0.000590749113
  error estimate for blocks of size 2^( 7) =       0.000596361604

      target function =      -0.706507820541
              le_mean =     -22.424555549127
             les_mean =     503.361372025076
             stat err =       0.000585967110
             autocorr =       1.371562569759
   target nu stat err =       0.000585967110
   target dn stat err =       0.006092034766
      target stat err =       0.004407654636
              std dev =       0.707587944731
             le_variance =       0.500680699529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500340234
  error estimate for blocks of size 2^( 2) =       0.000527169658
  error estimate for blocks of size 2^( 3) =       0.000552754314
  error estimate for blocks of size 2^( 4) =       0.000572126199
  error estimate for blocks of size 2^( 5) =       0.000584631522
  error estimate for blocks of size 2^( 6) =       0.000590749113
  error estimate for blocks of size 2^( 7) =       0.000596361604

      target function =      -0.706507820541
              le_mean =     -22.424555549127
             les_mean =     503.361372025076
             stat err =       0.000585967110
             autocorr =       1.371562569759
   target nu stat err =       0.000585967110
   target dn stat err =       0.006092034766
      target stat err =       0.004407654636
              std dev =       0.707587944731
             le_variance =       0.500680699529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500594781300
                                         uncertainty =       0.005926331485

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500340234
  error estimate for blocks of size 2^( 2) =       0.000527169658
  error estimate for blocks of size 2^( 3) =       0.000552754314
  error estimate for blocks of size 2^( 4) =       0.000572126199
  error estimate for blocks of size 2^( 5) =       0.000584631522
  error estimate for blocks of size 2^( 6) =       0.000590749113
  error estimate for blocks of size 2^( 7) =       0.000596361604

      target function =      -0.706507820541
              le_mean =     -22.424555549127
             les_mean =     503.361372025076
             stat err =       0.000585967110
             autocorr =       1.371562569759
   target nu stat err =       0.000585967110
   target dn stat err =       0.006092034766
      target stat err =       0.004407654636
              std dev =       0.707587944731
             le_variance =       0.500680699529


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706507820541        initial  <--
     6.2500e+35     6.2500e+36             8.9946e-41        -0.706507820541
     2.5000e+36     2.5000e+37             2.2486e-41        -0.706507820541
     1.0000e+37     1.0000e+38             5.6216e-42        -0.706507820541

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 66.8356
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2718e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s041 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s041 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=41  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.4643
    reference variance = 0.665868
====================================================
  Execution time = 4.4755e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s041
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0531e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5027e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505281747025
                                         uncertainty =       0.005341560767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505281747025
                                         uncertainty =       0.005341560767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502648709
  error estimate for blocks of size 2^( 2) =       0.000529602016
  error estimate for blocks of size 2^( 3) =       0.000555690150
  error estimate for blocks of size 2^( 4) =       0.000575329301
  error estimate for blocks of size 2^( 5) =       0.000588069545
  error estimate for blocks of size 2^( 6) =       0.000593666593
  error estimate for blocks of size 2^( 7) =       0.000595674028

      target function =      -0.703198520757
              le_mean =     -22.425292098484
             les_mean =     503.399036898285
             stat err =       0.000588184867
             autocorr =       1.369299817794
   target nu stat err =       0.000588184867
   target dn stat err =       0.004815271956
      target stat err =       0.003474627846
              std dev =       0.710852620892
             le_variance =       0.505311448629


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242529209848e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+36, overlap shift 6.2500e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+36 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+37, overlap shift 2.5000e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+38, overlap shift 1.0000e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703214506775       residual = 4.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.621683 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9788e+01
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.4359
    reference variance = 0.455979
====================================================
  Execution time = 4.4430e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s041
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.2168e-01
  Total weights = 2.0000e+06
  Execution time = 3.7911e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000510724955
  error estimate for blocks of size 2^( 2) =       0.000537232972
  error estimate for blocks of size 2^( 3) =       0.000563040722
  error estimate for blocks of size 2^( 4) =       0.000582896858
  error estimate for blocks of size 2^( 5) =       0.000594008853
  error estimate for blocks of size 2^( 6) =       0.000600674862
  error estimate for blocks of size 2^( 7) =       0.000605484359

      target function =      -0.691570315191
              le_mean =     -22.425669982279
             les_mean =     503.432353853523
             stat err =       0.000595766233
             autocorr =       1.360747705928
   target nu stat err =       0.000595766233
   target dn stat err =       0.016401456381
      target stat err =       0.011302385306
              std dev =       0.722274158665
             le_variance =       0.521679960275

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000510724955
  error estimate for blocks of size 2^( 2) =       0.000537232972
  error estimate for blocks of size 2^( 3) =       0.000563040722
  error estimate for blocks of size 2^( 4) =       0.000582896858
  error estimate for blocks of size 2^( 5) =       0.000594008853
  error estimate for blocks of size 2^( 6) =       0.000600674862
  error estimate for blocks of size 2^( 7) =       0.000605484359

      target function =      -0.691570315191
              le_mean =     -22.425669982279
             les_mean =     503.432353853523
             stat err =       0.000595766233
             autocorr =       1.360747705928
   target nu stat err =       0.000595766233
   target dn stat err =       0.016401456381
      target stat err =       0.011302385306
              std dev =       0.722274158665
             le_variance =       0.521679960275

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000510724955
  error estimate for blocks of size 2^( 2) =       0.000537232972
  error estimate for blocks of size 2^( 3) =       0.000563040722
  error estimate for blocks of size 2^( 4) =       0.000582896858
  error estimate for blocks of size 2^( 5) =       0.000594008853
  error estimate for blocks of size 2^( 6) =       0.000600674862
  error estimate for blocks of size 2^( 7) =       0.000605484359

      target function =      -0.691570315191
              le_mean =     -22.425669982279
             les_mean =     503.432353853523
             stat err =       0.000595766233
             autocorr =       1.360747705928
   target nu stat err =       0.000595766233
   target dn stat err =       0.016401456381
      target stat err =       0.011302385306
              std dev =       0.722274158665
             le_variance =       0.521679960275

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.521691759809
                                         uncertainty =       0.016155170596

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000510724955
  error estimate for blocks of size 2^( 2) =       0.000537232972
  error estimate for blocks of size 2^( 3) =       0.000563040722
  error estimate for blocks of size 2^( 4) =       0.000582896858
  error estimate for blocks of size 2^( 5) =       0.000594008853
  error estimate for blocks of size 2^( 6) =       0.000600674862
  error estimate for blocks of size 2^( 7) =       0.000605484359

      target function =      -0.691570315191
              le_mean =     -22.425669982279
             les_mean =     503.432353853523
             stat err =       0.000595766233
             autocorr =       1.360747705928
   target nu stat err =       0.000595766233
   target dn stat err =       0.016401456381
      target stat err =       0.011302385306
              std dev =       0.722274158665
             le_variance =       0.521679960275


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.691570315191        initial  <--
     6.2500e+36     6.2500e+37             0.0000e+00        -0.691570315191
     2.5000e+37     2.5000e+38             0.0000e+00        -0.691570315191
     1.0000e+38     1.0000e+39             0.0000e+00        -0.691570315191

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3758
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2317e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s042 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s042 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=42  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.4389
    reference variance = 0.657612
====================================================
  Execution time = 4.4834e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s042
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.6657e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5180e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.566358661940
                                         uncertainty =       0.066163204501

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.566358661940
                                         uncertainty =       0.066163204501

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000532247645
  error estimate for blocks of size 2^( 2) =       0.000557243411
  error estimate for blocks of size 2^( 3) =       0.000581155368
  error estimate for blocks of size 2^( 4) =       0.000600251193
  error estimate for blocks of size 2^( 5) =       0.000611620021
  error estimate for blocks of size 2^( 6) =       0.000618371077
  error estimate for blocks of size 2^( 7) =       0.000621709420

      target function =      -0.659512217562
              le_mean =     -22.425613103466
             les_mean =     503.474697894349
             stat err =       0.000612987928
             autocorr =       1.326405597267
   target nu stat err =       0.000612987928
   target dn stat err =       0.066877745019
      target stat err =       0.042013232229
              std dev =       0.752711838158
             le_variance =       0.566575111302


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242561310347e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+37, overlap shift 6.2500e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+37 is 0.000000e+00

solving harmonic davidson linear method for identity shift 2.5000e+38, overlap shift 2.5000e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+38 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.0000e+39, overlap shift 1.0000e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.662175042113       residual = 9.93e-02           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+39 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.622722 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0022e+01
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.437
    reference variance = 0.474105
====================================================
  Execution time = 4.4752e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s042
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9536e-01
  Total weights = 2.0000e+06
  Execution time = 3.7821e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497672995
  error estimate for blocks of size 2^( 2) =       0.000524205933
  error estimate for blocks of size 2^( 3) =       0.000549514329
  error estimate for blocks of size 2^( 4) =       0.000568925361
  error estimate for blocks of size 2^( 5) =       0.000581878877
  error estimate for blocks of size 2^( 6) =       0.000591155574
  error estimate for blocks of size 2^( 7) =       0.000591809747

      target function =      -0.710353130688
              le_mean =     -22.425691487242
             les_mean =     503.406995253475
             stat err =       0.000583442390
             autocorr =       1.374383105057
   target nu stat err =       0.000583442390
   target dn stat err =       0.002871318723
      target stat err =       0.002167843132
              std dev =       0.703815899368
             le_variance =       0.495356820203

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497672995
  error estimate for blocks of size 2^( 2) =       0.000524205933
  error estimate for blocks of size 2^( 3) =       0.000549514329
  error estimate for blocks of size 2^( 4) =       0.000568925361
  error estimate for blocks of size 2^( 5) =       0.000581878877
  error estimate for blocks of size 2^( 6) =       0.000591155574
  error estimate for blocks of size 2^( 7) =       0.000591809747

      target function =      -0.710353130688
              le_mean =     -22.425691487242
             les_mean =     503.406995253475
             stat err =       0.000583442390
             autocorr =       1.374383105057
   target nu stat err =       0.000583442390
   target dn stat err =       0.002871318723
      target stat err =       0.002167843132
              std dev =       0.703815899368
             le_variance =       0.495356820203

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497672995
  error estimate for blocks of size 2^( 2) =       0.000524205933
  error estimate for blocks of size 2^( 3) =       0.000549514329
  error estimate for blocks of size 2^( 4) =       0.000568925361
  error estimate for blocks of size 2^( 5) =       0.000581878877
  error estimate for blocks of size 2^( 6) =       0.000591155574
  error estimate for blocks of size 2^( 7) =       0.000591809747

      target function =      -0.710353130688
              le_mean =     -22.425691487242
             les_mean =     503.406995253475
             stat err =       0.000583442390
             autocorr =       1.374383105057
   target nu stat err =       0.000583442390
   target dn stat err =       0.002871318723
      target stat err =       0.002167843132
              std dev =       0.703815899368
             le_variance =       0.495356820203

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495408816699
                                         uncertainty =       0.002665427595

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497672995
  error estimate for blocks of size 2^( 2) =       0.000524205933
  error estimate for blocks of size 2^( 3) =       0.000549514329
  error estimate for blocks of size 2^( 4) =       0.000568925361
  error estimate for blocks of size 2^( 5) =       0.000581878877
  error estimate for blocks of size 2^( 6) =       0.000591155574
  error estimate for blocks of size 2^( 7) =       0.000591809747

      target function =      -0.710353130688
              le_mean =     -22.425691487242
             les_mean =     503.406995253475
             stat err =       0.000583442390
             autocorr =       1.374383105057
   target nu stat err =       0.000583442390
   target dn stat err =       0.002871318723
      target stat err =       0.002167843132
              std dev =       0.703815899368
             le_variance =       0.495356820203


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710353130688        initial  <--
     6.2500e+37     6.2500e+38             0.0000e+00        -0.710353130688
     2.5000e+38     2.5000e+39             0.0000e+00        -0.710353130688
     1.0000e+39     1.0000e+40             0.0000e+00        -0.710353130688

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.7302
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2376e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s043 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s043 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=43  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.3305
    reference variance = 0.526947
====================================================
  Execution time = 4.5108e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s043
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0192e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4994e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501955360503
                                         uncertainty =       0.004759242772

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501955360503
                                         uncertainty =       0.004759242772

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500958708
  error estimate for blocks of size 2^( 2) =       0.000527794816
  error estimate for blocks of size 2^( 3) =       0.000553192714
  error estimate for blocks of size 2^( 4) =       0.000572556066
  error estimate for blocks of size 2^( 5) =       0.000584286110
  error estimate for blocks of size 2^( 6) =       0.000591778560
  error estimate for blocks of size 2^( 7) =       0.000592683541

      target function =      -0.705624505963
              le_mean =     -22.424875523130
             les_mean =     503.376961230456
             stat err =       0.000585326069
             autocorr =       1.365186152495
   target nu stat err =       0.000585326069
   target dn stat err =       0.004996535217
      target stat err =       0.003623577550
              std dev =       0.708462598559
             le_variance =       0.501919253557


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242487552313e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+38, overlap shift 6.2500e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+39, overlap shift 2.5000e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+40, overlap shift 1.0000e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705642143777       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.623848 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0109e+01
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.347
    reference variance = 0.429769
====================================================
  Execution time = 4.5004e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s043
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9891e-01
  Total weights = 2.0000e+06
  Execution time = 3.7736e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499452384
  error estimate for blocks of size 2^( 2) =       0.000526562603
  error estimate for blocks of size 2^( 3) =       0.000552194233
  error estimate for blocks of size 2^( 4) =       0.000572558353
  error estimate for blocks of size 2^( 5) =       0.000584550883
  error estimate for blocks of size 2^( 6) =       0.000591886138
  error estimate for blocks of size 2^( 7) =       0.000593326583

      target function =      -0.707769148137
              le_mean =     -22.426383765691
             les_mean =     503.441593923898
             stat err =       0.000585580489
             autocorr =       1.374627461642
   target nu stat err =       0.000585580489
   target dn stat err =       0.004050057107
      target stat err =       0.002981796894
              std dev =       0.706332334882
             le_variance =       0.498905367300

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499452384
  error estimate for blocks of size 2^( 2) =       0.000526562603
  error estimate for blocks of size 2^( 3) =       0.000552194233
  error estimate for blocks of size 2^( 4) =       0.000572558353
  error estimate for blocks of size 2^( 5) =       0.000584550883
  error estimate for blocks of size 2^( 6) =       0.000591886138
  error estimate for blocks of size 2^( 7) =       0.000593326583

      target function =      -0.707769148137
              le_mean =     -22.426383765691
             les_mean =     503.441593923898
             stat err =       0.000585580489
             autocorr =       1.374627461636
   target nu stat err =       0.000585580489
   target dn stat err =       0.004050057107
      target stat err =       0.002981796894
              std dev =       0.706332334882
             le_variance =       0.498905367300

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499452384
  error estimate for blocks of size 2^( 2) =       0.000526562603
  error estimate for blocks of size 2^( 3) =       0.000552194233
  error estimate for blocks of size 2^( 4) =       0.000572558353
  error estimate for blocks of size 2^( 5) =       0.000584550883
  error estimate for blocks of size 2^( 6) =       0.000591886138
  error estimate for blocks of size 2^( 7) =       0.000593326583

      target function =      -0.707769148137
              le_mean =     -22.426383765691
             les_mean =     503.441593923898
             stat err =       0.000585580489
             autocorr =       1.374627461636
   target nu stat err =       0.000585580489
   target dn stat err =       0.004050057107
      target stat err =       0.002981796894
              std dev =       0.706332334882
             le_variance =       0.498905367300

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498980893192
                                         uncertainty =       0.003707468972

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499452384
  error estimate for blocks of size 2^( 2) =       0.000526562603
  error estimate for blocks of size 2^( 3) =       0.000552194233
  error estimate for blocks of size 2^( 4) =       0.000572558353
  error estimate for blocks of size 2^( 5) =       0.000584550883
  error estimate for blocks of size 2^( 6) =       0.000591886138
  error estimate for blocks of size 2^( 7) =       0.000593326583

      target function =      -0.707769148137
              le_mean =     -22.426383765691
             les_mean =     503.441593923898
             stat err =       0.000585580489
             autocorr =       1.374627461636
   target nu stat err =       0.000585580489
   target dn stat err =       0.004050057107
      target stat err =       0.002981796894
              std dev =       0.706332334882
             le_variance =       0.498905367300


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707769148137        initial  <--
     6.2500e+38     6.2500e+39             0.0000e+00        -0.707769148137
     2.5000e+39     2.5000e+40             0.0000e+00        -0.707769148137
     1.0000e+40     1.0000e+41             0.0000e+00        -0.707769148137

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.9099
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2404e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s044 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s044 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=44  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2414e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.3606
    reference variance = 0.410192
====================================================
  Execution time = 4.4939e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s044
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9639e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5360e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496457102631
                                         uncertainty =       0.003765731088

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496457102631
                                         uncertainty =       0.003765731088

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498189995
  error estimate for blocks of size 2^( 2) =       0.000525166802
  error estimate for blocks of size 2^( 3) =       0.000551063218
  error estimate for blocks of size 2^( 4) =       0.000570688407
  error estimate for blocks of size 2^( 5) =       0.000583425939
  error estimate for blocks of size 2^( 6) =       0.000589394118
  error estimate for blocks of size 2^( 7) =       0.000592786915

      target function =      -0.709605673189
              le_mean =     -22.425352353385
             les_mean =     503.392814467895
             stat err =       0.000584073845
             autocorr =       1.374502437186
   target nu stat err =       0.000584073845
   target dn stat err =       0.003963718266
      target stat err =       0.002930996224
              std dev =       0.704547047841
             le_variance =       0.496386542621


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242535235338e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+39, overlap shift 6.2500e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709616697175       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709616697175       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709594726562       residual = 3.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+39 is 9.083568e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+40, overlap shift 2.5000e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709616697175       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709616697175       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709616697175       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709616697175       residual = 3.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+40 is 6.095873e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+41, overlap shift 1.0000e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709616697175       residual = 3.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709616697175       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709472656250       residual = 3.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+41 is 5.677230e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.625277 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0305e+01
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.5023
    reference variance = 0.616812
====================================================
  Execution time = 4.4528e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s044
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9739e-01
  Total weights = 2.0000e+06
  Execution time = 3.7782e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498693416
  error estimate for blocks of size 2^( 2) =       0.000525764135
  error estimate for blocks of size 2^( 3) =       0.000551768240
  error estimate for blocks of size 2^( 4) =       0.000570553635
  error estimate for blocks of size 2^( 5) =       0.000582386200
  error estimate for blocks of size 2^( 6) =       0.000590271137
  error estimate for blocks of size 2^( 7) =       0.000593204245

      target function =      -0.708889957280
              le_mean =     -22.424757012840
             les_mean =     503.367117083398
             stat err =       0.000584103804
             autocorr =       1.371869496591
   target nu stat err =       0.000584103804
   target dn stat err =       0.003570380629
      target stat err =       0.002645317202
              std dev =       0.705258992985
             le_variance =       0.497390247186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498693416
  error estimate for blocks of size 2^( 2) =       0.000525764135
  error estimate for blocks of size 2^( 3) =       0.000551768240
  error estimate for blocks of size 2^( 4) =       0.000570553635
  error estimate for blocks of size 2^( 5) =       0.000582386200
  error estimate for blocks of size 2^( 6) =       0.000590271137
  error estimate for blocks of size 2^( 7) =       0.000593204245

      target function =      -0.708889957280
              le_mean =     -22.424757012840
             les_mean =     503.367117083398
             stat err =       0.000584103804
             autocorr =       1.371869496594
   target nu stat err =       0.000584103804
   target dn stat err =       0.003570380629
      target stat err =       0.002645317202
              std dev =       0.705258992985
             le_variance =       0.497390247186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498693416
  error estimate for blocks of size 2^( 2) =       0.000525764135
  error estimate for blocks of size 2^( 3) =       0.000551768240
  error estimate for blocks of size 2^( 4) =       0.000570553635
  error estimate for blocks of size 2^( 5) =       0.000582386200
  error estimate for blocks of size 2^( 6) =       0.000590271137
  error estimate for blocks of size 2^( 7) =       0.000593204245

      target function =      -0.708889957280
              le_mean =     -22.424757012840
             les_mean =     503.367117083398
             stat err =       0.000584103804
             autocorr =       1.371869496594
   target nu stat err =       0.000584103804
   target dn stat err =       0.003570380629
      target stat err =       0.002645317202
              std dev =       0.705258992985
             le_variance =       0.497390247186

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497301139932
                                         uncertainty =       0.003536204665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498693416
  error estimate for blocks of size 2^( 2) =       0.000525764135
  error estimate for blocks of size 2^( 3) =       0.000551768240
  error estimate for blocks of size 2^( 4) =       0.000570553635
  error estimate for blocks of size 2^( 5) =       0.000582386200
  error estimate for blocks of size 2^( 6) =       0.000590271137
  error estimate for blocks of size 2^( 7) =       0.000593204245

      target function =      -0.708889957280
              le_mean =     -22.424757012840
             les_mean =     503.367117083398
             stat err =       0.000584103804
             autocorr =       1.371869496594
   target nu stat err =       0.000584103804
   target dn stat err =       0.003570380629
      target stat err =       0.002645317202
              std dev =       0.705258992985
             le_variance =       0.497390247186


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708889957280        initial  <--
     6.2500e+39     6.2500e+40             9.0836e-45        -0.708889957280
     2.5000e+40     2.5000e+41             6.0959e-45        -0.708889957280
     1.0000e+41     1.0000e+42             5.6772e-46        -0.708889957280

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4581
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2377e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s045 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s045 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=45  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.4092
    reference variance = 0.47592
====================================================
  Execution time = 4.4969e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s045
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9988e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5192e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499889835508
                                         uncertainty =       0.003845881974

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499889835508
                                         uncertainty =       0.003845881974

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499940004
  error estimate for blocks of size 2^( 2) =       0.000526900674
  error estimate for blocks of size 2^( 3) =       0.000552195474
  error estimate for blocks of size 2^( 4) =       0.000570640479
  error estimate for blocks of size 2^( 5) =       0.000583774461
  error estimate for blocks of size 2^( 6) =       0.000588920384
  error estimate for blocks of size 2^( 7) =       0.000592113412

      target function =      -0.707088606744
              le_mean =     -22.425169376111
             les_mean =     503.388101312407
             stat err =       0.000583862184
             autocorr =       1.363907494731
   target nu stat err =       0.000583862184
   target dn stat err =       0.003915149822
      target stat err =       0.002875694994
              std dev =       0.707021933942
             le_variance =       0.499880015076


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242516937611e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+40, overlap shift 6.2500e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707099361660       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707099361660       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707099437714       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+40 is 9.673899e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+41, overlap shift 2.5000e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707099361660       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707099361660       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707099437714       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+41 is 2.418475e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+42, overlap shift 1.0000e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707099361660       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707099361660       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707098960876       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+42 is 6.046187e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.626617 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0167e+01
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.3008
    reference variance = 1.20791
====================================================
  Execution time = 4.6265e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s045
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9459e-01
  Total weights = 2.0000e+06
  Execution time = 3.7818e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497288852
  error estimate for blocks of size 2^( 2) =       0.000523956714
  error estimate for blocks of size 2^( 3) =       0.000549661049
  error estimate for blocks of size 2^( 4) =       0.000569327682
  error estimate for blocks of size 2^( 5) =       0.000580340685
  error estimate for blocks of size 2^( 6) =       0.000588111859
  error estimate for blocks of size 2^( 7) =       0.000592142759

      target function =      -0.710893541720
              le_mean =     -22.426112513703
             les_mean =     503.425114635203
             stat err =       0.000582480746
             autocorr =       1.371973432229
   target nu stat err =       0.000582480746
   target dn stat err =       0.004622999884
      target stat err =       0.003415369777
              std dev =       0.703272639329
             le_variance =       0.494592405229

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497288852
  error estimate for blocks of size 2^( 2) =       0.000523956714
  error estimate for blocks of size 2^( 3) =       0.000549661049
  error estimate for blocks of size 2^( 4) =       0.000569327682
  error estimate for blocks of size 2^( 5) =       0.000580340685
  error estimate for blocks of size 2^( 6) =       0.000588111859
  error estimate for blocks of size 2^( 7) =       0.000592142759

      target function =      -0.710893541720
              le_mean =     -22.426112513703
             les_mean =     503.425114635203
             stat err =       0.000582480746
             autocorr =       1.371973432237
   target nu stat err =       0.000582480746
   target dn stat err =       0.004622999884
      target stat err =       0.003415369777
              std dev =       0.703272639329
             le_variance =       0.494592405229

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497288852
  error estimate for blocks of size 2^( 2) =       0.000523956714
  error estimate for blocks of size 2^( 3) =       0.000549661049
  error estimate for blocks of size 2^( 4) =       0.000569327682
  error estimate for blocks of size 2^( 5) =       0.000580340685
  error estimate for blocks of size 2^( 6) =       0.000588111859
  error estimate for blocks of size 2^( 7) =       0.000592142759

      target function =      -0.710893541720
              le_mean =     -22.426112513703
             les_mean =     503.425114635203
             stat err =       0.000582480746
             autocorr =       1.371973432237
   target nu stat err =       0.000582480746
   target dn stat err =       0.004622999884
      target stat err =       0.003415369777
              std dev =       0.703272639329
             le_variance =       0.494592405229

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494531445320
                                         uncertainty =       0.004603572827

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497288852
  error estimate for blocks of size 2^( 2) =       0.000523956714
  error estimate for blocks of size 2^( 3) =       0.000549661049
  error estimate for blocks of size 2^( 4) =       0.000569327682
  error estimate for blocks of size 2^( 5) =       0.000580340685
  error estimate for blocks of size 2^( 6) =       0.000588111859
  error estimate for blocks of size 2^( 7) =       0.000592142759

      target function =      -0.710893541720
              le_mean =     -22.426112513703
             les_mean =     503.425114635203
             stat err =       0.000582480746
             autocorr =       1.371973432237
   target nu stat err =       0.000582480746
   target dn stat err =       0.004622999884
      target stat err =       0.003415369777
              std dev =       0.703272639329
             le_variance =       0.494592405229


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710893541720        initial  <--
     6.2500e+40     6.2500e+41             9.6739e-46        -0.710893541720
     2.5000e+41     2.5000e+42             2.4185e-46        -0.710893541720
     1.0000e+42     1.0000e+43             6.0462e-47        -0.710893541720

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.2239
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2540e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s046 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s046 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=46  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2413e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.521
    reference variance = 0.365396
====================================================
  Execution time = 4.6438e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s046
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9953e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5249e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499484789067
                                         uncertainty =       0.003459162503

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499484789067
                                         uncertainty =       0.003459162503

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499764695
  error estimate for blocks of size 2^( 2) =       0.000526835276
  error estimate for blocks of size 2^( 3) =       0.000552317836
  error estimate for blocks of size 2^( 4) =       0.000572093254
  error estimate for blocks of size 2^( 5) =       0.000582820663
  error estimate for blocks of size 2^( 6) =       0.000588352593
  error estimate for blocks of size 2^( 7) =       0.000592207103

      target function =      -0.707341300352
              le_mean =     -22.425143470763
             les_mean =     503.386588934655
             stat err =       0.000583868403
             autocorr =       1.364893613623
   target nu stat err =       0.000583868403
   target dn stat err =       0.003848735274
      target stat err =       0.002830880505
              std dev =       0.706774009228
             le_variance =       0.499529500120


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242514347076e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+41, overlap shift 6.2500e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707351784537       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707351784537       residual = 9.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707351784537       residual = 7.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.750000000000       residual = 3.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 3.97e+07           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 6.36e+06           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+41 is 1.310056e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+42, overlap shift 2.5000e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707351784537       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707351784537       residual = 9.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707351784537       residual = 7.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.500000000000       residual = 4.05e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+42 is 3.275139e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+43, overlap shift 1.0000e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707351784537       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707351784537       residual = 9.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707351784537       residual = 7.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -1.000000000000       residual = 3.69e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+43 is 8.187847e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.628441 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1694e+01
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.3047
    reference variance = 0.356249
====================================================
  Execution time = 4.4854e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s046
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9579e-01
  Total weights = 2.0000e+06
  Execution time = 3.7917e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497890179
  error estimate for blocks of size 2^( 2) =       0.000524736807
  error estimate for blocks of size 2^( 3) =       0.000550259899
  error estimate for blocks of size 2^( 4) =       0.000569415353
  error estimate for blocks of size 2^( 5) =       0.000582859224
  error estimate for blocks of size 2^( 6) =       0.000589262193
  error estimate for blocks of size 2^( 7) =       0.000590184787

      target function =      -0.710043187078
              le_mean =     -22.425219819523
             les_mean =     503.386272965897
             stat err =       0.000582930389
             autocorr =       1.370775312057
   target nu stat err =       0.000582930389
   target dn stat err =       0.003347585455
      target stat err =       0.002498101169
              std dev =       0.704123043136
             le_variance =       0.495789259875

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497890179
  error estimate for blocks of size 2^( 2) =       0.000524736807
  error estimate for blocks of size 2^( 3) =       0.000550259899
  error estimate for blocks of size 2^( 4) =       0.000569415353
  error estimate for blocks of size 2^( 5) =       0.000582859224
  error estimate for blocks of size 2^( 6) =       0.000589262193
  error estimate for blocks of size 2^( 7) =       0.000590184787

      target function =      -0.710043187078
              le_mean =     -22.425219819523
             les_mean =     503.386272965897
             stat err =       0.000582930389
             autocorr =       1.370775312057
   target nu stat err =       0.000582930389
   target dn stat err =       0.003347585455
      target stat err =       0.002498101169
              std dev =       0.704123043136
             le_variance =       0.495789259875

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497890179
  error estimate for blocks of size 2^( 2) =       0.000524736807
  error estimate for blocks of size 2^( 3) =       0.000550259899
  error estimate for blocks of size 2^( 4) =       0.000569415353
  error estimate for blocks of size 2^( 5) =       0.000582859224
  error estimate for blocks of size 2^( 6) =       0.000589262193
  error estimate for blocks of size 2^( 7) =       0.000590184787

      target function =      -0.710043187078
              le_mean =     -22.425219819523
             les_mean =     503.386272965897
             stat err =       0.000582930389
             autocorr =       1.370775312057
   target nu stat err =       0.000582930389
   target dn stat err =       0.003347585455
      target stat err =       0.002498101169
              std dev =       0.704123043136
             le_variance =       0.495789259875

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495635200780
                                         uncertainty =       0.003033960767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497890179
  error estimate for blocks of size 2^( 2) =       0.000524736807
  error estimate for blocks of size 2^( 3) =       0.000550259899
  error estimate for blocks of size 2^( 4) =       0.000569415353
  error estimate for blocks of size 2^( 5) =       0.000582859224
  error estimate for blocks of size 2^( 6) =       0.000589262193
  error estimate for blocks of size 2^( 7) =       0.000590184787

      target function =      -0.710043187078
              le_mean =     -22.425219819523
             les_mean =     503.386272965897
             stat err =       0.000582930389
             autocorr =       1.370775312057
   target nu stat err =       0.000582930389
   target dn stat err =       0.003347585455
      target stat err =       0.002498101169
              std dev =       0.704123043136
             le_variance =       0.495789259875


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710043187078        initial  <--
     6.2500e+41     6.2500e+42             1.3101e-46        -0.710043187078
     2.5000e+42     2.5000e+43             3.2751e-47        -0.710043187078
     1.0000e+43     1.0000e+44             8.1878e-48        -0.710043187078

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.8218
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2552e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s047 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s047 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=47  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2413e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.397
    reference variance = 0.335076
====================================================
  Execution time = 4.4980e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s047
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0420e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5109e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504184943967
                                         uncertainty =       0.008189217988

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504184943967
                                         uncertainty =       0.008189217988

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502093683
  error estimate for blocks of size 2^( 2) =       0.000528352985
  error estimate for blocks of size 2^( 3) =       0.000553545951
  error estimate for blocks of size 2^( 4) =       0.000573273291
  error estimate for blocks of size 2^( 5) =       0.000586329044
  error estimate for blocks of size 2^( 6) =       0.000592299400
  error estimate for blocks of size 2^( 7) =       0.000595315482

      target function =      -0.703941274047
              le_mean =     -22.426028091581
             les_mean =     503.430931845962
             stat err =       0.000586804304
             autocorr =       1.365894217492
   target nu stat err =       0.000586804304
   target dn stat err =       0.008434906589
      target stat err =       0.006045351349
              std dev =       0.710067696548
             le_variance =       0.504196133681


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242602809158e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+42, overlap shift 6.2500e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+43, overlap shift 2.5000e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+44, overlap shift 1.0000e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703992560760       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.629501 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0095e+01
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.3305
    reference variance = 0.346931
====================================================
  Execution time = 4.5500e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s047
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9028e-01
  Total weights = 2.0000e+06
  Execution time = 3.7755e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495114937
  error estimate for blocks of size 2^( 2) =       0.000521907423
  error estimate for blocks of size 2^( 3) =       0.000547705985
  error estimate for blocks of size 2^( 4) =       0.000567416040
  error estimate for blocks of size 2^( 5) =       0.000579365543
  error estimate for blocks of size 2^( 6) =       0.000584796518
  error estimate for blocks of size 2^( 7) =       0.000588325750

      target function =      -0.714064043817
              le_mean =     -22.425017236633
             les_mean =     503.371675419925
             stat err =       0.000579975963
             autocorr =       1.372170036449
   target nu stat err =       0.000579975963
   target dn stat err =       0.002850908384
      target stat err =       0.002172212442
              std dev =       0.700198258913
             le_variance =       0.490277601785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495114937
  error estimate for blocks of size 2^( 2) =       0.000521907423
  error estimate for blocks of size 2^( 3) =       0.000547705985
  error estimate for blocks of size 2^( 4) =       0.000567416040
  error estimate for blocks of size 2^( 5) =       0.000579365543
  error estimate for blocks of size 2^( 6) =       0.000584796518
  error estimate for blocks of size 2^( 7) =       0.000588325750

      target function =      -0.714064043817
              le_mean =     -22.425017236633
             les_mean =     503.371675419925
             stat err =       0.000579975963
             autocorr =       1.372170036449
   target nu stat err =       0.000579975963
   target dn stat err =       0.002850908384
      target stat err =       0.002172212442
              std dev =       0.700198258913
             le_variance =       0.490277601785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495114937
  error estimate for blocks of size 2^( 2) =       0.000521907423
  error estimate for blocks of size 2^( 3) =       0.000547705985
  error estimate for blocks of size 2^( 4) =       0.000567416040
  error estimate for blocks of size 2^( 5) =       0.000579365543
  error estimate for blocks of size 2^( 6) =       0.000584796518
  error estimate for blocks of size 2^( 7) =       0.000588325750

      target function =      -0.714064043817
              le_mean =     -22.425017236633
             les_mean =     503.371675419925
             stat err =       0.000579975963
             autocorr =       1.372170036449
   target nu stat err =       0.000579975963
   target dn stat err =       0.002850908384
      target stat err =       0.002172212442
              std dev =       0.700198258913
             le_variance =       0.490277601785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490336174100
                                         uncertainty =       0.002621273460

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495114937
  error estimate for blocks of size 2^( 2) =       0.000521907423
  error estimate for blocks of size 2^( 3) =       0.000547705985
  error estimate for blocks of size 2^( 4) =       0.000567416040
  error estimate for blocks of size 2^( 5) =       0.000579365543
  error estimate for blocks of size 2^( 6) =       0.000584796518
  error estimate for blocks of size 2^( 7) =       0.000588325750

      target function =      -0.714064043817
              le_mean =     -22.425017236633
             les_mean =     503.371675419925
             stat err =       0.000579975963
             autocorr =       1.372170036449
   target nu stat err =       0.000579975963
   target dn stat err =       0.002850908384
      target stat err =       0.002172212442
              std dev =       0.700198258913
             le_variance =       0.490277601785


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.714064043817        initial  <--
     6.2500e+42     6.2500e+43             0.0000e+00        -0.714064043817
     2.5000e+43     2.5000e+44             0.0000e+00        -0.714064043817
     1.0000e+44     1.0000e+45             0.0000e+00        -0.714064043817

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.3892
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2449e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s048 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s048 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=48  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2412e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.419
    reference variance = 0.368994
====================================================
  Execution time = 4.6785e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s048
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0536e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5011e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505342812867
                                         uncertainty =       0.005022277396

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505342812867
                                         uncertainty =       0.005022277396

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502672419
  error estimate for blocks of size 2^( 2) =       0.000528842044
  error estimate for blocks of size 2^( 3) =       0.000554325818
  error estimate for blocks of size 2^( 4) =       0.000573936173
  error estimate for blocks of size 2^( 5) =       0.000587803327
  error estimate for blocks of size 2^( 6) =       0.000596495664
  error estimate for blocks of size 2^( 7) =       0.000601347469

      target function =      -0.703140326844
              le_mean =     -22.426363091628
             les_mean =     503.447120385621
             stat err =       0.000589895658
             autocorr =       1.377146956582
   target nu stat err =       0.000589895658
   target dn stat err =       0.004735290288
      target stat err =       0.003423633411
              std dev =       0.710886151774
             le_variance =       0.505359120784


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242636309163e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+43, overlap shift 6.2500e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703156165981       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703156165981       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703125000000       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+43 is 1.096339e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+44, overlap shift 2.5000e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703156165981       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703156165981       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.718750000000       residual = 1.24e-01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+44 is 2.740847e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+45, overlap shift 1.0000e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703156165981       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703156165981       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.687500000000       residual = 1.33e-01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+45 is 6.852117e-50

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.630797 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1804e+01
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.3364
    reference variance = 0.301573
====================================================
  Execution time = 4.5141e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s048
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.8755e-01
  Total weights = 2.0000e+06
  Execution time = 3.7663e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493734678
  error estimate for blocks of size 2^( 2) =       0.000520971697
  error estimate for blocks of size 2^( 3) =       0.000547088985
  error estimate for blocks of size 2^( 4) =       0.000566453371
  error estimate for blocks of size 2^( 5) =       0.000578953181
  error estimate for blocks of size 2^( 6) =       0.000586801514
  error estimate for blocks of size 2^( 7) =       0.000591769140

      target function =      -0.716071270973
              le_mean =     -22.425096672299
             les_mean =     503.372508383065
             stat err =       0.000580994302
             autocorr =       1.384702519340
   target nu stat err =       0.000580994302
   target dn stat err =       0.002431226702
      target stat err =       0.001888925578
              std dev =       0.698246278116
             le_variance =       0.487547864902

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493734678
  error estimate for blocks of size 2^( 2) =       0.000520971697
  error estimate for blocks of size 2^( 3) =       0.000547088985
  error estimate for blocks of size 2^( 4) =       0.000566453371
  error estimate for blocks of size 2^( 5) =       0.000578953181
  error estimate for blocks of size 2^( 6) =       0.000586801514
  error estimate for blocks of size 2^( 7) =       0.000591769140

      target function =      -0.716071270973
              le_mean =     -22.425096672299
             les_mean =     503.372508383065
             stat err =       0.000580994302
             autocorr =       1.384702519340
   target nu stat err =       0.000580994302
   target dn stat err =       0.002431226702
      target stat err =       0.001888925578
              std dev =       0.698246278116
             le_variance =       0.487547864902

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493734678
  error estimate for blocks of size 2^( 2) =       0.000520971697
  error estimate for blocks of size 2^( 3) =       0.000547088985
  error estimate for blocks of size 2^( 4) =       0.000566453371
  error estimate for blocks of size 2^( 5) =       0.000578953181
  error estimate for blocks of size 2^( 6) =       0.000586801514
  error estimate for blocks of size 2^( 7) =       0.000591769140

      target function =      -0.716071270973
              le_mean =     -22.425096672299
             les_mean =     503.372508383065
             stat err =       0.000580994302
             autocorr =       1.384702519340
   target nu stat err =       0.000580994302
   target dn stat err =       0.002431226702
      target stat err =       0.001888925578
              std dev =       0.698246278116
             le_variance =       0.487547864902

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487597079836
                                         uncertainty =       0.002497589315

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493734678
  error estimate for blocks of size 2^( 2) =       0.000520971697
  error estimate for blocks of size 2^( 3) =       0.000547088985
  error estimate for blocks of size 2^( 4) =       0.000566453371
  error estimate for blocks of size 2^( 5) =       0.000578953181
  error estimate for blocks of size 2^( 6) =       0.000586801514
  error estimate for blocks of size 2^( 7) =       0.000591769140

      target function =      -0.716071270973
              le_mean =     -22.425096672299
             les_mean =     503.372508383065
             stat err =       0.000580994302
             autocorr =       1.384702519340
   target nu stat err =       0.000580994302
   target dn stat err =       0.002431226702
      target stat err =       0.001888925578
              std dev =       0.698246278116
             le_variance =       0.487547864902


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.716071270973        initial  <--
     6.2500e+43     6.2500e+44             1.0963e-48        -0.716071270973
     2.5000e+44     2.5000e+45             2.7408e-49        -0.716071270973
     1.0000e+45     1.0000e+46             6.8521e-50        -0.716071270973

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.0106
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2582e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s049 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s049 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=49  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2412e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.3436
    reference variance = 0.429108
====================================================
  Execution time = 4.5149e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s049
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9942e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5232e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499290571141
                                         uncertainty =       0.005450352984

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499290571141
                                         uncertainty =       0.005450352984

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499710550
  error estimate for blocks of size 2^( 2) =       0.000526378439
  error estimate for blocks of size 2^( 3) =       0.000552281931
  error estimate for blocks of size 2^( 4) =       0.000572763226
  error estimate for blocks of size 2^( 5) =       0.000587017778
  error estimate for blocks of size 2^( 6) =       0.000594436329
  error estimate for blocks of size 2^( 7) =       0.000599581232

      target function =      -0.707406864407
              le_mean =     -22.425336466602
             les_mean =     503.395136657391
             stat err =       0.000588449641
             autocorr =       1.386696975721
   target nu stat err =       0.000588449641
   target dn stat err =       0.005276062606
      target stat err =       0.003843142440
              std dev =       0.706697436517
             le_variance =       0.499421266779


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242533646660e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+44, overlap shift 6.2500e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+45, overlap shift 2.5000e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+46, overlap shift 1.0000e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707426530137       residual = 2.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.631942 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0387e+01
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.3805
    reference variance = 0.318195
====================================================
  Execution time = 4.5186e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s049
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9410e-01
  Total weights = 2.0000e+06
  Execution time = 3.8037e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497042344
  error estimate for blocks of size 2^( 2) =       0.000523967607
  error estimate for blocks of size 2^( 3) =       0.000549591192
  error estimate for blocks of size 2^( 4) =       0.000569482680
  error estimate for blocks of size 2^( 5) =       0.000583404477
  error estimate for blocks of size 2^( 6) =       0.000591930629
  error estimate for blocks of size 2^( 7) =       0.000596428353

      target function =      -0.711256136290
              le_mean =     -22.426273088818
             les_mean =     503.431826590086
             stat err =       0.000585311535
             autocorr =       1.386715560394
   target nu stat err =       0.000585311535
   target dn stat err =       0.003301278927
      target stat err =       0.002478043264
              std dev =       0.702924023558
             le_variance =       0.494102182895

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497042344
  error estimate for blocks of size 2^( 2) =       0.000523967607
  error estimate for blocks of size 2^( 3) =       0.000549591192
  error estimate for blocks of size 2^( 4) =       0.000569482680
  error estimate for blocks of size 2^( 5) =       0.000583404477
  error estimate for blocks of size 2^( 6) =       0.000591930629
  error estimate for blocks of size 2^( 7) =       0.000596428353

      target function =      -0.711256136290
              le_mean =     -22.426273088818
             les_mean =     503.431826590086
             stat err =       0.000585311535
             autocorr =       1.386715560394
   target nu stat err =       0.000585311535
   target dn stat err =       0.003301278927
      target stat err =       0.002478043264
              std dev =       0.702924023558
             le_variance =       0.494102182895

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497042344
  error estimate for blocks of size 2^( 2) =       0.000523967607
  error estimate for blocks of size 2^( 3) =       0.000549591192
  error estimate for blocks of size 2^( 4) =       0.000569482680
  error estimate for blocks of size 2^( 5) =       0.000583404477
  error estimate for blocks of size 2^( 6) =       0.000591930629
  error estimate for blocks of size 2^( 7) =       0.000596428353

      target function =      -0.711256136290
              le_mean =     -22.426273088818
             les_mean =     503.431826590086
             stat err =       0.000585311535
             autocorr =       1.386715560394
   target nu stat err =       0.000585311535
   target dn stat err =       0.003301278927
      target stat err =       0.002478043264
              std dev =       0.702924023558
             le_variance =       0.494102182895

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494176929702
                                         uncertainty =       0.003250468421

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497042344
  error estimate for blocks of size 2^( 2) =       0.000523967607
  error estimate for blocks of size 2^( 3) =       0.000549591192
  error estimate for blocks of size 2^( 4) =       0.000569482680
  error estimate for blocks of size 2^( 5) =       0.000583404477
  error estimate for blocks of size 2^( 6) =       0.000591930629
  error estimate for blocks of size 2^( 7) =       0.000596428353

      target function =      -0.711256136290
              le_mean =     -22.426273088818
             les_mean =     503.431826590086
             stat err =       0.000585311535
             autocorr =       1.386715560394
   target nu stat err =       0.000585311535
   target dn stat err =       0.003301278927
      target stat err =       0.002478043264
              std dev =       0.702924023558
             le_variance =       0.494102182895


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711256136290        initial  <--
     6.2500e+44     6.2500e+45             0.0000e+00        -0.711256136290
     2.5000e+45     2.5000e+46             0.0000e+00        -0.711256136290
     1.0000e+46     1.0000e+47             0.0000e+00        -0.711256136290

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.1680
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2456e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s050 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s050 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=50  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2411e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.4499
    reference variance = 0.412463
====================================================
  Execution time = 4.5309e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s050
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2424e+01
  VMC Evar = 4.9855e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4947e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498582843327
                                         uncertainty =       0.004532341042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498582843327
                                         uncertainty =       0.004532341042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499276603
  error estimate for blocks of size 2^( 2) =       0.000525899378
  error estimate for blocks of size 2^( 3) =       0.000552228583
  error estimate for blocks of size 2^( 4) =       0.000571821857
  error estimate for blocks of size 2^( 5) =       0.000583748968
  error estimate for blocks of size 2^( 6) =       0.000590207127
  error estimate for blocks of size 2^( 7) =       0.000594848043

      target function =      -0.708054098044
              le_mean =     -22.424161149184
             les_mean =     503.341557248055
             stat err =       0.000585156499
             autocorr =       1.373604280248
   target nu stat err =       0.000585156499
   target dn stat err =       0.004428648195
      target stat err =       0.003241951616
              std dev =       0.706083743451
             le_variance =       0.498554252765


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242416114918e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+45, overlap shift 6.2500e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+46, overlap shift 2.5000e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+47, overlap shift 1.0000e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708067956547       residual = 3.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.633011 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0263e+01
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.4683
    reference variance = 0.480576
====================================================
  Execution time = 4.6593e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s050
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9842e-01
  Total weights = 2.0000e+06
  Execution time = 3.7806e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499209555
  error estimate for blocks of size 2^( 2) =       0.000526341045
  error estimate for blocks of size 2^( 3) =       0.000551993631
  error estimate for blocks of size 2^( 4) =       0.000571246802
  error estimate for blocks of size 2^( 5) =       0.000583851545
  error estimate for blocks of size 2^( 6) =       0.000590320755
  error estimate for blocks of size 2^( 7) =       0.000594574394

      target function =      -0.708123219768
              le_mean =     -22.426090387937
             les_mean =     503.427950198363
             stat err =       0.000584998374
             autocorr =       1.373230811445
   target nu stat err =       0.000584998374
   target dn stat err =       0.004197339482
      target stat err =       0.003087575947
              std dev =       0.705988923178
             le_variance =       0.498420359651

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499209555
  error estimate for blocks of size 2^( 2) =       0.000526341045
  error estimate for blocks of size 2^( 3) =       0.000551993631
  error estimate for blocks of size 2^( 4) =       0.000571246802
  error estimate for blocks of size 2^( 5) =       0.000583851545
  error estimate for blocks of size 2^( 6) =       0.000590320755
  error estimate for blocks of size 2^( 7) =       0.000594574394

      target function =      -0.708123219768
              le_mean =     -22.426090387937
             les_mean =     503.427950198363
             stat err =       0.000584998374
             autocorr =       1.373230811445
   target nu stat err =       0.000584998374
   target dn stat err =       0.004197339482
      target stat err =       0.003087575947
              std dev =       0.705988923178
             le_variance =       0.498420359651

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499209555
  error estimate for blocks of size 2^( 2) =       0.000526341045
  error estimate for blocks of size 2^( 3) =       0.000551993631
  error estimate for blocks of size 2^( 4) =       0.000571246802
  error estimate for blocks of size 2^( 5) =       0.000583851545
  error estimate for blocks of size 2^( 6) =       0.000590320755
  error estimate for blocks of size 2^( 7) =       0.000594574394

      target function =      -0.708123219768
              le_mean =     -22.426090387937
             les_mean =     503.427950198363
             stat err =       0.000584998374
             autocorr =       1.373230811445
   target nu stat err =       0.000584998374
   target dn stat err =       0.004197339482
      target stat err =       0.003087575947
              std dev =       0.705988923178
             le_variance =       0.498420359651

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498387788901
                                         uncertainty =       0.004138549920

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499209555
  error estimate for blocks of size 2^( 2) =       0.000526341045
  error estimate for blocks of size 2^( 3) =       0.000551993631
  error estimate for blocks of size 2^( 4) =       0.000571246802
  error estimate for blocks of size 2^( 5) =       0.000583851545
  error estimate for blocks of size 2^( 6) =       0.000590320755
  error estimate for blocks of size 2^( 7) =       0.000594574394

      target function =      -0.708123219768
              le_mean =     -22.426090387937
             les_mean =     503.427950198363
             stat err =       0.000584998374
             autocorr =       1.373230811445
   target nu stat err =       0.000584998374
   target dn stat err =       0.004197339482
      target stat err =       0.003087575947
              std dev =       0.705988923178
             le_variance =       0.498420359651


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708123219768        initial  <--
     6.2500e+45     6.2500e+46             0.0000e+00        -0.708123219768
     2.5000e+46     2.5000e+47             0.0000e+00        -0.708123219768
     1.0000e+47     1.0000e+48             0.0000e+00        -0.708123219768

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.5106
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2578e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s051 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s051 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=51  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2412e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.3584
    reference variance = 0.610396
====================================================
  Execution time = 4.5097e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s051
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9767e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5011e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497685502077
                                         uncertainty =       0.004488737245

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497685502077
                                         uncertainty =       0.004488737245

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498831921
  error estimate for blocks of size 2^( 2) =       0.000526137352
  error estimate for blocks of size 2^( 3) =       0.000552474398
  error estimate for blocks of size 2^( 4) =       0.000572109750
  error estimate for blocks of size 2^( 5) =       0.000584202728
  error estimate for blocks of size 2^( 6) =       0.000590326257
  error estimate for blocks of size 2^( 7) =       0.000595399636

      target function =      -0.708685965264
              le_mean =     -22.424811188716
             les_mean =     503.369823171155
             stat err =       0.000585509593
             autocorr =       1.377715538031
   target nu stat err =       0.000585509593
   target dn stat err =       0.004250127917
      target stat err =       0.003124195204
              std dev =       0.705454867738
             le_variance =       0.497666570415


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242481118872e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+46, overlap shift 6.2500e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+47, overlap shift 2.5000e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+48, overlap shift 1.0000e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708698758324       residual = 1.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.634099 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0115e+01
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.4212
    reference variance = 0.387216
====================================================
  Execution time = 4.4661e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s051
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0063e-01
  Total weights = 2.0000e+06
  Execution time = 3.7729e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500316180
  error estimate for blocks of size 2^( 2) =       0.000527028382
  error estimate for blocks of size 2^( 3) =       0.000552490685
  error estimate for blocks of size 2^( 4) =       0.000571426382
  error estimate for blocks of size 2^( 5) =       0.000585554507
  error estimate for blocks of size 2^( 6) =       0.000591306704
  error estimate for blocks of size 2^( 7) =       0.000594684414

      target function =      -0.706544466009
              le_mean =     -22.424773663725
             les_mean =     503.371106178792
             stat err =       0.000585743002
             autocorr =       1.370645425868
   target nu stat err =       0.000585743002
   target dn stat err =       0.005477972966
      target stat err =       0.003973488912
              std dev =       0.707553927128
             le_variance =       0.500632559794

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500316180
  error estimate for blocks of size 2^( 2) =       0.000527028382
  error estimate for blocks of size 2^( 3) =       0.000552490685
  error estimate for blocks of size 2^( 4) =       0.000571426382
  error estimate for blocks of size 2^( 5) =       0.000585554507
  error estimate for blocks of size 2^( 6) =       0.000591306704
  error estimate for blocks of size 2^( 7) =       0.000594684414

      target function =      -0.706544466009
              le_mean =     -22.424773663725
             les_mean =     503.371106178792
             stat err =       0.000585743002
             autocorr =       1.370645425868
   target nu stat err =       0.000585743002
   target dn stat err =       0.005477972966
      target stat err =       0.003973488912
              std dev =       0.707553927128
             le_variance =       0.500632559794

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500316180
  error estimate for blocks of size 2^( 2) =       0.000527028382
  error estimate for blocks of size 2^( 3) =       0.000552490685
  error estimate for blocks of size 2^( 4) =       0.000571426382
  error estimate for blocks of size 2^( 5) =       0.000585554507
  error estimate for blocks of size 2^( 6) =       0.000591306704
  error estimate for blocks of size 2^( 7) =       0.000594684414

      target function =      -0.706544466009
              le_mean =     -22.424773663725
             les_mean =     503.371106178792
             stat err =       0.000585743002
             autocorr =       1.370645425868
   target nu stat err =       0.000585743002
   target dn stat err =       0.005477972966
      target stat err =       0.003973488912
              std dev =       0.707553927128
             le_variance =       0.500632559794

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500690808942
                                         uncertainty =       0.005012791353

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500316180
  error estimate for blocks of size 2^( 2) =       0.000527028382
  error estimate for blocks of size 2^( 3) =       0.000552490685
  error estimate for blocks of size 2^( 4) =       0.000571426382
  error estimate for blocks of size 2^( 5) =       0.000585554507
  error estimate for blocks of size 2^( 6) =       0.000591306704
  error estimate for blocks of size 2^( 7) =       0.000594684414

      target function =      -0.706544466009
              le_mean =     -22.424773663725
             les_mean =     503.371106178792
             stat err =       0.000585743002
             autocorr =       1.370645425868
   target nu stat err =       0.000585743002
   target dn stat err =       0.005477972966
      target stat err =       0.003973488912
              std dev =       0.707553927128
             le_variance =       0.500632559794


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706544466009        initial  <--
     6.2500e+46     6.2500e+47             0.0000e+00        -0.706544466009
     2.5000e+47     2.5000e+48             0.0000e+00        -0.706544466009
     1.0000e+48     1.0000e+49             0.0000e+00        -0.706544466009

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.5552
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2368e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s052 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s052 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=52  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2411e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.4597
    reference variance = 0.318241
====================================================
  Execution time = 4.4575e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s052
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9899e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5071e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499087429592
                                         uncertainty =       0.005505130468

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499087429592
                                         uncertainty =       0.005505130468

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499497117
  error estimate for blocks of size 2^( 2) =       0.000526574230
  error estimate for blocks of size 2^( 3) =       0.000552167951
  error estimate for blocks of size 2^( 4) =       0.000571857413
  error estimate for blocks of size 2^( 5) =       0.000584095924
  error estimate for blocks of size 2^( 6) =       0.000589811417
  error estimate for blocks of size 2^( 7) =       0.000594092764

      target function =      -0.707704742167
              le_mean =     -22.426101029288
             les_mean =     503.429001866805
             stat err =       0.000584964380
             autocorr =       1.371490710726
   target nu stat err =       0.000584964380
   target dn stat err =       0.004748012915
      target stat err =       0.003474410158
              std dev =       0.706395597704
             le_variance =       0.498994740456


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242610102929e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+47, overlap shift 6.2500e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707721055736       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707721055736       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707721055736       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+47 is 1.079531e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+48, overlap shift 2.5000e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707721055736       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707721055736       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707031250000       residual = 3.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+48 is 2.698828e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+49, overlap shift 1.0000e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707721055736       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707721055736       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707721055736       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+49 is 6.747070e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.635434 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9653e+01
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.4536
    reference variance = 0.378272
====================================================
  Execution time = 4.4698e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s052
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.1941e-01
  Total weights = 2.0000e+06
  Execution time = 3.7740e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509614977
  error estimate for blocks of size 2^( 2) =       0.000535813475
  error estimate for blocks of size 2^( 3) =       0.000561340217
  error estimate for blocks of size 2^( 4) =       0.000580965545
  error estimate for blocks of size 2^( 5) =       0.000592650403
  error estimate for blocks of size 2^( 6) =       0.000599694983
  error estimate for blocks of size 2^( 7) =       0.000601051500

      target function =      -0.693163253746
              le_mean =     -22.424620828525
             les_mean =     503.383033892384
             stat err =       0.000593590608
             autocorr =       1.356718276947
   target nu stat err =       0.000593590608
   target dn stat err =       0.016654713546
      target stat err =       0.011511908082
              std dev =       0.720704411656
             le_variance =       0.519414848981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509614977
  error estimate for blocks of size 2^( 2) =       0.000535813475
  error estimate for blocks of size 2^( 3) =       0.000561340217
  error estimate for blocks of size 2^( 4) =       0.000580965545
  error estimate for blocks of size 2^( 5) =       0.000592650403
  error estimate for blocks of size 2^( 6) =       0.000599694983
  error estimate for blocks of size 2^( 7) =       0.000601051500

      target function =      -0.693163253746
              le_mean =     -22.424620828525
             les_mean =     503.383033892384
             stat err =       0.000593590608
             autocorr =       1.356718276946
   target nu stat err =       0.000593590608
   target dn stat err =       0.016654713546
      target stat err =       0.011511908082
              std dev =       0.720704411656
             le_variance =       0.519414848981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509614977
  error estimate for blocks of size 2^( 2) =       0.000535813475
  error estimate for blocks of size 2^( 3) =       0.000561340217
  error estimate for blocks of size 2^( 4) =       0.000580965545
  error estimate for blocks of size 2^( 5) =       0.000592650403
  error estimate for blocks of size 2^( 6) =       0.000599694983
  error estimate for blocks of size 2^( 7) =       0.000601051500

      target function =      -0.693163253746
              le_mean =     -22.424620828525
             les_mean =     503.383033892384
             stat err =       0.000593590608
             autocorr =       1.356718276946
   target nu stat err =       0.000593590608
   target dn stat err =       0.016654713546
      target stat err =       0.011511908082
              std dev =       0.720704411656
             le_variance =       0.519414848981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519551838768
                                         uncertainty =       0.016168815710

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509614977
  error estimate for blocks of size 2^( 2) =       0.000535813475
  error estimate for blocks of size 2^( 3) =       0.000561340217
  error estimate for blocks of size 2^( 4) =       0.000580965545
  error estimate for blocks of size 2^( 5) =       0.000592650403
  error estimate for blocks of size 2^( 6) =       0.000599694983
  error estimate for blocks of size 2^( 7) =       0.000601051500

      target function =      -0.693163253746
              le_mean =     -22.424620828525
             les_mean =     503.383033892384
             stat err =       0.000593590608
             autocorr =       1.356718276946
   target nu stat err =       0.000593590608
   target dn stat err =       0.016654713546
      target stat err =       0.011511908082
              std dev =       0.720704411656
             le_variance =       0.519414848981


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.693163253746        initial  <--
     6.2500e+47     6.2500e+48             1.0795e-52        -0.693163253746
     2.5000e+48     2.5000e+49             2.6988e-53        -0.693163253746
     1.0000e+49     1.0000e+50             6.7471e-54        -0.693163253746

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.5946
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2325e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s053 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s053 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=53  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2412e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.4515
    reference variance = 0.395847
====================================================
  Execution time = 4.6919e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s053
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0251e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5053e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502610725259
                                         uncertainty =       0.006101226428

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502610725259
                                         uncertainty =       0.006101226428

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501252506
  error estimate for blocks of size 2^( 2) =       0.000527825752
  error estimate for blocks of size 2^( 3) =       0.000553163738
  error estimate for blocks of size 2^( 4) =       0.000572890578
  error estimate for blocks of size 2^( 5) =       0.000584389592
  error estimate for blocks of size 2^( 6) =       0.000592112987
  error estimate for blocks of size 2^( 7) =       0.000593292720

      target function =      -0.705182912789
              le_mean =     -22.425424940832
             les_mean =     503.402191675862
             stat err =       0.000585671469
             autocorr =       1.365196046690
   target nu stat err =       0.000585671469
   target dn stat err =       0.006254792607
      target stat err =       0.004512093801
              std dev =       0.708878092634
             le_variance =       0.502508150216


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242542494083e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+48, overlap shift 6.2500e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+49, overlap shift 2.5000e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+50, overlap shift 1.0000e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705210622956       residual = 2.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.636531 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.1979e+01
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.4629
    reference variance = 0.311682
====================================================
  Execution time = 4.4414e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s053
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0731e-01
  Total weights = 2.0000e+06
  Execution time = 3.7821e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503643984
  error estimate for blocks of size 2^( 2) =       0.000530399224
  error estimate for blocks of size 2^( 3) =       0.000556273463
  error estimate for blocks of size 2^( 4) =       0.000574954645
  error estimate for blocks of size 2^( 5) =       0.000588040817
  error estimate for blocks of size 2^( 6) =       0.000596846782
  error estimate for blocks of size 2^( 7) =       0.000598739548

      target function =      -0.701764573682
              le_mean =     -22.424562136907
             les_mean =     503.368301303891
             stat err =       0.000589645448
             autocorr =       1.370675338499
   target nu stat err =       0.000589645448
   target dn stat err =       0.008010421702
      target stat err =       0.005697096740
              std dev =       0.712260152984
             le_variance =       0.507314525529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503643984
  error estimate for blocks of size 2^( 2) =       0.000530399224
  error estimate for blocks of size 2^( 3) =       0.000556273463
  error estimate for blocks of size 2^( 4) =       0.000574954645
  error estimate for blocks of size 2^( 5) =       0.000588040817
  error estimate for blocks of size 2^( 6) =       0.000596846782
  error estimate for blocks of size 2^( 7) =       0.000598739548

      target function =      -0.701764573682
              le_mean =     -22.424562136907
             les_mean =     503.368301303891
             stat err =       0.000589645448
             autocorr =       1.370675338499
   target nu stat err =       0.000589645448
   target dn stat err =       0.008010421702
      target stat err =       0.005697096740
              std dev =       0.712260152984
             le_variance =       0.507314525529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503643984
  error estimate for blocks of size 2^( 2) =       0.000530399224
  error estimate for blocks of size 2^( 3) =       0.000556273463
  error estimate for blocks of size 2^( 4) =       0.000574954645
  error estimate for blocks of size 2^( 5) =       0.000588040817
  error estimate for blocks of size 2^( 6) =       0.000596846782
  error estimate for blocks of size 2^( 7) =       0.000598739548

      target function =      -0.701764573682
              le_mean =     -22.424562136907
             les_mean =     503.368301303891
             stat err =       0.000589645448
             autocorr =       1.370675338499
   target nu stat err =       0.000589645448
   target dn stat err =       0.008010421702
      target stat err =       0.005697096740
              std dev =       0.712260152984
             le_variance =       0.507314525529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507397118323
                                         uncertainty =       0.008227252657

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503643984
  error estimate for blocks of size 2^( 2) =       0.000530399224
  error estimate for blocks of size 2^( 3) =       0.000556273463
  error estimate for blocks of size 2^( 4) =       0.000574954645
  error estimate for blocks of size 2^( 5) =       0.000588040817
  error estimate for blocks of size 2^( 6) =       0.000596846782
  error estimate for blocks of size 2^( 7) =       0.000598739548

      target function =      -0.701764573682
              le_mean =     -22.424562136907
             les_mean =     503.368301303891
             stat err =       0.000589645448
             autocorr =       1.370675338499
   target nu stat err =       0.000589645448
   target dn stat err =       0.008010421702
      target stat err =       0.005697096740
              std dev =       0.712260152984
             le_variance =       0.507314525529


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.701764573682        initial  <--
     6.2500e+48     6.2500e+49             0.0000e+00        -0.701764573682
     2.5000e+49     2.5000e+50             0.0000e+00        -0.701764573682
     1.0000e+50     1.0000e+51             0.0000e+00        -0.701764573682

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3404
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2532e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s054 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s054 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=54  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2413e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.3583
    reference variance = 0.482927
====================================================
  Execution time = 4.4720e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s054
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9661e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5220e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496604972222
                                         uncertainty =       0.002731293929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496604972222
                                         uncertainty =       0.002731293929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498300365
  error estimate for blocks of size 2^( 2) =       0.000525151858
  error estimate for blocks of size 2^( 3) =       0.000550109263
  error estimate for blocks of size 2^( 4) =       0.000569258806
  error estimate for blocks of size 2^( 5) =       0.000581904061
  error estimate for blocks of size 2^( 6) =       0.000587136108
  error estimate for blocks of size 2^( 7) =       0.000592032243

      target function =      -0.709449313935
              le_mean =     -22.425424332721
             les_mean =     503.396262761840
             stat err =       0.000582582804
             autocorr =       1.366887943348
   target nu stat err =       0.000582582804
   target dn stat err =       0.003219183692
      target stat err =       0.002404534633
              std dev =       0.704703134350
             le_variance =       0.496606507563


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242542433272e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+49, overlap shift 6.2500e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+50, overlap shift 2.5000e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+51, overlap shift 1.0000e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709456504205       residual = 2.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.637609 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9946e+01
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.3976
    reference variance = 0.313026
====================================================
  Execution time = 4.4539e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s054
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0723e-01
  Total weights = 2.0000e+06
  Execution time = 3.7856e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503601065
  error estimate for blocks of size 2^( 2) =       0.000529982530
  error estimate for blocks of size 2^( 3) =       0.000556332058
  error estimate for blocks of size 2^( 4) =       0.000576387861
  error estimate for blocks of size 2^( 5) =       0.000588922719
  error estimate for blocks of size 2^( 6) =       0.000595468930
  error estimate for blocks of size 2^( 7) =       0.000601183896

      target function =      -0.701807507702
              le_mean =     -22.425481023729
             les_mean =     503.409426956692
             stat err =       0.000590490851
             autocorr =       1.374842876115
   target nu stat err =       0.000590490851
   target dn stat err =       0.007794446653
      target stat err =       0.005553255972
              std dev =       0.712199455675
             le_variance =       0.507228064663

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503601065
  error estimate for blocks of size 2^( 2) =       0.000529982530
  error estimate for blocks of size 2^( 3) =       0.000556332058
  error estimate for blocks of size 2^( 4) =       0.000576387861
  error estimate for blocks of size 2^( 5) =       0.000588922719
  error estimate for blocks of size 2^( 6) =       0.000595468930
  error estimate for blocks of size 2^( 7) =       0.000601183896

      target function =      -0.701807507702
              le_mean =     -22.425481023729
             les_mean =     503.409426956692
             stat err =       0.000590490851
             autocorr =       1.374842876115
   target nu stat err =       0.000590490851
   target dn stat err =       0.007794446653
      target stat err =       0.005553255972
              std dev =       0.712199455675
             le_variance =       0.507228064663

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503601065
  error estimate for blocks of size 2^( 2) =       0.000529982530
  error estimate for blocks of size 2^( 3) =       0.000556332058
  error estimate for blocks of size 2^( 4) =       0.000576387861
  error estimate for blocks of size 2^( 5) =       0.000588922719
  error estimate for blocks of size 2^( 6) =       0.000595468930
  error estimate for blocks of size 2^( 7) =       0.000601183896

      target function =      -0.701807507702
              le_mean =     -22.425481023729
             les_mean =     503.409426956692
             stat err =       0.000590490851
             autocorr =       1.374842876115
   target nu stat err =       0.000590490851
   target dn stat err =       0.007794446653
      target stat err =       0.005553255972
              std dev =       0.712199455675
             le_variance =       0.507228064663

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507295690875
                                         uncertainty =       0.007509561822

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503601065
  error estimate for blocks of size 2^( 2) =       0.000529982530
  error estimate for blocks of size 2^( 3) =       0.000556332058
  error estimate for blocks of size 2^( 4) =       0.000576387861
  error estimate for blocks of size 2^( 5) =       0.000588922719
  error estimate for blocks of size 2^( 6) =       0.000595468930
  error estimate for blocks of size 2^( 7) =       0.000601183896

      target function =      -0.701807507702
              le_mean =     -22.425481023729
             les_mean =     503.409426956692
             stat err =       0.000590490851
             autocorr =       1.374842876115
   target nu stat err =       0.000590490851
   target dn stat err =       0.007794446653
      target stat err =       0.005553255972
              std dev =       0.712199455675
             le_variance =       0.507228064663


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.701807507702        initial  <--
     6.2500e+49     6.2500e+50             0.0000e+00        -0.701807507702
     2.5000e+50     2.5000e+51             0.0000e+00        -0.701807507702
     1.0000e+51     1.0000e+52             0.0000e+00        -0.701807507702

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4717
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2342e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s055 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s055 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=55  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2412e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.4602
    reference variance = 0.387049
====================================================
  Execution time = 4.4906e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s055
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9613e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5617e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496172620127
                                         uncertainty =       0.004258523303

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496172620127
                                         uncertainty =       0.004258523303

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498059641
  error estimate for blocks of size 2^( 2) =       0.000524713342
  error estimate for blocks of size 2^( 3) =       0.000549780334
  error estimate for blocks of size 2^( 4) =       0.000569907897
  error estimate for blocks of size 2^( 5) =       0.000583004131
  error estimate for blocks of size 2^( 6) =       0.000588216824
  error estimate for blocks of size 2^( 7) =       0.000594542159

      target function =      -0.709797579765
              le_mean =     -22.425097141921
             les_mean =     503.381108389328
             stat err =       0.000583917753
             autocorr =       1.374487058945
   target nu stat err =       0.000583917753
   target dn stat err =       0.003822829230
      target stat err =       0.002831620456
              std dev =       0.704362699755
             le_variance =       0.496126812806


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242509714192e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+50, overlap shift 6.2500e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+51, overlap shift 2.5000e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+52, overlap shift 1.0000e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709808047507       residual = 2.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.638717 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0529e+01
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.4397
    reference variance = 0.404016
====================================================
  Execution time = 4.4480e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s055
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9482e-01
  Total weights = 2.0000e+06
  Execution time = 3.7884e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497404748
  error estimate for blocks of size 2^( 2) =       0.000524242851
  error estimate for blocks of size 2^( 3) =       0.000549766321
  error estimate for blocks of size 2^( 4) =       0.000569228333
  error estimate for blocks of size 2^( 5) =       0.000581943831
  error estimate for blocks of size 2^( 6) =       0.000590923325
  error estimate for blocks of size 2^( 7) =       0.000592686968

      target function =      -0.710750015739
              le_mean =     -22.424776641266
             les_mean =     503.365430129323
             stat err =       0.000583695615
             autocorr =       1.377060459324
   target nu stat err =       0.000583695615
   target dn stat err =       0.003181592121
      target stat err =       0.002384698952
              std dev =       0.703436540174
             le_variance =       0.494822966051

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497404748
  error estimate for blocks of size 2^( 2) =       0.000524242851
  error estimate for blocks of size 2^( 3) =       0.000549766321
  error estimate for blocks of size 2^( 4) =       0.000569228333
  error estimate for blocks of size 2^( 5) =       0.000581943831
  error estimate for blocks of size 2^( 6) =       0.000590923325
  error estimate for blocks of size 2^( 7) =       0.000592686968

      target function =      -0.710750015739
              le_mean =     -22.424776641266
             les_mean =     503.365430129323
             stat err =       0.000583695615
             autocorr =       1.377060459324
   target nu stat err =       0.000583695615
   target dn stat err =       0.003181592121
      target stat err =       0.002384698952
              std dev =       0.703436540174
             le_variance =       0.494822966051

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497404748
  error estimate for blocks of size 2^( 2) =       0.000524242851
  error estimate for blocks of size 2^( 3) =       0.000549766321
  error estimate for blocks of size 2^( 4) =       0.000569228333
  error estimate for blocks of size 2^( 5) =       0.000581943831
  error estimate for blocks of size 2^( 6) =       0.000590923325
  error estimate for blocks of size 2^( 7) =       0.000592686968

      target function =      -0.710750015739
              le_mean =     -22.424776641266
             les_mean =     503.365430129323
             stat err =       0.000583695615
             autocorr =       1.377060459324
   target nu stat err =       0.000583695615
   target dn stat err =       0.003181592121
      target stat err =       0.002384698952
              std dev =       0.703436540174
             le_variance =       0.494822966051

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494979874767
                                         uncertainty =       0.002938587956

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497404748
  error estimate for blocks of size 2^( 2) =       0.000524242851
  error estimate for blocks of size 2^( 3) =       0.000549766321
  error estimate for blocks of size 2^( 4) =       0.000569228333
  error estimate for blocks of size 2^( 5) =       0.000581943831
  error estimate for blocks of size 2^( 6) =       0.000590923325
  error estimate for blocks of size 2^( 7) =       0.000592686968

      target function =      -0.710750015739
              le_mean =     -22.424776641266
             les_mean =     503.365430129323
             stat err =       0.000583695615
             autocorr =       1.377060459324
   target nu stat err =       0.000583695615
   target dn stat err =       0.003181592121
      target stat err =       0.002384698952
              std dev =       0.703436540174
             le_variance =       0.494822966051


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710750015739        initial  <--
     6.2500e+50     6.2500e+51             0.0000e+00        -0.710750015739
     2.5000e+51     2.5000e+52             0.0000e+00        -0.710750015739
     1.0000e+52     1.0000e+53             0.0000e+00        -0.710750015739

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4287
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2396e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s056 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s056 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=56  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2413e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.4579
    reference variance = 0.393602
====================================================
  Execution time = 4.4886e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s056
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9776e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5037e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497774225456
                                         uncertainty =       0.003588436336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497774225456
                                         uncertainty =       0.003588436336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498879170
  error estimate for blocks of size 2^( 2) =       0.000525492717
  error estimate for blocks of size 2^( 3) =       0.000552027614
  error estimate for blocks of size 2^( 4) =       0.000571121974
  error estimate for blocks of size 2^( 5) =       0.000584196355
  error estimate for blocks of size 2^( 6) =       0.000591726892
  error estimate for blocks of size 2^( 7) =       0.000597507641

      target function =      -0.708616716077
              le_mean =     -22.425248552539
             les_mean =     503.389533247701
             stat err =       0.000586138215
             autocorr =       1.380413928633
   target nu stat err =       0.000586138215
   target dn stat err =       0.003349327967
      target stat err =       0.002490464123
              std dev =       0.705521688857
             le_variance =       0.497760853448


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242524855254e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+51, overlap shift 6.2500e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708624564391       residual = 2.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708624564391       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.687500000000       residual = 2.43e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.85e+03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+51 is 1.149042e-56

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+52, overlap shift 2.5000e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708624564391       residual = 2.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708624564391       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.750000000000       residual = 8.48e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708624564061       residual = 8.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 5.41e+06           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+52 is 4.899301e-57

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+53, overlap shift 1.0000e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708624564391       residual = 2.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708624564391       residual = 1.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.750000000000       residual = 8.48e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708624564061       residual = 8.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 5.41e+06           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+53 is 1.224825e-57

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.640540 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9930e+01
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.471
    reference variance = 0.85675
====================================================
  Execution time = 4.5301e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s056
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.5507e-01
  Total weights = 2.0000e+06
  Execution time = 3.7768e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000526818055
  error estimate for blocks of size 2^( 2) =       0.000552275242
  error estimate for blocks of size 2^( 3) =       0.000576200446
  error estimate for blocks of size 2^( 4) =       0.000594306844
  error estimate for blocks of size 2^( 5) =       0.000606458451
  error estimate for blocks of size 2^( 6) =       0.000612290828
  error estimate for blocks of size 2^( 7) =       0.000616029460

      target function =      -0.668052522463
              le_mean =     -22.426479086896
             les_mean =     503.502038484596
             stat err =       0.000607271396
             autocorr =       1.328753275316
   target nu stat err =       0.000607271396
   target dn stat err =       0.047362922582
      target stat err =       0.030510948141
              std dev =       0.745033238969
             le_variance =       0.555074527169

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000526818055
  error estimate for blocks of size 2^( 2) =       0.000552275242
  error estimate for blocks of size 2^( 3) =       0.000576200446
  error estimate for blocks of size 2^( 4) =       0.000594306844
  error estimate for blocks of size 2^( 5) =       0.000606458451
  error estimate for blocks of size 2^( 6) =       0.000612290828
  error estimate for blocks of size 2^( 7) =       0.000616029460

      target function =      -0.668052522463
              le_mean =     -22.426479086896
             les_mean =     503.502038484596
             stat err =       0.000607271396
             autocorr =       1.328753275316
   target nu stat err =       0.000607271396
   target dn stat err =       0.047362922582
      target stat err =       0.030510948141
              std dev =       0.745033238969
             le_variance =       0.555074527169

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000526818055
  error estimate for blocks of size 2^( 2) =       0.000552275242
  error estimate for blocks of size 2^( 3) =       0.000576200446
  error estimate for blocks of size 2^( 4) =       0.000594306844
  error estimate for blocks of size 2^( 5) =       0.000606458451
  error estimate for blocks of size 2^( 6) =       0.000612290828
  error estimate for blocks of size 2^( 7) =       0.000616029460

      target function =      -0.668052522463
              le_mean =     -22.426479086896
             les_mean =     503.502038484596
             stat err =       0.000607271396
             autocorr =       1.328753275316
   target nu stat err =       0.000607271396
   target dn stat err =       0.047362922582
      target stat err =       0.030510948141
              std dev =       0.745033238969
             le_variance =       0.555074527169

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.555261430406
                                         uncertainty =       0.047221920366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000526818055
  error estimate for blocks of size 2^( 2) =       0.000552275242
  error estimate for blocks of size 2^( 3) =       0.000576200446
  error estimate for blocks of size 2^( 4) =       0.000594306844
  error estimate for blocks of size 2^( 5) =       0.000606458451
  error estimate for blocks of size 2^( 6) =       0.000612290828
  error estimate for blocks of size 2^( 7) =       0.000616029460

      target function =      -0.668052522463
              le_mean =     -22.426479086896
             les_mean =     503.502038484596
             stat err =       0.000607271396
             autocorr =       1.328753275316
   target nu stat err =       0.000607271396
   target dn stat err =       0.047362922582
      target stat err =       0.030510948141
              std dev =       0.745033238969
             le_variance =       0.555074527169


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.668052522463        initial  <--
     6.2500e+51     6.2500e+52             1.1490e-56        -0.668052522463
     2.5000e+52     2.5000e+53             4.8993e-57        -0.668052522463
     1.0000e+53     1.0000e+54             1.2248e-57        -0.668052522463

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 64.1964
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2413e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s057 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s057 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=57  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2414e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.4158
    reference variance = 0.599339
====================================================
  Execution time = 4.4968e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s057
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 5.0868e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.4907e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508657803489
                                         uncertainty =       0.007260174875

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508657803489
                                         uncertainty =       0.007260174875

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504323757
  error estimate for blocks of size 2^( 2) =       0.000530943695
  error estimate for blocks of size 2^( 3) =       0.000557015685
  error estimate for blocks of size 2^( 4) =       0.000577423112
  error estimate for blocks of size 2^( 5) =       0.000591445263
  error estimate for blocks of size 2^( 6) =       0.000597898819
  error estimate for blocks of size 2^( 7) =       0.000601514208

      target function =      -0.700777495462
              le_mean =     -22.425445139364
             les_mean =     503.409274348062
             stat err =       0.000592070351
             autocorr =       1.378249276775
   target nu stat err =       0.000592070351
   target dn stat err =       0.007842253322
      target stat err =       0.005570517945
              std dev =       0.713221496987
             le_variance =       0.508684903765


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242544513936e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+52, overlap shift 6.2500e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+53, overlap shift 2.5000e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+54, overlap shift 1.0000e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.700820400224       residual = 5.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.641638 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.9882e+01
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.5411
    reference variance = 1.21003
====================================================
  Execution time = 4.6047e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s057
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2424e+01
  VMC Evar = 4.9616e-01
  Total weights = 2.0000e+06
  Execution time = 3.9585e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498076453
  error estimate for blocks of size 2^( 2) =       0.000524897992
  error estimate for blocks of size 2^( 3) =       0.000550288263
  error estimate for blocks of size 2^( 4) =       0.000569595254
  error estimate for blocks of size 2^( 5) =       0.000581257154
  error estimate for blocks of size 2^( 6) =       0.000587189423
  error estimate for blocks of size 2^( 7) =       0.000590998169

      target function =      -0.709782386294
              le_mean =     -22.424422483444
             les_mean =     503.350883773668
             stat err =       0.000582260000
             autocorr =       1.366601495678
   target nu stat err =       0.000582260000
   target dn stat err =       0.003715389084
      target stat err =       0.002752456189
              std dev =       0.704386474713
             le_variance =       0.496160305758

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498076453
  error estimate for blocks of size 2^( 2) =       0.000524897992
  error estimate for blocks of size 2^( 3) =       0.000550288263
  error estimate for blocks of size 2^( 4) =       0.000569595254
  error estimate for blocks of size 2^( 5) =       0.000581257154
  error estimate for blocks of size 2^( 6) =       0.000587189423
  error estimate for blocks of size 2^( 7) =       0.000590998169

      target function =      -0.709782386294
              le_mean =     -22.424422483444
             les_mean =     503.350883773668
             stat err =       0.000582260000
             autocorr =       1.366601495678
   target nu stat err =       0.000582260000
   target dn stat err =       0.003715389084
      target stat err =       0.002752456189
              std dev =       0.704386474713
             le_variance =       0.496160305758

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498076453
  error estimate for blocks of size 2^( 2) =       0.000524897992
  error estimate for blocks of size 2^( 3) =       0.000550288263
  error estimate for blocks of size 2^( 4) =       0.000569595254
  error estimate for blocks of size 2^( 5) =       0.000581257154
  error estimate for blocks of size 2^( 6) =       0.000587189423
  error estimate for blocks of size 2^( 7) =       0.000590998169

      target function =      -0.709782386294
              le_mean =     -22.424422483444
             les_mean =     503.350883773668
             stat err =       0.000582260000
             autocorr =       1.366601495678
   target nu stat err =       0.000582260000
   target dn stat err =       0.003715389084
      target stat err =       0.002752456189
              std dev =       0.704386474713
             le_variance =       0.496160305758

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496142733693
                                         uncertainty =       0.003447007099

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498076453
  error estimate for blocks of size 2^( 2) =       0.000524897992
  error estimate for blocks of size 2^( 3) =       0.000550288263
  error estimate for blocks of size 2^( 4) =       0.000569595254
  error estimate for blocks of size 2^( 5) =       0.000581257154
  error estimate for blocks of size 2^( 6) =       0.000587189423
  error estimate for blocks of size 2^( 7) =       0.000590998169

      target function =      -0.709782386294
              le_mean =     -22.424422483444
             les_mean =     503.350883773668
             stat err =       0.000582260000
             autocorr =       1.366601495678
   target nu stat err =       0.000582260000
   target dn stat err =       0.003715389084
      target stat err =       0.002752456189
              std dev =       0.704386474713
             le_variance =       0.496160305758


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709782386294        initial  <--
     6.2500e+52     6.2500e+53             0.0000e+00        -0.709782386294
     2.5000e+53     2.5000e+54             0.0000e+00        -0.709782386294
     1.0000e+54     1.0000e+55             0.0000e+00        -0.709782386294

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 65.1105
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2500e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s058 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s058 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=58  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2415e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.57
    reference variance = 1.0602
====================================================
  Execution time = 4.5144e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s058
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9468e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5139e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494546158423
                                         uncertainty =       0.003344687659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494546158423
                                         uncertainty =       0.003344687659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497332481
  error estimate for blocks of size 2^( 2) =       0.000524270092
  error estimate for blocks of size 2^( 3) =       0.000550264036
  error estimate for blocks of size 2^( 4) =       0.000570518639
  error estimate for blocks of size 2^( 5) =       0.000581777784
  error estimate for blocks of size 2^( 6) =       0.000589016222
  error estimate for blocks of size 2^( 7) =       0.000594285425

      target function =      -0.710846093305
              le_mean =     -22.425398841816
             les_mean =     503.393192159918
             stat err =       0.000583899518
             autocorr =       1.378423235465
   target nu stat err =       0.000583899518
   target dn stat err =       0.003462430526
      target stat err =       0.002585593462
              std dev =       0.703334339242
             le_variance =       0.494679192758


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242539884182e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+53, overlap shift 6.2500e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+54, overlap shift 2.5000e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+55, overlap shift 1.0000e+56 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710854479337       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.642738 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0289e+01
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.4376
    reference variance = 0.424913
====================================================
  Execution time = 4.4254e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s058
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9854e-01
  Total weights = 2.0000e+06
  Execution time = 3.7665e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499270046
  error estimate for blocks of size 2^( 2) =       0.000525995507
  error estimate for blocks of size 2^( 3) =       0.000552233287
  error estimate for blocks of size 2^( 4) =       0.000572133744
  error estimate for blocks of size 2^( 5) =       0.000586494552
  error estimate for blocks of size 2^( 6) =       0.000593302913
  error estimate for blocks of size 2^( 7) =       0.000599551241

      target function =      -0.708052820222
              le_mean =     -22.425377647361
             les_mean =     503.396103534454
             stat err =       0.000587870613
             autocorr =       1.386412545200
   target nu stat err =       0.000587870613
   target dn stat err =       0.003500367233
      target stat err =       0.002593311348
              std dev =       0.706074469852
             le_variance =       0.498541156977

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499270046
  error estimate for blocks of size 2^( 2) =       0.000525995507
  error estimate for blocks of size 2^( 3) =       0.000552233287
  error estimate for blocks of size 2^( 4) =       0.000572133744
  error estimate for blocks of size 2^( 5) =       0.000586494552
  error estimate for blocks of size 2^( 6) =       0.000593302913
  error estimate for blocks of size 2^( 7) =       0.000599551241

      target function =      -0.708052820222
              le_mean =     -22.425377647361
             les_mean =     503.396103534454
             stat err =       0.000587870613
             autocorr =       1.386412545200
   target nu stat err =       0.000587870613
   target dn stat err =       0.003500367233
      target stat err =       0.002593311348
              std dev =       0.706074469852
             le_variance =       0.498541156977

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499270046
  error estimate for blocks of size 2^( 2) =       0.000525995507
  error estimate for blocks of size 2^( 3) =       0.000552233287
  error estimate for blocks of size 2^( 4) =       0.000572133744
  error estimate for blocks of size 2^( 5) =       0.000586494552
  error estimate for blocks of size 2^( 6) =       0.000593302913
  error estimate for blocks of size 2^( 7) =       0.000599551241

      target function =      -0.708052820222
              le_mean =     -22.425377647361
             les_mean =     503.396103534454
             stat err =       0.000587870613
             autocorr =       1.386412545200
   target nu stat err =       0.000587870613
   target dn stat err =       0.003500367233
      target stat err =       0.002593311348
              std dev =       0.706074469852
             le_variance =       0.498541156977

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498579000748
                                         uncertainty =       0.003241261039

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499270046
  error estimate for blocks of size 2^( 2) =       0.000525995507
  error estimate for blocks of size 2^( 3) =       0.000552233287
  error estimate for blocks of size 2^( 4) =       0.000572133744
  error estimate for blocks of size 2^( 5) =       0.000586494552
  error estimate for blocks of size 2^( 6) =       0.000593302913
  error estimate for blocks of size 2^( 7) =       0.000599551241

      target function =      -0.708052820222
              le_mean =     -22.425377647361
             les_mean =     503.396103534454
             stat err =       0.000587870613
             autocorr =       1.386412545200
   target nu stat err =       0.000587870613
   target dn stat err =       0.003500367233
      target stat err =       0.002593311348
              std dev =       0.706074469852
             le_variance =       0.498541156977


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708052820222        initial  <--
     6.2500e+53     6.2500e+54             0.0000e+00        -0.708052820222
     2.5000e+54     2.5000e+55             0.0000e+00        -0.708052820222
     1.0000e+55     1.0000e+56             0.0000e+00        -0.708052820222

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.1832
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2348e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s059 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s059 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=59  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2416e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.4874
    reference variance = 0.409121
====================================================
  Execution time = 4.5210e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s059
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9192e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.5186e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491984373428
                                         uncertainty =       0.002486813851

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491984373428
                                         uncertainty =       0.002486813851

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495943148
  error estimate for blocks of size 2^( 2) =       0.000523225301
  error estimate for blocks of size 2^( 3) =       0.000549527199
  error estimate for blocks of size 2^( 4) =       0.000569437772
  error estimate for blocks of size 2^( 5) =       0.000582681516
  error estimate for blocks of size 2^( 6) =       0.000590296159
  error estimate for blocks of size 2^( 7) =       0.000593845964

      target function =      -0.712863186172
              le_mean =     -22.425001663719
             les_mean =     503.372618584078
             stat err =       0.000584065353
             autocorr =       1.386944554515
   target nu stat err =       0.000584065353
   target dn stat err =       0.002885548403
      target stat err =       0.002190616221
              std dev =       0.701369526167
             le_variance =       0.491919212236


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242500166372e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 6.2500e+54, overlap shift 6.2500e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712868883614       residual = 1.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 6.2500e+54 is 1.409696e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 2.5000e+55, overlap shift 2.5000e+56 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.0000e+56, overlap shift 1.0000e+57 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712868883614       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.643919 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 6.0403e+01
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.304
    reference variance = 0.53755
====================================================
  Execution time = 4.4325e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s059
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0063e-01
  Total weights = 2.0000e+06
  Execution time = 3.7906e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500315107
  error estimate for blocks of size 2^( 2) =       0.000527406168
  error estimate for blocks of size 2^( 3) =       0.000552847868
  error estimate for blocks of size 2^( 4) =       0.000572116239
  error estimate for blocks of size 2^( 5) =       0.000584397391
  error estimate for blocks of size 2^( 6) =       0.000591158116
  error estimate for blocks of size 2^( 7) =       0.000595109553

      target function =      -0.706529197411
              le_mean =     -22.425898743768
             les_mean =     503.421564628203
             stat err =       0.000585695325
             autocorr =       1.370428183067
   target nu stat err =       0.000585695325
   target dn stat err =       0.005095820901
      target stat err =       0.003708539447
              std dev =       0.707552409915
             le_variance =       0.500630412777

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500315107
  error estimate for blocks of size 2^( 2) =       0.000527406168
  error estimate for blocks of size 2^( 3) =       0.000552847868
  error estimate for blocks of size 2^( 4) =       0.000572116239
  error estimate for blocks of size 2^( 5) =       0.000584397391
  error estimate for blocks of size 2^( 6) =       0.000591158116
  error estimate for blocks of size 2^( 7) =       0.000595109553

      target function =      -0.706529197411
              le_mean =     -22.425898743768
             les_mean =     503.421564628203
             stat err =       0.000585695325
             autocorr =       1.370428183067
   target nu stat err =       0.000585695325
   target dn stat err =       0.005095820901
      target stat err =       0.003708539447
              std dev =       0.707552409915
             le_variance =       0.500630412777

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500315107
  error estimate for blocks of size 2^( 2) =       0.000527406168
  error estimate for blocks of size 2^( 3) =       0.000552847868
  error estimate for blocks of size 2^( 4) =       0.000572116239
  error estimate for blocks of size 2^( 5) =       0.000584397391
  error estimate for blocks of size 2^( 6) =       0.000591158116
  error estimate for blocks of size 2^( 7) =       0.000595109553

      target function =      -0.706529197411
              le_mean =     -22.425898743768
             les_mean =     503.421564628203
             stat err =       0.000585695325
             autocorr =       1.370428183067
   target nu stat err =       0.000585695325
   target dn stat err =       0.005095820901
      target stat err =       0.003708539447
              std dev =       0.707552409915
             le_variance =       0.500630412777

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500648091489
                                         uncertainty =       0.005285163888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500315107
  error estimate for blocks of size 2^( 2) =       0.000527406168
  error estimate for blocks of size 2^( 3) =       0.000552847868
  error estimate for blocks of size 2^( 4) =       0.000572116239
  error estimate for blocks of size 2^( 5) =       0.000584397391
  error estimate for blocks of size 2^( 6) =       0.000591158116
  error estimate for blocks of size 2^( 7) =       0.000595109553

      target function =      -0.706529197411
              le_mean =     -22.425898743768
             les_mean =     503.421564628203
             stat err =       0.000585695325
             autocorr =       1.370428183067
   target nu stat err =       0.000585695325
   target dn stat err =       0.005095820901
      target stat err =       0.003708539447
              std dev =       0.707552409915
             le_variance =       0.500630412777


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706529197411        initial  <--
     6.2500e+54     6.2500e+55             1.4097e-59        -0.706529197411
     2.5000e+55     2.5000e+56             0.0000e+00        -0.706529197411
     1.0000e+56     1.0000e+57             0.0000e+00        -0.706529197411

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.3028
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 2.649825e-01 1 1  ON 0
 uu_1                 1.031922e-01 1 1  ON 1
 uu_2                 2.671327e-03 1 1  ON 2
 uu_3                -5.839186e-02 1 1  ON 3
 uu_4                -9.406147e-02 1 1  ON 4
 uu_5                -1.156986e-01 1 1  ON 5
 uu_6                -1.263122e-01 1 1  ON 6
 uu_7                -1.217707e-01 1 1  ON 7
 uu_8                -1.011989e-01 1 1  ON 8
 uu_9                -5.737995e-02 1 1  ON 9
 ud_0                 3.591613e-01 1 1  ON 10
 ud_1                 1.194849e-01 1 1  ON 11
 ud_2                 1.542463e-03 1 1  ON 12
 ud_3                -6.053600e-02 1 1  ON 13
 ud_4                -9.584507e-02 1 1  ON 14
 ud_5                -1.170942e-01 1 1  ON 15
 ud_6                -1.270522e-01 1 1  ON 16
 ud_7                -1.257851e-01 1 1  ON 17
 ud_8                -1.013484e-01 1 1  ON 18
 ud_9                -5.357665e-02 1 1  ON 19
 eC_0                -4.878054e-01 1 1  ON 20
 eC_1                -3.456323e-01 1 1  ON 21
 eC_2                -9.886234e-02 1 1  ON 22
 eC_3                 7.030298e-02 1 1  ON 23
 eC_4                 1.480204e-01 1 1  ON 24
 eC_5                 2.406073e-01 1 1  ON 25
 eC_6                 2.433777e-01 1 1  ON 26
 eC_7                 1.830765e-01 1 1  ON 27
 eC_8                 4.380190e-02 1 1  ON 28
 eC_9                 1.161657e-03 1 1  ON 29
 eO_0                -8.730713e-01 1 1  ON 30
 eO_1                -5.673305e-01 1 1  ON 31
 eO_2                -1.620356e-01 1 1  ON 32
 eO_3                 1.022998e-01 1 1  ON 33
 eO_4                 2.515925e-01 1 1  ON 34
 eO_5                 3.518854e-01 1 1  ON 35
 eO_6                 3.433105e-01 1 1  ON 36
 eO_7                 2.994457e-01 1 1  ON 37
 eO_8                 1.677334e-01 1 1  ON 38
 eO_9                 6.765612e-02 1 1  ON 39
eH1_0                -1.428379e-01 1 1  ON 40
eH1_1                -3.992997e-02 1 1  ON 41
eH1_2                -2.219788e-02 1 1  ON 42
eH1_3                -2.961675e-02 1 1  ON 43
eH1_4                 3.124522e-03 1 1  ON 44
eH1_5                 2.093487e-02 1 1  ON 45
eH1_6                 4.051066e-02 1 1  ON 46
eH1_7                 3.432390e-02 1 1  ON 47
eH1_8                 5.291659e-02 1 1  ON 48
eH1_9                 5.937429e-02 1 1  ON 49
eH2_0                -1.535627e-01 1 1  ON 50
eH2_1                -5.047042e-02 1 1  ON 51
eH2_2                -2.833244e-02 1 1  ON 52
eH2_3                -3.306173e-02 1 1  ON 53
eH2_4                -5.914283e-03 1 1  ON 54
eH2_5                 8.108544e-03 1 1  ON 55
eH2_6                 3.304818e-02 1 1  ON 56
eH2_7                 4.808722e-02 1 1  ON 57
eH2_8                 8.349927e-02 1 1  ON 58
eH2_9                 7.876878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.2371e+02 secs
  Total Execution time = 7.5016e+03 secs

=========================================================
  A new xml input file : FORM.s059.cont.xml
