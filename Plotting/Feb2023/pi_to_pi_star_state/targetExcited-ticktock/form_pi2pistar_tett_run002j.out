Rank =    0  Free Memory = 89264 MB
Rank =    1  Free Memory = 89264 MB
Rank =    2  Free Memory = 89264 MB
Rank =    3  Free Memory = 89264 MB
Rank =    4  Free Memory = 89264 MB
Rank =    5  Free Memory = 89264 MB
Rank =    6  Free Memory = 89264 MB
Rank =    7  Free Memory = 89264 MB
Rank =    8  Free Memory = 89264 MB
Rank =    9  Free Memory = 89264 MB
Rank =   10  Free Memory = 89264 MB
Rank =   11  Free Memory = 89264 MB
Rank =   12  Free Memory = 89264 MB
Rank =   13  Free Memory = 89264 MB
Rank =   14  Free Memory = 89264 MB
Rank =   15  Free Memory = 89254 MB
Rank =   16  Free Memory = 89251 MB
Rank =   17  Free Memory = 89251 MB
Rank =   18  Free Memory = 89251 MB
Rank =   19  Free Memory = 89250 MB
Rank =   20  Free Memory = 89250 MB
Rank =   21  Free Memory = 89249 MB
Rank =   22  Free Memory = 89249 MB
Rank =   23  Free Memory = 89249 MB
Rank =   24  Free Memory = 89249 MB
Rank =   25  Free Memory = 89249 MB
Rank =   26  Free Memory = 89249 MB
Rank =   27  Free Memory = 89249 MB
Rank =   28  Free Memory = 89249 MB
Rank =   29  Free Memory = 89249 MB
Rank =   30  Free Memory = 89249 MB
Rank =   31  Free Memory = 89249 MB
Rank =   32  Free Memory = 86441 MB
Rank =   33  Free Memory = 86441 MB
Rank =   34  Free Memory = 86441 MB
Rank =   35  Free Memory = 86441 MB
Rank =   36  Free Memory = 86441 MB
Rank =   37  Free Memory = 86441 MB
Rank =   38  Free Memory = 86441 MB
Rank =   39  Free Memory = 86441 MB
Rank =   40  Free Memory = 86441 MB
Rank =   41  Free Memory = 86441 MB
Rank =   42  Free Memory = 86441 MB
Rank =   43  Free Memory = 86441 MB
Rank =   44  Free Memory = 86441 MB
Rank =   45  Free Memory = 86441 MB
Rank =   46  Free Memory = 86441 MB
Rank =   47  Free Memory = 86441 MB
Rank =   48  Free Memory = 86441 MB
Rank =   49  Free Memory = 86441 MB
Rank =   50  Free Memory = 86441 MB
Rank =   51  Free Memory = 86441 MB
Rank =   52  Free Memory = 86441 MB
Rank =   53  Free Memory = 86441 MB
Rank =   54  Free Memory = 86441 MB
Rank =   55  Free Memory = 86441 MB
Rank =   56  Free Memory = 86441 MB
Rank =   57  Free Memory = 86441 MB
Rank =   58  Free Memory = 86441 MB
Rank =   59  Free Memory = 86441 MB
Rank =   60  Free Memory = 86441 MB
Rank =   61  Free Memory = 86441 MB
Rank =   62  Free Memory = 86441 MB
Rank =   63  Free Memory = 86441 MB
Rank =   64  Free Memory = 87397 MB
Rank =   65  Free Memory = 87397 MB
Rank =   66  Free Memory = 87397 MB
Rank =   67  Free Memory = 87397 MB
Rank =   68  Free Memory = 87397 MB
Rank =   69  Free Memory = 87396 MB
Rank =   70  Free Memory = 87396 MB
Rank =   71  Free Memory = 87396 MB
Rank =   72  Free Memory = 87396 MB
Rank =   73  Free Memory = 87396 MB
Rank =   74  Free Memory = 87396 MB
Rank =   75  Free Memory = 87396 MB
Rank =   76  Free Memory = 87396 MB
Rank =   77  Free Memory = 87396 MB
Rank =   78  Free Memory = 87396 MB
Rank =   79  Free Memory = 87396 MB
Rank =   80  Free Memory = 87396 MB
Rank =   81  Free Memory = 87396 MB
Rank =   82  Free Memory = 87396 MB
Rank =   83  Free Memory = 87396 MB
Rank =   84  Free Memory = 87396 MB
Rank =   85  Free Memory = 87396 MB
Rank =   86  Free Memory = 87396 MB
Rank =   87  Free Memory = 87396 MB
Rank =   88  Free Memory = 87396 MB
Rank =   89  Free Memory = 87396 MB
Rank =   90  Free Memory = 87396 MB
Rank =   91  Free Memory = 87396 MB
Rank =   92  Free Memory = 87396 MB
Rank =   93  Free Memory = 87396 MB
Rank =   94  Free Memory = 87396 MB
Rank =   95  Free Memory = 87396 MB
Rank =   96  Free Memory = 88302 MB
Rank =   97  Free Memory = 88302 MB
Rank =   98  Free Memory = 88302 MB
Rank =   99  Free Memory = 88302 MB
Rank =  100  Free Memory = 88302 MB
Rank =  101  Free Memory = 88302 MB
Rank =  102  Free Memory = 88302 MB
Rank =  103  Free Memory = 88302 MB
Rank =  104  Free Memory = 88302 MB
Rank =  105  Free Memory = 88301 MB
Rank =  106  Free Memory = 88301 MB
Rank =  107  Free Memory = 88301 MB
Rank =  108  Free Memory = 88301 MB
Rank =  109  Free Memory = 88301 MB
Rank =  110  Free Memory = 88301 MB
Rank =  111  Free Memory = 88301 MB
Rank =  112  Free Memory = 88301 MB
Rank =  113  Free Memory = 88301 MB
Rank =  114  Free Memory = 88301 MB
Rank =  115  Free Memory = 88301 MB
Rank =  116  Free Memory = 88301 MB
Rank =  117  Free Memory = 88301 MB
Rank =  118  Free Memory = 88301 MB
Rank =  119  Free Memory = 88301 MB
Rank =  120  Free Memory = 88301 MB
Rank =  121  Free Memory = 88301 MB
Rank =  122  Free Memory = 88301 MB
Rank =  123  Free Memory = 88301 MB
Rank =  124  Free Memory = 88301 MB
Rank =  125  Free Memory = 88301 MB
Rank =  126  Free Memory = 88301 MB
Rank =  127  Free Memory = 88301 MB
  Input file(s): opt_form_pi2pistar_tett_run002j.xml 

=====================================================
                    QMCPACK 3.7.9

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: gvp
  Last git commit: a1d851bbe8d902a0d3168a885b757a378aeaab54-dirty
  Last git commit date: Mon Feb 13 11:52:39 2023 -0800
  Last git commit subject: Print param update magnitude and largest update
=====================================================
  Global options 

  Total number of MPI ranks = 128
  Number of MPI groups      = 1
  MPI group ID              = 0
  Number of ranks in group  = 128
  MPI ranks per node        = 32
  OMP 1st level threads     = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Structure-of-arrays (SoA) optimization enabled

  Input XML = opt_form_pi2pistar_tett_run002j.xml

  Project = FORM
  date    = 2023-03-15 17:52:05 PDT
  host    = n0103.savio3

 Random Number
 -------------
  Offset for the random number seeds based on time: 53

  Range of prime numbers to use as seeds over processors and threads = 257-1093


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 12

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 4

 Wavefunction setup: 
 ------------------- 
  Name: psi0

   Jastrow
   -------
    Name: J2   Type: Two-Body   Function: Bspline

    Radial function for species: u - u
     Number of parameters: 10
     Cusp: -0.25
     Cutoff radius: 10

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     uu_0                 2.552564e-01    1         1  ON     0
     uu_1                 9.297146e-02    1         1  ON     1
     uu_2                -7.920286e-03    1         1  ON     2
     uu_3                -6.923399e-02    1         1  ON     3
     uu_4                -1.052604e-01    1         1  ON     4
     uu_5                -1.267169e-01    1         1  ON     5
     uu_6                -1.374582e-01    1         1  ON     6
     uu_7                -1.336277e-01    1         1  ON     7
     uu_8                -1.132616e-01    1         1  ON     8
     uu_9                -6.856223e-02    1         1  ON     9

    Radial function for species: u - d
     Number of parameters: 10
     Cusp: -5.000000e-01
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     ud_0                 3.731544e-01    1         1  ON     0
     ud_1                 1.324656e-01    1         1  ON     1
     ud_2                 1.338636e-02    1         1  ON     2
     ud_3                -4.969111e-02    1         1  ON     3
     ud_4                -8.583432e-02    1         1  ON     4
     ud_5                -1.074506e-01    1         1  ON     5
     ud_6                -1.175900e-01    1         1  ON     6
     ud_7                -1.128472e-01    1         1  ON     7
     ud_8                -9.300090e-02    1         1  ON     8
     ud_9                -5.426882e-02    1         1  ON     9


   Jastrow
   -------
    Name: J1   Type: One-Body   Function: Bspline

    Radial function for element: C
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eC_0                -4.979348e-01    1         1  ON     0
     eC_1                -3.532771e-01    1         1  ON     1
     eC_2                -1.036266e-01    1         1  ON     2
     eC_3                 6.840189e-02    1         1  ON     3
     eC_4                 1.507106e-01    1         1  ON     4
     eC_5                 2.326891e-01    1         1  ON     5
     eC_6                 2.311927e-01    1         1  ON     6
     eC_7                 1.913392e-01    1         1  ON     7
     eC_8                 7.350101e-02    1         1  ON     8
     eC_9                 5.800106e-03    1         1  ON     9

    Radial function for element: O
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eO_0                -8.991038e-01    1         1  ON     0
     eO_1                -5.913999e-01    1         1  ON     1
     eO_2                -1.810805e-01    1         1  ON     2
     eO_3                 8.172785e-02    1         1  ON     3
     eO_4                 2.361583e-01    1         1  ON     4
     eO_5                 3.379148e-01    1         1  ON     5
     eO_6                 3.342742e-01    1         1  ON     6
     eO_7                 2.985276e-01    1         1  ON     7
     eO_8                 2.076720e-01    1         1  ON     8
     eO_9                 1.093498e-01    1         1  ON     9

    Radial function for element: H1
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH1_0                -1.333662e-01    1         1  ON     0
     eH1_1                -3.149677e-02    1         1  ON     1
     eH1_2                -1.524322e-02    1         1  ON     2
     eH1_3                -2.543346e-02    1         1  ON     3
     eH1_4                 3.820773e-03    1         1  ON     4
     eH1_5                 1.895373e-02    1         1  ON     5
     eH1_6                 3.983370e-02    1         1  ON     6
     eH1_7                 4.319402e-02    1         1  ON     7
     eH1_8                 3.913136e-02    1         1  ON     8
     eH1_9                 4.724031e-02    1         1  ON     9

    Radial function for element: H2
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH2_0                -1.451078e-01    1         1  ON     0
     eH2_1                -4.404086e-02    1         1  ON     1
     eH2_2                -2.577917e-02    1         1  ON     2
     eH2_3                -3.487602e-02    1         1  ON     3
     eH2_4                -6.873062e-03    1         1  ON     4
     eH2_5                 8.664230e-03    1         1  ON     5
     eH2_6                 3.559350e-02    1         1  ON     6
     eH2_7                 4.803406e-02    1         1  ON     7
     eH2_8                 6.894747e-02    1         1  ON     8
     eH2_9                 6.265784e-02    1         1  ON     9

  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  LCAO: SoaAtomicBasisSet<MultiQuintic,0>
  AO BasisSet for C
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for O
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.018591e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for H1
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

  AO BasisSet for H2
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with '' basis set.
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with '' basis set.
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 140 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 1.014633e+00
Norm of qchem ci vector (sum of qchem_ci^2): 0.000000e+00
Found 28 unique up determinants.
Found 28 unique down determinants.
Number of terms in pairs array: 12
Number of terms in pairs array: 12
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec

  ECPotential builder for pseudopotential 

  Adding pseudopotential for C
   Linear grid  ri=0.000000e+00 rf=1.000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.405000e+00
  Using global grid with delta = 1.000000e-03
   Making L=1 a local potential with a radial cutoff of 9.999000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.405000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.4050000000e+00

  Adding pseudopotential for O
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0750000000e+00
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0750000000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0750000000e+00

  Adding pseudopotential for H1
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03

  Adding pseudopotential for H2
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03
  QMCHamiltonian::addOperator LocalECP to H, physical Hamiltonian 

  Using NonLocalECP potential 
    Maximum grid on a sphere for NonLocalECPotential: 12
  QMCHamiltonian::addOperator NonLocalECP to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type pseudo named NonLocalECP
  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    5 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 10
ParticleSetPool::randomize 
  Initialization Execution time = 9.9756e-01 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet 'e' contains 12 particles :  u(6) d(6)

    u  4.0107225728e-02 -5.0659535091e-01 -4.8356690577e-01
    u -2.0203417087e-01 -1.2691590666e+00 -2.1169263951e+00
    u  2.9913287695e-01 -2.3710879234e-01  2.0101719070e+00
    u  4.8474243406e-02 -5.3051852953e-01  9.5378285444e-01
    u -5.5511775119e-01 -9.8683271286e-02  1.4043240644e+00
    u  6.9646297924e-01  2.5004217823e+00 -2.4744046405e+00
    d -1.1004432466e+00 -7.1118992563e-01 -1.4300801983e+00
    d -3.6824818327e-02  7.5687344105e-01 -1.6708867165e+00
    d -9.4375526199e-01  1.5348935511e-01  1.1974289766e+00
    d -8.9321447322e-02 -6.9596903295e-02  1.4810785623e+00
    (... and 2 more particle positions ...)

  Distance table for similar particles (A-A):
    source/target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  ParticleSet 'ion0' contains 4 particles :  C(1) O(1) H1(1) H2(1)

    C  0.0000000000e+00  0.0000000000e+00 -1.1394765782e+00
    O  0.0000000000e+00  0.0000000000e+00  1.1440287480e+00
    H1  0.0000000000e+00  1.7662761033e+00 -2.2339863698e+00
    H2  0.0000000000e+00 -1.7662761033e+00 -2.2339863698e+00

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  LocalECP        LocalECPotential: ion0
  NonLocalECP     NonLocalECPotential: ion0
  IonIon          CoulombAA source/target ion0


Loop execution max-interations = 60
Inside LM engine constructor, num_params is: 0 and _total_num_params is: 0

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s000 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02

=========================================================
  Start VMC
  File Root FORM.s000 append = no 
=========================================================
Resetting walkers
  Using the current 1 walkers.
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000000000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000000000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000000000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000000000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000000000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: 0 and ratio_threshold_: 0.0000000000e+00
Allocating full size _hmat_temp and _smat_temp
Inside LM engine's get_param, num_params is: 60
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.4163
    reference variance = 0.615495
====================================================
  Execution time = 7.6742e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s000
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9560e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5858e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495506833180
                                         uncertainty =       0.003368964089

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495506833180
                                         uncertainty =       0.003368964089

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497793445
  error estimate for blocks of size 2^( 2) =       0.000524020096
  error estimate for blocks of size 2^( 3) =       0.000550121589
  error estimate for blocks of size 2^( 4) =       0.000568983840
  error estimate for blocks of size 2^( 5) =       0.000580947021
  error estimate for blocks of size 2^( 6) =       0.000588752870
  error estimate for blocks of size 2^( 7) =       0.000594479329

      target function =      -0.710153268171
              le_mean =     -22.426918717572
             les_mean =     503.462279544686
             stat err =       0.000583290765
             autocorr =       1.373004162422
   target nu stat err =       0.000583290765
   target dn stat err =       0.003704649250
      target stat err =       0.002759097975
              std dev =       0.703986241275
             le_variance =       0.495596627904


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy-2.242691871757e+01 
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e-01, overlap shift 2.5000e+00 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710162902291       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710176418071       residual = 8.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710185158094       residual = 5.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710192065288       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710194281855       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710196097923       residual = 7.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710197775781       residual = 6.77e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710198237925       residual = 7.42e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710200313417       residual = 4.42e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710201103181       residual = 5.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710202541729       residual = 2.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710203383147       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710203857647       residual = 9.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710204551556       residual = 1.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710204757077       residual = 1.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710205436736       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710205633476       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710206882589       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710207603141       residual = 4.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710208068972       residual = 3.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710208446943       residual = 2.28e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710209018837       residual = 2.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710209296304       residual = 1.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710209382066       residual = 7.57e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710209274358       residual = 4.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710209244040       residual = 2.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710209290648       residual = 9.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710209312784       residual = 4.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710209382782       residual = 2.49e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710209382892       residual = 1.23e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.710209330735       residual = 1.35e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.710209333850       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.710209312629       residual = 3.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e-01 is 2.052936e-03

solving harmonic davidson linear method for identity shift 1.0000e+00, overlap shift 1.0000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710162902291       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710166784082       residual = 8.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710169227400       residual = 5.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710171262484       residual = 1.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710171890010       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710172347223       residual = 6.82e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710172855172       residual = 6.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710172956112       residual = 7.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710173469410       residual = 3.75e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710173974958       residual = 4.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710174113151       residual = 2.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710174344700       residual = 1.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710174408648       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710174536513       residual = 7.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710174754016       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710174894078       residual = 1.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710174967625       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710175259074       residual = 8.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710175436167       residual = 3.95e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710175552253       residual = 3.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710175639077       residual = 1.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710175771801       residual = 1.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710175830830       residual = 9.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710175843449       residual = 5.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710175808497       residual = 3.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710175798703       residual = 1.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710175811787       residual = 4.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710175816678       residual = 2.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710175830206       residual = 1.60e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710175829422       residual = 8.25e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+00 is 5.096082e-04

solving harmonic davidson linear method for identity shift 4.0000e+00, overlap shift 4.0000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710162902291       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710163910238       residual = 8.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710164539542       residual = 5.83e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710165071822       residual = 1.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710165234356       residual = 1.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710165348171       residual = 6.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710165481951       residual = 6.20e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710165505631       residual = 7.51e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.710165631654       residual = 4.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.710165747023       residual = 4.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710165805471       residual = 2.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.710165850746       residual = 2.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.710165876933       residual = 1.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.710165908930       residual = 7.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.710165965282       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.710165999915       residual = 9.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.710166020160       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.710166091299       residual = 7.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.710166134958       residual = 3.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.710166163970       residual = 2.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.710166185135       residual = 1.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.710166217494       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.710166231501       residual = 9.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.710166234003       residual = 4.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.710166224830       residual = 2.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.710166222309       residual = 1.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.710166225706       residual = 4.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710166226871       residual = 2.50e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.710166230006       residual = 1.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.710166229724       residual = 7.47e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+00 is 1.276059e-04

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.152071 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0276e+02
  </log>
  <optVariables href="FORM.s000.opt.xml">
uu_0  2.553316e-01                 1 1 ON  0
uu_1  9.304103e-02                 1 1 ON  1
uu_2  -7.909869e-03                1 1 ON  2
uu_3  -6.923091e-02                1 1 ON  3
uu_4  -1.052688e-01                1 1 ON  4
uu_5  -1.267087e-01                1 1 ON  5
uu_6  -1.374319e-01                1 1 ON  6
uu_7  -1.336219e-01                1 1 ON  7
uu_8  -1.132532e-01                1 1 ON  8
uu_9  -6.865555e-02                1 1 ON  9
ud_0  3.732527e-01                 1 1 ON  10
ud_1  1.325662e-01                 1 1 ON  11
ud_2  1.346424e-02                 1 1 ON  12
ud_3  -4.963215e-02                1 1 ON  13
ud_4  -8.581580e-02                1 1 ON  14
ud_5  -1.074560e-01                1 1 ON  15
ud_6  -1.176388e-01                1 1 ON  16
ud_7  -1.129996e-01                1 1 ON  17
ud_8  -9.316484e-02                1 1 ON  18
ud_9  -5.433729e-02                1 1 ON  19
eC_0  -4.982138e-01                1 1 ON  20
eC_1  -3.534916e-01                1 1 ON  21
eC_2  -1.036992e-01                1 1 ON  22
eC_3  6.830877e-02                 1 1 ON  23
eC_4  1.505361e-01                 1 1 ON  24
eC_5  2.327557e-01                 1 1 ON  25
eC_6  2.313033e-01                 1 1 ON  26
eC_7  1.916792e-01                 1 1 ON  27
eC_8  7.379148e-02                 1 1 ON  28
eC_9  5.841826e-03                 1 1 ON  29
eO_0  -8.993862e-01                1 1 ON  30
eO_1  -5.916459e-01                1 1 ON  31
eO_2  -1.814139e-01                1 1 ON  32
eO_3  8.158467e-02                 1 1 ON  33
eO_4  2.360362e-01                 1 1 ON  34
eO_5  3.378479e-01                 1 1 ON  35
eO_6  3.344104e-01                 1 1 ON  36
eO_7  2.988612e-01                 1 1 ON  37
eO_8  2.081816e-01                 1 1 ON  38
eO_9  1.095372e-01                 1 1 ON  39
eH1_0 -1.337203e-01                1 1 ON  40
eH1_1 -3.175247e-02                1 1 ON  41
eH1_2 -1.541445e-02                1 1 ON  42
eH1_3 -2.538552e-02                1 1 ON  43
eH1_4 3.827032e-03                 1 1 ON  44
eH1_5 1.907080e-02                 1 1 ON  45
eH1_6 4.006350e-02                 1 1 ON  46
eH1_7 4.323667e-02                 1 1 ON  47
eH1_8 3.921470e-02                 1 1 ON  48
eH1_9 4.739233e-02                 1 1 ON  49
eH2_0 -1.451070e-01                1 1 ON  50
eH2_1 -4.398705e-02                1 1 ON  51
eH2_2 -2.569644e-02                1 1 ON  52
eH2_3 -3.501654e-02                1 1 ON  53
eH2_4 -6.886818e-03                1 1 ON  54
eH2_5 8.754968e-03                 1 1 ON  55
eH2_6 3.558899e-02                 1 1 ON  56
eH2_7 4.776016e-02                 1 1 ON  57
eH2_8 6.873493e-02                 1 1 ON  58
eH2_9 6.291592e-02                 1 1 ON  59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -22.4644
    reference variance = 0.381749
====================================================
  Execution time = 7.5424e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s000
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9368e-01
  Total weights = 2.0000e+06
  Execution time = 6.5116e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493687230688
                                         uncertainty =       0.002710209760

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493687230688
                                         uncertainty =       0.002710209760

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496811863
  error estimate for blocks of size 2^( 2) =       0.000523100342
  error estimate for blocks of size 2^( 3) =       0.000548640237
  error estimate for blocks of size 2^( 4) =       0.000568025944
  error estimate for blocks of size 2^( 5) =       0.000580064958
  error estimate for blocks of size 2^( 6) =       0.000587815538
  error estimate for blocks of size 2^( 7) =       0.000593007772

      target function =      -0.711561039765
              le_mean =     -22.428139587350
             les_mean =     503.515089157664
             stat err =       0.000582228553
             autocorr =       1.373419103699
   target nu stat err =       0.000582228553
   target dn stat err =       0.003197911088
      target stat err =       0.002413906724
              std dev =       0.702598074887
             le_variance =       0.493644054835

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493828687358
                                         uncertainty =       0.002708556421

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493828687358
                                         uncertainty =       0.002708556421

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496883005
  error estimate for blocks of size 2^( 2) =       0.000523164630
  error estimate for blocks of size 2^( 3) =       0.000548698197
  error estimate for blocks of size 2^( 4) =       0.000568075683
  error estimate for blocks of size 2^( 5) =       0.000580095180
  error estimate for blocks of size 2^( 6) =       0.000587849400
  error estimate for blocks of size 2^( 7) =       0.000593059998

      target function =      -0.711457581379
              le_mean =     -22.428145249322
             les_mean =     503.515484519238
             stat err =       0.000582270065
             autocorr =       1.373221648177
   target nu stat err =       0.000582270065
   target dn stat err =       0.003196887650
      target stat err =       0.002412531842
              std dev =       0.702698684669
             le_variance =       0.493785441436

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493764950838
                                         uncertainty =       0.002709192425

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493764950838
                                         uncertainty =       0.002709192425

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496850950
  error estimate for blocks of size 2^( 2) =       0.000523135504
  error estimate for blocks of size 2^( 3) =       0.000548671741
  error estimate for blocks of size 2^( 4) =       0.000568052915
  error estimate for blocks of size 2^( 5) =       0.000580081017
  error estimate for blocks of size 2^( 6) =       0.000587833793
  error estimate for blocks of size 2^( 7) =       0.000593036213

      target function =      -0.711504203325
              le_mean =     -22.428142231639
             les_mean =     503.515285448924
             stat err =       0.000582250985
             autocorr =       1.373308834567
   target nu stat err =       0.000582250985
   target dn stat err =       0.003197258714
      target stat err =       0.002413085780
              std dev =       0.702653352046
             le_variance =       0.493721733141

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493696959561
                                         uncertainty =       0.002710074731

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493696959561
                                         uncertainty =       0.002710074731

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496816756
  error estimate for blocks of size 2^( 2) =       0.000523104706
  error estimate for blocks of size 2^( 3) =       0.000548644110
  error estimate for blocks of size 2^( 4) =       0.000568029222
  error estimate for blocks of size 2^( 5) =       0.000580066822
  error estimate for blocks of size 2^( 6) =       0.000587817688
  error estimate for blocks of size 2^( 7) =       0.000593011232

      target function =      -0.711553925904
              le_mean =     -22.428139846334
             les_mean =     503.515110498083
             stat err =       0.000582231241
             autocorr =       1.373404733352
   target nu stat err =       0.000582231241
   target dn stat err =       0.003197823418
      target stat err =       0.002413799418
              std dev =       0.702604994443
             le_variance =       0.493653778216


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711561039765        initial  <--
     2.5000e-01     2.5000e+00             2.0529e-03        -0.711457581379
     1.0000e+00     1.0000e+01             5.0961e-04        -0.711504203325
     4.0000e+00     4.0000e+01             1.2761e-04        -0.711553925904

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.2813
  </log>
  <optVariables href="FORM.s000.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1305e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s001 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s001 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=1  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2440e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.4272
    reference variance = 0.260928
====================================================
  Execution time = 7.7706e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s001
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0119e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5379e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501141380928
                                         uncertainty =       0.008425939034

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501141380928
                                         uncertainty =       0.008425939034

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500597005
  error estimate for blocks of size 2^( 2) =       0.000526598032
  error estimate for blocks of size 2^( 3) =       0.000552009510
  error estimate for blocks of size 2^( 4) =       0.000571855832
  error estimate for blocks of size 2^( 5) =       0.000583338884
  error estimate for blocks of size 2^( 6) =       0.000590594857
  error estimate for blocks of size 2^( 7) =       0.000594438715

      target function =      -0.706068801766
              le_mean =     -22.426498652192
             les_mean =     503.449036268903
             stat err =       0.000585057072
             autocorr =       1.365903358851
   target nu stat err =       0.000585057072
   target dn stat err =       0.008704487753
      target stat err =       0.006281412405
              std dev =       0.707951073683
             le_variance =       0.501194722729


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242649865219e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+00, overlap shift 2.5000e+01 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706124238116       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706126540597       residual = 9.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706127636420       residual = 5.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706128545999       residual = 2.42e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706128948858       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706129324080       residual = 8.94e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706129690679       residual = 1.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706129858775       residual = 7.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706130254376       residual = 9.93e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706130393735       residual = 3.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.706130456397       residual = 4.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.706130633736       residual = 5.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.706130713454       residual = 6.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706130770809       residual = 1.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706130883051       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706130951081       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706130966300       residual = 9.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706131019692       residual = 7.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706131064365       residual = 6.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706131131742       residual = 2.44e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.706131185217       residual = 2.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.706131227946       residual = 1.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.706131208154       residual = 9.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706131251059       residual = 8.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706131260316       residual = 4.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.706131274830       residual = 2.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706131273840       residual = 1.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.706131277525       residual = 9.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.706131263059       residual = 9.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.706131267862       residual = 2.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706131271319       residual = 1.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.706131272177       residual = 8.42e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+00 is 2.328463e-04

solving harmonic davidson linear method for identity shift 1.0000e+01, overlap shift 1.0000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706124238116       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706124821938       residual = 9.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706125099251       residual = 5.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706125329488       residual = 2.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706125432138       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706125525165       residual = 8.89e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706125617221       residual = 1.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706125659650       residual = 7.47e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706125759875       residual = 9.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706125794162       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.706125809894       residual = 4.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.706125857401       residual = 5.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.706125873849       residual = 6.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706125889732       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706125916124       residual = 1.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706125933894       residual = 1.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706125937281       residual = 8.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706125950711       residual = 6.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706125962223       residual = 5.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706125978759       residual = 2.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.706125992096       residual = 2.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.706126002682       residual = 1.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.706125997690       residual = 9.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706126008281       residual = 8.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706126010535       residual = 4.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.706126014104       residual = 2.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706126013764       residual = 1.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.706126014737       residual = 9.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.706126011143       residual = 8.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.706126012289       residual = 2.61e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706126013183       residual = 1.67e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.706126013366       residual = 7.80e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+01 is 5.803867e-05

solving harmonic davidson linear method for identity shift 4.0000e+01, overlap shift 4.0000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706124238116       residual = 3.79e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706124384593       residual = 9.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706124454134       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706124511875       residual = 2.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706124537665       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706124560867       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706124583904       residual = 1.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706124594539       residual = 7.47e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706124619672       residual = 9.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706124628212       residual = 3.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.706124632157       residual = 4.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.706124644237       residual = 5.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.706124648126       residual = 6.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706124652192       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706124658678       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706124663166       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706124664012       residual = 8.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706124667364       residual = 6.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706124670255       residual = 5.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706124674370       residual = 2.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.706124677703       residual = 2.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.706124680343       residual = 1.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.706124679092       residual = 9.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706124681731       residual = 8.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706124682291       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.706124683180       residual = 2.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706124683089       residual = 1.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.706124683335       residual = 8.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.706124682438       residual = 8.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.706124682721       residual = 2.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706124682947       residual = 1.65e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.706124682991       residual = 7.65e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+01 is 1.449883e-05

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.188294 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0313e+02
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 2.552709e-01 1 1  ON 0
 uu_1                 9.298552e-02 1 1  ON 1
 uu_2                -7.910443e-03 1 1  ON 2
 uu_3                -6.922633e-02 1 1  ON 3
 uu_4                -1.052565e-01 1 1  ON 4
 uu_5                -1.267191e-01 1 1  ON 5
 uu_6                -1.374689e-01 1 1  ON 6
 uu_7                -1.336387e-01 1 1  ON 7
 uu_8                -1.132818e-01 1 1  ON 8
 uu_9                -6.856460e-02 1 1  ON 9
 ud_0                 3.731471e-01 1 1  ON 10
 ud_1                 1.324534e-01 1 1  ON 11
 ud_2                 1.337010e-02 1 1  ON 12
 ud_3                -4.971504e-02 1 1  ON 13
 ud_4                -8.585502e-02 1 1  ON 14
 ud_5                -1.074611e-01 1 1  ON 15
 ud_6                -1.175939e-01 1 1  ON 16
 ud_7                -1.128420e-01 1 1  ON 17
 ud_8                -9.296806e-02 1 1  ON 18
 ud_9                -5.422471e-02 1 1  ON 19
 eC_0                -4.979625e-01 1 1  ON 20
 eC_1                -3.533087e-01 1 1  ON 21
 eC_2                -1.036333e-01 1 1  ON 22
 eC_3                 6.840840e-02 1 1  ON 23
 eC_4                 1.507068e-01 1 1  ON 24
 eC_5                 2.327156e-01 1 1  ON 25
 eC_6                 2.312010e-01 1 1  ON 26
 eC_7                 1.913411e-01 1 1  ON 27
 eC_8                 7.352138e-02 1 1  ON 28
 eC_9                 5.806700e-03 1 1  ON 29
 eO_0                -8.991331e-01 1 1  ON 30
 eO_1                -5.914242e-01 1 1  ON 31
 eO_2                -1.811083e-01 1 1  ON 32
 eO_3                 8.169749e-02 1 1  ON 33
 eO_4                 2.361257e-01 1 1  ON 34
 eO_5                 3.378799e-01 1 1  ON 35
 eO_6                 3.343174e-01 1 1  ON 36
 eO_7                 2.985773e-01 1 1  ON 37
 eO_8                 2.077301e-01 1 1  ON 38
 eO_9                 1.093651e-01 1 1  ON 39
eH1_0                -1.333538e-01 1 1  ON 40
eH1_1                -3.148702e-02 1 1  ON 41
eH1_2                -1.524388e-02 1 1  ON 42
eH1_3                -2.543555e-02 1 1  ON 43
eH1_4                 3.803628e-03 1 1  ON 44
eH1_5                 1.893767e-02 1 1  ON 45
eH1_6                 3.982883e-02 1 1  ON 46
eH1_7                 4.321410e-02 1 1  ON 47
eH1_8                 3.912336e-02 1 1  ON 48
eH1_9                 4.723965e-02 1 1  ON 49
eH2_0                -1.450985e-01 1 1  ON 50
eH2_1                -4.402972e-02 1 1  ON 51
eH2_2                -2.577501e-02 1 1  ON 52
eH2_3                -3.487474e-02 1 1  ON 53
eH2_4                -6.883879e-03 1 1  ON 54
eH2_5                 8.665412e-03 1 1  ON 55
eH2_6                 3.558684e-02 1 1  ON 56
eH2_7                 4.803261e-02 1 1  ON 57
eH2_8                 6.890795e-02 1 1  ON 58
eH2_9                 6.267276e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -22.2972
    reference variance = 0.47068
====================================================
  Execution time = 7.5055e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s001
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9457e-01
  Total weights = 2.0000e+06
  Execution time = 6.5236e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494542339361
                                         uncertainty =       0.003339963137

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494542339361
                                         uncertainty =       0.003339963137

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497274591
  error estimate for blocks of size 2^( 2) =       0.000523971583
  error estimate for blocks of size 2^( 3) =       0.000549385332
  error estimate for blocks of size 2^( 4) =       0.000568858631
  error estimate for blocks of size 2^( 5) =       0.000580505012
  error estimate for blocks of size 2^( 6) =       0.000587029407
  error estimate for blocks of size 2^( 7) =       0.000591286091

      target function =      -0.710912916658
              le_mean =     -22.426376626433
             les_mean =     503.436932380759
             stat err =       0.000581919785
             autocorr =       1.369410676464
   target nu stat err =       0.000581919785
   target dn stat err =       0.003594628522
      target stat err =       0.002684237292
              std dev =       0.703252470606
             le_variance =       0.494564037413

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494569580125
                                         uncertainty =       0.003340444817

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494569580125
                                         uncertainty =       0.003340444817

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497288281
  error estimate for blocks of size 2^( 2) =       0.000523979814
  error estimate for blocks of size 2^( 3) =       0.000549387752
  error estimate for blocks of size 2^( 4) =       0.000568855540
  error estimate for blocks of size 2^( 5) =       0.000580496271
  error estimate for blocks of size 2^( 6) =       0.000587017567
  error estimate for blocks of size 2^( 7) =       0.000591272842

      target function =      -0.710893089616
              le_mean =     -22.426376510356
             les_mean =     503.436954405912
             stat err =       0.000581910555
             autocorr =       1.369291839635
   target nu stat err =       0.000581910555
   target dn stat err =       0.003595055768
      target stat err =       0.002684392015
              std dev =       0.703271831498
             le_variance =       0.494591268978

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494556078270
                                         uncertainty =       0.003340206938

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494556078270
                                         uncertainty =       0.003340206938

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497281496
  error estimate for blocks of size 2^( 2) =       0.000523975724
  error estimate for blocks of size 2^( 3) =       0.000549386535
  error estimate for blocks of size 2^( 4) =       0.000568857050
  error estimate for blocks of size 2^( 5) =       0.000580500585
  error estimate for blocks of size 2^( 6) =       0.000587023421
  error estimate for blocks of size 2^( 7) =       0.000591279396

      target function =      -0.710902916903
              le_mean =     -22.426376554209
             les_mean =     503.436942875597
             stat err =       0.000581915113
             autocorr =       1.369350659126
   target nu stat err =       0.000581915113
   target dn stat err =       0.003594844720
      target stat err =       0.002684315782
              std dev =       0.703262235365
             le_variance =       0.494577771690

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494544057755
                                         uncertainty =       0.003339993703

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494544057755
                                         uncertainty =       0.003339993703

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497275454
  error estimate for blocks of size 2^( 2) =       0.000523972100
  error estimate for blocks of size 2^( 3) =       0.000549385480
  error estimate for blocks of size 2^( 4) =       0.000568858430
  error estimate for blocks of size 2^( 5) =       0.000580504454
  error estimate for blocks of size 2^( 6) =       0.000587028654
  error estimate for blocks of size 2^( 7) =       0.000591285249

      target function =      -0.710911665944
              le_mean =     -22.426376615885
             les_mean =     503.436933625444
             stat err =       0.000581919197
             autocorr =       1.369403150344
   target nu stat err =       0.000581919197
   target dn stat err =       0.003594655626
      target stat err =       0.002684247148
              std dev =       0.703253691940
             le_variance =       0.494565755227


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710912916658        initial  <--
     2.5000e+00     2.5000e+01             2.3285e-04        -0.710893089616
     1.0000e+01     1.0000e+02             5.8039e-05        -0.710902916903
     4.0000e+01     4.0000e+02             1.4499e-05        -0.710911665944

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.6551
  </log>
  <optVariables href="FORM.s001.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1079e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s002 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s002 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=2  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2401e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.4576
    reference variance = 0.619961
====================================================
  Execution time = 7.7880e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s002
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9740e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5029e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497330002514
                                         uncertainty =       0.003064063788

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497330002514
                                         uncertainty =       0.003064063788

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498698097
  error estimate for blocks of size 2^( 2) =       0.000525119760
  error estimate for blocks of size 2^( 3) =       0.000550436043
  error estimate for blocks of size 2^( 4) =       0.000569965210
  error estimate for blocks of size 2^( 5) =       0.000581589923
  error estimate for blocks of size 2^( 6) =       0.000588239964
  error estimate for blocks of size 2^( 7) =       0.000592749051

      target function =      -0.708841361384
              le_mean =     -22.427217877313
             les_mean =     503.477501052013
             stat err =       0.000583136037
             autocorr =       1.367301655682
   target nu stat err =       0.000583136037
   target dn stat err =       0.003356860306
      target stat err =       0.002504831363
              std dev =       0.705265612552
             le_variance =       0.497399584248


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242721787731e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+01, overlap shift 2.5000e+02 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708849186896       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708849304120       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708849372054       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708849409798       residual = 1.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708849423879       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708849440389       residual = 6.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708849460099       residual = 7.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708849470225       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708849500529       residual = 4.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708849514215       residual = 8.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708849523334       residual = 4.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708849533618       residual = 5.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708849544614       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708849549681       residual = 1.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708849560901       residual = 1.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708849572534       residual = 9.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708849587381       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708849590230       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708849594415       residual = 5.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708849601963       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708849604589       residual = 2.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708849610185       residual = 1.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708849611185       residual = 9.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708849612142       residual = 8.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708849614148       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708849615940       residual = 2.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708849616458       residual = 1.04e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708849616901       residual = 7.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708849617137       residual = 5.46e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708849616983       residual = 2.73e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708849616978       residual = 1.65e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708849617175       residual = 9.04e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+01 is 2.583891e-05

solving harmonic davidson linear method for identity shift 1.0000e+02, overlap shift 1.0000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708849186896       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708849216248       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708849233253       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708849242705       residual = 1.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708849246232       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708849250362       residual = 6.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708849255299       residual = 7.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708849257833       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708849265418       residual = 4.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708849268873       residual = 8.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708849271123       residual = 4.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708849273717       residual = 5.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708849276449       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708849277716       residual = 1.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708849280524       residual = 1.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708849283429       residual = 9.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708849287137       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708849287854       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708849288897       residual = 5.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708849290783       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708849291439       residual = 2.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708849292837       residual = 1.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708849293087       residual = 9.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708849293326       residual = 8.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708849293826       residual = 2.91e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708849294273       residual = 2.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708849294401       residual = 1.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708849294512       residual = 7.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708849294571       residual = 5.43e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708849294532       residual = 2.72e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708849294530       residual = 1.64e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708849294580       residual = 8.97e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+02 is 6.462633e-06

solving harmonic davidson linear method for identity shift 4.0000e+02, overlap shift 4.0000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708849186896       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708849194237       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708849198490       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708849200853       residual = 1.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708849201736       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708849202769       residual = 6.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708849204003       residual = 7.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708849204636       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708849206534       residual = 4.34e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708849207399       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708849207960       residual = 4.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708849208610       residual = 5.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708849209292       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708849209608       residual = 1.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708849210312       residual = 1.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708849211037       residual = 9.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708849211964       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708849212143       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708849212402       residual = 5.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708849212873       residual = 2.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708849213039       residual = 2.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708849213389       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708849213450       residual = 9.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708849213511       residual = 8.82e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708849213637       residual = 2.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708849213747       residual = 2.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708849213778       residual = 1.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708849213806       residual = 7.81e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708849213822       residual = 5.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708849213812       residual = 2.72e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708849213812       residual = 1.64e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708849213821       residual = 8.96e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+02 is 1.615840e-06

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.224104 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0295e+02
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 2.552587e-01 1 1  ON 0
 uu_1                 9.297377e-02 1 1  ON 1
 uu_2                -7.918813e-03 1 1  ON 2
 uu_3                -6.923310e-02 1 1  ON 3
 uu_4                -1.052600e-01 1 1  ON 4
 uu_5                -1.267170e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336286e-01 1 1  ON 7
 uu_8                -1.132637e-01 1 1  ON 8
 uu_9                -6.856308e-02 1 1  ON 9
 ud_0                 3.731550e-01 1 1  ON 10
 ud_1                 1.324659e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969129e-02 1 1  ON 13
 ud_4                -8.583442e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175897e-01 1 1  ON 16
 ud_7                -1.128473e-01 1 1  ON 17
 ud_8                -9.300133e-02 1 1  ON 18
 ud_9                -5.427053e-02 1 1  ON 19
 eC_0                -4.979384e-01 1 1  ON 20
 eC_1                -3.532798e-01 1 1  ON 21
 eC_2                -1.036288e-01 1 1  ON 22
 eC_3                 6.840034e-02 1 1  ON 23
 eC_4                 1.507096e-01 1 1  ON 24
 eC_5                 2.326912e-01 1 1  ON 25
 eC_6                 2.311956e-01 1 1  ON 26
 eC_7                 1.913436e-01 1 1  ON 27
 eC_8                 7.350260e-02 1 1  ON 28
 eC_9                 5.800122e-03 1 1  ON 29
 eO_0                -8.991103e-01 1 1  ON 30
 eO_1                -5.914054e-01 1 1  ON 31
 eO_2                -1.810853e-01 1 1  ON 32
 eO_3                 8.172667e-02 1 1  ON 33
 eO_4                 2.361596e-01 1 1  ON 34
 eO_5                 3.379162e-01 1 1  ON 35
 eO_6                 3.342761e-01 1 1  ON 36
 eO_7                 2.985305e-01 1 1  ON 37
 eO_8                 2.076768e-01 1 1  ON 38
 eO_9                 1.093542e-01 1 1  ON 39
eH1_0                -1.333701e-01 1 1  ON 40
eH1_1                -3.149934e-02 1 1  ON 41
eH1_2                -1.524400e-02 1 1  ON 42
eH1_3                -2.543223e-02 1 1  ON 43
eH1_4                 3.822136e-03 1 1  ON 44
eH1_5                 1.895503e-02 1 1  ON 45
eH1_6                 3.983446e-02 1 1  ON 46
eH1_7                 4.319400e-02 1 1  ON 47
eH1_8                 3.913376e-02 1 1  ON 48
eH1_9                 4.724052e-02 1 1  ON 49
eH2_0                -1.451089e-01 1 1  ON 50
eH2_1                -4.404136e-02 1 1  ON 51
eH2_2                -2.577824e-02 1 1  ON 52
eH2_3                -3.487550e-02 1 1  ON 53
eH2_4                -6.872186e-03 1 1  ON 54
eH2_5                 8.665579e-03 1 1  ON 55
eH2_6                 3.559227e-02 1 1  ON 56
eH2_7                 4.803171e-02 1 1  ON 57
eH2_8                 6.894750e-02 1 1  ON 58
eH2_9                 6.265878e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -22.3253
    reference variance = 0.353131
====================================================
  Execution time = 7.6493e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s002
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0003e-01
  Total weights = 2.0000e+06
  Execution time = 6.5012e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499684703298
                                         uncertainty =       0.004473126662

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499684703298
                                         uncertainty =       0.004473126662

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500016176
  error estimate for blocks of size 2^( 2) =       0.000527089141
  error estimate for blocks of size 2^( 3) =       0.000552787083
  error estimate for blocks of size 2^( 4) =       0.000571563473
  error estimate for blocks of size 2^( 5) =       0.000584035691
  error estimate for blocks of size 2^( 6) =       0.000590349950
  error estimate for blocks of size 2^( 7) =       0.000595644859

      target function =      -0.706933579757
              le_mean =     -22.427095565928
             les_mean =     503.474647626027
             stat err =       0.000585398493
             autocorr =       1.370676893307
   target nu stat err =       0.000585398493
   target dn stat err =       0.004559530522
      target stat err =       0.003339905791
              std dev =       0.707129657694
             le_variance =       0.500032352791

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499687600544
                                         uncertainty =       0.004473173259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499687600544
                                         uncertainty =       0.004473173259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500017628
  error estimate for blocks of size 2^( 2) =       0.000527090308
  error estimate for blocks of size 2^( 3) =       0.000552788008
  error estimate for blocks of size 2^( 4) =       0.000571564172
  error estimate for blocks of size 2^( 5) =       0.000584036284
  error estimate for blocks of size 2^( 6) =       0.000590350443
  error estimate for blocks of size 2^( 7) =       0.000595645144

      target function =      -0.706931484475
              le_mean =     -22.427095660135
             les_mean =     503.474654755889
             stat err =       0.000585399011
             autocorr =       1.370671355003
   target nu stat err =       0.000585399011
   target dn stat err =       0.004559574824
      target stat err =       0.003339918273
              std dev =       0.707131711262
             le_variance =       0.500035257072

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499686153622
                                         uncertainty =       0.004473149993

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499686153622
                                         uncertainty =       0.004473149993

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500016903
  error estimate for blocks of size 2^( 2) =       0.000527089725
  error estimate for blocks of size 2^( 3) =       0.000552787546
  error estimate for blocks of size 2^( 4) =       0.000571563823
  error estimate for blocks of size 2^( 5) =       0.000584035988
  error estimate for blocks of size 2^( 6) =       0.000590350197
  error estimate for blocks of size 2^( 7) =       0.000595645002

      target function =      -0.706932530886
              le_mean =     -22.427095613028
             les_mean =     503.474651192537
             stat err =       0.000585398752
             autocorr =       1.370674120889
   target nu stat err =       0.000585398752
   target dn stat err =       0.004559552706
      target stat err =       0.003339912043
              std dev =       0.707130685684
             le_variance =       0.500033806636

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499684884625
                                         uncertainty =       0.004473129580

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499684884625
                                         uncertainty =       0.004473129580

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500016267
  error estimate for blocks of size 2^( 2) =       0.000527089214
  error estimate for blocks of size 2^( 3) =       0.000552787141
  error estimate for blocks of size 2^( 4) =       0.000571563517
  error estimate for blocks of size 2^( 5) =       0.000584035728
  error estimate for blocks of size 2^( 6) =       0.000590349981
  error estimate for blocks of size 2^( 7) =       0.000595644877

      target function =      -0.706933448622
              le_mean =     -22.427095571811
             les_mean =     503.474648071665
             stat err =       0.000585398526
             autocorr =       1.370676546642
   target nu stat err =       0.000585398526
   target dn stat err =       0.004559533296
      target stat err =       0.003339906573
              std dev =       0.707129786219
             le_variance =       0.500032534558


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706933579757        initial  <--
     2.5000e+01     2.5000e+02             2.5839e-05        -0.706931484475
     1.0000e+02     1.0000e+03             6.4626e-06        -0.706932530886
     4.0000e+02     4.0000e+03             1.6158e-06        -0.706933448622

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.0214
  </log>
  <optVariables href="FORM.s002.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1198e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s003 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s003 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=3  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2398e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.4366
    reference variance = 0.451359
====================================================
  Execution time = 7.5552e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s003
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0178e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5236e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501871605719
                                         uncertainty =       0.007032688843

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501871605719
                                         uncertainty =       0.007032688843

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500888882
  error estimate for blocks of size 2^( 2) =       0.000527317753
  error estimate for blocks of size 2^( 3) =       0.000552849465
  error estimate for blocks of size 2^( 4) =       0.000571873351
  error estimate for blocks of size 2^( 5) =       0.000585049687
  error estimate for blocks of size 2^( 6) =       0.000590824302
  error estimate for blocks of size 2^( 7) =       0.000595318641

      target function =      -0.705663268968
              le_mean =     -22.426924596930
             les_mean =     503.468725968772
             stat err =       0.000585766495
             autocorr =       1.367622607035
   target nu stat err =       0.000585766495
   target dn stat err =       0.006649436661
      target stat err =       0.004811177191
              std dev =       0.708363849507
             le_variance =       0.501779343288


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242692459693e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+02, overlap shift 2.5000e+03 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705695480200       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705695509870       residual = 7.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705695524668       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705695533302       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705695536886       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705695541053       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705695544285       residual = 1.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705695547170       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705695550510       residual = 6.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705695553115       residual = 7.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705695553829       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705695555893       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705695556710       residual = 4.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705695557172       residual = 3.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705695559438       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705695561017       residual = 1.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705695561595       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705695562292       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705695564667       residual = 8.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705695565356       residual = 3.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705695565755       residual = 2.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705695565845       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705695565977       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705695566072       residual = 5.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705695566308       residual = 3.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705695566322       residual = 3.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705695566315       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705695566368       residual = 7.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705695566358       residual = 4.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705695566353       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705695566350       residual = 2.34e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.705695566347       residual = 6.63e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+02 is 2.409564e-06

solving harmonic davidson linear method for identity shift 1.0000e+03, overlap shift 1.0000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705695480200       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705695487619       residual = 7.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705695491319       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705695493478       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705695494374       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705695495416       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705695496225       residual = 1.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705695496946       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705695497782       residual = 6.91e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705695498430       residual = 7.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705695498613       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705695499126       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705695499332       residual = 4.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705695499444       residual = 3.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705695500010       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705695500408       residual = 1.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705695500552       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705695500725       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705695501318       residual = 8.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705695501491       residual = 3.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705695501592       residual = 2.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705695501613       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705695501647       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705695501670       residual = 5.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705695501734       residual = 3.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705695501733       residual = 3.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705695501729       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705695501744       residual = 7.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705695501743       residual = 4.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705695501739       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705695501739       residual = 2.34e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.705695501736       residual = 6.63e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+03 is 6.023897e-07

solving harmonic davidson linear method for identity shift 4.0000e+03, overlap shift 4.0000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705695480200       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705695482055       residual = 7.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705695482980       residual = 5.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705695483520       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705695483744       residual = 2.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.705695484004       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.705695484205       residual = 1.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.705695484392       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.705695484604       residual = 6.91e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.705695484755       residual = 7.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.705695484791       residual = 3.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.705695484931       residual = 1.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.705695484981       residual = 4.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705695485028       residual = 3.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.705695485128       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.705695485257       residual = 1.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705695485277       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.705695485331       residual = 1.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705695485477       residual = 8.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.705695485515       residual = 3.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705695485539       residual = 2.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.705695485557       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.705695485571       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.705695485573       residual = 5.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.705695485577       residual = 3.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705695485585       residual = 3.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.705695485590       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.705695485591       residual = 7.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.705695485579       residual = 4.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705695485580       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.705695485567       residual = 2.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.705695485600       residual = 6.63e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+03 is 1.505974e-07

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.260293 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0083e+02
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 2.552569e-01 1 1  ON 0
 uu_1                 9.297174e-02 1 1  ON 1
 uu_2                -7.920112e-03 1 1  ON 2
 uu_3                -6.923388e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374584e-01 1 1  ON 6
 uu_7                -1.336279e-01 1 1  ON 7
 uu_8                -1.132619e-01 1 1  ON 8
 uu_9                -6.856246e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324657e-01 1 1  ON 11
 ud_2                 1.338632e-02 1 1  ON 12
 ud_3                -4.969116e-02 1 1  ON 13
 ud_4                -8.583434e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175899e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300093e-02 1 1  ON 18
 ud_9                -5.426886e-02 1 1  ON 19
 eC_0                -4.979354e-01 1 1  ON 20
 eC_1                -3.532775e-01 1 1  ON 21
 eC_2                -1.036267e-01 1 1  ON 22
 eC_3                 6.840193e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311930e-01 1 1  ON 26
 eC_7                 1.913397e-01 1 1  ON 27
 eC_8                 7.350122e-02 1 1  ON 28
 eC_9                 5.800114e-03 1 1  ON 29
 eO_0                -8.991043e-01 1 1  ON 30
 eO_1                -5.914003e-01 1 1  ON 31
 eO_2                -1.810809e-01 1 1  ON 32
 eO_3                 8.172767e-02 1 1  ON 33
 eO_4                 2.361580e-01 1 1  ON 34
 eO_5                 3.379147e-01 1 1  ON 35
 eO_6                 3.342746e-01 1 1  ON 36
 eO_7                 2.985282e-01 1 1  ON 37
 eO_8                 2.076726e-01 1 1  ON 38
 eO_9                 1.093499e-01 1 1  ON 39
eH1_0                -1.333665e-01 1 1  ON 40
eH1_1                -3.149699e-02 1 1  ON 41
eH1_2                -1.524332e-02 1 1  ON 42
eH1_3                -2.543354e-02 1 1  ON 43
eH1_4                 3.820710e-03 1 1  ON 44
eH1_5                 1.895372e-02 1 1  ON 45
eH1_6                 3.983395e-02 1 1  ON 46
eH1_7                 4.319408e-02 1 1  ON 47
eH1_8                 3.913163e-02 1 1  ON 48
eH1_9                 4.724046e-02 1 1  ON 49
eH2_0                -1.451079e-01 1 1  ON 50
eH2_1                -4.404090e-02 1 1  ON 51
eH2_2                -2.577910e-02 1 1  ON 52
eH2_3                -3.487605e-02 1 1  ON 53
eH2_4                -6.873169e-03 1 1  ON 54
eH2_5                 8.664171e-03 1 1  ON 55
eH2_6                 3.559352e-02 1 1  ON 56
eH2_7                 4.803403e-02 1 1  ON 57
eH2_8                 6.894744e-02 1 1  ON 58
eH2_9                 6.265798e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -22.4798
    reference variance = 0.520674
====================================================
  Execution time = 7.5859e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s003
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9874e-01
  Total weights = 2.0000e+06
  Execution time = 6.5266e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769493933
                                         uncertainty =       0.003495867072

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769493933
                                         uncertainty =       0.003495867072

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499369633
  error estimate for blocks of size 2^( 2) =       0.000525911104
  error estimate for blocks of size 2^( 3) =       0.000551676309
  error estimate for blocks of size 2^( 4) =       0.000570606373
  error estimate for blocks of size 2^( 5) =       0.000583912924
  error estimate for blocks of size 2^( 6) =       0.000590929391
  error estimate for blocks of size 2^( 7) =       0.000593175688

      target function =      -0.707883560481
              le_mean =     -22.426544352059
             les_mean =     503.448631385483
             stat err =       0.000584656094
             autocorr =       1.370745106282
   target nu stat err =       0.000584656094
   target dn stat err =       0.003403548851
      target stat err =       0.002528953035
              std dev =       0.706215307101
             le_variance =       0.498740059984

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498770005240
                                         uncertainty =       0.003495876261

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498770005240
                                         uncertainty =       0.003495876261

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499369888
  error estimate for blocks of size 2^( 2) =       0.000525911315
  error estimate for blocks of size 2^( 3) =       0.000551676476
  error estimate for blocks of size 2^( 4) =       0.000570606502
  error estimate for blocks of size 2^( 5) =       0.000583913025
  error estimate for blocks of size 2^( 6) =       0.000590929493
  error estimate for blocks of size 2^( 7) =       0.000593175786

      target function =      -0.707883191769
              le_mean =     -22.426544352108
             les_mean =     503.448631898251
             stat err =       0.000584656202
             autocorr =       1.370744207856
   target nu stat err =       0.000584656202
   target dn stat err =       0.003403555704
      target stat err =       0.002528955309
              std dev =       0.706215668597
             le_variance =       0.498740570571

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769749618
                                         uncertainty =       0.003495871667

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769749618
                                         uncertainty =       0.003495871667

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499369760
  error estimate for blocks of size 2^( 2) =       0.000525911210
  error estimate for blocks of size 2^( 3) =       0.000551676393
  error estimate for blocks of size 2^( 4) =       0.000570606438
  error estimate for blocks of size 2^( 5) =       0.000583912975
  error estimate for blocks of size 2^( 6) =       0.000590929442
  error estimate for blocks of size 2^( 7) =       0.000593175737

      target function =      -0.707883376103
              le_mean =     -22.426544352082
             les_mean =     503.448631641850
             stat err =       0.000584656148
             autocorr =       1.370744657009
   target nu stat err =       0.000584656148
   target dn stat err =       0.003403552278
      target stat err =       0.002528954173
              std dev =       0.706215487871
             le_variance =       0.498740315309

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769525895
                                         uncertainty =       0.003495867646

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498769525895
                                         uncertainty =       0.003495867646

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499369649
  error estimate for blocks of size 2^( 2) =       0.000525911117
  error estimate for blocks of size 2^( 3) =       0.000551676320
  error estimate for blocks of size 2^( 4) =       0.000570606381
  error estimate for blocks of size 2^( 5) =       0.000583912930
  error estimate for blocks of size 2^( 6) =       0.000590929397
  error estimate for blocks of size 2^( 7) =       0.000593175695

      target function =      -0.707883537434
              le_mean =     -22.426544352062
             les_mean =     503.448631417524
             stat err =       0.000584656101
             autocorr =       1.370745050121
   target nu stat err =       0.000584656101
   target dn stat err =       0.003403549279
      target stat err =       0.002528953178
              std dev =       0.706215329698
             le_variance =       0.498740091900


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707883560481        initial  <--
     2.5000e+02     2.5000e+03             2.4096e-06        -0.707883191769
     1.0000e+03     1.0000e+04             6.0239e-07        -0.707883376103
     4.0000e+03     4.0000e+04             1.5060e-07        -0.707883537434

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.7492
  </log>
  <optVariables href="FORM.s003.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1168e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s004 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s004 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=4  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2413e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.5107
    reference variance = 0.553756
====================================================
  Execution time = 7.6213e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s004
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9390e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5584e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493959978725
                                         uncertainty =       0.003500447850

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493959978725
                                         uncertainty =       0.003500447850

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496939572
  error estimate for blocks of size 2^( 2) =       0.000523896811
  error estimate for blocks of size 2^( 3) =       0.000549305450
  error estimate for blocks of size 2^( 4) =       0.000569988744
  error estimate for blocks of size 2^( 5) =       0.000582548613
  error estimate for blocks of size 2^( 6) =       0.000588107806
  error estimate for blocks of size 2^( 7) =       0.000596918898

      target function =      -0.711396316465
              le_mean =     -22.426506994422
             les_mean =     503.442113600755
             stat err =       0.000584391015
             autocorr =       1.382929041526
   target nu stat err =       0.000584391015
   target dn stat err =       0.003639404133
      target stat err =       0.002720708722
              std dev =       0.702778682682
             le_variance =       0.493897876833


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242650699442e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+03, overlap shift 2.5000e+04 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711405673977       residual = 5.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711405676686       residual = 8.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711405678053       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711405678485       residual = 1.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711405678781       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711405679071       residual = 6.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711405679192       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711405679208       residual = 4.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711405679285       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711405679293       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711405679345       residual = 2.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711405679395       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711405679419       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711405679460       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711405679471       residual = 8.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711405679599       residual = 6.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711405679663       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711405679723       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711405679759       residual = 3.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711405679815       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711405679836       residual = 1.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711405679862       residual = 6.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711405679897       residual = 9.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711405679883       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711405679915       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711405679922       residual = 8.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711405679918       residual = 2.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711405679914       residual = 1.90e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711405679919       residual = 1.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711405679912       residual = 5.98e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+03 is 2.118473e-07

solving harmonic davidson linear method for identity shift 1.0000e+04, overlap shift 1.0000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711405673977       residual = 5.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711405674655       residual = 8.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711405674996       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711405675106       residual = 1.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711405675170       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711405675243       residual = 6.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711405675278       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711405675298       residual = 4.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711405675314       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711405675293       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711405675340       residual = 2.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711405675333       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711405675371       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711405675340       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711405675337       residual = 8.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711405675372       residual = 6.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711405675398       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711405675416       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711405675432       residual = 3.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711405675430       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711405675450       residual = 1.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711405675445       residual = 6.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711405675443       residual = 9.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711405675474       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711405675471       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711405675469       residual = 8.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711405675487       residual = 2.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711405675466       residual = 1.90e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711405675458       residual = 1.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711405675460       residual = 5.98e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+04 is 5.296179e-08

solving harmonic davidson linear method for identity shift 4.0000e+04, overlap shift 4.0000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711405673977       residual = 5.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711405674147       residual = 8.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711405674232       residual = 3.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711405674260       residual = 1.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711405674292       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.711405674345       residual = 6.09e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.711405674305       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.711405674334       residual = 4.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.711405674351       residual = 3.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.711405674294       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.711405674262       residual = 2.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.711405674463       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.711405674269       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.711405674317       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.711405674275       residual = 8.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.711405674265       residual = 6.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.711405674348       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.711405674385       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.711405674295       residual = 3.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711405674428       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.711405674443       residual = 1.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.711405674293       residual = 6.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.711405674264       residual = 9.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.711405674285       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.711405674327       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.711405674278       residual = 8.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711405674291       residual = 2.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.711405674257       residual = 1.90e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.711405674438       residual = 1.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.711405674406       residual = 5.98e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+04 is 1.324045e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.290445 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0183e+02
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297147e-02 1 1  ON 1
 uu_2                -7.920285e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856224e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969112e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175899e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426885e-02 1 1  ON 19
 eC_0                -4.979349e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840188e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913393e-01 1 1  ON 27
 eC_8                 7.350103e-02 1 1  ON 28
 eC_9                 5.800105e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.914000e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076721e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149678e-02 1 1  ON 41
eH1_2                -1.524321e-02 1 1  ON 42
eH1_3                -2.543344e-02 1 1  ON 43
eH1_4                 3.820790e-03 1 1  ON 44
eH1_5                 1.895374e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319399e-02 1 1  ON 47
eH1_8                 3.913135e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577918e-02 1 1  ON 52
eH2_3                -3.487603e-02 1 1  ON 53
eH2_4                -6.873065e-03 1 1  ON 54
eH2_5                 8.664232e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803405e-02 1 1  ON 57
eH2_8                 6.894748e-02 1 1  ON 58
eH2_9                 6.265785e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -22.4045
    reference variance = 0.594128
====================================================
  Execution time = 7.5400e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s004
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9993e-01
  Total weights = 2.0000e+06
  Execution time = 6.5591e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004400700
                                         uncertainty =       0.003734394981

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004400700
                                         uncertainty =       0.003734394981

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499964916
  error estimate for blocks of size 2^( 2) =       0.000526292866
  error estimate for blocks of size 2^( 3) =       0.000552102489
  error estimate for blocks of size 2^( 4) =       0.000570886737
  error estimate for blocks of size 2^( 5) =       0.000581525575
  error estimate for blocks of size 2^( 6) =       0.000587787467
  error estimate for blocks of size 2^( 7) =       0.000592270005

      target function =      -0.707011956432
              le_mean =     -22.427169900587
             les_mean =     503.477879334344
             stat err =       0.000583117446
             autocorr =       1.360294715676
   target nu stat err =       0.000583117446
   target dn stat err =       0.003615144791
      target stat err =       0.002673314250
              std dev =       0.707057164954
             le_variance =       0.499929834513

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004424253
                                         uncertainty =       0.003734395675

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004424253
                                         uncertainty =       0.003734395675

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499964928
  error estimate for blocks of size 2^( 2) =       0.000526292872
  error estimate for blocks of size 2^( 3) =       0.000552102489
  error estimate for blocks of size 2^( 4) =       0.000570886732
  error estimate for blocks of size 2^( 5) =       0.000581525568
  error estimate for blocks of size 2^( 6) =       0.000587787456
  error estimate for blocks of size 2^( 7) =       0.000592269994

      target function =      -0.707011939453
              le_mean =     -22.427169900970
             les_mean =     503.477879375055
             stat err =       0.000583117438
             autocorr =       1.360294611771
   target nu stat err =       0.000583117438
   target dn stat err =       0.003615145452
      target stat err =       0.002673314589
              std dev =       0.707057181597
             le_variance =       0.499929858048

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004412477
                                         uncertainty =       0.003734395328

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004412477
                                         uncertainty =       0.003734395328

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499964922
  error estimate for blocks of size 2^( 2) =       0.000526292869
  error estimate for blocks of size 2^( 3) =       0.000552102489
  error estimate for blocks of size 2^( 4) =       0.000570886735
  error estimate for blocks of size 2^( 5) =       0.000581525572
  error estimate for blocks of size 2^( 6) =       0.000587787462
  error estimate for blocks of size 2^( 7) =       0.000592270000

      target function =      -0.707011947943
              le_mean =     -22.427169900778
             les_mean =     503.477879354700
             stat err =       0.000583117442
             autocorr =       1.360294663726
   target nu stat err =       0.000583117442
   target dn stat err =       0.003615145122
      target stat err =       0.002673314419
              std dev =       0.707057173276
             le_variance =       0.499929846281

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004402172
                                         uncertainty =       0.003734395024

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500004402172
                                         uncertainty =       0.003734395024

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499964917
  error estimate for blocks of size 2^( 2) =       0.000526292867
  error estimate for blocks of size 2^( 3) =       0.000552102489
  error estimate for blocks of size 2^( 4) =       0.000570886737
  error estimate for blocks of size 2^( 5) =       0.000581525575
  error estimate for blocks of size 2^( 6) =       0.000587787467
  error estimate for blocks of size 2^( 7) =       0.000592270004

      target function =      -0.707011955371
              le_mean =     -22.427169900611
             les_mean =     503.477879336889
             stat err =       0.000583117446
             autocorr =       1.360294709185
   target nu stat err =       0.000583117446
   target dn stat err =       0.003615144832
      target stat err =       0.002673314271
              std dev =       0.707057165994
             le_variance =       0.499929835984


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707011956432        initial  <--
     2.5000e+03     2.5000e+04             2.1185e-07        -0.707011939453
     1.0000e+04     1.0000e+05             5.2962e-08        -0.707011947943
     4.0000e+04     4.0000e+05             1.3240e-08        -0.707011955371

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.2673
  </log>
  <optVariables href="FORM.s004.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1013e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s005 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s005 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=5  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2422e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.506
    reference variance = 0.327404
====================================================
  Execution time = 7.8858e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s005
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0827e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5318e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508265710241
                                         uncertainty =       0.005269540397

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508265710241
                                         uncertainty =       0.005269540397

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504117126
  error estimate for blocks of size 2^( 2) =       0.000530511403
  error estimate for blocks of size 2^( 3) =       0.000555948759
  error estimate for blocks of size 2^( 4) =       0.000574644274
  error estimate for blocks of size 2^( 5) =       0.000587263536
  error estimate for blocks of size 2^( 6) =       0.000593914345
  error estimate for blocks of size 2^( 7) =       0.000600619841

      target function =      -0.701016624157
              le_mean =     -22.427980975898
             les_mean =     503.522598553977
             stat err =       0.000589110499
             autocorr =       1.365622371465
   target nu stat err =       0.000589110499
   target dn stat err =       0.005340768380
      target stat err =       0.003836536831
              std dev =       0.712929276194
             le_variance =       0.508268152855


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242798097590e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701036844494       residual = 6.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701036844809       residual = 7.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701036844921       residual = 7.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701036845048       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701036845092       residual = 3.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701036845143       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701036845154       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701036845170       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701036845211       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701036845224       residual = 5.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701036845241       residual = 2.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701036845245       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701036845229       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701036845313       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701036845293       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701036845283       residual = 6.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701036845287       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701036845288       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701036845308       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701036845344       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701036845307       residual = 2.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701036845331       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701036845351       residual = 5.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701036845276       residual = 4.49e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701036845288       residual = 2.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701036845292       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701036845314       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701036845314       residual = 5.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701036845273       residual = 1.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701036845391       residual = 1.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701036845281       residual = 9.53e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+04 is 2.143244e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701036844494       residual = 6.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701036844573       residual = 7.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701036844601       residual = 7.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701036844633       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701036844644       residual = 3.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701036844652       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701036844662       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701036844667       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701036844671       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701036844398       residual = 5.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701036844616       residual = 2.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701036844483       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701036844688       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701036844772       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701036844622       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701036844584       residual = 6.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701036844819       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701036844844       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701036844836       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701036844255       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701036844399       residual = 2.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701036844588       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701036844667       residual = 5.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701036844778       residual = 4.49e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701036844726       residual = 2.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701036844868       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701036844761       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701036844928       residual = 5.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701036844699       residual = 1.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701036844831       residual = 1.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701036844488       residual = 9.53e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+05 is 5.358110e-09

solving harmonic davidson linear method for identity shift 4.0000e+05, overlap shift 4.0000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701036844494       residual = 6.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701036844514       residual = 7.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701036844521       residual = 7.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701036844686       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701036844532       residual = 3.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701036844534       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701036844536       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701036845621       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701036844539       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701036844872       residual = 5.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701036844541       residual = 2.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701036844165       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701036844542       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701036845117       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701036844824       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701036844326       residual = 6.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701036843964       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701036843647       residual = 5.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701036843724       residual = 8.57e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701036843741       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701036843605       residual = 2.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701036844628       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701036844308       residual = 5.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701036843387       residual = 4.49e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701036845093       residual = 2.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701036844658       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701036844091       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701036843257       residual = 5.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701036845175       residual = 1.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701036844375       residual = 1.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701036844106       residual = 9.53e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         30 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+05 is 1.339527e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.323933 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0422e+02
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297147e-02 1 1  ON 1
 uu_2                -7.920284e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426883e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319401e-02 1 1  ON 47
eH1_8                 3.913137e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873063e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894748e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -22.4087
    reference variance = 0.465052
====================================================
  Execution time = 7.5232e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s005
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9297e-01
  Total weights = 2.0000e+06
  Execution time = 6.5318e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948815870
                                         uncertainty =       0.003668126245

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948815870
                                         uncertainty =       0.003668126245

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496470183
  error estimate for blocks of size 2^( 2) =       0.000523206903
  error estimate for blocks of size 2^( 3) =       0.000548462113
  error estimate for blocks of size 2^( 4) =       0.000568639622
  error estimate for blocks of size 2^( 5) =       0.000582067605
  error estimate for blocks of size 2^( 6) =       0.000590390610
  error estimate for blocks of size 2^( 7) =       0.000594877408

      target function =      -0.712064436130
              le_mean =     -22.427440562625
             les_mean =     503.483055229295
             stat err =       0.000583993811
             autocorr =       1.383662426467
   target nu stat err =       0.000583993811
   target dn stat err =       0.003764089435
      target stat err =       0.002818339568
              std dev =       0.702114866446
             le_variance =       0.492965285684

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948817305
                                         uncertainty =       0.003668126337

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948817305
                                         uncertainty =       0.003668126337

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496470184
  error estimate for blocks of size 2^( 2) =       0.000523206903
  error estimate for blocks of size 2^( 3) =       0.000548462113
  error estimate for blocks of size 2^( 4) =       0.000568639623
  error estimate for blocks of size 2^( 5) =       0.000582067605
  error estimate for blocks of size 2^( 6) =       0.000590390611
  error estimate for blocks of size 2^( 7) =       0.000594877408

      target function =      -0.712064435079
              le_mean =     -22.427440562649
             les_mean =     503.483055231784
             stat err =       0.000583993812
             autocorr =       1.383662424620
   target nu stat err =       0.000583993812
   target dn stat err =       0.003764089511
      target stat err =       0.002818339614
              std dev =       0.702114867468
             le_variance =       0.492965287120

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948816588
                                         uncertainty =       0.003668126291

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948816588
                                         uncertainty =       0.003668126291

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496470184
  error estimate for blocks of size 2^( 2) =       0.000523206903
  error estimate for blocks of size 2^( 3) =       0.000548462113
  error estimate for blocks of size 2^( 4) =       0.000568639623
  error estimate for blocks of size 2^( 5) =       0.000582067605
  error estimate for blocks of size 2^( 6) =       0.000590390611
  error estimate for blocks of size 2^( 7) =       0.000594877408

      target function =      -0.712064435604
              le_mean =     -22.427440562637
             les_mean =     503.483055230539
             stat err =       0.000583993812
             autocorr =       1.383662425538
   target nu stat err =       0.000583993812
   target dn stat err =       0.003764089473
      target stat err =       0.002818339591
              std dev =       0.702114866957
             le_variance =       0.492965286402

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948815960
                                         uncertainty =       0.003668126251

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492948815960
                                         uncertainty =       0.003668126251

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496470183
  error estimate for blocks of size 2^( 2) =       0.000523206903
  error estimate for blocks of size 2^( 3) =       0.000548462113
  error estimate for blocks of size 2^( 4) =       0.000568639622
  error estimate for blocks of size 2^( 5) =       0.000582067605
  error estimate for blocks of size 2^( 6) =       0.000590390610
  error estimate for blocks of size 2^( 7) =       0.000594877408

      target function =      -0.712064436064
              le_mean =     -22.427440562627
             les_mean =     503.483055229450
             stat err =       0.000583993811
             autocorr =       1.383662426350
   target nu stat err =       0.000583993811
   target dn stat err =       0.003764089440
      target stat err =       0.002818339571
              std dev =       0.702114866509
             le_variance =       0.492965285773


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.712064436130        initial  <--
     2.5000e+04     2.5000e+05             2.1432e-08        -0.712064435079
     1.0000e+05     1.0000e+06             5.3581e-09        -0.712064435604
     4.0000e+05     4.0000e+06             1.3395e-09        -0.712064436064

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.9862
  </log>
  <optVariables href="FORM.s005.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1221e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s006 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s006 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=6  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2428e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.4314
    reference variance = 0.41869
====================================================
  Execution time = 7.5374e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s006
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9287e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.6085e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492883548747
                                         uncertainty =       0.004612599577

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492883548747
                                         uncertainty =       0.004612599577

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496420398
  error estimate for blocks of size 2^( 2) =       0.000522533271
  error estimate for blocks of size 2^( 3) =       0.000548191340
  error estimate for blocks of size 2^( 4) =       0.000567348457
  error estimate for blocks of size 2^( 5) =       0.000579842562
  error estimate for blocks of size 2^( 6) =       0.000587390778
  error estimate for blocks of size 2^( 7) =       0.000591240472

      target function =      -0.712137393763
              le_mean =     -22.426822753449
             les_mean =     503.455244991062
             stat err =       0.000581455567
             autocorr =       1.371935927126
   target nu stat err =       0.000581455567
   target dn stat err =       0.004866859080
      target stat err =       0.003607814498
              std dev =       0.702044459347
             le_variance =       0.492866422900


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242682275345e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+05, overlap shift 2.5000e+06 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712154838959       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712154838984       residual = 6.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712154838991       residual = 5.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712154838998       residual = 2.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712154839003       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712154839006       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712154838766       residual = 2.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712154838903       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712154838840       residual = 9.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712154839643       residual = 6.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712154838028       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712154838775       residual = 5.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712154839940       residual = 3.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712154838785       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712154838881       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712154838663       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712154839427       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712154839290       residual = 8.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712154839283       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712154839005       residual = 3.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712154838991       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712154839612       residual = 1.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712154838452       residual = 1.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712154838752       residual = 4.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712154839084       residual = 5.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712154839405       residual = 1.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712154839445       residual = 1.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712154839625       residual = 6.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712154839746       residual = 3.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712154838254       residual = 2.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712154839147       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.712154839337       residual = 5.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+05 is 2.356315e-09

solving harmonic davidson linear method for identity shift 1.0000e+06, overlap shift 1.0000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712154838959       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712154838965       residual = 6.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712154838967       residual = 5.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712154838969       residual = 2.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712154838970       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712154838971       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712154838971       residual = 2.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712154838972       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712154838972       residual = 9.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712154838973       residual = 6.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712154838855       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712154838534       residual = 5.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712154837327       residual = 3.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712154841851       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712154836933       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712154838598       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712154840264       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712154838935       residual = 8.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712154840025       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712154841257       residual = 3.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712154837720       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712154838022       residual = 1.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712154838336       residual = 1.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712154836817       residual = 4.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712154838497       residual = 5.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712154839633       residual = 1.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712154835318       residual = 1.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712154840257       residual = 6.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712154837559       residual = 3.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712154836937       residual = 2.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712154839060       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.712154839959       residual = 5.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+06 is 5.890800e-10

solving harmonic davidson linear method for identity shift 4.0000e+06, overlap shift 4.0000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712154838959       residual = 2.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712154838960       residual = 6.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712154838961       residual = 5.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712154838961       residual = 2.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712154838762       residual = 3.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712154838962       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.712154838962       residual = 2.80e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.712154836261       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.712154839444       residual = 9.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.712154835224       residual = 6.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.712154838871       residual = 3.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.712154844822       residual = 5.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.712154829449       residual = 3.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.712154831629       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.712154838064       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.712154840792       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.712154845415       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712154837857       residual = 8.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.712154851255       residual = 5.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.712154842836       residual = 3.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.712154846869       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.712154825005       residual = 1.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.712154841576       residual = 1.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.712154841122       residual = 4.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.712154816938       residual = 5.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.712154848021       residual = 1.79e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.712154838385       residual = 1.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.712154832185       residual = 6.04e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.712154832214       residual = 3.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.712154856818       residual = 2.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.712154808216       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.712154839739       residual = 5.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+06 is 1.472711e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.358956 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0150e+02
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297147e-02 1 1  ON 1
 uu_2                -7.920285e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -22.4878
    reference variance = 0.474053
====================================================
  Execution time = 7.7043e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s006
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0276e-01
  Total weights = 2.0000e+06
  Execution time = 6.5197e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144477
                                         uncertainty =       0.006347787723

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144477
                                         uncertainty =       0.006347787723

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501378226
  error estimate for blocks of size 2^( 2) =       0.000527390888
  error estimate for blocks of size 2^( 3) =       0.000552378909
  error estimate for blocks of size 2^( 4) =       0.000572037851
  error estimate for blocks of size 2^( 5) =       0.000585014481
  error estimate for blocks of size 2^( 6) =       0.000592737525
  error estimate for blocks of size 2^( 7) =       0.000599019810

      target function =      -0.704959678024
              le_mean =     -22.427127710016
             les_mean =     503.478817321430
             stat err =       0.000587202417
             autocorr =       1.371654491237
   target nu stat err =       0.000587202417
   target dn stat err =       0.006260065786
      target stat err =       0.004526434660
              std dev =       0.709055887396
             le_variance =       0.502760251451

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144883
                                         uncertainty =       0.006347787743

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144883
                                         uncertainty =       0.006347787743

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501378226
  error estimate for blocks of size 2^( 2) =       0.000527390888
  error estimate for blocks of size 2^( 3) =       0.000552378909
  error estimate for blocks of size 2^( 4) =       0.000572037851
  error estimate for blocks of size 2^( 5) =       0.000585014481
  error estimate for blocks of size 2^( 6) =       0.000592737525
  error estimate for blocks of size 2^( 7) =       0.000599019810

      target function =      -0.704959677733
              le_mean =     -22.427127710004
             les_mean =     503.478817321316
             stat err =       0.000587202417
             autocorr =       1.371654489740
   target nu stat err =       0.000587202417
   target dn stat err =       0.006260065806
      target stat err =       0.004526434670
              std dev =       0.709055887682
             le_variance =       0.502760251856

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144680
                                         uncertainty =       0.006347787733

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144680
                                         uncertainty =       0.006347787733

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501378226
  error estimate for blocks of size 2^( 2) =       0.000527390888
  error estimate for blocks of size 2^( 3) =       0.000552378909
  error estimate for blocks of size 2^( 4) =       0.000572037851
  error estimate for blocks of size 2^( 5) =       0.000585014481
  error estimate for blocks of size 2^( 6) =       0.000592737525
  error estimate for blocks of size 2^( 7) =       0.000599019810

      target function =      -0.704959677878
              le_mean =     -22.427127710010
             les_mean =     503.478817321373
             stat err =       0.000587202417
             autocorr =       1.371654490487
   target nu stat err =       0.000587202417
   target dn stat err =       0.006260065796
      target stat err =       0.004526434665
              std dev =       0.709055887539
             le_variance =       0.502760251654

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144502
                                         uncertainty =       0.006347787724

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502902144502
                                         uncertainty =       0.006347787724

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501378226
  error estimate for blocks of size 2^( 2) =       0.000527390888
  error estimate for blocks of size 2^( 3) =       0.000552378909
  error estimate for blocks of size 2^( 4) =       0.000572037851
  error estimate for blocks of size 2^( 5) =       0.000585014481
  error estimate for blocks of size 2^( 6) =       0.000592737525
  error estimate for blocks of size 2^( 7) =       0.000599019810

      target function =      -0.704959678005
              le_mean =     -22.427127710015
             les_mean =     503.478817321423
             stat err =       0.000587202417
             autocorr =       1.371654491142
   target nu stat err =       0.000587202417
   target dn stat err =       0.006260065787
      target stat err =       0.004526434661
              std dev =       0.709055887414
             le_variance =       0.502760251476


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704959678024        initial  <--
     2.5000e+05     2.5000e+06             2.3563e-09        -0.704959677733
     1.0000e+06     1.0000e+07             5.8908e-10        -0.704959677878
     4.0000e+06     4.0000e+07             1.4727e-10        -0.704959678005

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.7169
  </log>
  <optVariables href="FORM.s006.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1128e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s007 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s007 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=7  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.3533
    reference variance = 0.379258
====================================================
  Execution time = 7.5366e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s007
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9841e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5935e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457691345
                                         uncertainty =       0.004442107045

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457691345
                                         uncertainty =       0.004442107045

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499204462
  error estimate for blocks of size 2^( 2) =       0.000525698429
  error estimate for blocks of size 2^( 3) =       0.000550917930
  error estimate for blocks of size 2^( 4) =       0.000570028813
  error estimate for blocks of size 2^( 5) =       0.000582728676
  error estimate for blocks of size 2^( 6) =       0.000590893748
  error estimate for blocks of size 2^( 7) =       0.000595831999

      target function =      -0.708086519818
              le_mean =     -22.428095876476
             les_mean =     503.517894585860
             stat err =       0.000584870809
             autocorr =       1.372659988207
   target nu stat err =       0.000584870809
   target dn stat err =       0.004415135077
      target stat err =       0.003252543182
              std dev =       0.705981721206
             le_variance =       0.498410190677


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242809587648e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708100681814       residual = 2.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708100681816       residual = 7.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708100681817       residual = 3.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708100679947       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708100680388       residual = 2.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708100680290       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708100681818       residual = 1.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708100684118       residual = 9.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708100684507       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708100681819       residual = 4.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708100677985       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708100678752       residual = 2.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708100685508       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708100684081       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708100681140       residual = 9.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708100666707       residual = 4.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708100674461       residual = 5.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708100682036       residual = 7.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708100684768       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708100677684       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708100675870       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708100681440       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708100684508       residual = 6.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708100682898       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708100673523       residual = 1.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708100692215       residual = 8.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708100684719       residual = 6.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708100682278       residual = 4.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708100678546       residual = 1.52e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708100682256       residual = 6.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+06 is 2.120625e-10

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708100681814       residual = 2.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708100681814       residual = 7.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708100681815       residual = 3.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708100681815       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708100684344       residual = 2.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708100681815       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708100681815       residual = 1.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708100681815       residual = 9.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708100681815       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708100681815       residual = 4.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708100681899       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708100681815       residual = 2.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708100681174       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708100655753       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708100686860       residual = 9.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708100709470       residual = 4.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708100690910       residual = 5.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708100653692       residual = 7.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708100711211       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708100703974       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708100666977       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708100664310       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708100687362       residual = 6.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708100680251       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708100661056       residual = 1.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708100679236       residual = 8.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708100645323       residual = 6.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708100665896       residual = 4.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708100697343       residual = 1.52e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708100666368       residual = 6.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+07 is 5.301471e-11

solving harmonic davidson linear method for identity shift 4.0000e+07, overlap shift 4.0000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708100681814       residual = 2.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708100681814       residual = 7.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708100681814       residual = 3.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708100681814       residual = 1.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708100682067       residual = 2.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708100681814       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708100681814       residual = 1.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708100681814       residual = 9.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708100681814       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708100736030       residual = 4.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708100671075       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708100681814       residual = 2.26e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708100714047       residual = 1.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708100649066       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708100580684       residual = 9.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708100636785       residual = 4.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708100730109       residual = 5.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708100601488       residual = 7.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708100672073       residual = 5.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708100758270       residual = 3.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708100692480       residual = 2.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708100782910       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708100680498       residual = 6.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708100624781       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708100455818       residual = 1.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708100637027       residual = 8.18e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708100703940       residual = 6.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708100817482       residual = 4.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708100755293       residual = 1.52e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708100599023       residual = 6.20e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         29 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+07 is 1.325289e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.389069 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0134e+02
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297147e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -22.3835
    reference variance = 0.308363
====================================================
  Execution time = 7.5355e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s007
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9929e-01
  Total weights = 2.0000e+06
  Execution time = 6.5272e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932983
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932983
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499646329
  error estimate for blocks of size 2^( 2) =       0.000526151048
  error estimate for blocks of size 2^( 3) =       0.000552010815
  error estimate for blocks of size 2^( 4) =       0.000571830564
  error estimate for blocks of size 2^( 5) =       0.000585935034
  error estimate for blocks of size 2^( 6) =       0.000592482219
  error estimate for blocks of size 2^( 7) =       0.000595779134

      target function =      -0.707481890647
              le_mean =     -22.426780716136
             les_mean =     503.459785947322
             stat err =       0.000586506738
             autocorr =       1.377909232938
   target nu stat err =       0.000586506738
   target dn stat err =       0.003017221433
      target stat err =       0.002257609508
              std dev =       0.706606614266
             le_variance =       0.499292907325

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245933006
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245933006
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499646329
  error estimate for blocks of size 2^( 2) =       0.000526151048
  error estimate for blocks of size 2^( 3) =       0.000552010815
  error estimate for blocks of size 2^( 4) =       0.000571830564
  error estimate for blocks of size 2^( 5) =       0.000585935034
  error estimate for blocks of size 2^( 6) =       0.000592482219
  error estimate for blocks of size 2^( 7) =       0.000595779134

      target function =      -0.707481890630
              le_mean =     -22.426780716136
             les_mean =     503.459785947349
             stat err =       0.000586506738
             autocorr =       1.377909232879
   target nu stat err =       0.000586506738
   target dn stat err =       0.003017221433
      target stat err =       0.002257609508
              std dev =       0.706606614283
             le_variance =       0.499292907348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932995
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932995
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499646329
  error estimate for blocks of size 2^( 2) =       0.000526151048
  error estimate for blocks of size 2^( 3) =       0.000552010815
  error estimate for blocks of size 2^( 4) =       0.000571830564
  error estimate for blocks of size 2^( 5) =       0.000585935034
  error estimate for blocks of size 2^( 6) =       0.000592482219
  error estimate for blocks of size 2^( 7) =       0.000595779134

      target function =      -0.707481890639
              le_mean =     -22.426780716136
             les_mean =     503.459785947335
             stat err =       0.000586506738
             autocorr =       1.377909232911
   target nu stat err =       0.000586506738
   target dn stat err =       0.003017221433
      target stat err =       0.002257609508
              std dev =       0.706606614274
             le_variance =       0.499292907336

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932984
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499245932984
                                         uncertainty =       0.002996785165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499646329
  error estimate for blocks of size 2^( 2) =       0.000526151048
  error estimate for blocks of size 2^( 3) =       0.000552010815
  error estimate for blocks of size 2^( 4) =       0.000571830564
  error estimate for blocks of size 2^( 5) =       0.000585935034
  error estimate for blocks of size 2^( 6) =       0.000592482219
  error estimate for blocks of size 2^( 7) =       0.000595779134

      target function =      -0.707481890646
              le_mean =     -22.426780716136
             les_mean =     503.459785947323
             stat err =       0.000586506738
             autocorr =       1.377909232927
   target nu stat err =       0.000586506738
   target dn stat err =       0.003017221433
      target stat err =       0.002257609508
              std dev =       0.706606614267
             le_variance =       0.499292907326


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707481890647        initial  <--
     2.5000e+06     2.5000e+07             2.1206e-10        -0.707481890630
     1.0000e+07     1.0000e+08             5.3015e-11        -0.707481890639
     4.0000e+07     4.0000e+08             1.3253e-11        -0.707481890646

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.0476
  </log>
  <optVariables href="FORM.s007.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0939e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s008 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s008 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=8  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2424e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.3514
    reference variance = 0.385995
====================================================
  Execution time = 7.8036e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s008
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.2862e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5799e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.528633772254
                                         uncertainty =       0.030297069248

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.528633772254
                                         uncertainty =       0.030297069248

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000514109685
  error estimate for blocks of size 2^( 2) =       0.000539731034
  error estimate for blocks of size 2^( 3) =       0.000564105033
  error estimate for blocks of size 2^( 4) =       0.000583227167
  error estimate for blocks of size 2^( 5) =       0.000596229588
  error estimate for blocks of size 2^( 6) =       0.000603859363
  error estimate for blocks of size 2^( 7) =       0.000607537404

      target function =      -0.686334196807
              le_mean =     -22.426931878848
             les_mean =     503.495890770029
             stat err =       0.000597713380
             autocorr =       1.351681549373
   target nu stat err =       0.000597713380
   target dn stat err =       0.029871645015
      target stat err =       0.020313961194
              std dev =       0.727060888691
             le_variance =       0.528617535864


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242693187885e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+07, overlap shift 2.5000e+08 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.686937348570       residual = 1.61e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.686937348572       residual = 8.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.686937348573       residual = 6.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.686937348934       residual = 2.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.686937356724       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.686937362617       residual = 8.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.686937283433       residual = 7.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.686937324241       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.686937362532       residual = 8.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.686937375714       residual = 4.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.686937378080       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.686937361753       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.686937339991       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.686937311995       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.686937321165       residual = 4.38e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.686937313371       residual = 2.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.686937353460       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.686937386446       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.686937328401       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.686937313750       residual = 9.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.686937356573       residual = 4.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.686937396029       residual = 3.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.686937446827       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.686937350229       residual = 1.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.686937429693       residual = 6.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.686937277261       residual = 4.96e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.686937374094       residual = 4.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.686937280798       residual = 1.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.686937394911       residual = 2.04e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.686937356607       residual = 5.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.686937334642       residual = 4.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.686937336084       residual = 2.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.686937441823       residual = 7.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+07 is 3.027993e-11

solving harmonic davidson linear method for identity shift 1.0000e+08, overlap shift 1.0000e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.686937348570       residual = 1.61e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.686937348571       residual = 8.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.686937348571       residual = 6.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.686937348571       residual = 2.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.686937365149       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.686937092126       residual = 8.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.686937279524       residual = 7.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.686937442477       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.686937348997       residual = 8.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.686937441147       residual = 4.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.686936948046       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.686937443982       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.686937128563       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.686937278388       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.686937211336       residual = 4.38e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.686937449710       residual = 2.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.686937376659       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.686937515486       residual = 1.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.686937420244       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.686937330486       residual = 9.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.686937426344       residual = 4.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.686937464071       residual = 3.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.686937362212       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.686937380582       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.686937074505       residual = 6.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.686937127566       residual = 4.96e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.686937595562       residual = 4.28e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.686937623276       residual = 1.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.686937552782       residual = 2.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.686937480890       residual = 5.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.686937160387       residual = 4.83e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.686937247736       residual = 2.48e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.686937039900       residual = 7.23e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+08 is 7.570176e-12

solving harmonic davidson linear method for identity shift 4.0000e+08, overlap shift 4.0000e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.686937348570       residual = 1.61e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.686937348570       residual = 8.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.686937348571       residual = 6.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.686937348571       residual = 2.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.686937382228       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.686937348571       residual = 8.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.686937653694       residual = 7.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.686937054128       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.686937348571       residual = 8.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.686938040977       residual = 4.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.686937977177       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.686936429010       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.686937055134       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.686936192589       residual = 5.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.686937138295       residual = 4.38e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.686938241269       residual = 2.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.686937003398       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.686936618747       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.686937559615       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.686938296972       residual = 9.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.686937140085       residual = 4.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.686937319515       residual = 3.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.686936743789       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.686938120953       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.686937605770       residual = 6.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.686937199065       residual = 4.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.686937860900       residual = 4.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.686936442114       residual = 1.95e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.686938144844       residual = 2.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.686937287550       residual = 5.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.686937575034       residual = 4.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.686937966883       residual = 2.47e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.686939066260       residual = 8.76e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         32 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+08 is 1.892719e-12

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.426910 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0388e+02
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -22.4521
    reference variance = 0.377693
====================================================
  Execution time = 7.4767e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s008
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1682e-01
  Total weights = 2.0000e+06
  Execution time = 6.5314e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722369
                                         uncertainty =       0.014182968764

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722369
                                         uncertainty =       0.014182968764

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000508340180
  error estimate for blocks of size 2^( 2) =       0.000534128136
  error estimate for blocks of size 2^( 3) =       0.000558715117
  error estimate for blocks of size 2^( 4) =       0.000578019270
  error estimate for blocks of size 2^( 5) =       0.000591155054
  error estimate for blocks of size 2^( 6) =       0.000598117801
  error estimate for blocks of size 2^( 7) =       0.000601507141

      target function =      -0.694949245209
              le_mean =     -22.426209758350
             les_mean =     503.451703343852
             stat err =       0.000592199817
             autocorr =       1.357149405040
   target nu stat err =       0.000592199817
   target dn stat err =       0.013914844654
      target stat err =       0.009699029571
              std dev =       0.718901576541
             le_variance =       0.516819476753

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722373
                                         uncertainty =       0.014182968765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722373
                                         uncertainty =       0.014182968765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000508340180
  error estimate for blocks of size 2^( 2) =       0.000534128136
  error estimate for blocks of size 2^( 3) =       0.000558715117
  error estimate for blocks of size 2^( 4) =       0.000578019270
  error estimate for blocks of size 2^( 5) =       0.000591155054
  error estimate for blocks of size 2^( 6) =       0.000598117801
  error estimate for blocks of size 2^( 7) =       0.000601507141

      target function =      -0.694949245207
              le_mean =     -22.426209758350
             les_mean =     503.451703343848
             stat err =       0.000592199817
             autocorr =       1.357149405071
   target nu stat err =       0.000592199817
   target dn stat err =       0.013914844655
      target stat err =       0.009699029571
              std dev =       0.718901576543
             le_variance =       0.516819476757

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722371
                                         uncertainty =       0.014182968765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722371
                                         uncertainty =       0.014182968765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000508340180
  error estimate for blocks of size 2^( 2) =       0.000534128136
  error estimate for blocks of size 2^( 3) =       0.000558715117
  error estimate for blocks of size 2^( 4) =       0.000578019270
  error estimate for blocks of size 2^( 5) =       0.000591155054
  error estimate for blocks of size 2^( 6) =       0.000598117801
  error estimate for blocks of size 2^( 7) =       0.000601507141

      target function =      -0.694949245208
              le_mean =     -22.426209758350
             les_mean =     503.451703343850
             stat err =       0.000592199817
             autocorr =       1.357149405053
   target nu stat err =       0.000592199817
   target dn stat err =       0.013914844654
      target stat err =       0.009699029571
              std dev =       0.718901576542
             le_variance =       0.516819476755

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722370
                                         uncertainty =       0.014182968764

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.516875722370
                                         uncertainty =       0.014182968764

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000508340180
  error estimate for blocks of size 2^( 2) =       0.000534128136
  error estimate for blocks of size 2^( 3) =       0.000558715117
  error estimate for blocks of size 2^( 4) =       0.000578019270
  error estimate for blocks of size 2^( 5) =       0.000591155054
  error estimate for blocks of size 2^( 6) =       0.000598117801
  error estimate for blocks of size 2^( 7) =       0.000601507141

      target function =      -0.694949245209
              le_mean =     -22.426209758350
             les_mean =     503.451703343852
             stat err =       0.000592199817
             autocorr =       1.357149405049
   target nu stat err =       0.000592199817
   target dn stat err =       0.013914844654
      target stat err =       0.009699029571
              std dev =       0.718901576541
             le_variance =       0.516819476753


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.694949245209        initial  <--
     2.5000e+07     2.5000e+08             3.0280e-11        -0.694949245207
     1.0000e+08     1.0000e+09             7.5702e-12        -0.694949245208
     4.0000e+08     4.0000e+09             1.8927e-12        -0.694949245209

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.4910
  </log>
  <optVariables href="FORM.s008.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1161e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s009 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s009 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=9  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2422e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.3683
    reference variance = 0.267672
====================================================
  Execution time = 7.5940e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s009
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9754e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5531e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497604087849
                                         uncertainty =       0.004160831518

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497604087849
                                         uncertainty =       0.004160831518

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498768135
  error estimate for blocks of size 2^( 2) =       0.000525176977
  error estimate for blocks of size 2^( 3) =       0.000551169182
  error estimate for blocks of size 2^( 4) =       0.000571094162
  error estimate for blocks of size 2^( 5) =       0.000583779494
  error estimate for blocks of size 2^( 6) =       0.000590136757
  error estimate for blocks of size 2^( 7) =       0.000593327814

      target function =      -0.708745169970
              le_mean =     -22.426679379621
             les_mean =     503.453487052636
             stat err =       0.000584584557
             autocorr =       1.373717012133
   target nu stat err =       0.000584584557
   target dn stat err =       0.004117970984
      target stat err =       0.003040552792
              std dev =       0.705364661062
             le_variance =       0.497539305075


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242667937962e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+08, overlap shift 2.5000e+09 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708757216906       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708757216906       residual = 6.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708757216906       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708757216906       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708757216906       residual = 3.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708757141551       residual = 1.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708756465546       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708757433799       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708757771419       residual = 8.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708757428811       residual = 8.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708757104144       residual = 2.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708757624005       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708757379693       residual = 2.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708757108207       residual = 4.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708757082717       residual = 1.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708757631923       residual = 7.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708757617757       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708756986544       residual = 7.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708757859921       residual = 4.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708757591962       residual = 2.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708757205280       residual = 1.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708758081817       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708756037717       residual = 8.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708757037815       residual = 5.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708758076313       residual = 2.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708757200386       residual = 1.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708755975621       residual = 1.04e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708756510011       residual = 9.38e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708757168905       residual = 5.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708756965737       residual = 2.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708756642658       residual = 1.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708757546064       residual = 7.64e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+08 is 1.989665e-12

solving harmonic davidson linear method for identity shift 1.0000e+09, overlap shift 1.0000e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708757216906       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708757216906       residual = 6.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708757216906       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708757216906       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708757216906       residual = 3.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708757216906       residual = 1.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708754130679       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708758903380       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708756313571       residual = 8.87e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708756593174       residual = 8.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708757216906       residual = 2.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708757216906       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708757216906       residual = 2.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708757231642       residual = 4.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708757214710       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708756460384       residual = 7.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708758129785       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708757237639       residual = 7.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708755476803       residual = 4.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708751991618       residual = 2.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708759700484       residual = 1.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708763291670       residual = 2.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708752543763       residual = 8.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708760076162       residual = 5.34e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708760858463       residual = 2.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708756554562       residual = 1.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708758472867       residual = 1.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708755111767       residual = 1.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708759358247       residual = 5.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708759521210       residual = 2.52e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708757828700       residual = 1.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708755394756       residual = 9.46e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         31 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+09 is 4.956157e-13

solving harmonic davidson linear method for identity shift 4.0000e+09, overlap shift 4.0000e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708757216906       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708757216906       residual = 6.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708757216906       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708757216906       residual = 2.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708757216906       residual = 3.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708757216906       residual = 1.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.708757216906       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.708750115355       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.708757216906       residual = 8.83e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.708750816491       residual = 8.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708755367564       residual = 2.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708757041975       residual = 1.70e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.708760152040       residual = 3.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.708751819213       residual = 3.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.708754677937       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.708759235399       residual = 7.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708746299981       residual = 1.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.708759485579       residual = 7.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.708748999867       residual = 4.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.708778553089       residual = 2.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.708755399091       residual = 2.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708757491913       residual = 2.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.708755949585       residual = 9.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.708754909434       residual = 5.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708749813590       residual = 2.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.708768735139       residual = 3.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708762424888       residual = 1.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.708769023333       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.708777806223       residual = 2.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.708752171429       residual = 7.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.708756464408       residual = 3.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.708763365207       residual = 4.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.708741209814       residual = 1.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.708745007037       residual = 7.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.708755077194       residual = 1.62e-08           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.708741991291       residual = 1.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.708797222806       residual = 8.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.708746799589       residual = 5.84e-08           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.708778812016       residual = 2.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.708759052797       residual = 2.75e-08           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.708817479987       residual = 2.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.708770256099       residual = 1.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.708738410339       residual = 2.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.708807592761       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.708746383906       residual = 1.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.708737142999       residual = 2.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.708894402580       residual = 9.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.708682200371       residual = 2.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.708761740481       residual = 6.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.709015554340       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.708220904635       residual = 1.52e-04           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.708542860166       residual = 4.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.709042871204       residual = 5.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.709155235689       residual = 4.70e-04           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.709472032890       residual = 3.38e-04           smallest_sin_value = 1.00e+00
davidson iteration   55:   krylov dim =  56   tar_fn =      -0.710764145504       residual = 2.11e-03           smallest_sin_value = 1.00e+00
davidson iteration   56:   krylov dim =  57   tar_fn =      -0.711555037119       residual = 5.89e-03           smallest_sin_value = 9.96e-01
davidson iteration   57 stopping due to small subspace S singular value of 7.86e-01
davidson solver did not converge after         57 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+09 is 1.245615e-13

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.536010 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0159e+02
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -22.4818
    reference variance = 0.486703
====================================================
  Execution time = 7.6031e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s009
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9842e-01
  Total weights = 2.0000e+06
  Execution time = 6.5100e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499207885
  error estimate for blocks of size 2^( 2) =       0.000525952653
  error estimate for blocks of size 2^( 3) =       0.000551547521
  error estimate for blocks of size 2^( 4) =       0.000570964508
  error estimate for blocks of size 2^( 5) =       0.000583581377
  error estimate for blocks of size 2^( 6) =       0.000591137347
  error estimate for blocks of size 2^( 7) =       0.000595054236

      target function =      -0.708112823871
              le_mean =     -22.426384059734
             les_mean =     503.441118769709
             stat err =       0.000585184367
             autocorr =       1.374113350809
   target nu stat err =       0.000585184367
   target dn stat err =       0.004532227916
      target stat err =       0.003327998920
              std dev =       0.705986560948
             le_variance =       0.498417024239

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499207885
  error estimate for blocks of size 2^( 2) =       0.000525952653
  error estimate for blocks of size 2^( 3) =       0.000551547521
  error estimate for blocks of size 2^( 4) =       0.000570964508
  error estimate for blocks of size 2^( 5) =       0.000583581377
  error estimate for blocks of size 2^( 6) =       0.000591137347
  error estimate for blocks of size 2^( 7) =       0.000595054236

      target function =      -0.708112823871
              le_mean =     -22.426384059734
             les_mean =     503.441118769709
             stat err =       0.000585184367
             autocorr =       1.374113350809
   target nu stat err =       0.000585184367
   target dn stat err =       0.004532227916
      target stat err =       0.003327998920
              std dev =       0.705986560948
             le_variance =       0.498417024239

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499207885
  error estimate for blocks of size 2^( 2) =       0.000525952653
  error estimate for blocks of size 2^( 3) =       0.000551547521
  error estimate for blocks of size 2^( 4) =       0.000570964508
  error estimate for blocks of size 2^( 5) =       0.000583581377
  error estimate for blocks of size 2^( 6) =       0.000591137347
  error estimate for blocks of size 2^( 7) =       0.000595054236

      target function =      -0.708112823871
              le_mean =     -22.426384059734
             les_mean =     503.441118769709
             stat err =       0.000585184367
             autocorr =       1.374113350810
   target nu stat err =       0.000585184367
   target dn stat err =       0.004532227916
      target stat err =       0.003327998920
              std dev =       0.705986560948
             le_variance =       0.498417024239

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498461212125
                                         uncertainty =       0.004361332907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499207885
  error estimate for blocks of size 2^( 2) =       0.000525952653
  error estimate for blocks of size 2^( 3) =       0.000551547521
  error estimate for blocks of size 2^( 4) =       0.000570964508
  error estimate for blocks of size 2^( 5) =       0.000583581377
  error estimate for blocks of size 2^( 6) =       0.000591137347
  error estimate for blocks of size 2^( 7) =       0.000595054236

      target function =      -0.708112823871
              le_mean =     -22.426384059734
             les_mean =     503.441118769709
             stat err =       0.000585184367
             autocorr =       1.374113350809
   target nu stat err =       0.000585184367
   target dn stat err =       0.004532227916
      target stat err =       0.003327998920
              std dev =       0.705986560948
             le_variance =       0.498417024239


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708112823871        initial  <--
     2.5000e+08     2.5000e+09             1.9897e-12        -0.708112823871
     1.0000e+09     1.0000e+10             4.9562e-13        -0.708112823871
     4.0000e+09     4.0000e+10             1.2456e-13        -0.708112823871

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.6668
  </log>
  <optVariables href="FORM.s009.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1068e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s010 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s010 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=10  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2422e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.3932
    reference variance = 0.322186
====================================================
  Execution time = 7.6295e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s010
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0797e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5073e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508055568323
                                         uncertainty =       0.013501819299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508055568323
                                         uncertainty =       0.013501819299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503966993
  error estimate for blocks of size 2^( 2) =       0.000530253986
  error estimate for blocks of size 2^( 3) =       0.000554759665
  error estimate for blocks of size 2^( 4) =       0.000575019219
  error estimate for blocks of size 2^( 5) =       0.000588799919
  error estimate for blocks of size 2^( 6) =       0.000597027644
  error estimate for blocks of size 2^( 7) =       0.000600779148

      target function =      -0.701148303687
              le_mean =     -22.426984455960
             les_mean =     503.477596993933
             stat err =       0.000590406483
             autocorr =       1.372454791920
   target nu stat err =       0.000590406483
   target dn stat err =       0.013636221924
      target stat err =       0.009686190041
              std dev =       0.712716956471
             le_variance =       0.507965460042


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242698445596e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+09, overlap shift 2.5000e+10 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701279940444       residual = 1.77e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701279940444       residual = 5.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701279940444       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701279940444       residual = 1.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701279460420       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701280684966       residual = 1.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701278226246       residual = 8.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701281880258       residual = 8.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701281821204       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701282044195       residual = 5.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701277487112       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701276656151       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701278458100       residual = 7.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701282994901       residual = 6.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701274186092       residual = 5.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701281317982       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701280817154       residual = 1.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701272817033       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701274252016       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701286882240       residual = 8.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701277369835       residual = 3.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701274952742       residual = 4.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701271018853       residual = 2.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701287204395       residual = 1.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701287077608       residual = 1.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701271508787       residual = 1.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701279755409       residual = 2.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701283947891       residual = 3.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701273208729       residual = 1.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701280885822       residual = 6.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701268551411       residual = 7.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701280086543       residual = 1.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701292161501       residual = 9.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701285779541       residual = 2.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.701273268675       residual = 2.91e-08           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.701277915734       residual = 9.36e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         35 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+09 is 4.435020e-13

solving harmonic davidson linear method for identity shift 1.0000e+10, overlap shift 1.0000e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701279940444       residual = 1.77e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701279940444       residual = 5.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701279940444       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701282076638       residual = 1.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701279940444       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701277606162       residual = 1.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701279940444       residual = 8.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701282846359       residual = 8.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701262114596       residual = 4.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701247700932       residual = 5.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701276091348       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701291420581       residual = 2.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701294905116       residual = 7.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701296281417       residual = 6.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701286034909       residual = 4.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701234478038       residual = 1.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701290163542       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701293293460       residual = 2.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701262807841       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701261333928       residual = 8.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701284190067       residual = 3.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701281160999       residual = 3.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701231946199       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701243725537       residual = 2.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701276391517       residual = 1.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701270740614       residual = 8.89e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.701289483256       residual = 4.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701293513798       residual = 6.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701235096752       residual = 1.44e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701312409519       residual = 7.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701244358551       residual = 6.51e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701365089316       residual = 3.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701274327336       residual = 5.71e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701280936113       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.701278888316       residual = 8.50e-08           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.701227398252       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.701339839539       residual = 2.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.701294546020       residual = 2.10e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.701364588553       residual = 3.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.701215486582       residual = 2.26e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.701297452307       residual = 3.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.701169985013       residual = 6.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.701351968779       residual = 2.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.701155765699       residual = 8.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.701246617255       residual = 1.08e-06           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.701088967820       residual = 2.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.701435318604       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.701391536317       residual = 9.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.701468390023       residual = 1.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.701326586613       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.700809583537       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.699949691878       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.701209843240       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.702545040521       residual = 1.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.703586207430       residual = 2.94e-03           smallest_sin_value = 9.98e-01
davidson iteration   55 stopping due to small subspace S singular value of 8.47e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+10 is 1.108957e-13

solving harmonic davidson linear method for identity shift 4.0000e+10, overlap shift 4.0000e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701279940444       residual = 1.77e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701279940444       residual = 5.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701279940444       residual = 2.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701279940444       residual = 1.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701288645397       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701279940444       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701282777902       residual = 8.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701327570374       residual = 8.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701372150483       residual = 4.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701141810015       residual = 4.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701371959768       residual = 1.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.701361222562       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701295078005       residual = 8.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.701357062929       residual = 6.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701357296953       residual = 5.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.701445714800       residual = 2.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.701326422785       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701288519182       residual = 2.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.701332530424       residual = 8.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701221544963       residual = 9.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701412738633       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.701476315857       residual = 1.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.701253786891       residual = 7.06e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.701330869629       residual = 5.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701318106039       residual = 3.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701295800930       residual = 2.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.700863568477       residual = 9.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.701235792567       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.701323332249       residual = 2.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701325645799       residual = 3.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701345437197       residual = 3.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701305308286       residual = 2.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.701257591834       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.701276303871       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.701348338102       residual = 3.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.701228450442       residual = 3.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.701386277849       residual = 1.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.700802686843       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.701269771575       residual = 9.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.701007169603       residual = 4.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.701594611377       residual = 6.30e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.701252253568       residual = 1.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.700547498149       residual = 2.80e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.700453625916       residual = 3.56e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.701213352444       residual = 2.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.700510003446       residual = 3.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.701992094436       residual = 3.29e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.701759396915       residual = 1.86e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.703323089236       residual = 2.25e-03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.714080239395       residual = 8.56e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.698882442431       residual = 4.91e-03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.706035388188       residual = 1.22e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.716404162477       residual = 1.90e-01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.705760312312       residual = 1.13e-02           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.678885894666       residual = 2.81e-01           smallest_sin_value = 9.98e-01
davidson iteration   55 stopping due to small subspace S singular value of 9.36e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+10 is 2.830343e-14

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.690751 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0153e+02
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -22.3752
    reference variance = 0.473539
====================================================
  Execution time = 7.4950e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s010
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9106e-01
  Total weights = 2.0000e+06
  Execution time = 6.5151e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495509258
  error estimate for blocks of size 2^( 2) =       0.000522416728
  error estimate for blocks of size 2^( 3) =       0.000548585887
  error estimate for blocks of size 2^( 4) =       0.000568804244
  error estimate for blocks of size 2^( 5) =       0.000582762522
  error estimate for blocks of size 2^( 6) =       0.000588504426
  error estimate for blocks of size 2^( 7) =       0.000593260590

      target function =      -0.713474711944
              le_mean =     -22.426367837816
             les_mean =     503.433033000584
             stat err =       0.000583332946
             autocorr =       1.385892244869
   target nu stat err =       0.000583332946
   target dn stat err =       0.003471006915
      target stat err =       0.002615103755
              std dev =       0.700755912622
             le_variance =       0.491058849075

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961731
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961731
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495509258
  error estimate for blocks of size 2^( 2) =       0.000522416728
  error estimate for blocks of size 2^( 3) =       0.000548585887
  error estimate for blocks of size 2^( 4) =       0.000568804244
  error estimate for blocks of size 2^( 5) =       0.000582762522
  error estimate for blocks of size 2^( 6) =       0.000588504426
  error estimate for blocks of size 2^( 7) =       0.000593260590

      target function =      -0.713474711944
              le_mean =     -22.426367837816
             les_mean =     503.433033000584
             stat err =       0.000583332946
             autocorr =       1.385892244871
   target nu stat err =       0.000583332946
   target dn stat err =       0.003471006915
      target stat err =       0.002615103755
              std dev =       0.700755912622
             le_variance =       0.491058849075

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495509258
  error estimate for blocks of size 2^( 2) =       0.000522416728
  error estimate for blocks of size 2^( 3) =       0.000548585887
  error estimate for blocks of size 2^( 4) =       0.000568804244
  error estimate for blocks of size 2^( 5) =       0.000582762522
  error estimate for blocks of size 2^( 6) =       0.000588504426
  error estimate for blocks of size 2^( 7) =       0.000593260590

      target function =      -0.713474711944
              le_mean =     -22.426367837816
             les_mean =     503.433033000584
             stat err =       0.000583332946
             autocorr =       1.385892244874
   target nu stat err =       0.000583332946
   target dn stat err =       0.003471006915
      target stat err =       0.002615103755
              std dev =       0.700755912622
             le_variance =       0.491058849075

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490964961730
                                         uncertainty =       0.003274585410

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495509258
  error estimate for blocks of size 2^( 2) =       0.000522416728
  error estimate for blocks of size 2^( 3) =       0.000548585887
  error estimate for blocks of size 2^( 4) =       0.000568804244
  error estimate for blocks of size 2^( 5) =       0.000582762522
  error estimate for blocks of size 2^( 6) =       0.000588504426
  error estimate for blocks of size 2^( 7) =       0.000593260590

      target function =      -0.713474711944
              le_mean =     -22.426367837816
             les_mean =     503.433033000584
             stat err =       0.000583332946
             autocorr =       1.385892244867
   target nu stat err =       0.000583332946
   target dn stat err =       0.003471006915
      target stat err =       0.002615103755
              std dev =       0.700755912622
             le_variance =       0.491058849075


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.713474711944        initial  <--
     2.5000e+09     2.5000e+10             4.4350e-13        -0.713474711944
     1.0000e+10     1.0000e+11             1.1090e-13        -0.713474711944
     4.0000e+10     4.0000e+11             2.8303e-14        -0.713474711944

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.5908
  </log>
  <optVariables href="FORM.s010.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0914e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s011 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s011 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=11  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.402
    reference variance = 0.486966
====================================================
  Execution time = 7.6631e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s011
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0044e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5279e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500453612881
                                         uncertainty =       0.004278359156

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500453612881
                                         uncertainty =       0.004278359156

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500221562
  error estimate for blocks of size 2^( 2) =       0.000527226510
  error estimate for blocks of size 2^( 3) =       0.000552981791
  error estimate for blocks of size 2^( 4) =       0.000572743354
  error estimate for blocks of size 2^( 5) =       0.000585729438
  error estimate for blocks of size 2^( 6) =       0.000595128073
  error estimate for blocks of size 2^( 7) =       0.000596660105

      target function =      -0.706649087450
              le_mean =     -22.426489258914
             les_mean =     503.447863451968
             stat err =       0.000587565242
             autocorr =       1.379708621394
   target nu stat err =       0.000587565242
   target dn stat err =       0.004706675414
      target stat err =       0.003438950781
              std dev =       0.707420117056
             le_variance =       0.500443222015


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242648925891e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+10, overlap shift 2.5000e+11 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706664740834       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706664740834       residual = 6.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706664740834       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706664740834       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706664740834       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706676689692       residual = 9.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706626450458       residual = 5.42e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706679195430       residual = 8.08e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706604518362       residual = 4.49e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706612926767       residual = 5.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.706696389600       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.706672064091       residual = 3.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.706653022719       residual = 1.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706623900806       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706706509149       residual = 2.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706663221409       residual = 1.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706692435830       residual = 9.83e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706682940109       residual = 6.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706632172892       residual = 6.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706614394736       residual = 3.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.706647467574       residual = 1.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.706603687441       residual = 3.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.706609567193       residual = 2.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706605929953       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706720328028       residual = 2.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.706713134464       residual = 1.81e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706605201116       residual = 1.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.706410573156       residual = 3.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.706729366053       residual = 3.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.706777098657       residual = 6.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706565987626       residual = 4.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.706517594860       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.706571066348       residual = 4.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.706653289574       residual = 3.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.706756772122       residual = 4.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.707050033344       residual = 7.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.706723105899       residual = 2.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.706880529841       residual = 2.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.706620039215       residual = 2.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.707017722625       residual = 6.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.706623737682       residual = 1.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.707168648230       residual = 1.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.706942346066       residual = 4.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.705913450127       residual = 2.84e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.706818679182       residual = 1.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.707468064676       residual = 3.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.706465154721       residual = 2.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.705421402235       residual = 7.88e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.705364523684       residual = 9.55e-04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.713390985380       residual = 2.35e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.707171996723       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.707264115899       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.706664966673       residual = 9.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.720787688067       residual = 1.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.701116121660       residual = 2.05e-02           smallest_sin_value = 9.96e-01
davidson iteration   55 stopping due to small subspace S singular value of 7.80e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+10 is 1.957151e-14

solving harmonic davidson linear method for identity shift 1.0000e+11, overlap shift 1.0000e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706664740834       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706664740834       residual = 6.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706664740834       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706664740834       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706664740834       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706664913469       residual = 9.54e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706724939993       residual = 5.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706966020701       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706665116551       residual = 5.08e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.706501478382       residual = 6.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.706534208494       residual = 4.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.706663209080       residual = 3.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.706605185340       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706601799463       residual = 2.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706740009765       residual = 3.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706369034111       residual = 7.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.706690904353       residual = 1.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.706010682721       residual = 2.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.706663426204       residual = 9.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706181933337       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705833120759       residual = 3.54e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.706651464296       residual = 4.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.706616513827       residual = 7.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706888575123       residual = 3.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706337390293       residual = 7.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.707000928130       residual = 6.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.706380632276       residual = 4.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.706692765935       residual = 4.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.706423111928       residual = 3.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.706737875530       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.706237239303       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.705814287740       residual = 3.82e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.706463866733       residual = 3.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.707732003855       residual = 5.92e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.706025242283       residual = 2.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.708493634790       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.707150658701       residual = 1.72e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.705280739334       residual = 9.87e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.705039801121       residual = 1.43e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.706321941512       residual = 6.95e-05           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.707683694771       residual = 5.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.705439757170       residual = 7.81e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.705104688983       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.707503248055       residual = 3.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.706875311210       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.706421744178       residual = 6.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.705609497832       residual = 9.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.705959834027       residual = 3.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.711591574790       residual = 1.23e-02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.700087245696       residual = 2.25e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.711403883574       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.715556453399       residual = 4.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.710517106255       residual = 1.52e-02           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.702188115045       residual = 1.46e-01           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.628441991354       residual = 4.27e+00           smallest_sin_value = 9.92e-01
davidson iteration   55 stopping due to small subspace S singular value of 9.01e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+11 is 5.414488e-15

solving harmonic davidson linear method for identity shift 4.0000e+11, overlap shift 4.0000e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706664740834       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706664740834       residual = 6.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706664740834       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706664740834       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706664740527       residual = 1.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.706664371938       residual = 1.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.706883635765       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.706766448216       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.706987274689       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.707283359372       residual = 2.84e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.708141788756       residual = 1.18e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.707310877227       residual = 2.89e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.707295313544       residual = 2.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.706194251332       residual = 1.85e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.706687674272       residual = 1.30e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.706806640737       residual = 7.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.705865989186       residual = 3.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.707929341293       residual = 8.85e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.704439603654       residual = 2.67e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.706114128266       residual = 2.90e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.703413263280       residual = 5.71e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.709532943261       residual = 5.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.704790799566       residual = 1.97e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.706449104551       residual = 8.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.706480851249       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.705342807031       residual = 9.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.708212427336       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.703951303592       residual = 4.09e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.704001003607       residual = 3.50e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.707784848130       residual = 1.01e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.702874662713       residual = 7.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.706337498128       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.709051760679       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.709211086556       residual = 4.30e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.710482630805       residual = 7.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.713897223288       residual = 2.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.701563618363       residual = 1.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.708287321943       residual = 1.96e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.715030383250       residual = 3.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.704543138812       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.704652092201       residual = 2.95e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.709032664733       residual = 2.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.713468980858       residual = 2.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.703063075368       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.710673890426       residual = 9.18e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.721946904428       residual = 1.19e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.730377113076       residual = 2.97e-01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.705164683998       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.693536386124       residual = 8.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.731521591425       residual = 3.72e-01           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.741058497276       residual = 6.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -1.174154862789       residual = 1.17e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.632815644659       residual = 2.85e+00           smallest_sin_value = 9.99e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.67e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+11 is 7.309178e-16

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.867069 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0209e+02
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -22.3952
    reference variance = 0.755444
====================================================
  Execution time = 7.5628e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s011
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0412e-01
  Total weights = 2.0000e+06
  Execution time = 6.5078e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502054119
  error estimate for blocks of size 2^( 2) =       0.000528795431
  error estimate for blocks of size 2^( 3) =       0.000554779978
  error estimate for blocks of size 2^( 4) =       0.000574252474
  error estimate for blocks of size 2^( 5) =       0.000586095971
  error estimate for blocks of size 2^( 6) =       0.000591116093
  error estimate for blocks of size 2^( 7) =       0.000595497880

      target function =      -0.704031065648
              le_mean =     -22.425765613431
             les_mean =     503.419079772317
             stat err =       0.000586740605
             autocorr =       1.365812930241
   target nu stat err =       0.000586740605
   target dn stat err =       0.004905357177
      target stat err =       0.003549868950
              std dev =       0.710011743459
             le_variance =       0.504116675849

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502054119
  error estimate for blocks of size 2^( 2) =       0.000528795431
  error estimate for blocks of size 2^( 3) =       0.000554779978
  error estimate for blocks of size 2^( 4) =       0.000574252474
  error estimate for blocks of size 2^( 5) =       0.000586095971
  error estimate for blocks of size 2^( 6) =       0.000591116093
  error estimate for blocks of size 2^( 7) =       0.000595497880

      target function =      -0.704031065648
              le_mean =     -22.425765613431
             les_mean =     503.419079772317
             stat err =       0.000586740605
             autocorr =       1.365812930239
   target nu stat err =       0.000586740605
   target dn stat err =       0.004905357177
      target stat err =       0.003549868950
              std dev =       0.710011743459
             le_variance =       0.504116675849

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502054119
  error estimate for blocks of size 2^( 2) =       0.000528795431
  error estimate for blocks of size 2^( 3) =       0.000554779978
  error estimate for blocks of size 2^( 4) =       0.000574252474
  error estimate for blocks of size 2^( 5) =       0.000586095971
  error estimate for blocks of size 2^( 6) =       0.000591116093
  error estimate for blocks of size 2^( 7) =       0.000595497880

      target function =      -0.704031065648
              le_mean =     -22.425765613431
             les_mean =     503.419079772317
             stat err =       0.000586740605
             autocorr =       1.365812930240
   target nu stat err =       0.000586740605
   target dn stat err =       0.004905357177
      target stat err =       0.003549868950
              std dev =       0.710011743459
             le_variance =       0.504116675849

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504154755408
                                         uncertainty =       0.004703205449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502054119
  error estimate for blocks of size 2^( 2) =       0.000528795431
  error estimate for blocks of size 2^( 3) =       0.000554779978
  error estimate for blocks of size 2^( 4) =       0.000574252474
  error estimate for blocks of size 2^( 5) =       0.000586095971
  error estimate for blocks of size 2^( 6) =       0.000591116093
  error estimate for blocks of size 2^( 7) =       0.000595497880

      target function =      -0.704031065648
              le_mean =     -22.425765613431
             les_mean =     503.419079772317
             stat err =       0.000586740605
             autocorr =       1.365812930240
   target nu stat err =       0.000586740605
   target dn stat err =       0.004905357177
      target stat err =       0.003549868950
              std dev =       0.710011743459
             le_variance =       0.504116675849


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704031065648        initial  <--
     2.5000e+10     2.5000e+11             1.9572e-14        -0.704031065648
     1.0000e+11     1.0000e+12             5.4145e-15        -0.704031065648
     4.0000e+11     4.0000e+12             7.3092e-16        -0.704031065648

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.2375
  </log>
  <optVariables href="FORM.s011.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1034e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s012 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s012 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=12  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2417e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.4832
    reference variance = 0.444983
====================================================
  Execution time = 7.7962e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s012
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0733e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5547e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507408676518
                                         uncertainty =       0.005436924912

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507408676518
                                         uncertainty =       0.005436924912

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503652321
  error estimate for blocks of size 2^( 2) =       0.000530233586
  error estimate for blocks of size 2^( 3) =       0.000555709652
  error estimate for blocks of size 2^( 4) =       0.000574622315
  error estimate for blocks of size 2^( 5) =       0.000585910429
  error estimate for blocks of size 2^( 6) =       0.000594794758
  error estimate for blocks of size 2^( 7) =       0.000600561558

      target function =      -0.701707431035
              le_mean =     -22.427000097590
             les_mean =     503.477664444504
             stat err =       0.000588972265
             autocorr =       1.367502122553
   target nu stat err =       0.000588972265
   target dn stat err =       0.005620921526
      target stat err =       0.004035180877
              std dev =       0.712271943051
             le_variance =       0.507331320858


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242700009759e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701729481923       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701729481923       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701729481923       residual = 7.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701729481923       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701807992469       residual = 4.78e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701964313436       residual = 3.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701725728874       residual = 2.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701648710389       residual = 1.42e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.701221049195       residual = 2.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701485100086       residual = 6.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701957845290       residual = 1.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.702392971924       residual = 3.30e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.701587894750       residual = 8.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.700725599427       residual = 5.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.701532870128       residual = 5.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.702101933567       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.702172371633       residual = 1.17e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.701359511577       residual = 1.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.702485894557       residual = 3.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.701171789460       residual = 2.25e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.701533936564       residual = 4.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.702699796582       residual = 5.25e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.703144098989       residual = 9.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.702943951179       residual = 7.91e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.702367613447       residual = 2.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701866317073       residual = 6.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.703682326244       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.703617921448       residual = 1.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.703403524283       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.701946338732       residual = 4.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.701565330218       residual = 5.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.701277923907       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.702612266020       residual = 4.98e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.704854247387       residual = 4.80e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.698939684297       residual = 3.91e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.698867738911       residual = 4.01e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.702107004127       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.701825069030       residual = 5.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.702220144606       residual = 3.86e-04           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.703680228135       residual = 2.42e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.704637789538       residual = 4.59e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.701324749675       residual = 6.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.700533184083       residual = 9.39e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.704513144934       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.703193099737       residual = 1.95e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.700209193713       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.709192516520       residual = 4.15e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.698704659880       residual = 1.63e-02           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.698511018729       residual = 5.88e-03           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.700040933479       residual = 3.07e-02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.707943372656       residual = 1.23e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.697115569942       residual = 2.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.690939714949       residual = 1.18e+00           smallest_sin_value = 9.97e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.89e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+11 is 1.352741e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701729481923       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701729481923       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701729481923       residual = 7.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701729481923       residual = 2.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701031283347       residual = 7.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701729481923       residual = 2.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.701803312841       residual = 3.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.700897606659       residual = 5.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.702688370459       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701247877779       residual = 5.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.701139155472       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.702067333776       residual = 7.63e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.700621273051       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.702525882716       residual = 6.03e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.700650331936       residual = 1.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.704694979920       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.704874195402       residual = 5.36e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.699317880535       residual = 2.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.697555502738       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.698506175501       residual = 6.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.700857397711       residual = 8.81e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.702777487457       residual = 1.24e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.700138770867       residual = 2.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.702214538690       residual = 6.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.701999091929       residual = 3.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.701195112448       residual = 2.27e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.704349810449       residual = 5.70e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.698626605163       residual = 6.07e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.693343022375       residual = 3.88e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.693677088645       residual = 3.33e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.707872474010       residual = 2.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.704200541880       residual = 3.68e-03           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.714260557075       residual = 9.22e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.700218662679       residual = 1.67e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.730944448725       residual = 4.50e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.705708793352       residual = 4.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.683927563757       residual = 1.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.697061176889       residual = 1.66e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.706370806933       residual = 1.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.700750852586       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.715356398792       residual = 1.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.695937656066       residual = 3.41e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.681414635460       residual = 2.25e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.703187068631       residual = 3.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.713529081261       residual = 7.41e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.714978352233       residual = 9.82e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.700733180675       residual = 6.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.686592300428       residual = 1.64e-01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.804114454651       residual = 5.37e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.607978931267       residual = 7.81e+00           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.730215719189       residual = 5.71e-01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -0.749030299910       residual = 9.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -0.811190294236       residual = 2.47e+01           smallest_sin_value = 1.00e+00
davidson iteration   53:   krylov dim =  54   tar_fn =      -0.438455975716       residual = 5.48e+01           smallest_sin_value = 1.00e+00
davidson iteration   54:   krylov dim =  55   tar_fn =      -0.627242439699       residual = 3.49e+01           smallest_sin_value = 1.00e+00
davidson iteration   55 stopping due to small subspace S singular value of 9.63e-01
davidson solver did not converge after         55 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+12 is 1.986931e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701729481923       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701729481923       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701729481923       residual = 9.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.701729481919       residual = 5.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.701729481923       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.701514730517       residual = 1.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.699068284946       residual = 5.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.701340689220       residual = 2.39e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.700570896662       residual = 1.97e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.701745019092       residual = 3.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.697885544224       residual = 1.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.689271998939       residual = 7.56e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.697304065598       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.695727513947       residual = 2.58e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.717162473875       residual = 1.14e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.692366505433       residual = 5.16e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.717322221618       residual = 1.23e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.712133857761       residual = 6.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.705395143727       residual = 1.65e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.696041866581       residual = 2.63e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.719456602886       residual = 1.59e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.700341962575       residual = 1.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.699985291144       residual = 1.79e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.700901576431       residual = 1.67e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.703094010529       residual = 2.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.668005987524       residual = 6.07e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.711283064250       residual = 7.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.710149953110       residual = 4.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.707563016632       residual = 2.57e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.705807296082       residual = 3.01e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.674050095736       residual = 4.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.744948643278       residual = 1.15e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.722128993858       residual = 3.94e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.691011377908       residual = 1.54e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.694987270116       residual = 9.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.727582866030       residual = 8.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.665496563572       residual = 6.98e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.732780868613       residual = 5.51e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.664585911127       residual = 8.74e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.617875729682       residual = 3.86e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.756550282832       residual = 1.94e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.703222071990       residual = 2.94e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.702521054769       residual = 3.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.773669433113       residual = 2.76e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.677591452482       residual = 4.18e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.642256893243       residual = 7.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.937541903580       residual = 2.84e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.376439742733       residual = 6.40e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.750287189519       residual = 1.04e+01           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.014524851149       residual = 2.88e+02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -1.540920542956       residual = 1.15e+03           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =       0.481844403106       residual = 8.17e+02           smallest_sin_value = 1.00e+00
davidson iteration   52:   krylov dim =  53   tar_fn =      -2.344413071846       residual = 1.62e+03           smallest_sin_value = 9.91e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.38e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+12 is 4.935768e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.038318 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0369e+02
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -22.4285
    reference variance = 0.374357
====================================================
  Execution time = 7.5226e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s012
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9723e-01
  Total weights = 2.0000e+06
  Execution time = 6.4407e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498612718
  error estimate for blocks of size 2^( 2) =       0.000525676868
  error estimate for blocks of size 2^( 3) =       0.000550583375
  error estimate for blocks of size 2^( 4) =       0.000569535496
  error estimate for blocks of size 2^( 5) =       0.000582302714
  error estimate for blocks of size 2^( 6) =       0.000588929795
  error estimate for blocks of size 2^( 7) =       0.000591354321

      target function =      -0.708958126194
              le_mean =     -22.427244213122
             les_mean =     503.478512030883
             stat err =       0.000583030582
             autocorr =       1.367275297678
   target nu stat err =       0.000583030582
   target dn stat err =       0.004407845329
      target stat err =       0.003250873330
              std dev =       0.705144867715
             le_variance =       0.497229284465

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498612718
  error estimate for blocks of size 2^( 2) =       0.000525676868
  error estimate for blocks of size 2^( 3) =       0.000550583375
  error estimate for blocks of size 2^( 4) =       0.000569535496
  error estimate for blocks of size 2^( 5) =       0.000582302714
  error estimate for blocks of size 2^( 6) =       0.000588929795
  error estimate for blocks of size 2^( 7) =       0.000591354321

      target function =      -0.708958126194
              le_mean =     -22.427244213122
             les_mean =     503.478512030883
             stat err =       0.000583030582
             autocorr =       1.367275297679
   target nu stat err =       0.000583030582
   target dn stat err =       0.004407845329
      target stat err =       0.003250873330
              std dev =       0.705144867715
             le_variance =       0.497229284465

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498612718
  error estimate for blocks of size 2^( 2) =       0.000525676868
  error estimate for blocks of size 2^( 3) =       0.000550583375
  error estimate for blocks of size 2^( 4) =       0.000569535496
  error estimate for blocks of size 2^( 5) =       0.000582302714
  error estimate for blocks of size 2^( 6) =       0.000588929795
  error estimate for blocks of size 2^( 7) =       0.000591354321

      target function =      -0.708958126194
              le_mean =     -22.427244213122
             les_mean =     503.478512030883
             stat err =       0.000583030582
             autocorr =       1.367275297677
   target nu stat err =       0.000583030582
   target dn stat err =       0.004407845329
      target stat err =       0.003250873330
              std dev =       0.705144867715
             le_variance =       0.497229284465

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497331442210
                                         uncertainty =       0.003913033312

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498612718
  error estimate for blocks of size 2^( 2) =       0.000525676868
  error estimate for blocks of size 2^( 3) =       0.000550583375
  error estimate for blocks of size 2^( 4) =       0.000569535496
  error estimate for blocks of size 2^( 5) =       0.000582302714
  error estimate for blocks of size 2^( 6) =       0.000588929795
  error estimate for blocks of size 2^( 7) =       0.000591354321

      target function =      -0.708958126194
              le_mean =     -22.427244213122
             les_mean =     503.478512030883
             stat err =       0.000583030582
             autocorr =       1.367275297677
   target nu stat err =       0.000583030582
   target dn stat err =       0.004407845329
      target stat err =       0.003250873330
              std dev =       0.705144867715
             le_variance =       0.497229284465


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708958126194        initial  <--
     2.5000e+11     2.5000e+12             1.3527e-15        -0.708958126194
     1.0000e+12     1.0000e+13             1.9869e-16        -0.708958126194
     4.0000e+12     4.0000e+13             4.9358e-17        -0.708958126194

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.5684
  </log>
  <optVariables href="FORM.s012.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1154e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s013 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s013 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=13  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2420e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.3893
    reference variance = 0.388103
====================================================
  Execution time = 7.6909e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s013
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9453e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5414e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494581330634
                                         uncertainty =       0.002660737490

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494581330634
                                         uncertainty =       0.002660737490

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497256892
  error estimate for blocks of size 2^( 2) =       0.000523678002
  error estimate for blocks of size 2^( 3) =       0.000549396346
  error estimate for blocks of size 2^( 4) =       0.000568565797
  error estimate for blocks of size 2^( 5) =       0.000580516990
  error estimate for blocks of size 2^( 6) =       0.000587736838
  error estimate for blocks of size 2^( 7) =       0.000590960544

      target function =      -0.710935564152
              le_mean =     -22.426864364490
             les_mean =     503.458773808317
             stat err =       0.000581945042
             autocorr =       1.369627046691
   target nu stat err =       0.000581945042
   target dn stat err =       0.002789734037
      target stat err =       0.002118441525
              std dev =       0.703227439975
             le_variance =       0.494528832333


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242686436449e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+12, overlap shift 2.5000e+13 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710940933150       residual = 3.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710940933150       residual = 8.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710940933150       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710940933150       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709618505763       residual = 3.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710229341302       residual = 4.83e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.710526579588       residual = 5.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.707082564467       residual = 8.40e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.716099244550       residual = 2.25e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.709685934252       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.710181512116       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.717254376465       residual = 2.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.709762615384       residual = 2.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.705843471371       residual = 1.61e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.718223919711       residual = 2.71e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.690078546737       residual = 2.36e-01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.708518807602       residual = 8.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.720123506360       residual = 4.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.718006826643       residual = 2.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.711104560416       residual = 1.22e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.705334658767       residual = 1.60e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.708021252623       residual = 6.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.696575250873       residual = 1.04e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.719494168658       residual = 3.68e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.708591440514       residual = 7.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.696285008444       residual = 1.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.720969958018       residual = 4.64e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.703699364407       residual = 2.83e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.727919779732       residual = 1.37e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.692170067228       residual = 1.86e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.687751612927       residual = 2.72e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.673897074926       residual = 6.84e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.700265536208       residual = 6.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.723611110364       residual = 8.77e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.734233651667       residual = 2.85e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.722531729969       residual = 7.24e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.683767620491       residual = 3.81e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.700819773480       residual = 1.08e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.703215515276       residual = 1.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.672039268471       residual = 7.92e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.685107061618       residual = 3.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.697283560125       residual = 1.50e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.750855533000       residual = 8.26e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.673509292245       residual = 7.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.640005954904       residual = 2.66e+00           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.724663422267       residual = 2.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.626402688792       residual = 3.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.775548812000       residual = 3.04e+00           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.610084489751       residual = 4.70e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -0.707295252231       residual = 2.93e+00           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -0.570883356876       residual = 3.08e+01           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =       0.667584785350       residual = 1.24e+03           smallest_sin_value = 9.96e-01
davidson iteration   52:   krylov dim =  53   tar_fn =      -1.758006054391       residual = 8.67e+02           smallest_sin_value = 9.96e-01
davidson iteration   53 stopping due to small subspace S singular value of 9.37e-01
davidson solver did not converge after         53 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 2.5000e+12 is 6.545794e-17

solving harmonic davidson linear method for identity shift 1.0000e+13, overlap shift 1.0000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710940933150       residual = 3.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710940933150       residual = 8.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710940933150       residual = 5.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.711148316552       residual = 3.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710940935495       residual = 2.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.710940925349       residual = 3.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.697235095354       residual = 1.09e-01           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.710333273972       residual = 2.06e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.702757515574       residual = 4.32e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.692308561069       residual = 2.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.724319666995       residual = 1.26e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.708655695298       residual = 9.85e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.695521035459       residual = 1.49e-01           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.720960956108       residual = 6.90e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.686967407988       residual = 3.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.672695442773       residual = 8.48e-01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.729253668052       residual = 2.82e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.719536014126       residual = 9.88e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.695962665256       residual = 1.40e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.702087200402       residual = 1.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.680469253683       residual = 5.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.652582964318       residual = 1.87e+00           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.729753423220       residual = 1.71e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.675848778352       residual = 5.93e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.678079007574       residual = 5.32e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.650329891656       residual = 1.75e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.723940336677       residual = 1.62e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.716237384950       residual = 1.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.698259117345       residual = 2.24e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.773567988408       residual = 1.90e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.711703215990       residual = 9.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.725215759946       residual = 1.18e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.703547083841       residual = 1.17e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.653428286555       residual = 1.77e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.582163188633       residual = 8.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.504321952536       residual = 2.40e+01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.734325486463       residual = 3.10e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.746754110758       residual = 9.21e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.622465005414       residual = 3.83e+00           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.723279143599       residual = 4.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.684977856698       residual = 1.59e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.670948831061       residual = 1.33e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.734537802179       residual = 2.07e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -1.026601640164       residual = 4.94e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.709140122395       residual = 5.56e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.710501497042       residual = 9.76e-01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.888106671767       residual = 1.62e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.540411895040       residual = 1.57e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =      -0.778030125905       residual = 5.21e+00           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -1.189927016797       residual = 2.92e+02           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =       0.889662997979       residual = 1.30e+03           smallest_sin_value = 9.99e-01
davidson iteration   51:   krylov dim =  52   tar_fn =      -2.113669994152       residual = 3.61e+03           smallest_sin_value = 9.91e-01
davidson iteration   52 stopping due to too large eigenvalue change
davidson solver did not converge after         52 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+13 is 3.918787e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+13, overlap shift 4.0000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710940933150       residual = 3.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710940933150       residual = 8.44e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710940933150       residual = 4.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710940933151       residual = 8.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.706640383398       residual = 3.46e-01           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.679098699286       residual = 6.88e-01           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.713894184193       residual = 1.37e-01           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.773648139835       residual = 2.13e+00           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.702288942300       residual = 1.18e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.681481440374       residual = 1.09e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.676677703281       residual = 7.18e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.674644375644       residual = 1.69e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.758660919494       residual = 1.60e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.668343417623       residual = 1.38e+00           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.716395549299       residual = 2.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.858399064598       residual = 1.02e+01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.649511184253       residual = 2.33e+00           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.886850763045       residual = 1.55e+01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.648606597984       residual = 2.64e+00           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.653472630099       residual = 3.22e+00           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.753096774274       residual = 1.08e+00           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.549405921333       residual = 1.27e+01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.694855189647       residual = 2.51e+00           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.790904020798       residual = 4.28e+00           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.607101224631       residual = 7.64e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -1.299198632432       residual = 1.74e+02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.726089107455       residual = 1.34e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.852996273754       residual = 1.10e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.114727494675       residual = 1.87e+02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.582131724845       residual = 9.15e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.560107195726       residual = 1.10e+01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.473085092230       residual = 3.11e+01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.652280597255       residual = 2.12e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.757920730689       residual = 4.82e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.705971928265       residual = 8.55e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.555098093908       residual = 1.94e+01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.184646035765       residual = 1.21e+02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.368906681475       residual = 2.26e+02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.417994901717       residual = 6.50e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.595773548702       residual = 2.96e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.731239301564       residual = 1.06e+01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.245701682953       residual = 1.20e+02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.185438314000       residual = 1.38e+02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.264902285702       residual = 1.06e+02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.316270341811       residual = 1.00e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.372033357709       residual = 5.57e+01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.592649419176       residual = 1.95e+01           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.535420062181       residual = 2.67e+01           smallest_sin_value = 1.00e+00
davidson iteration   48:   krylov dim =  49   tar_fn =       6.685069993057       residual = 2.78e+04           smallest_sin_value = 1.00e+00
davidson iteration   49:   krylov dim =  50   tar_fn =      -2.449791349399       residual = 2.76e+03           smallest_sin_value = 1.00e+00
davidson iteration   50:   krylov dim =  51   tar_fn =      -9.568258466338       residual = 3.89e+04           smallest_sin_value = 1.00e+00
davidson iteration   51:   krylov dim =  52   tar_fn =      -4.424968482706       residual = 6.73e+03           smallest_sin_value = 9.99e-01
davidson iteration   52 stopping due to too large eigenvalue change
davidson solver did not converge after         52 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+13 is 1.814668e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.198745 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0249e+02
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -22.425
    reference variance = 0.412173
====================================================
  Execution time = 7.6800e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s013
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.3050e-01
  Total weights = 2.0000e+06
  Execution time = 6.4549e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000515024103
  error estimate for blocks of size 2^( 2) =       0.000540748398
  error estimate for blocks of size 2^( 3) =       0.000564950709
  error estimate for blocks of size 2^( 4) =       0.000583572820
  error estimate for blocks of size 2^( 5) =       0.000594895171
  error estimate for blocks of size 2^( 6) =       0.000603118194
  error estimate for blocks of size 2^( 7) =       0.000605533657

      target function =      -0.685108505179
              le_mean =     -22.426556062879
             les_mean =     503.480916230397
             stat err =       0.000596779961
             autocorr =       1.342682577318
   target nu stat err =       0.000596779961
   target dn stat err =       0.029093261125
      target stat err =       0.019702850772
              std dev =       0.728354071982
             le_variance =       0.530499654173

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000515024103
  error estimate for blocks of size 2^( 2) =       0.000540748398
  error estimate for blocks of size 2^( 3) =       0.000564950709
  error estimate for blocks of size 2^( 4) =       0.000583572820
  error estimate for blocks of size 2^( 5) =       0.000594895171
  error estimate for blocks of size 2^( 6) =       0.000603118194
  error estimate for blocks of size 2^( 7) =       0.000605533657

      target function =      -0.685108505179
              le_mean =     -22.426556062879
             les_mean =     503.480916230397
             stat err =       0.000596779961
             autocorr =       1.342682577318
   target nu stat err =       0.000596779961
   target dn stat err =       0.029093261125
      target stat err =       0.019702850772
              std dev =       0.728354071982
             le_variance =       0.530499654173

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000515024103
  error estimate for blocks of size 2^( 2) =       0.000540748398
  error estimate for blocks of size 2^( 3) =       0.000564950709
  error estimate for blocks of size 2^( 4) =       0.000583572820
  error estimate for blocks of size 2^( 5) =       0.000594895171
  error estimate for blocks of size 2^( 6) =       0.000603118194
  error estimate for blocks of size 2^( 7) =       0.000605533657

      target function =      -0.685108505179
              le_mean =     -22.426556062879
             les_mean =     503.480916230397
             stat err =       0.000596779961
             autocorr =       1.342682577318
   target nu stat err =       0.000596779961
   target dn stat err =       0.029093261125
      target stat err =       0.019702850772
              std dev =       0.728354071982
             le_variance =       0.530499654173

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.530632473463
                                         uncertainty =       0.028736906441

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000515024103
  error estimate for blocks of size 2^( 2) =       0.000540748398
  error estimate for blocks of size 2^( 3) =       0.000564950709
  error estimate for blocks of size 2^( 4) =       0.000583572820
  error estimate for blocks of size 2^( 5) =       0.000594895171
  error estimate for blocks of size 2^( 6) =       0.000603118194
  error estimate for blocks of size 2^( 7) =       0.000605533657

      target function =      -0.685108505179
              le_mean =     -22.426556062879
             les_mean =     503.480916230397
             stat err =       0.000596779961
             autocorr =       1.342682577318
   target nu stat err =       0.000596779961
   target dn stat err =       0.029093261125
      target stat err =       0.019702850772
              std dev =       0.728354071982
             le_variance =       0.530499654173


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.685108505179        initial
     2.5000e+12     2.5000e+13             6.5458e-17        -0.685108505179
     1.0000e+13     1.0000e+14             3.9188e-18        -0.685108505179
     4.0000e+13     4.0000e+14             1.8147e-18        -0.685108505179  <--

*****************************************************************************
Applying the update for shift_i =   4.0000e+13     and shift_s =   4.0000e+14
*****************************************************************************

  Execution time = 1.0917e+02
  </log>
  <optVariables href="FORM.s013.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1166e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s014 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s014 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=14  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2419e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.4988
    reference variance = 0.35762
====================================================
  Execution time = 7.6535e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s014
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9643e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5760e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496427097829
                                         uncertainty =       0.002891620338

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496427097829
                                         uncertainty =       0.002891620338

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498209862
  error estimate for blocks of size 2^( 2) =       0.000524939803
  error estimate for blocks of size 2^( 3) =       0.000549483273
  error estimate for blocks of size 2^( 4) =       0.000568051337
  error estimate for blocks of size 2^( 5) =       0.000580164793
  error estimate for blocks of size 2^( 6) =       0.000586185622
  error estimate for blocks of size 2^( 7) =       0.000586641340

      target function =      -0.709549627024
              le_mean =     -22.427058595807
             les_mean =     503.469383144938
             stat err =       0.000580260773
             autocorr =       1.356506202249
   target nu stat err =       0.000580260773
   target dn stat err =       0.003422337589
      target stat err =       0.002554636778
              std dev =       0.704575143893
             le_variance =       0.496426133392


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242705859581e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+13, overlap shift 1.0000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.25e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+13 is 0.000000e+00

solving harmonic davidson linear method for identity shift 4.0000e+13, overlap shift 4.0000e+14 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.25e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+13 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+14, overlap shift 1.6000e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709558003354       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.25e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+14 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.199792 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0230e+02
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -22.4466
    reference variance = 0.293108
====================================================
  Execution time = 7.5434e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s014
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9087e-01
  Total weights = 2.0000e+06
  Execution time = 6.4323e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495414022
  error estimate for blocks of size 2^( 2) =       0.000522353060
  error estimate for blocks of size 2^( 3) =       0.000548239419
  error estimate for blocks of size 2^( 4) =       0.000568385382
  error estimate for blocks of size 2^( 5) =       0.000580052143
  error estimate for blocks of size 2^( 6) =       0.000586551311
  error estimate for blocks of size 2^( 7) =       0.000589308211

      target function =      -0.713611190996
              le_mean =     -22.427001937229
             les_mean =     503.461285752722
             stat err =       0.000581074262
             autocorr =       1.375709352269
   target nu stat err =       0.000581074262
   target dn stat err =       0.002513222755
      target stat err =       0.001939880278
              std dev =       0.700621228406
             le_variance =       0.490870105693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495414022
  error estimate for blocks of size 2^( 2) =       0.000522353060
  error estimate for blocks of size 2^( 3) =       0.000548239419
  error estimate for blocks of size 2^( 4) =       0.000568385382
  error estimate for blocks of size 2^( 5) =       0.000580052143
  error estimate for blocks of size 2^( 6) =       0.000586551311
  error estimate for blocks of size 2^( 7) =       0.000589308211

      target function =      -0.713611190996
              le_mean =     -22.427001937229
             les_mean =     503.461285752722
             stat err =       0.000581074262
             autocorr =       1.375709352269
   target nu stat err =       0.000581074262
   target dn stat err =       0.002513222755
      target stat err =       0.001939880278
              std dev =       0.700621228406
             le_variance =       0.490870105693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495414022
  error estimate for blocks of size 2^( 2) =       0.000522353060
  error estimate for blocks of size 2^( 3) =       0.000548239419
  error estimate for blocks of size 2^( 4) =       0.000568385382
  error estimate for blocks of size 2^( 5) =       0.000580052143
  error estimate for blocks of size 2^( 6) =       0.000586551311
  error estimate for blocks of size 2^( 7) =       0.000589308211

      target function =      -0.713611190996
              le_mean =     -22.427001937229
             les_mean =     503.461285752722
             stat err =       0.000581074262
             autocorr =       1.375709352269
   target nu stat err =       0.000581074262
   target dn stat err =       0.002513222755
      target stat err =       0.001939880278
              std dev =       0.700621228406
             le_variance =       0.490870105693

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490897668381
                                         uncertainty =       0.002495297860

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495414022
  error estimate for blocks of size 2^( 2) =       0.000522353060
  error estimate for blocks of size 2^( 3) =       0.000548239419
  error estimate for blocks of size 2^( 4) =       0.000568385382
  error estimate for blocks of size 2^( 5) =       0.000580052143
  error estimate for blocks of size 2^( 6) =       0.000586551311
  error estimate for blocks of size 2^( 7) =       0.000589308211

      target function =      -0.713611190996
              le_mean =     -22.427001937229
             les_mean =     503.461285752722
             stat err =       0.000581074262
             autocorr =       1.375709352269
   target nu stat err =       0.000581074262
   target dn stat err =       0.002513222755
      target stat err =       0.001939880278
              std dev =       0.700621228406
             le_variance =       0.490870105693


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.713611190996        initial  <--
     1.0000e+13     1.0000e+14             0.0000e+00        -0.713611190996
     4.0000e+13     4.0000e+14             0.0000e+00        -0.713611190996
     1.6000e+14     1.6000e+15             0.0000e+00        -0.713611190996

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.7195
  </log>
  <optVariables href="FORM.s014.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1003e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s015 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s015 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=15  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2423e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.7073
    reference variance = 6.47559
====================================================
  Execution time = 7.9806e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s015
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9685e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5316e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496574477850
                                         uncertainty =       0.003890751580

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496574477850
                                         uncertainty =       0.003890751580

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498425109
  error estimate for blocks of size 2^( 2) =       0.000524554851
  error estimate for blocks of size 2^( 3) =       0.000549994261
  error estimate for blocks of size 2^( 4) =       0.000568859467
  error estimate for blocks of size 2^( 5) =       0.000581874933
  error estimate for blocks of size 2^( 6) =       0.000588110523
  error estimate for blocks of size 2^( 7) =       0.000593717300

      target function =      -0.709228956097
              le_mean =     -22.427443236875
             les_mean =     503.487065072610
             stat err =       0.000583140556
             autocorr =       1.368821028391
   target nu stat err =       0.000583140556
   target dn stat err =       0.003944982271
      target stat err =       0.002924670743
              std dev =       0.704879548435
             le_variance =       0.496855177802


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242744323687e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+14, overlap shift 1.0000e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.24e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 4.0000e+14, overlap shift 4.0000e+15 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.24e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+15, overlap shift 1.6000e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709240106610       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.24e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+15 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.203739 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0514e+02
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -22.4435
    reference variance = 0.360929
====================================================
  Execution time = 7.5677e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s015
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0673e-01
  Total weights = 2.0000e+06
  Execution time = 6.4316e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503351941
  error estimate for blocks of size 2^( 2) =       0.000528961316
  error estimate for blocks of size 2^( 3) =       0.000554157930
  error estimate for blocks of size 2^( 4) =       0.000573656051
  error estimate for blocks of size 2^( 5) =       0.000586174809
  error estimate for blocks of size 2^( 6) =       0.000591098243
  error estimate for blocks of size 2^( 7) =       0.000594522266

      target function =      -0.702138025856
              le_mean =     -22.427085288328
             les_mean =     503.480880630453
             stat err =       0.000586362842
             autocorr =       1.357029805124
   target nu stat err =       0.000586362842
   target dn stat err =       0.005199393155
      target stat err =       0.003743989370
              std dev =       0.711847142225
             le_variance =       0.506726353894

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503351941
  error estimate for blocks of size 2^( 2) =       0.000528961316
  error estimate for blocks of size 2^( 3) =       0.000554157930
  error estimate for blocks of size 2^( 4) =       0.000573656051
  error estimate for blocks of size 2^( 5) =       0.000586174809
  error estimate for blocks of size 2^( 6) =       0.000591098243
  error estimate for blocks of size 2^( 7) =       0.000594522266

      target function =      -0.702138025856
              le_mean =     -22.427085288328
             les_mean =     503.480880630453
             stat err =       0.000586362842
             autocorr =       1.357029805124
   target nu stat err =       0.000586362842
   target dn stat err =       0.005199393155
      target stat err =       0.003743989370
              std dev =       0.711847142225
             le_variance =       0.506726353894

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503351941
  error estimate for blocks of size 2^( 2) =       0.000528961316
  error estimate for blocks of size 2^( 3) =       0.000554157930
  error estimate for blocks of size 2^( 4) =       0.000573656051
  error estimate for blocks of size 2^( 5) =       0.000586174809
  error estimate for blocks of size 2^( 6) =       0.000591098243
  error estimate for blocks of size 2^( 7) =       0.000594522266

      target function =      -0.702138025856
              le_mean =     -22.427085288328
             les_mean =     503.480880630453
             stat err =       0.000586362842
             autocorr =       1.357029805124
   target nu stat err =       0.000586362842
   target dn stat err =       0.005199393155
      target stat err =       0.003743989370
              std dev =       0.711847142225
             le_variance =       0.506726353894

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506812982325
                                         uncertainty =       0.004823732897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503351941
  error estimate for blocks of size 2^( 2) =       0.000528961316
  error estimate for blocks of size 2^( 3) =       0.000554157930
  error estimate for blocks of size 2^( 4) =       0.000573656051
  error estimate for blocks of size 2^( 5) =       0.000586174809
  error estimate for blocks of size 2^( 6) =       0.000591098243
  error estimate for blocks of size 2^( 7) =       0.000594522266

      target function =      -0.702138025856
              le_mean =     -22.427085288328
             les_mean =     503.480880630453
             stat err =       0.000586362842
             autocorr =       1.357029805124
   target nu stat err =       0.000586362842
   target dn stat err =       0.005199393155
      target stat err =       0.003743989370
              std dev =       0.711847142225
             le_variance =       0.506726353894


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702138025856        initial  <--
     1.0000e+14     1.0000e+15             0.0000e+00        -0.702138025856
     4.0000e+14     4.0000e+15             0.0000e+00        -0.702138025856
     1.6000e+15     1.6000e+16             0.0000e+00        -0.702138025856

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.0533
  </log>
  <optVariables href="FORM.s015.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1365e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s016 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s016 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=16  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.416
    reference variance = 0.343335
====================================================
  Execution time = 7.6723e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s016
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9012e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5133e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490058942153
                                         uncertainty =       0.002976610573

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490058942153
                                         uncertainty =       0.002976610573

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495036675
  error estimate for blocks of size 2^( 2) =       0.000521892245
  error estimate for blocks of size 2^( 3) =       0.000547688558
  error estimate for blocks of size 2^( 4) =       0.000567156151
  error estimate for blocks of size 2^( 5) =       0.000579228328
  error estimate for blocks of size 2^( 6) =       0.000583297526
  error estimate for blocks of size 2^( 7) =       0.000589721207

      target function =      -0.714166801219
              le_mean =     -22.426183457984
             les_mean =     503.423826865534
             stat err =       0.000579850803
             autocorr =       1.372011575370
   target nu stat err =       0.000579850803
   target dn stat err =       0.002788582330
      target stat err =       0.002133466269
              std dev =       0.700087579821
             le_variance =       0.490122619419


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242618345798e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+15, overlap shift 1.0000e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.68e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 4.0000e+15, overlap shift 4.0000e+16 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.68e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+16, overlap shift 1.6000e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.714172239232       residual = 2.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+16 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.207788 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0187e+02
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -22.5134
    reference variance = 0.399283
====================================================
  Execution time = 7.8984e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s016
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0433e-01
  Total weights = 2.0000e+06
  Execution time = 6.4314e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502162055
  error estimate for blocks of size 2^( 2) =       0.000528453474
  error estimate for blocks of size 2^( 3) =       0.000554107958
  error estimate for blocks of size 2^( 4) =       0.000574829665
  error estimate for blocks of size 2^( 5) =       0.000587288247
  error estimate for blocks of size 2^( 6) =       0.000593160123
  error estimate for blocks of size 2^( 7) =       0.000596886590

      target function =      -0.703846808731
              le_mean =     -22.426661691923
             les_mean =     503.459487850208
             stat err =       0.000588041156
             autocorr =       1.371284793587
   target nu stat err =       0.000588041156
   target dn stat err =       0.006023694482
      target stat err =       0.004342119780
              std dev =       0.710164388315
             le_variance =       0.504333458431

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502162055
  error estimate for blocks of size 2^( 2) =       0.000528453474
  error estimate for blocks of size 2^( 3) =       0.000554107958
  error estimate for blocks of size 2^( 4) =       0.000574829665
  error estimate for blocks of size 2^( 5) =       0.000587288247
  error estimate for blocks of size 2^( 6) =       0.000593160123
  error estimate for blocks of size 2^( 7) =       0.000596886590

      target function =      -0.703846808731
              le_mean =     -22.426661691923
             les_mean =     503.459487850208
             stat err =       0.000588041156
             autocorr =       1.371284793587
   target nu stat err =       0.000588041156
   target dn stat err =       0.006023694482
      target stat err =       0.004342119780
              std dev =       0.710164388315
             le_variance =       0.504333458431

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502162055
  error estimate for blocks of size 2^( 2) =       0.000528453474
  error estimate for blocks of size 2^( 3) =       0.000554107958
  error estimate for blocks of size 2^( 4) =       0.000574829665
  error estimate for blocks of size 2^( 5) =       0.000587288247
  error estimate for blocks of size 2^( 6) =       0.000593160123
  error estimate for blocks of size 2^( 7) =       0.000596886590

      target function =      -0.703846808731
              le_mean =     -22.426661691923
             les_mean =     503.459487850208
             stat err =       0.000588041156
             autocorr =       1.371284793587
   target nu stat err =       0.000588041156
   target dn stat err =       0.006023694482
      target stat err =       0.004342119780
              std dev =       0.710164388315
             le_variance =       0.504333458431

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504209034681
                                         uncertainty =       0.006150312970

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502162055
  error estimate for blocks of size 2^( 2) =       0.000528453474
  error estimate for blocks of size 2^( 3) =       0.000554107958
  error estimate for blocks of size 2^( 4) =       0.000574829665
  error estimate for blocks of size 2^( 5) =       0.000587288247
  error estimate for blocks of size 2^( 6) =       0.000593160123
  error estimate for blocks of size 2^( 7) =       0.000596886590

      target function =      -0.703846808731
              le_mean =     -22.426661691923
             les_mean =     503.459487850208
             stat err =       0.000588041156
             autocorr =       1.371284793587
   target nu stat err =       0.000588041156
   target dn stat err =       0.006023694482
      target stat err =       0.004342119780
              std dev =       0.710164388315
             le_variance =       0.504333458431


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.703846808731        initial  <--
     1.0000e+15     1.0000e+16             0.0000e+00        -0.703846808731
     4.0000e+15     4.0000e+16             0.0000e+00        -0.703846808731
     1.6000e+16     1.6000e+17             0.0000e+00        -0.703846808731

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 111.2825
  </log>
  <optVariables href="FORM.s016.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1318e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s017 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s017 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=17  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2434e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.442
    reference variance = 1.02451
====================================================
  Execution time = 7.7398e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s017
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1910e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5715e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519093517993
                                         uncertainty =       0.018516159939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.519093517993
                                         uncertainty =       0.018516159939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000509463014
  error estimate for blocks of size 2^( 2) =       0.000535507550
  error estimate for blocks of size 2^( 3) =       0.000560597229
  error estimate for blocks of size 2^( 4) =       0.000579953517
  error estimate for blocks of size 2^( 5) =       0.000592036037
  error estimate for blocks of size 2^( 6) =       0.000600129681
  error estimate for blocks of size 2^( 7) =       0.000605092456

      target function =      -0.693251306051
              le_mean =     -22.426255425732
             les_mean =     503.456037286729
             stat err =       0.000594302923
             autocorr =       1.360787811226
   target nu stat err =       0.000594302923
   target dn stat err =       0.018770584166
      target stat err =       0.013011872811
              std dev =       0.720489504523
             le_variance =       0.519105126127


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242625542573e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+16, overlap shift 1.0000e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.693496054268       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.693496054268       residual = 3.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.693496054268       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.693496054268       residual = 3.42e+00           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.693496054268       residual = 8.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -2.068973251110       residual = 1.00e+03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -4.856237894298       residual = 9.03e+03           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+16 is 3.454319e-20

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+16, overlap shift 4.0000e+17 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.693496054268       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.693496054268       residual = 3.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.693496054268       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       4.525505929576       residual = 1.41e+04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.693496058758       residual = 3.58e+00           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+16 is 5.158929e-21

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+17, overlap shift 1.6000e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.693496054268       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.693496054268       residual = 3.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.693496054268       residual = 2.30e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.693496054268       residual = 8.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+17 is 1.878122e-21

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.213936 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0313e+02
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -22.4234
    reference variance = 0.40503
====================================================
  Execution time = 7.5690e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s017
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9269e-01
  Total weights = 2.0000e+06
  Execution time = 6.4478e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496331694
  error estimate for blocks of size 2^( 2) =       0.000523038794
  error estimate for blocks of size 2^( 3) =       0.000548153155
  error estimate for blocks of size 2^( 4) =       0.000567398445
  error estimate for blocks of size 2^( 5) =       0.000580311351
  error estimate for blocks of size 2^( 6) =       0.000585873175
  error estimate for blocks of size 2^( 7) =       0.000589811539

      target function =      -0.712276966411
              le_mean =     -22.426873693149
             les_mean =     503.457353702819
             stat err =       0.000580848628
             autocorr =       1.369562695771
   target nu stat err =       0.000580848628
   target dn stat err =       0.002944887707
      target stat err =       0.002234990617
              std dev =       0.701919012939
             le_variance =       0.492690300726

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496331694
  error estimate for blocks of size 2^( 2) =       0.000523038794
  error estimate for blocks of size 2^( 3) =       0.000548153155
  error estimate for blocks of size 2^( 4) =       0.000567398445
  error estimate for blocks of size 2^( 5) =       0.000580311351
  error estimate for blocks of size 2^( 6) =       0.000585873175
  error estimate for blocks of size 2^( 7) =       0.000589811539

      target function =      -0.712276966411
              le_mean =     -22.426873693149
             les_mean =     503.457353702819
             stat err =       0.000580848628
             autocorr =       1.369562695773
   target nu stat err =       0.000580848628
   target dn stat err =       0.002944887707
      target stat err =       0.002234990617
              std dev =       0.701919012939
             le_variance =       0.492690300726

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496331694
  error estimate for blocks of size 2^( 2) =       0.000523038794
  error estimate for blocks of size 2^( 3) =       0.000548153155
  error estimate for blocks of size 2^( 4) =       0.000567398445
  error estimate for blocks of size 2^( 5) =       0.000580311351
  error estimate for blocks of size 2^( 6) =       0.000585873175
  error estimate for blocks of size 2^( 7) =       0.000589811539

      target function =      -0.712276966411
              le_mean =     -22.426873693149
             les_mean =     503.457353702819
             stat err =       0.000580848628
             autocorr =       1.369562695773
   target nu stat err =       0.000580848628
   target dn stat err =       0.002944887707
      target stat err =       0.002234990617
              std dev =       0.701919012939
             le_variance =       0.492690300726

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492658419877
                                         uncertainty =       0.002669467812

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496331694
  error estimate for blocks of size 2^( 2) =       0.000523038794
  error estimate for blocks of size 2^( 3) =       0.000548153155
  error estimate for blocks of size 2^( 4) =       0.000567398445
  error estimate for blocks of size 2^( 5) =       0.000580311351
  error estimate for blocks of size 2^( 6) =       0.000585873175
  error estimate for blocks of size 2^( 7) =       0.000589811539

      target function =      -0.712276966411
              le_mean =     -22.426873693149
             les_mean =     503.457353702819
             stat err =       0.000580848628
             autocorr =       1.369562695773
   target nu stat err =       0.000580848628
   target dn stat err =       0.002944887707
      target stat err =       0.002234990617
              std dev =       0.701919012939
             le_variance =       0.492690300726


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.712276966411        initial  <--
     1.0000e+16     1.0000e+17             3.4543e-20        -0.712276966411
     4.0000e+16     4.0000e+17             5.1589e-21        -0.712276966411
     1.6000e+17     1.6000e+18             1.8781e-21        -0.712276966411

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.5574
  </log>
  <optVariables href="FORM.s017.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1170e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s018 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s018 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=18  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2434e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.3661
    reference variance = 0.289345
====================================================
  Execution time = 7.8036e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s018
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9729e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5416e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497415527285
                                         uncertainty =       0.004933857971

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497415527285
                                         uncertainty =       0.004933857971

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498644880
  error estimate for blocks of size 2^( 2) =       0.000524851428
  error estimate for blocks of size 2^( 3) =       0.000550122780
  error estimate for blocks of size 2^( 4) =       0.000569216228
  error estimate for blocks of size 2^( 5) =       0.000581155364
  error estimate for blocks of size 2^( 6) =       0.000587028054
  error estimate for blocks of size 2^( 7) =       0.000593245155

      target function =      -0.708916471438
              le_mean =     -22.426769308455
             les_mean =     503.457274799376
             stat err =       0.000582661200
             autocorr =       1.365367212228
   target nu stat err =       0.000582661200
   target dn stat err =       0.004890472150
      target stat err =       0.003592495943
              std dev =       0.705190352581
             le_variance =       0.497293433373


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242676930845e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+17, overlap shift 1.0000e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708933774556       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708933774556       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708933774556       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708933774556       residual = 2.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708933628511       residual = 6.02e-01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+17 is 1.221485e-21

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+17, overlap shift 4.0000e+18 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708933774556       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708933774556       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708933774556       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708933774556       residual = 2.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708933774556       residual = 2.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+17 is 3.053711e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+18, overlap shift 1.6000e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708933774556       residual = 3.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708933774556       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708933774556       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.708933774556       residual = 2.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.708933774556       residual = 2.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.708933774556       residual = 1.42e-04           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+18 is 1.125017e-22

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.216034 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0346e+02
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -22.4422
    reference variance = 0.438749
====================================================
  Execution time = 7.5332e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s018
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9946e-01
  Total weights = 2.0000e+06
  Execution time = 6.4350e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499731463
  error estimate for blocks of size 2^( 2) =       0.000525600937
  error estimate for blocks of size 2^( 3) =       0.000550267666
  error estimate for blocks of size 2^( 4) =       0.000569898388
  error estimate for blocks of size 2^( 5) =       0.000583006109
  error estimate for blocks of size 2^( 6) =       0.000588683038
  error estimate for blocks of size 2^( 7) =       0.000592741680

      target function =      -0.707338686725
              le_mean =     -22.427553198606
             les_mean =     503.494605297474
             stat err =       0.000583582303
             autocorr =       1.363737680677
   target nu stat err =       0.000583582303
   target dn stat err =       0.004029235545
      target stat err =       0.002969551605
              std dev =       0.706727012990
             le_variance =       0.499463070890

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499731463
  error estimate for blocks of size 2^( 2) =       0.000525600937
  error estimate for blocks of size 2^( 3) =       0.000550267666
  error estimate for blocks of size 2^( 4) =       0.000569898388
  error estimate for blocks of size 2^( 5) =       0.000583006109
  error estimate for blocks of size 2^( 6) =       0.000588683038
  error estimate for blocks of size 2^( 7) =       0.000592741680

      target function =      -0.707338686725
              le_mean =     -22.427553198606
             les_mean =     503.494605297474
             stat err =       0.000583582303
             autocorr =       1.363737680677
   target nu stat err =       0.000583582303
   target dn stat err =       0.004029235545
      target stat err =       0.002969551605
              std dev =       0.706727012990
             le_variance =       0.499463070890

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499731463
  error estimate for blocks of size 2^( 2) =       0.000525600937
  error estimate for blocks of size 2^( 3) =       0.000550267666
  error estimate for blocks of size 2^( 4) =       0.000569898388
  error estimate for blocks of size 2^( 5) =       0.000583006109
  error estimate for blocks of size 2^( 6) =       0.000588683038
  error estimate for blocks of size 2^( 7) =       0.000592741680

      target function =      -0.707338686725
              le_mean =     -22.427553198606
             les_mean =     503.494605297474
             stat err =       0.000583582303
             autocorr =       1.363737680677
   target nu stat err =       0.000583582303
   target dn stat err =       0.004029235545
      target stat err =       0.002969551605
              std dev =       0.706727012990
             le_variance =       0.499463070890

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499553387513
                                         uncertainty =       0.003977635215

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499731463
  error estimate for blocks of size 2^( 2) =       0.000525600937
  error estimate for blocks of size 2^( 3) =       0.000550267666
  error estimate for blocks of size 2^( 4) =       0.000569898388
  error estimate for blocks of size 2^( 5) =       0.000583006109
  error estimate for blocks of size 2^( 6) =       0.000588683038
  error estimate for blocks of size 2^( 7) =       0.000592741680

      target function =      -0.707338686725
              le_mean =     -22.427553198606
             les_mean =     503.494605297474
             stat err =       0.000583582303
             autocorr =       1.363737680677
   target nu stat err =       0.000583582303
   target dn stat err =       0.004029235545
      target stat err =       0.002969551605
              std dev =       0.706727012990
             le_variance =       0.499463070890


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707338686725        initial  <--
     1.0000e+17     1.0000e+18             1.2215e-21        -0.707338686725
     4.0000e+17     4.0000e+18             3.0537e-22        -0.707338686725
     1.6000e+18     1.6000e+19             1.1250e-22        -0.707338686725

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.6730
  </log>
  <optVariables href="FORM.s018.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1146e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s019 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s019 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=19  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.3661
    reference variance = 0.633901
====================================================
  Execution time = 7.5725e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s019
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9717e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4988e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497247757612
                                         uncertainty =       0.003153381132

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497247757612
                                         uncertainty =       0.003153381132

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498581029
  error estimate for blocks of size 2^( 2) =       0.000524859298
  error estimate for blocks of size 2^( 3) =       0.000550302189
  error estimate for blocks of size 2^( 4) =       0.000569685084
  error estimate for blocks of size 2^( 5) =       0.000581978390
  error estimate for blocks of size 2^( 6) =       0.000587532551
  error estimate for blocks of size 2^( 7) =       0.000588819383

      target function =      -0.708999051640
              le_mean =     -22.427882412644
             les_mean =     503.507075351706
             stat err =       0.000582003852
             autocorr =       1.362637131539
   target nu stat err =       0.000582003852
   target dn stat err =       0.003290272738
      target stat err =       0.002461126005
              std dev =       0.705100053120
             le_variance =       0.497166084910


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242788241264e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+18, overlap shift 1.0000e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709006656924       residual = 1.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709006656924       residual = 6.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709006656925       residual = 2.39e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+18 is 3.308291e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+18, overlap shift 4.0000e+19 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709006656924       residual = 1.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709006656924       residual = 6.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709006656924       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709006656924       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709006656924       residual = 1.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709006316019       residual = 2.92e+02           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+18 is 1.888769e-23

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+19, overlap shift 1.6000e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709006656924       residual = 1.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709006656924       residual = 6.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709006656924       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.709006656923       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.709006657824       residual = 8.58e+00           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.709006566262       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+19 is 4.721923e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.217972 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0072e+02
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -22.5446
    reference variance = 0.369901
====================================================
  Execution time = 7.6374e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s019
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9407e-01
  Total weights = 2.0000e+06
  Execution time = 6.4397e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497026152
  error estimate for blocks of size 2^( 2) =       0.000523371369
  error estimate for blocks of size 2^( 3) =       0.000549230703
  error estimate for blocks of size 2^( 4) =       0.000568490183
  error estimate for blocks of size 2^( 5) =       0.000580189095
  error estimate for blocks of size 2^( 6) =       0.000584440188
  error estimate for blocks of size 2^( 7) =       0.000586005465

      target function =      -0.711260197268
              le_mean =     -22.427218572162
             les_mean =     503.474202627890
             stat err =       0.000579781233
             autocorr =       1.360723312550
   target nu stat err =       0.000579781233
   target dn stat err =       0.003810436599
      target stat err =       0.002843365423
              std dev =       0.702901124920
             le_variance =       0.494069991413

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497026152
  error estimate for blocks of size 2^( 2) =       0.000523371369
  error estimate for blocks of size 2^( 3) =       0.000549230703
  error estimate for blocks of size 2^( 4) =       0.000568490183
  error estimate for blocks of size 2^( 5) =       0.000580189095
  error estimate for blocks of size 2^( 6) =       0.000584440188
  error estimate for blocks of size 2^( 7) =       0.000586005465

      target function =      -0.711260197268
              le_mean =     -22.427218572162
             les_mean =     503.474202627890
             stat err =       0.000579781233
             autocorr =       1.360723312549
   target nu stat err =       0.000579781233
   target dn stat err =       0.003810436599
      target stat err =       0.002843365423
              std dev =       0.702901124920
             le_variance =       0.494069991413

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497026152
  error estimate for blocks of size 2^( 2) =       0.000523371369
  error estimate for blocks of size 2^( 3) =       0.000549230703
  error estimate for blocks of size 2^( 4) =       0.000568490183
  error estimate for blocks of size 2^( 5) =       0.000580189095
  error estimate for blocks of size 2^( 6) =       0.000584440188
  error estimate for blocks of size 2^( 7) =       0.000586005465

      target function =      -0.711260197268
              le_mean =     -22.427218572162
             les_mean =     503.474202627890
             stat err =       0.000579781233
             autocorr =       1.360723312549
   target nu stat err =       0.000579781233
   target dn stat err =       0.003810436599
      target stat err =       0.002843365423
              std dev =       0.702901124920
             le_variance =       0.494069991413

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494018083532
                                         uncertainty =       0.003519417516

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497026152
  error estimate for blocks of size 2^( 2) =       0.000523371369
  error estimate for blocks of size 2^( 3) =       0.000549230703
  error estimate for blocks of size 2^( 4) =       0.000568490183
  error estimate for blocks of size 2^( 5) =       0.000580189095
  error estimate for blocks of size 2^( 6) =       0.000584440188
  error estimate for blocks of size 2^( 7) =       0.000586005465

      target function =      -0.711260197268
              le_mean =     -22.427218572162
             les_mean =     503.474202627890
             stat err =       0.000579781233
             autocorr =       1.360723312549
   target nu stat err =       0.000579781233
   target dn stat err =       0.003810436599
      target stat err =       0.002843365423
              std dev =       0.702901124920
             le_variance =       0.494069991413


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711260197268        initial  <--
     1.0000e+18     1.0000e+19             3.3083e-23        -0.711260197268
     4.0000e+18     4.0000e+19             1.8888e-23        -0.711260197268
     1.6000e+19     1.6000e+20             4.7219e-24        -0.711260197268

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.7251
  </log>
  <optVariables href="FORM.s019.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0994e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s020 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s020 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=20  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2434e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.4143
    reference variance = 0.322971
====================================================
  Execution time = 7.6315e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s020
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9206e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5230e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491878484911
                                         uncertainty =       0.002629302707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491878484911
                                         uncertainty =       0.002629302707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496014705
  error estimate for blocks of size 2^( 2) =       0.000522710441
  error estimate for blocks of size 2^( 3) =       0.000547900162
  error estimate for blocks of size 2^( 4) =       0.000567087338
  error estimate for blocks of size 2^( 5) =       0.000579162938
  error estimate for blocks of size 2^( 6) =       0.000586142603
  error estimate for blocks of size 2^( 7) =       0.000589694683

      target function =      -0.712743666639
              le_mean =     -22.426328723231
             les_mean =     503.432280932489
             stat err =       0.000580521890
             autocorr =       1.369771408397
   target nu stat err =       0.000580521890
   target dn stat err =       0.002913505068
      target stat err =       0.002213842978
              std dev =       0.701470723626
             le_variance =       0.492061176105


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242632872323e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+19, overlap shift 1.0000e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+19, overlap shift 4.0000e+20 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+20, overlap shift 1.6000e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712749518476       residual = 3.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.219115 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0155e+02
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -22.486
    reference variance = 0.277706
====================================================
  Execution time = 7.7179e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s020
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0869e-01
  Total weights = 2.0000e+06
  Execution time = 6.4456e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504325793
  error estimate for blocks of size 2^( 2) =       0.000530146848
  error estimate for blocks of size 2^( 3) =       0.000555178857
  error estimate for blocks of size 2^( 4) =       0.000575081006
  error estimate for blocks of size 2^( 5) =       0.000588243557
  error estimate for blocks of size 2^( 6) =       0.000594389178
  error estimate for blocks of size 2^( 7) =       0.000599081424

      target function =      -0.700617725553
              le_mean =     -22.427400429029
             les_mean =     503.496978761527
             stat err =       0.000589198791
             autocorr =       1.364901570382
   target nu stat err =       0.000589198791
   target dn stat err =       0.013828672838
      target stat err =       0.009813441797
              std dev =       0.713224376924
             le_variance =       0.508689011839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504325793
  error estimate for blocks of size 2^( 2) =       0.000530146848
  error estimate for blocks of size 2^( 3) =       0.000555178857
  error estimate for blocks of size 2^( 4) =       0.000575081006
  error estimate for blocks of size 2^( 5) =       0.000588243557
  error estimate for blocks of size 2^( 6) =       0.000594389178
  error estimate for blocks of size 2^( 7) =       0.000599081424

      target function =      -0.700617725553
              le_mean =     -22.427400429029
             les_mean =     503.496978761527
             stat err =       0.000589198791
             autocorr =       1.364901570382
   target nu stat err =       0.000589198791
   target dn stat err =       0.013828672838
      target stat err =       0.009813441797
              std dev =       0.713224376924
             le_variance =       0.508689011839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504325793
  error estimate for blocks of size 2^( 2) =       0.000530146848
  error estimate for blocks of size 2^( 3) =       0.000555178857
  error estimate for blocks of size 2^( 4) =       0.000575081006
  error estimate for blocks of size 2^( 5) =       0.000588243557
  error estimate for blocks of size 2^( 6) =       0.000594389178
  error estimate for blocks of size 2^( 7) =       0.000599081424

      target function =      -0.700617725553
              le_mean =     -22.427400429029
             les_mean =     503.496978761527
             stat err =       0.000589198791
             autocorr =       1.364901570382
   target nu stat err =       0.000589198791
   target dn stat err =       0.013828672838
      target stat err =       0.009813441797
              std dev =       0.713224376924
             le_variance =       0.508689011839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.508722007688
                                         uncertainty =       0.013824023769

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504325793
  error estimate for blocks of size 2^( 2) =       0.000530146848
  error estimate for blocks of size 2^( 3) =       0.000555178857
  error estimate for blocks of size 2^( 4) =       0.000575081006
  error estimate for blocks of size 2^( 5) =       0.000588243557
  error estimate for blocks of size 2^( 6) =       0.000594389178
  error estimate for blocks of size 2^( 7) =       0.000599081424

      target function =      -0.700617725553
              le_mean =     -22.427400429029
             les_mean =     503.496978761527
             stat err =       0.000589198791
             autocorr =       1.364901570382
   target nu stat err =       0.000589198791
   target dn stat err =       0.013828672838
      target stat err =       0.009813441797
              std dev =       0.713224376924
             le_variance =       0.508689011839


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.700617725553        initial  <--
     1.0000e+19     1.0000e+20             0.0000e+00        -0.700617725553
     4.0000e+19     4.0000e+20             0.0000e+00        -0.700617725553
     1.6000e+20     1.6000e+21             0.0000e+00        -0.700617725553

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 112.0723
  </log>
  <optVariables href="FORM.s020.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1375e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s021 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s021 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=21  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2434e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.4085
    reference variance = 0.311687
====================================================
  Execution time = 7.5773e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s021
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0287e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5657e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502914126946
                                         uncertainty =       0.004960393358

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502914126946
                                         uncertainty =       0.004960393358

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501434997
  error estimate for blocks of size 2^( 2) =       0.000527946673
  error estimate for blocks of size 2^( 3) =       0.000553553054
  error estimate for blocks of size 2^( 4) =       0.000572100174
  error estimate for blocks of size 2^( 5) =       0.000583660319
  error estimate for blocks of size 2^( 6) =       0.000590408861
  error estimate for blocks of size 2^( 7) =       0.000594997659

      target function =      -0.704873359791
              le_mean =     -22.427620746100
             les_mean =     503.501046191416
             stat err =       0.000585291753
             autocorr =       1.362434169112
   target nu stat err =       0.000585291753
   target dn stat err =       0.005434424565
      target stat err =       0.003942118986
              std dev =       0.709136173079
             le_variance =       0.502874111969


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242762074610e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+20, overlap shift 1.0000e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+20, overlap shift 4.0000e+21 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+21, overlap shift 1.6000e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704894265671       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.220202 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0144e+02
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -22.4641
    reference variance = 0.717214
====================================================
  Execution time = 7.5659e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s021
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0986e-01
  Total weights = 2.0000e+06
  Execution time = 6.4376e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504904635
  error estimate for blocks of size 2^( 2) =       0.000531326308
  error estimate for blocks of size 2^( 3) =       0.000556786160
  error estimate for blocks of size 2^( 4) =       0.000575892590
  error estimate for blocks of size 2^( 5) =       0.000589167798
  error estimate for blocks of size 2^( 6) =       0.000595237378
  error estimate for blocks of size 2^( 7) =       0.000602685629

      target function =      -0.699907853610
              le_mean =     -22.427213557135
             les_mean =     503.489765062759
             stat err =       0.000590745848
             autocorr =       1.368934415559
   target nu stat err =       0.000590745848
   target dn stat err =       0.006161848496
      target stat err =       0.004394609191
              std dev =       0.714042982127
             le_variance =       0.509857380325

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504904635
  error estimate for blocks of size 2^( 2) =       0.000531326308
  error estimate for blocks of size 2^( 3) =       0.000556786160
  error estimate for blocks of size 2^( 4) =       0.000575892590
  error estimate for blocks of size 2^( 5) =       0.000589167798
  error estimate for blocks of size 2^( 6) =       0.000595237378
  error estimate for blocks of size 2^( 7) =       0.000602685629

      target function =      -0.699907853610
              le_mean =     -22.427213557135
             les_mean =     503.489765062759
             stat err =       0.000590745848
             autocorr =       1.368934415559
   target nu stat err =       0.000590745848
   target dn stat err =       0.006161848496
      target stat err =       0.004394609191
              std dev =       0.714042982127
             le_variance =       0.509857380325

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504904635
  error estimate for blocks of size 2^( 2) =       0.000531326308
  error estimate for blocks of size 2^( 3) =       0.000556786160
  error estimate for blocks of size 2^( 4) =       0.000575892590
  error estimate for blocks of size 2^( 5) =       0.000589167798
  error estimate for blocks of size 2^( 6) =       0.000595237378
  error estimate for blocks of size 2^( 7) =       0.000602685629

      target function =      -0.699907853610
              le_mean =     -22.427213557135
             les_mean =     503.489765062759
             stat err =       0.000590745848
             autocorr =       1.368934415559
   target nu stat err =       0.000590745848
   target dn stat err =       0.006161848496
      target stat err =       0.004394609191
              std dev =       0.714042982127
             le_variance =       0.509857380325

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.509914393861
                                         uncertainty =       0.005928049384

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000504904635
  error estimate for blocks of size 2^( 2) =       0.000531326308
  error estimate for blocks of size 2^( 3) =       0.000556786160
  error estimate for blocks of size 2^( 4) =       0.000575892590
  error estimate for blocks of size 2^( 5) =       0.000589167798
  error estimate for blocks of size 2^( 6) =       0.000595237378
  error estimate for blocks of size 2^( 7) =       0.000602685629

      target function =      -0.699907853610
              le_mean =     -22.427213557135
             les_mean =     503.489765062759
             stat err =       0.000590745848
             autocorr =       1.368934415559
   target nu stat err =       0.000590745848
   target dn stat err =       0.006161848496
      target stat err =       0.004394609191
              std dev =       0.714042982127
             le_variance =       0.509857380325


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.699907853610        initial  <--
     1.0000e+20     1.0000e+21             0.0000e+00        -0.699907853610
     4.0000e+20     4.0000e+21             0.0000e+00        -0.699907853610
     1.6000e+21     1.6000e+22             0.0000e+00        -0.699907853610

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.0134
  </log>
  <optVariables href="FORM.s021.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0946e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s022 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s022 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=22  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2435e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.4202
    reference variance = 0.394814
====================================================
  Execution time = 7.6975e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s022
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9729e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5476e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497389632096
                                         uncertainty =       0.004411925347

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497389632096
                                         uncertainty =       0.004411925347

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498643533
  error estimate for blocks of size 2^( 2) =       0.000524882388
  error estimate for blocks of size 2^( 3) =       0.000549815390
  error estimate for blocks of size 2^( 4) =       0.000569607732
  error estimate for blocks of size 2^( 5) =       0.000582208453
  error estimate for blocks of size 2^( 6) =       0.000588486708
  error estimate for blocks of size 2^( 7) =       0.000591278233

      target function =      -0.708932077356
              le_mean =     -22.426045059620
             les_mean =     503.424787513579
             stat err =       0.000582895282
             autocorr =       1.366471876101
   target nu stat err =       0.000582895282
   target dn stat err =       0.004638339963
      target stat err =       0.003409125242
              std dev =       0.705188447241
             le_variance =       0.497290746123


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242604505962e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+21, overlap shift 1.0000e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708947430816       residual = 8.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+21 is 5.795330e-26

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+21, overlap shift 4.0000e+22 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708947430816       residual = 8.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+21 is 1.448832e-26

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+22, overlap shift 1.6000e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708947430816       residual = 8.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.708947430816       residual = 2.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+22 is 3.622081e-27

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.221594 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0246e+02
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -22.3916
    reference variance = 0.359493
====================================================
  Execution time = 7.5332e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s022
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.1224e-01
  Total weights = 2.0000e+06
  Execution time = 6.4376e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506082374
  error estimate for blocks of size 2^( 2) =       0.000532565860
  error estimate for blocks of size 2^( 3) =       0.000557282982
  error estimate for blocks of size 2^( 4) =       0.000576137303
  error estimate for blocks of size 2^( 5) =       0.000587968846
  error estimate for blocks of size 2^( 6) =       0.000594851379
  error estimate for blocks of size 2^( 7) =       0.000600164173

      target function =      -0.698217579928
              le_mean =     -22.427384880216
             les_mean =     503.499831048032
             stat err =       0.000589780425
             autocorr =       1.358120438597
   target nu stat err =       0.000589780425
   target dn stat err =       0.006794814754
      target stat err =       0.004816055082
              std dev =       0.715708557163
             le_variance =       0.512238738797

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506082374
  error estimate for blocks of size 2^( 2) =       0.000532565860
  error estimate for blocks of size 2^( 3) =       0.000557282982
  error estimate for blocks of size 2^( 4) =       0.000576137303
  error estimate for blocks of size 2^( 5) =       0.000587968846
  error estimate for blocks of size 2^( 6) =       0.000594851379
  error estimate for blocks of size 2^( 7) =       0.000600164173

      target function =      -0.698217579928
              le_mean =     -22.427384880216
             les_mean =     503.499831048032
             stat err =       0.000589780425
             autocorr =       1.358120438597
   target nu stat err =       0.000589780425
   target dn stat err =       0.006794814754
      target stat err =       0.004816055082
              std dev =       0.715708557163
             le_variance =       0.512238738797

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506082374
  error estimate for blocks of size 2^( 2) =       0.000532565860
  error estimate for blocks of size 2^( 3) =       0.000557282982
  error estimate for blocks of size 2^( 4) =       0.000576137303
  error estimate for blocks of size 2^( 5) =       0.000587968846
  error estimate for blocks of size 2^( 6) =       0.000594851379
  error estimate for blocks of size 2^( 7) =       0.000600164173

      target function =      -0.698217579928
              le_mean =     -22.427384880216
             les_mean =     503.499831048032
             stat err =       0.000589780425
             autocorr =       1.358120438597
   target nu stat err =       0.000589780425
   target dn stat err =       0.006794814754
      target stat err =       0.004816055082
              std dev =       0.715708557163
             le_variance =       0.512238738797

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512284941446
                                         uncertainty =       0.006392575365

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506082374
  error estimate for blocks of size 2^( 2) =       0.000532565860
  error estimate for blocks of size 2^( 3) =       0.000557282982
  error estimate for blocks of size 2^( 4) =       0.000576137303
  error estimate for blocks of size 2^( 5) =       0.000587968846
  error estimate for blocks of size 2^( 6) =       0.000594851379
  error estimate for blocks of size 2^( 7) =       0.000600164173

      target function =      -0.698217579928
              le_mean =     -22.427384880216
             les_mean =     503.499831048032
             stat err =       0.000589780425
             autocorr =       1.358120438597
   target nu stat err =       0.000589780425
   target dn stat err =       0.006794814754
      target stat err =       0.004816055082
              std dev =       0.715708557163
             le_variance =       0.512238738797


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.698217579928        initial  <--
     1.0000e+21     1.0000e+22             5.7953e-26        -0.698217579928
     4.0000e+21     4.0000e+22             1.4488e-26        -0.698217579928
     1.6000e+22     1.6000e+23             3.6221e-27        -0.698217579928

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.6657
  </log>
  <optVariables href="FORM.s022.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1029e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s023 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s023 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=23  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.3324
    reference variance = 0.552555
====================================================
  Execution time = 7.6838e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s023
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9521e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.6077e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495273232316
                                         uncertainty =       0.003195846897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495273232316
                                         uncertainty =       0.003195846897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497598821
  error estimate for blocks of size 2^( 2) =       0.000524062299
  error estimate for blocks of size 2^( 3) =       0.000549773320
  error estimate for blocks of size 2^( 4) =       0.000568741922
  error estimate for blocks of size 2^( 5) =       0.000581893908
  error estimate for blocks of size 2^( 6) =       0.000589210070
  error estimate for blocks of size 2^( 7) =       0.000594104609

      target function =      -0.710425397587
              le_mean =     -22.427731816710
             les_mean =     503.498363368046
             stat err =       0.000583487627
             autocorr =       1.375006076634
   target nu stat err =       0.000583487627
   target dn stat err =       0.003128615464
      target stat err =       0.002356484597
              std dev =       0.703711001312
             le_variance =       0.495209173368


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242773181671e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+22, overlap shift 1.0000e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710432193432       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+22 is 3.721894e-27

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+22, overlap shift 4.0000e+23 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710432193432       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+22 is 9.304734e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+23, overlap shift 1.6000e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710432193432       residual = 3.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710432193432       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+23 is 2.326184e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.222935 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0292e+02
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -22.4144
    reference variance = 0.463158
====================================================
  Execution time = 7.7527e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s023
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0242e-01
  Total weights = 2.0000e+06
  Execution time = 6.4392e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501209231
  error estimate for blocks of size 2^( 2) =       0.000527422180
  error estimate for blocks of size 2^( 3) =       0.000552945537
  error estimate for blocks of size 2^( 4) =       0.000572922968
  error estimate for blocks of size 2^( 5) =       0.000586680003
  error estimate for blocks of size 2^( 6) =       0.000593072830
  error estimate for blocks of size 2^( 7) =       0.000598598426

      target function =      -0.705179611672
              le_mean =     -22.426358820120
             les_mean =     503.443991064031
             stat err =       0.000587818557
             autocorr =       1.375461575954
   target nu stat err =       0.000587818557
   target dn stat err =       0.009717429457
      target stat err =       0.006987534925
              std dev =       0.708816892074
             le_variance =       0.502421386490

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501209231
  error estimate for blocks of size 2^( 2) =       0.000527422180
  error estimate for blocks of size 2^( 3) =       0.000552945537
  error estimate for blocks of size 2^( 4) =       0.000572922968
  error estimate for blocks of size 2^( 5) =       0.000586680003
  error estimate for blocks of size 2^( 6) =       0.000593072830
  error estimate for blocks of size 2^( 7) =       0.000598598426

      target function =      -0.705179611672
              le_mean =     -22.426358820120
             les_mean =     503.443991064031
             stat err =       0.000587818557
             autocorr =       1.375461575955
   target nu stat err =       0.000587818557
   target dn stat err =       0.009717429457
      target stat err =       0.006987534925
              std dev =       0.708816892074
             le_variance =       0.502421386490

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501209231
  error estimate for blocks of size 2^( 2) =       0.000527422180
  error estimate for blocks of size 2^( 3) =       0.000552945537
  error estimate for blocks of size 2^( 4) =       0.000572922968
  error estimate for blocks of size 2^( 5) =       0.000586680003
  error estimate for blocks of size 2^( 6) =       0.000593072830
  error estimate for blocks of size 2^( 7) =       0.000598598426

      target function =      -0.705179611672
              le_mean =     -22.426358820120
             les_mean =     503.443991064031
             stat err =       0.000587818557
             autocorr =       1.375461575955
   target nu stat err =       0.000587818557
   target dn stat err =       0.009717429457
      target stat err =       0.006987534925
              std dev =       0.708816892074
             le_variance =       0.502421386490

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502509112301
                                         uncertainty =       0.009807593506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501209231
  error estimate for blocks of size 2^( 2) =       0.000527422180
  error estimate for blocks of size 2^( 3) =       0.000552945537
  error estimate for blocks of size 2^( 4) =       0.000572922968
  error estimate for blocks of size 2^( 5) =       0.000586680003
  error estimate for blocks of size 2^( 6) =       0.000593072830
  error estimate for blocks of size 2^( 7) =       0.000598598426

      target function =      -0.705179611672
              le_mean =     -22.426358820120
             les_mean =     503.443991064031
             stat err =       0.000587818557
             autocorr =       1.375461575955
   target nu stat err =       0.000587818557
   target dn stat err =       0.009717429457
      target stat err =       0.006987534925
              std dev =       0.708816892074
             le_variance =       0.502421386490


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705179611672        initial  <--
     1.0000e+22     1.0000e+23             3.7219e-27        -0.705179611672
     4.0000e+22     4.0000e+23             9.3047e-28        -0.705179611672
     1.6000e+23     1.6000e+24             2.3262e-28        -0.705179611672

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.8641
  </log>
  <optVariables href="FORM.s023.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1279e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s024 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s024 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=24  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.444
    reference variance = 0.450559
====================================================
  Execution time = 7.5742e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s024
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0617e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5163e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506289059755
                                         uncertainty =       0.008586202449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506289059755
                                         uncertainty =       0.008586202449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503077164
  error estimate for blocks of size 2^( 2) =       0.000529827039
  error estimate for blocks of size 2^( 3) =       0.000555761685
  error estimate for blocks of size 2^( 4) =       0.000575655707
  error estimate for blocks of size 2^( 5) =       0.000588806765
  error estimate for blocks of size 2^( 6) =       0.000594291534
  error estimate for blocks of size 2^( 7) =       0.000600211691

      target function =      -0.702522599210
              le_mean =     -22.426302794395
             les_mean =     503.445230038094
             stat err =       0.000589741424
             autocorr =       1.374213027208
   target nu stat err =       0.000589741424
   target dn stat err =       0.008157339688
      target stat err =       0.005830297866
              std dev =       0.711458547822
             le_variance =       0.506173265269


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242630279440e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+23, overlap shift 1.0000e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702570379910       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+23 is 7.926459e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+23, overlap shift 4.0000e+24 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702570379910       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+23 is 1.981615e-28

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+24, overlap shift 1.6000e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.702570379910       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.702570379910       residual = 5.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+24 is 4.954037e-29

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.224339 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0091e+02
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -22.4056
    reference variance = 0.582559
====================================================
  Execution time = 7.5612e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s024
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0213e-01
  Total weights = 2.0000e+06
  Execution time = 6.4364e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501062043
  error estimate for blocks of size 2^( 2) =       0.000527191146
  error estimate for blocks of size 2^( 3) =       0.000552741246
  error estimate for blocks of size 2^( 4) =       0.000572285789
  error estimate for blocks of size 2^( 5) =       0.000585675687
  error estimate for blocks of size 2^( 6) =       0.000592003140
  error estimate for blocks of size 2^( 7) =       0.000596375622

      target function =      -0.705446662201
              le_mean =     -22.426105929314
             les_mean =     503.432353244550
             stat err =       0.000586585059
             autocorr =       1.370499822117
   target nu stat err =       0.000586585059
   target dn stat err =       0.004958384023
      target stat err =       0.003603154304
              std dev =       0.708608737469
             le_variance =       0.502126342817

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501062043
  error estimate for blocks of size 2^( 2) =       0.000527191146
  error estimate for blocks of size 2^( 3) =       0.000552741246
  error estimate for blocks of size 2^( 4) =       0.000572285789
  error estimate for blocks of size 2^( 5) =       0.000585675687
  error estimate for blocks of size 2^( 6) =       0.000592003140
  error estimate for blocks of size 2^( 7) =       0.000596375622

      target function =      -0.705446662201
              le_mean =     -22.426105929314
             les_mean =     503.432353244550
             stat err =       0.000586585059
             autocorr =       1.370499822111
   target nu stat err =       0.000586585059
   target dn stat err =       0.004958384023
      target stat err =       0.003603154304
              std dev =       0.708608737469
             le_variance =       0.502126342817

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501062043
  error estimate for blocks of size 2^( 2) =       0.000527191146
  error estimate for blocks of size 2^( 3) =       0.000552741246
  error estimate for blocks of size 2^( 4) =       0.000572285789
  error estimate for blocks of size 2^( 5) =       0.000585675687
  error estimate for blocks of size 2^( 6) =       0.000592003140
  error estimate for blocks of size 2^( 7) =       0.000596375622

      target function =      -0.705446662201
              le_mean =     -22.426105929314
             les_mean =     503.432353244550
             stat err =       0.000586585059
             autocorr =       1.370499822111
   target nu stat err =       0.000586585059
   target dn stat err =       0.004958384023
      target stat err =       0.003603154304
              std dev =       0.708608737469
             le_variance =       0.502126342817

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502138748208
                                         uncertainty =       0.004755652987

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501062043
  error estimate for blocks of size 2^( 2) =       0.000527191146
  error estimate for blocks of size 2^( 3) =       0.000552741246
  error estimate for blocks of size 2^( 4) =       0.000572285789
  error estimate for blocks of size 2^( 5) =       0.000585675687
  error estimate for blocks of size 2^( 6) =       0.000592003140
  error estimate for blocks of size 2^( 7) =       0.000596375622

      target function =      -0.705446662201
              le_mean =     -22.426105929314
             les_mean =     503.432353244550
             stat err =       0.000586585059
             autocorr =       1.370499822111
   target nu stat err =       0.000586585059
   target dn stat err =       0.004958384023
      target stat err =       0.003603154304
              std dev =       0.708608737469
             le_variance =       0.502126342817


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705446662201        initial  <--
     1.0000e+23     1.0000e+24             7.9265e-28        -0.705446662201
     4.0000e+23     4.0000e+24             1.9816e-28        -0.705446662201
     1.6000e+24     1.6000e+25             4.9540e-29        -0.705446662201

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.9606
  </log>
  <optVariables href="FORM.s024.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0916e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s025 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s025 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=25  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.3773
    reference variance = 0.401329
====================================================
  Execution time = 7.8374e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s025
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9348e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5349e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493535883957
                                         uncertainty =       0.003195113527

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493535883957
                                         uncertainty =       0.003195113527

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496729332
  error estimate for blocks of size 2^( 2) =       0.000523524178
  error estimate for blocks of size 2^( 3) =       0.000548907545
  error estimate for blocks of size 2^( 4) =       0.000568123860
  error estimate for blocks of size 2^( 5) =       0.000581397767
  error estimate for blocks of size 2^( 6) =       0.000588387380
  error estimate for blocks of size 2^( 7) =       0.000589059189

      target function =      -0.711694104859
              le_mean =     -22.427247273713
             les_mean =     503.474900088052
             stat err =       0.000581742049
             autocorr =       1.371580495829
   target nu stat err =       0.000581742049
   target dn stat err =       0.003082890537
      target stat err =       0.002330223781
              std dev =       0.702481358145
             le_variance =       0.493480058541


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242724727371e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+24, overlap shift 1.0000e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+24, overlap shift 4.0000e+25 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+25, overlap shift 1.6000e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711700874929       residual = 3.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.225409 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0373e+02
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -22.446
    reference variance = 0.379347
====================================================
  Execution time = 7.5515e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s025
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0340e-01
  Total weights = 2.0000e+06
  Execution time = 6.4554e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501694783
  error estimate for blocks of size 2^( 2) =       0.000528241481
  error estimate for blocks of size 2^( 3) =       0.000553973236
  error estimate for blocks of size 2^( 4) =       0.000574205893
  error estimate for blocks of size 2^( 5) =       0.000584835037
  error estimate for blocks of size 2^( 6) =       0.000593030014
  error estimate for blocks of size 2^( 7) =       0.000596186597

      target function =      -0.704521515516
              le_mean =     -22.426662109854
             les_mean =     503.458568449432
             stat err =       0.000587064385
             autocorr =       1.369280103986
   target nu stat err =       0.000587064385
   target dn stat err =       0.005479326755
      target stat err =       0.003964818103
              std dev =       0.709503566973
             le_variance =       0.503395311547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501694783
  error estimate for blocks of size 2^( 2) =       0.000528241481
  error estimate for blocks of size 2^( 3) =       0.000553973236
  error estimate for blocks of size 2^( 4) =       0.000574205893
  error estimate for blocks of size 2^( 5) =       0.000584835037
  error estimate for blocks of size 2^( 6) =       0.000593030014
  error estimate for blocks of size 2^( 7) =       0.000596186597

      target function =      -0.704521515516
              le_mean =     -22.426662109854
             les_mean =     503.458568449432
             stat err =       0.000587064385
             autocorr =       1.369280103986
   target nu stat err =       0.000587064385
   target dn stat err =       0.005479326755
      target stat err =       0.003964818103
              std dev =       0.709503566973
             le_variance =       0.503395311547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501694783
  error estimate for blocks of size 2^( 2) =       0.000528241481
  error estimate for blocks of size 2^( 3) =       0.000553973236
  error estimate for blocks of size 2^( 4) =       0.000574205893
  error estimate for blocks of size 2^( 5) =       0.000584835037
  error estimate for blocks of size 2^( 6) =       0.000593030014
  error estimate for blocks of size 2^( 7) =       0.000596186597

      target function =      -0.704521515516
              le_mean =     -22.426662109854
             les_mean =     503.458568449432
             stat err =       0.000587064385
             autocorr =       1.369280103986
   target nu stat err =       0.000587064385
   target dn stat err =       0.005479326755
      target stat err =       0.003964818103
              std dev =       0.709503566973
             le_variance =       0.503395311547

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503440525406
                                         uncertainty =       0.005300033175

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501694783
  error estimate for blocks of size 2^( 2) =       0.000528241481
  error estimate for blocks of size 2^( 3) =       0.000553973236
  error estimate for blocks of size 2^( 4) =       0.000574205893
  error estimate for blocks of size 2^( 5) =       0.000584835037
  error estimate for blocks of size 2^( 6) =       0.000593030014
  error estimate for blocks of size 2^( 7) =       0.000596186597

      target function =      -0.704521515516
              le_mean =     -22.426662109854
             les_mean =     503.458568449432
             stat err =       0.000587064385
             autocorr =       1.369280103986
   target nu stat err =       0.000587064385
   target dn stat err =       0.005479326755
      target stat err =       0.003964818103
              std dev =       0.709503566973
             le_variance =       0.503395311547


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704521515516        initial  <--
     1.0000e+24     1.0000e+25             0.0000e+00        -0.704521515516
     4.0000e+24     4.0000e+25             0.0000e+00        -0.704521515516
     1.6000e+25     1.6000e+26             0.0000e+00        -0.704521515516

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.9658
  </log>
  <optVariables href="FORM.s025.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1177e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s026 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s026 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=26  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.4405
    reference variance = 0.591684
====================================================
  Execution time = 7.6615e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s026
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9387e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4991e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493935622700
                                         uncertainty =       0.002868508693

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493935622700
                                         uncertainty =       0.002868508693

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496924873
  error estimate for blocks of size 2^( 2) =       0.000523244755
  error estimate for blocks of size 2^( 3) =       0.000548567715
  error estimate for blocks of size 2^( 4) =       0.000567660320
  error estimate for blocks of size 2^( 5) =       0.000579986900
  error estimate for blocks of size 2^( 6) =       0.000586613981
  error estimate for blocks of size 2^( 7) =       0.000590111856

      target function =      -0.711403511563
              le_mean =     -22.427768327607
             les_mean =     503.498660568407
             stat err =       0.000581093264
             autocorr =       1.367446084863
   target nu stat err =       0.000581093264
   target dn stat err =       0.002958050807
      target stat err =       0.002241922466
              std dev =       0.702757894689
             le_variance =       0.493868658548


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242776832761e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+25, overlap shift 1.0000e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+25, overlap shift 4.0000e+26 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2: stopping due to imaginary component in cost function
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+25 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+26, overlap shift 1.6000e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711409600362       residual = 1.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.226554 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0384e+02
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -22.4604
    reference variance = 0.35914
====================================================
  Execution time = 7.6992e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s026
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9409e-01
  Total weights = 2.0000e+06
  Execution time = 6.4265e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497035828
  error estimate for blocks of size 2^( 2) =       0.000523611225
  error estimate for blocks of size 2^( 3) =       0.000548829404
  error estimate for blocks of size 2^( 4) =       0.000568654625
  error estimate for blocks of size 2^( 5) =       0.000581068260
  error estimate for blocks of size 2^( 6) =       0.000588703701
  error estimate for blocks of size 2^( 7) =       0.000592562575

      target function =      -0.711244289261
              le_mean =     -22.427473296449
             les_mean =     503.485647445303
             stat err =       0.000582747290
             autocorr =       1.374627836480
   target nu stat err =       0.000582747290
   target dn stat err =       0.003483547034
      target stat err =       0.002612124783
              std dev =       0.702914809489
             le_variance =       0.494089229399

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497035828
  error estimate for blocks of size 2^( 2) =       0.000523611225
  error estimate for blocks of size 2^( 3) =       0.000548829404
  error estimate for blocks of size 2^( 4) =       0.000568654625
  error estimate for blocks of size 2^( 5) =       0.000581068260
  error estimate for blocks of size 2^( 6) =       0.000588703701
  error estimate for blocks of size 2^( 7) =       0.000592562575

      target function =      -0.711244289261
              le_mean =     -22.427473296449
             les_mean =     503.485647445303
             stat err =       0.000582747290
             autocorr =       1.374627836480
   target nu stat err =       0.000582747290
   target dn stat err =       0.003483547034
      target stat err =       0.002612124783
              std dev =       0.702914809489
             le_variance =       0.494089229399

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497035828
  error estimate for blocks of size 2^( 2) =       0.000523611225
  error estimate for blocks of size 2^( 3) =       0.000548829404
  error estimate for blocks of size 2^( 4) =       0.000568654625
  error estimate for blocks of size 2^( 5) =       0.000581068260
  error estimate for blocks of size 2^( 6) =       0.000588703701
  error estimate for blocks of size 2^( 7) =       0.000592562575

      target function =      -0.711244289261
              le_mean =     -22.427473296449
             les_mean =     503.485647445303
             stat err =       0.000582747290
             autocorr =       1.374627836480
   target nu stat err =       0.000582747290
   target dn stat err =       0.003483547034
      target stat err =       0.002612124783
              std dev =       0.702914809489
             le_variance =       0.494089229399

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494025217016
                                         uncertainty =       0.003663848804

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497035828
  error estimate for blocks of size 2^( 2) =       0.000523611225
  error estimate for blocks of size 2^( 3) =       0.000548829404
  error estimate for blocks of size 2^( 4) =       0.000568654625
  error estimate for blocks of size 2^( 5) =       0.000581068260
  error estimate for blocks of size 2^( 6) =       0.000588703701
  error estimate for blocks of size 2^( 7) =       0.000592562575

      target function =      -0.711244289261
              le_mean =     -22.427473296449
             les_mean =     503.485647445303
             stat err =       0.000582747290
             autocorr =       1.374627836480
   target nu stat err =       0.000582747290
   target dn stat err =       0.003483547034
      target stat err =       0.002612124783
              std dev =       0.702914809489
             le_variance =       0.494089229399


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711244289261        initial  <--
     1.0000e+25     1.0000e+26             0.0000e+00        -0.711244289261
     4.0000e+25     4.0000e+26             0.0000e+00        -0.711244289261
     1.6000e+26     1.6000e+27             0.0000e+00        -0.711244289261

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.2599
  </log>
  <optVariables href="FORM.s026.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1311e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s027 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s027 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=27  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.423
    reference variance = 0.432473
====================================================
  Execution time = 7.6740e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s027
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9668e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5544e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496582742925
                                         uncertainty =       0.004317676513

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496582742925
                                         uncertainty =       0.004317676513

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498337822
  error estimate for blocks of size 2^( 2) =       0.000525131929
  error estimate for blocks of size 2^( 3) =       0.000549902158
  error estimate for blocks of size 2^( 4) =       0.000569370358
  error estimate for blocks of size 2^( 5) =       0.000582312739
  error estimate for blocks of size 2^( 6) =       0.000589183482
  error estimate for blocks of size 2^( 7) =       0.000591830539

      target function =      -0.709368308734
              le_mean =     -22.426472000414
             les_mean =     503.443327306640
             stat err =       0.000583174280
             autocorr =       1.369458965587
   target nu stat err =       0.000583174280
   target dn stat err =       0.004432186661
      target stat err =       0.003268329399
              std dev =       0.704756106479
             le_variance =       0.496681169619


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242647200041e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+26, overlap shift 1.0000e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709382324511       residual = 2.38e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709382324511       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709382324511       residual = 5.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+26 is 6.855142e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+26, overlap shift 4.0000e+27 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709382324511       residual = 2.38e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709382324511       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709382324511       residual = 5.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+26 is 1.713785e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+27, overlap shift 1.6000e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709382324511       residual = 2.38e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709382324511       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709382324511       residual = 5.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+27 is 4.284464e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.227878 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0229e+02
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -22.4205
    reference variance = 0.455678
====================================================
  Execution time = 7.5872e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s027
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9393e-01
  Total weights = 2.0000e+06
  Execution time = 6.4451e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496955863
  error estimate for blocks of size 2^( 2) =       0.000523602997
  error estimate for blocks of size 2^( 3) =       0.000549197730
  error estimate for blocks of size 2^( 4) =       0.000570193162
  error estimate for blocks of size 2^( 5) =       0.000582994393
  error estimate for blocks of size 2^( 6) =       0.000591068161
  error estimate for blocks of size 2^( 7) =       0.000594933994

      target function =      -0.711370238618
              le_mean =     -22.426897708898
             les_mean =     503.459670858742
             stat err =       0.000584797427
             autocorr =       1.384762419028
   target nu stat err =       0.000584797427
   target dn stat err =       0.003086092036
      target stat err =       0.002330061820
              std dev =       0.702801721930
             le_variance =       0.493930260348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496955863
  error estimate for blocks of size 2^( 2) =       0.000523602997
  error estimate for blocks of size 2^( 3) =       0.000549197730
  error estimate for blocks of size 2^( 4) =       0.000570193162
  error estimate for blocks of size 2^( 5) =       0.000582994393
  error estimate for blocks of size 2^( 6) =       0.000591068161
  error estimate for blocks of size 2^( 7) =       0.000594933994

      target function =      -0.711370238618
              le_mean =     -22.426897708898
             les_mean =     503.459670858742
             stat err =       0.000584797427
             autocorr =       1.384762419028
   target nu stat err =       0.000584797427
   target dn stat err =       0.003086092036
      target stat err =       0.002330061820
              std dev =       0.702801721930
             le_variance =       0.493930260348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496955863
  error estimate for blocks of size 2^( 2) =       0.000523602997
  error estimate for blocks of size 2^( 3) =       0.000549197730
  error estimate for blocks of size 2^( 4) =       0.000570193162
  error estimate for blocks of size 2^( 5) =       0.000582994393
  error estimate for blocks of size 2^( 6) =       0.000591068161
  error estimate for blocks of size 2^( 7) =       0.000594933994

      target function =      -0.711370238618
              le_mean =     -22.426897708898
             les_mean =     503.459670858742
             stat err =       0.000584797427
             autocorr =       1.384762419028
   target nu stat err =       0.000584797427
   target dn stat err =       0.003086092036
      target stat err =       0.002330061820
              std dev =       0.702801721930
             le_variance =       0.493930260348

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494006082765
                                         uncertainty =       0.003089861264

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496955863
  error estimate for blocks of size 2^( 2) =       0.000523602997
  error estimate for blocks of size 2^( 3) =       0.000549197730
  error estimate for blocks of size 2^( 4) =       0.000570193162
  error estimate for blocks of size 2^( 5) =       0.000582994393
  error estimate for blocks of size 2^( 6) =       0.000591068161
  error estimate for blocks of size 2^( 7) =       0.000594933994

      target function =      -0.711370238618
              le_mean =     -22.426897708898
             les_mean =     503.459670858742
             stat err =       0.000584797427
             autocorr =       1.384762419028
   target nu stat err =       0.000584797427
   target dn stat err =       0.003086092036
      target stat err =       0.002330061820
              std dev =       0.702801721930
             le_variance =       0.493930260348


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711370238618        initial  <--
     1.0000e+26     1.0000e+27             6.8551e-31        -0.711370238618
     4.0000e+26     4.0000e+27             1.7138e-31        -0.711370238618
     1.6000e+27     1.6000e+28             4.2845e-32        -0.711370238618

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.8982
  </log>
  <optVariables href="FORM.s027.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1120e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s028 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s028 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=28  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.446
    reference variance = 0.414717
====================================================
  Execution time = 7.7976e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s028
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9571e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5491e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495706218384
                                         uncertainty =       0.003048899883

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495706218384
                                         uncertainty =       0.003048899883

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497850252
  error estimate for blocks of size 2^( 2) =       0.000524114419
  error estimate for blocks of size 2^( 3) =       0.000548971832
  error estimate for blocks of size 2^( 4) =       0.000568549129
  error estimate for blocks of size 2^( 5) =       0.000582896507
  error estimate for blocks of size 2^( 6) =       0.000591264094
  error estimate for blocks of size 2^( 7) =       0.000593819517

      target function =      -0.710062761307
              le_mean =     -22.427657035887
             les_mean =     503.495509618928
             stat err =       0.000584132311
             autocorr =       1.376654621386
   target nu stat err =       0.000584132311
   target dn stat err =       0.002991380661
      target stat err =       0.002257629478
              std dev =       0.704066578834
             le_variance =       0.495709747431


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242765703589e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+27, overlap shift 1.0000e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710068932987       residual = 5.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+27 is 4.759471e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+27, overlap shift 4.0000e+28 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710068932987       residual = 5.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+27 is 1.189868e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+28, overlap shift 1.6000e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710068932987       residual = 5.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710068932987       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+28 is 2.974669e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.229251 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0348e+02
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -22.4846
    reference variance = 0.445918
====================================================
  Execution time = 7.4745e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s028
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.8723e-01
  Total weights = 2.0000e+06
  Execution time = 6.4599e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493573045
  error estimate for blocks of size 2^( 2) =       0.000520607465
  error estimate for blocks of size 2^( 3) =       0.000546203295
  error estimate for blocks of size 2^( 4) =       0.000565641800
  error estimate for blocks of size 2^( 5) =       0.000577227558
  error estimate for blocks of size 2^( 6) =       0.000582850645
  error estimate for blocks of size 2^( 7) =       0.000584932946

      target function =      -0.716294508484
              le_mean =     -22.426826747513
             les_mean =     503.449786420784
             stat err =       0.000577663237
             autocorr =       1.369766660238
   target nu stat err =       0.000577663237
   target dn stat err =       0.002928409592
      target stat err =       0.002246597106
              std dev =       0.698017694222
             le_variance =       0.487228701448

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493573045
  error estimate for blocks of size 2^( 2) =       0.000520607465
  error estimate for blocks of size 2^( 3) =       0.000546203295
  error estimate for blocks of size 2^( 4) =       0.000565641800
  error estimate for blocks of size 2^( 5) =       0.000577227558
  error estimate for blocks of size 2^( 6) =       0.000582850645
  error estimate for blocks of size 2^( 7) =       0.000584932946

      target function =      -0.716294508484
              le_mean =     -22.426826747513
             les_mean =     503.449786420784
             stat err =       0.000577663237
             autocorr =       1.369766660238
   target nu stat err =       0.000577663237
   target dn stat err =       0.002928409592
      target stat err =       0.002246597106
              std dev =       0.698017694222
             le_variance =       0.487228701448

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493573045
  error estimate for blocks of size 2^( 2) =       0.000520607465
  error estimate for blocks of size 2^( 3) =       0.000546203295
  error estimate for blocks of size 2^( 4) =       0.000565641800
  error estimate for blocks of size 2^( 5) =       0.000577227558
  error estimate for blocks of size 2^( 6) =       0.000582850645
  error estimate for blocks of size 2^( 7) =       0.000584932946

      target function =      -0.716294508484
              le_mean =     -22.426826747513
             les_mean =     503.449786420784
             stat err =       0.000577663237
             autocorr =       1.369766660238
   target nu stat err =       0.000577663237
   target dn stat err =       0.002928409592
      target stat err =       0.002246597106
              std dev =       0.698017694222
             le_variance =       0.487228701448

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.487319381773
                                         uncertainty =       0.003148877104

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000493573045
  error estimate for blocks of size 2^( 2) =       0.000520607465
  error estimate for blocks of size 2^( 3) =       0.000546203295
  error estimate for blocks of size 2^( 4) =       0.000565641800
  error estimate for blocks of size 2^( 5) =       0.000577227558
  error estimate for blocks of size 2^( 6) =       0.000582850645
  error estimate for blocks of size 2^( 7) =       0.000584932946

      target function =      -0.716294508484
              le_mean =     -22.426826747513
             les_mean =     503.449786420784
             stat err =       0.000577663237
             autocorr =       1.369766660238
   target nu stat err =       0.000577663237
   target dn stat err =       0.002928409592
      target stat err =       0.002246597106
              std dev =       0.698017694222
             le_variance =       0.487228701448


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.716294508484        initial  <--
     1.0000e+27     1.0000e+28             4.7595e-32        -0.716294508484
     4.0000e+27     4.0000e+28             1.1899e-32        -0.716294508484
     1.6000e+28     1.6000e+29             2.9747e-33        -0.716294508484

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.0952
  </log>
  <optVariables href="FORM.s028.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1071e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s029 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s029 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=29  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.2993
    reference variance = 0.326155
====================================================
  Execution time = 7.8734e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s029
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9364e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5287e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493378633477
                                         uncertainty =       0.002440865763

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493378633477
                                         uncertainty =       0.002440865763

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496812163
  error estimate for blocks of size 2^( 2) =       0.000523221586
  error estimate for blocks of size 2^( 3) =       0.000548696566
  error estimate for blocks of size 2^( 4) =       0.000568485654
  error estimate for blocks of size 2^( 5) =       0.000581248961
  error estimate for blocks of size 2^( 6) =       0.000589054072
  error estimate for blocks of size 2^( 7) =       0.000593577815

      target function =      -0.711567519648
              le_mean =     -22.427746569428
             les_mean =     503.497460585931
             stat err =       0.000583091626
             autocorr =       1.377492266187
   target nu stat err =       0.000583091626
   target dn stat err =       0.002930863969
      target stat err =       0.002224253552
              std dev =       0.702598498621
             le_variance =       0.493644650265


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242774656943e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+28, overlap shift 1.0000e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+28, overlap shift 4.0000e+29 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+29, overlap shift 1.6000e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711573606817       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.230331 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0404e+02
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -22.4945
    reference variance = 0.515336
====================================================
  Execution time = 7.5717e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s029
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9345e-01
  Total weights = 2.0000e+06
  Execution time = 6.4844e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496712156
  error estimate for blocks of size 2^( 2) =       0.000523373891
  error estimate for blocks of size 2^( 3) =       0.000548751255
  error estimate for blocks of size 2^( 4) =       0.000569044430
  error estimate for blocks of size 2^( 5) =       0.000581266377
  error estimate for blocks of size 2^( 6) =       0.000589986808
  error estimate for blocks of size 2^( 7) =       0.000594282660

      target function =      -0.711714771387
              le_mean =     -22.427554778398
             les_mean =     503.488659022842
             stat err =       0.000583645069
             autocorr =       1.380664200035
   target nu stat err =       0.000583645069
   target dn stat err =       0.003098801767
      target stat err =       0.002343132395
              std dev =       0.702457067383
             le_variance =       0.493445931517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496712156
  error estimate for blocks of size 2^( 2) =       0.000523373891
  error estimate for blocks of size 2^( 3) =       0.000548751255
  error estimate for blocks of size 2^( 4) =       0.000569044430
  error estimate for blocks of size 2^( 5) =       0.000581266377
  error estimate for blocks of size 2^( 6) =       0.000589986808
  error estimate for blocks of size 2^( 7) =       0.000594282660

      target function =      -0.711714771387
              le_mean =     -22.427554778398
             les_mean =     503.488659022842
             stat err =       0.000583645069
             autocorr =       1.380664200035
   target nu stat err =       0.000583645069
   target dn stat err =       0.003098801767
      target stat err =       0.002343132395
              std dev =       0.702457067383
             le_variance =       0.493445931517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496712156
  error estimate for blocks of size 2^( 2) =       0.000523373891
  error estimate for blocks of size 2^( 3) =       0.000548751255
  error estimate for blocks of size 2^( 4) =       0.000569044430
  error estimate for blocks of size 2^( 5) =       0.000581266377
  error estimate for blocks of size 2^( 6) =       0.000589986808
  error estimate for blocks of size 2^( 7) =       0.000594282660

      target function =      -0.711714771387
              le_mean =     -22.427554778398
             les_mean =     503.488659022842
             stat err =       0.000583645069
             autocorr =       1.380664200035
   target nu stat err =       0.000583645069
   target dn stat err =       0.003098801767
      target stat err =       0.002343132395
              std dev =       0.702457067383
             le_variance =       0.493445931517

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493495207580
                                         uncertainty =       0.003324453279

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496712156
  error estimate for blocks of size 2^( 2) =       0.000523373891
  error estimate for blocks of size 2^( 3) =       0.000548751255
  error estimate for blocks of size 2^( 4) =       0.000569044430
  error estimate for blocks of size 2^( 5) =       0.000581266377
  error estimate for blocks of size 2^( 6) =       0.000589986808
  error estimate for blocks of size 2^( 7) =       0.000594282660

      target function =      -0.711714771387
              le_mean =     -22.427554778398
             les_mean =     503.488659022842
             stat err =       0.000583645069
             autocorr =       1.380664200035
   target nu stat err =       0.000583645069
   target dn stat err =       0.003098801767
      target stat err =       0.002343132395
              std dev =       0.702457067383
             le_variance =       0.493445931517


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.711714771387        initial  <--
     1.0000e+28     1.0000e+29             0.0000e+00        -0.711714771387
     4.0000e+28     4.0000e+29             0.0000e+00        -0.711714771387
     1.6000e+29     1.6000e+30             0.0000e+00        -0.711714771387

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.2106
  </log>
  <optVariables href="FORM.s029.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1226e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s030 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s030 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=30  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.38
    reference variance = 0.429533
====================================================
  Execution time = 7.5753e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s030
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0440e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4812e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504454444404
                                         uncertainty =       0.005332610775

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504454444404
                                         uncertainty =       0.005332610775

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502193266
  error estimate for blocks of size 2^( 2) =       0.000528421630
  error estimate for blocks of size 2^( 3) =       0.000553184551
  error estimate for blocks of size 2^( 4) =       0.000571760985
  error estimate for blocks of size 2^( 5) =       0.000585158364
  error estimate for blocks of size 2^( 6) =       0.000592360176
  error estimate for blocks of size 2^( 7) =       0.000597207127

      target function =      -0.703789717988
              le_mean =     -22.427436081838
             les_mean =     503.494285106296
             stat err =       0.000586621663
             autocorr =       1.364502774239
   target nu stat err =       0.000586621663
   target dn stat err =       0.005209600768
      target stat err =       0.003770553346
              std dev =       0.710208528222
             le_variance =       0.504396153559


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242743608184e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+29, overlap shift 1.0000e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703809103407       residual = 4.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+29 is 4.448546e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+29, overlap shift 4.0000e+30 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703809103407       residual = 4.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+29 is 1.112136e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+30, overlap shift 1.6000e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703809103407       residual = 4.72e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703809103407       residual = 1.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+30 is 2.780341e-35

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.231743 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0057e+02
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -22.4239
    reference variance = 0.440464
====================================================
  Execution time = 7.6022e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s030
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9117e-01
  Total weights = 2.0000e+06
  Execution time = 6.4928e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495565554
  error estimate for blocks of size 2^( 2) =       0.000521957835
  error estimate for blocks of size 2^( 3) =       0.000547095855
  error estimate for blocks of size 2^( 4) =       0.000566668666
  error estimate for blocks of size 2^( 5) =       0.000579004907
  error estimate for blocks of size 2^( 6) =       0.000585479407
  error estimate for blocks of size 2^( 7) =       0.000591855355

      target function =      -0.713382721604
              le_mean =     -22.427541168897
             les_mean =     503.485773072939
             stat err =       0.000580752084
             autocorr =       1.373343989423
   target nu stat err =       0.000580752084
   target dn stat err =       0.002996137061
      target stat err =       0.002280120060
              std dev =       0.700835527033
             le_variance =       0.491170435952

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495565554
  error estimate for blocks of size 2^( 2) =       0.000521957835
  error estimate for blocks of size 2^( 3) =       0.000547095855
  error estimate for blocks of size 2^( 4) =       0.000566668666
  error estimate for blocks of size 2^( 5) =       0.000579004907
  error estimate for blocks of size 2^( 6) =       0.000585479407
  error estimate for blocks of size 2^( 7) =       0.000591855355

      target function =      -0.713382721604
              le_mean =     -22.427541168897
             les_mean =     503.485773072939
             stat err =       0.000580752084
             autocorr =       1.373343989423
   target nu stat err =       0.000580752084
   target dn stat err =       0.002996137061
      target stat err =       0.002280120060
              std dev =       0.700835527033
             le_variance =       0.491170435952

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495565554
  error estimate for blocks of size 2^( 2) =       0.000521957835
  error estimate for blocks of size 2^( 3) =       0.000547095855
  error estimate for blocks of size 2^( 4) =       0.000566668666
  error estimate for blocks of size 2^( 5) =       0.000579004907
  error estimate for blocks of size 2^( 6) =       0.000585479407
  error estimate for blocks of size 2^( 7) =       0.000591855355

      target function =      -0.713382721604
              le_mean =     -22.427541168897
             les_mean =     503.485773072939
             stat err =       0.000580752084
             autocorr =       1.373343989423
   target nu stat err =       0.000580752084
   target dn stat err =       0.002996137061
      target stat err =       0.002280120060
              std dev =       0.700835527033
             le_variance =       0.491170435952

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.491238646938
                                         uncertainty =       0.003055560632

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495565554
  error estimate for blocks of size 2^( 2) =       0.000521957835
  error estimate for blocks of size 2^( 3) =       0.000547095855
  error estimate for blocks of size 2^( 4) =       0.000566668666
  error estimate for blocks of size 2^( 5) =       0.000579004907
  error estimate for blocks of size 2^( 6) =       0.000585479407
  error estimate for blocks of size 2^( 7) =       0.000591855355

      target function =      -0.713382721604
              le_mean =     -22.427541168897
             les_mean =     503.485773072939
             stat err =       0.000580752084
             autocorr =       1.373343989423
   target nu stat err =       0.000580752084
   target dn stat err =       0.002996137061
      target stat err =       0.002280120060
              std dev =       0.700835527033
             le_variance =       0.491170435952


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.713382721604        initial  <--
     1.0000e+29     1.0000e+30             4.4485e-34        -0.713382721604
     4.0000e+29     4.0000e+30             1.1121e-34        -0.713382721604
     1.6000e+30     1.6000e+31             2.7803e-35        -0.713382721604

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.2509
  </log>
  <optVariables href="FORM.s030.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1083e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s031 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s031 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=31  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2429e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.4301
    reference variance = 0.383046
====================================================
  Execution time = 7.6388e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s031
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9278e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5399e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492839865901
                                         uncertainty =       0.002743374181

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492839865901
                                         uncertainty =       0.002743374181

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496377138
  error estimate for blocks of size 2^( 2) =       0.000522757212
  error estimate for blocks of size 2^( 3) =       0.000547765314
  error estimate for blocks of size 2^( 4) =       0.000566499075
  error estimate for blocks of size 2^( 5) =       0.000579077729
  error estimate for blocks of size 2^( 6) =       0.000584349253
  error estimate for blocks of size 2^( 7) =       0.000589694831

      target function =      -0.712208651396
              le_mean =     -22.427054071346
             les_mean =     503.465534598097
             stat err =       0.000579905222
             autocorr =       1.364867518582
   target nu stat err =       0.000579905222
   target dn stat err =       0.002971677607
      target stat err =       0.002253793574
              std dev =       0.701983280009
             le_variance =       0.492780525412


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242705407135e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+30, overlap shift 1.0000e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+30, overlap shift 4.0000e+31 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+31, overlap shift 1.6000e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712214784476       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.232824 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0288e+02
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -22.4011
    reference variance = 0.497212
====================================================
  Execution time = 7.5366e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s031
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9980e-01
  Total weights = 2.0000e+06
  Execution time = 6.4614e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499899462
  error estimate for blocks of size 2^( 2) =       0.000525669499
  error estimate for blocks of size 2^( 3) =       0.000551345068
  error estimate for blocks of size 2^( 4) =       0.000569415230
  error estimate for blocks of size 2^( 5) =       0.000580433089
  error estimate for blocks of size 2^( 6) =       0.000589760323
  error estimate for blocks of size 2^( 7) =       0.000593643224

      target function =      -0.707108938812
              le_mean =     -22.427089194814
             les_mean =     503.474128447162
             stat err =       0.000583312966
             autocorr =       1.361563565738
   target nu stat err =       0.000583312966
   target dn stat err =       0.003415979957
      target stat err =       0.002533948401
              std dev =       0.706964599473
             le_variance =       0.499798944908

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499899462
  error estimate for blocks of size 2^( 2) =       0.000525669499
  error estimate for blocks of size 2^( 3) =       0.000551345068
  error estimate for blocks of size 2^( 4) =       0.000569415230
  error estimate for blocks of size 2^( 5) =       0.000580433089
  error estimate for blocks of size 2^( 6) =       0.000589760323
  error estimate for blocks of size 2^( 7) =       0.000593643224

      target function =      -0.707108938812
              le_mean =     -22.427089194814
             les_mean =     503.474128447162
             stat err =       0.000583312966
             autocorr =       1.361563565738
   target nu stat err =       0.000583312966
   target dn stat err =       0.003415979957
      target stat err =       0.002533948401
              std dev =       0.706964599473
             le_variance =       0.499798944908

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499899462
  error estimate for blocks of size 2^( 2) =       0.000525669499
  error estimate for blocks of size 2^( 3) =       0.000551345068
  error estimate for blocks of size 2^( 4) =       0.000569415230
  error estimate for blocks of size 2^( 5) =       0.000580433089
  error estimate for blocks of size 2^( 6) =       0.000589760323
  error estimate for blocks of size 2^( 7) =       0.000593643224

      target function =      -0.707108938812
              le_mean =     -22.427089194814
             les_mean =     503.474128447162
             stat err =       0.000583312966
             autocorr =       1.361563565738
   target nu stat err =       0.000583312966
   target dn stat err =       0.003415979957
      target stat err =       0.002533948401
              std dev =       0.706964599473
             le_variance =       0.499798944908

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499853183668
                                         uncertainty =       0.003634159173

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499899462
  error estimate for blocks of size 2^( 2) =       0.000525669499
  error estimate for blocks of size 2^( 3) =       0.000551345068
  error estimate for blocks of size 2^( 4) =       0.000569415230
  error estimate for blocks of size 2^( 5) =       0.000580433089
  error estimate for blocks of size 2^( 6) =       0.000589760323
  error estimate for blocks of size 2^( 7) =       0.000593643224

      target function =      -0.707108938812
              le_mean =     -22.427089194814
             les_mean =     503.474128447162
             stat err =       0.000583312966
             autocorr =       1.361563565738
   target nu stat err =       0.000583312966
   target dn stat err =       0.003415979957
      target stat err =       0.002533948401
              std dev =       0.706964599473
             le_variance =       0.499798944908


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707108938812        initial  <--
     1.0000e+30     1.0000e+31             0.0000e+00        -0.707108938812
     4.0000e+30     4.0000e+31             0.0000e+00        -0.707108938812
     1.6000e+31     1.6000e+32             0.0000e+00        -0.707108938812

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.8665
  </log>
  <optVariables href="FORM.s031.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1120e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s032 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s032 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=32  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2429e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.3682
    reference variance = 0.262655
====================================================
  Execution time = 7.7772e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s032
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9473e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5219e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494794715858
                                         uncertainty =       0.002882893356

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494794715858
                                         uncertainty =       0.002882893356

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497356231
  error estimate for blocks of size 2^( 2) =       0.000523105023
  error estimate for blocks of size 2^( 3) =       0.000548119572
  error estimate for blocks of size 2^( 4) =       0.000568013979
  error estimate for blocks of size 2^( 5) =       0.000580420318
  error estimate for blocks of size 2^( 6) =       0.000586120594
  error estimate for blocks of size 2^( 7) =       0.000587884341

      target function =      -0.710781766578
              le_mean =     -22.427412490006
             les_mean =     503.483557190364
             stat err =       0.000580609808
             autocorr =       1.362804658616
   target nu stat err =       0.000580609808
   target dn stat err =       0.003195482659
      target stat err =       0.002404131369
              std dev =       0.703367927082
             le_variance =       0.494726440848


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242741249001e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+31, overlap shift 1.0000e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710788939053       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710788939053       residual = 8.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710788939053       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710788939052       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 1.73e+14           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.337274135343       residual = 7.07e+01           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+31 is 8.416589e-36

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+31, overlap shift 4.0000e+32 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710788939053       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710788939053       residual = 8.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710788939053       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710788939052       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710785716565       residual = 2.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+31 is 2.104147e-36

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+32, overlap shift 1.6000e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710788939053       residual = 2.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710788939053       residual = 8.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710788939053       residual = 3.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.710788726807       residual = 1.08e+03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710937500000       residual = 2.67e+08           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+32 is 4.500147e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.234929 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0300e+02
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -22.5686
    reference variance = 1.50138
====================================================
  Execution time = 7.5258e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s032
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9657e-01
  Total weights = 2.0000e+06
  Execution time = 6.4646e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498282696
  error estimate for blocks of size 2^( 2) =       0.000524970454
  error estimate for blocks of size 2^( 3) =       0.000551328284
  error estimate for blocks of size 2^( 4) =       0.000570004686
  error estimate for blocks of size 2^( 5) =       0.000582706530
  error estimate for blocks of size 2^( 6) =       0.000589658860
  error estimate for blocks of size 2^( 7) =       0.000592723225

      target function =      -0.709451148620
              le_mean =     -22.426734232364
             les_mean =     503.454979371355
             stat err =       0.000583773325
             autocorr =       1.372577520653
   target nu stat err =       0.000583773325
   target dn stat err =       0.003113234233
      target stat err =       0.002336138779
              std dev =       0.704678146790
             le_variance =       0.496571290564

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498282696
  error estimate for blocks of size 2^( 2) =       0.000524970454
  error estimate for blocks of size 2^( 3) =       0.000551328284
  error estimate for blocks of size 2^( 4) =       0.000570004686
  error estimate for blocks of size 2^( 5) =       0.000582706530
  error estimate for blocks of size 2^( 6) =       0.000589658860
  error estimate for blocks of size 2^( 7) =       0.000592723225

      target function =      -0.709451148620
              le_mean =     -22.426734232364
             les_mean =     503.454979371355
             stat err =       0.000583773325
             autocorr =       1.372577520653
   target nu stat err =       0.000583773325
   target dn stat err =       0.003113234233
      target stat err =       0.002336138779
              std dev =       0.704678146790
             le_variance =       0.496571290564

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498282696
  error estimate for blocks of size 2^( 2) =       0.000524970454
  error estimate for blocks of size 2^( 3) =       0.000551328284
  error estimate for blocks of size 2^( 4) =       0.000570004686
  error estimate for blocks of size 2^( 5) =       0.000582706530
  error estimate for blocks of size 2^( 6) =       0.000589658860
  error estimate for blocks of size 2^( 7) =       0.000592723225

      target function =      -0.709451148620
              le_mean =     -22.426734232364
             les_mean =     503.454979371355
             stat err =       0.000583773325
             autocorr =       1.372577520653
   target nu stat err =       0.000583773325
   target dn stat err =       0.003113234233
      target stat err =       0.002336138779
              std dev =       0.704678146790
             le_variance =       0.496571290564

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496439652495
                                         uncertainty =       0.003096207936

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498282696
  error estimate for blocks of size 2^( 2) =       0.000524970454
  error estimate for blocks of size 2^( 3) =       0.000551328284
  error estimate for blocks of size 2^( 4) =       0.000570004686
  error estimate for blocks of size 2^( 5) =       0.000582706530
  error estimate for blocks of size 2^( 6) =       0.000589658860
  error estimate for blocks of size 2^( 7) =       0.000592723225

      target function =      -0.709451148620
              le_mean =     -22.426734232364
             les_mean =     503.454979371355
             stat err =       0.000583773325
             autocorr =       1.372577520653
   target nu stat err =       0.000583773325
   target dn stat err =       0.003113234233
      target stat err =       0.002336138779
              std dev =       0.704678146790
             le_variance =       0.496571290564


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.709451148620        initial  <--
     1.0000e+31     1.0000e+32             8.4166e-36        -0.709451148620
     4.0000e+31     4.0000e+32             2.1041e-36        -0.709451148620
     1.6000e+32     1.6000e+33             4.5001e-37        -0.709451148620

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.6194
  </log>
  <optVariables href="FORM.s032.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1062e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s033 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s033 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=33  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.4308
    reference variance = 0.437827
====================================================
  Execution time = 7.5810e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s033
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0421e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5266e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504304332701
                                         uncertainty =       0.012498788892

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504304332701
                                         uncertainty =       0.012498788892

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502099564
  error estimate for blocks of size 2^( 2) =       0.000528286919
  error estimate for blocks of size 2^( 3) =       0.000552833115
  error estimate for blocks of size 2^( 4) =       0.000572049479
  error estimate for blocks of size 2^( 5) =       0.000584053399
  error estimate for blocks of size 2^( 6) =       0.000592476677
  error estimate for blocks of size 2^( 7) =       0.000595053204

      target function =      -0.703860329314
              le_mean =     -22.426135893863
             les_mean =     503.435778822587
             stat err =       0.000585908189
             autocorr =       1.361693761942
   target nu stat err =       0.000585908189
   target dn stat err =       0.012537571381
      target stat err =       0.008966273466
              std dev =       0.710076013298
             le_variance =       0.504207944662


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242613589386e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+32, overlap shift 1.0000e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+32, overlap shift 4.0000e+33 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+33, overlap shift 1.6000e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703974356360       residual = 6.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.236013 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0108e+02
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -22.3897
    reference variance = 0.437983
====================================================
  Execution time = 7.9087e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s033
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9781e-01
  Total weights = 2.0000e+06
  Execution time = 6.4430e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498905539
  error estimate for blocks of size 2^( 2) =       0.000525459763
  error estimate for blocks of size 2^( 3) =       0.000550859995
  error estimate for blocks of size 2^( 4) =       0.000570669928
  error estimate for blocks of size 2^( 5) =       0.000583049099
  error estimate for blocks of size 2^( 6) =       0.000591685095
  error estimate for blocks of size 2^( 7) =       0.000595218510

      target function =      -0.708526633010
              le_mean =     -22.427464476581
             les_mean =     503.488976073095
             stat err =       0.000585155658
             autocorr =       1.375644342595
   target nu stat err =       0.000585155658
   target dn stat err =       0.005010151975
      target stat err =       0.003678137810
              std dev =       0.705558979610
             le_variance =       0.497813473708

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498905539
  error estimate for blocks of size 2^( 2) =       0.000525459763
  error estimate for blocks of size 2^( 3) =       0.000550859995
  error estimate for blocks of size 2^( 4) =       0.000570669928
  error estimate for blocks of size 2^( 5) =       0.000583049099
  error estimate for blocks of size 2^( 6) =       0.000591685095
  error estimate for blocks of size 2^( 7) =       0.000595218510

      target function =      -0.708526633010
              le_mean =     -22.427464476581
             les_mean =     503.488976073095
             stat err =       0.000585155658
             autocorr =       1.375644342595
   target nu stat err =       0.000585155658
   target dn stat err =       0.005010151975
      target stat err =       0.003678137810
              std dev =       0.705558979610
             le_variance =       0.497813473708

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498905539
  error estimate for blocks of size 2^( 2) =       0.000525459763
  error estimate for blocks of size 2^( 3) =       0.000550859995
  error estimate for blocks of size 2^( 4) =       0.000570669928
  error estimate for blocks of size 2^( 5) =       0.000583049099
  error estimate for blocks of size 2^( 6) =       0.000591685095
  error estimate for blocks of size 2^( 7) =       0.000595218510

      target function =      -0.708526633010
              le_mean =     -22.427464476581
             les_mean =     503.488976073095
             stat err =       0.000585155658
             autocorr =       1.375644342595
   target nu stat err =       0.000585155658
   target dn stat err =       0.005010151975
      target stat err =       0.003678137810
              std dev =       0.705558979610
             le_variance =       0.497813473708

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497850075845
                                         uncertainty =       0.004933943612

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498905539
  error estimate for blocks of size 2^( 2) =       0.000525459763
  error estimate for blocks of size 2^( 3) =       0.000550859995
  error estimate for blocks of size 2^( 4) =       0.000570669928
  error estimate for blocks of size 2^( 5) =       0.000583049099
  error estimate for blocks of size 2^( 6) =       0.000591685095
  error estimate for blocks of size 2^( 7) =       0.000595218510

      target function =      -0.708526633010
              le_mean =     -22.427464476581
             les_mean =     503.488976073095
             stat err =       0.000585155658
             autocorr =       1.375644342595
   target nu stat err =       0.000585155658
   target dn stat err =       0.005010151975
      target stat err =       0.003678137810
              std dev =       0.705558979610
             le_variance =       0.497813473708


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708526633010        initial  <--
     1.0000e+32     1.0000e+33             0.0000e+00        -0.708526633010
     4.0000e+32     4.0000e+33             0.0000e+00        -0.708526633010
     1.6000e+33     1.6000e+34             0.0000e+00        -0.708526633010

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 111.4570
  </log>
  <optVariables href="FORM.s033.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1255e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s034 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s034 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=34  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.404
    reference variance = 0.487912
====================================================
  Execution time = 7.5677e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s034
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0000e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5672e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500062078135
                                         uncertainty =       0.005922712137

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.500062078135
                                         uncertainty =       0.005922712137

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500000423
  error estimate for blocks of size 2^( 2) =       0.000526157123
  error estimate for blocks of size 2^( 3) =       0.000550607925
  error estimate for blocks of size 2^( 4) =       0.000569273766
  error estimate for blocks of size 2^( 5) =       0.000580386631
  error estimate for blocks of size 2^( 6) =       0.000586592956
  error estimate for blocks of size 2^( 7) =       0.000591317454

      target function =      -0.706941764460
              le_mean =     -22.427164488170
             les_mean =     503.477707574627
             stat err =       0.000581892701
             autocorr =       1.354394174433
   target nu stat err =       0.000581892701
   target dn stat err =       0.006273657759
      target stat err =       0.004560952026
              std dev =       0.707107378835
             le_variance =       0.500000845202


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242716448817e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+33, overlap shift 1.0000e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706970008258       residual = 2.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706970008258       residual = 5.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706970006227       residual = 2.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+33 is 6.093575e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+33, overlap shift 4.0000e+34 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706970008258       residual = 2.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706970008258       residual = 5.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706970036030       residual = 2.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+33 is 1.523394e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+34, overlap shift 1.6000e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706970008258       residual = 2.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706970008258       residual = 5.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.706970008258       residual = 6.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.706970036030       residual = 1.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.703125000000       residual = 1.51e+08           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+34 is 4.892710e-39

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.237591 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0136e+02
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -22.3923
    reference variance = 0.363623
====================================================
  Execution time = 7.6551e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s034
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9830e-01
  Total weights = 2.0000e+06
  Execution time = 6.4478e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499151631
  error estimate for blocks of size 2^( 2) =       0.000526070858
  error estimate for blocks of size 2^( 3) =       0.000552280647
  error estimate for blocks of size 2^( 4) =       0.000570899369
  error estimate for blocks of size 2^( 5) =       0.000583758495
  error estimate for blocks of size 2^( 6) =       0.000591148149
  error estimate for blocks of size 2^( 7) =       0.000593570829

      target function =      -0.708194509110
              le_mean =     -22.426374352157
             les_mean =     503.440571035962
             stat err =       0.000584844211
             autocorr =       1.372825700857
   target nu stat err =       0.000584844211
   target dn stat err =       0.004500083127
      target stat err =       0.003305796809
              std dev =       0.705907006645
             le_variance =       0.498304702030

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499151631
  error estimate for blocks of size 2^( 2) =       0.000526070858
  error estimate for blocks of size 2^( 3) =       0.000552280647
  error estimate for blocks of size 2^( 4) =       0.000570899369
  error estimate for blocks of size 2^( 5) =       0.000583758495
  error estimate for blocks of size 2^( 6) =       0.000591148149
  error estimate for blocks of size 2^( 7) =       0.000593570829

      target function =      -0.708194509110
              le_mean =     -22.426374352157
             les_mean =     503.440571035962
             stat err =       0.000584844211
             autocorr =       1.372825700857
   target nu stat err =       0.000584844211
   target dn stat err =       0.004500083127
      target stat err =       0.003305796809
              std dev =       0.705907006645
             le_variance =       0.498304702030

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499151631
  error estimate for blocks of size 2^( 2) =       0.000526070858
  error estimate for blocks of size 2^( 3) =       0.000552280647
  error estimate for blocks of size 2^( 4) =       0.000570899369
  error estimate for blocks of size 2^( 5) =       0.000583758495
  error estimate for blocks of size 2^( 6) =       0.000591148149
  error estimate for blocks of size 2^( 7) =       0.000593570829

      target function =      -0.708194509110
              le_mean =     -22.426374352157
             les_mean =     503.440571035962
             stat err =       0.000584844211
             autocorr =       1.372825700857
   target nu stat err =       0.000584844211
   target dn stat err =       0.004500083127
      target stat err =       0.003305796809
              std dev =       0.705907006645
             le_variance =       0.498304702030

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498190599175
                                         uncertainty =       0.004095402848

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499151631
  error estimate for blocks of size 2^( 2) =       0.000526070858
  error estimate for blocks of size 2^( 3) =       0.000552280647
  error estimate for blocks of size 2^( 4) =       0.000570899369
  error estimate for blocks of size 2^( 5) =       0.000583758495
  error estimate for blocks of size 2^( 6) =       0.000591148149
  error estimate for blocks of size 2^( 7) =       0.000593570829

      target function =      -0.708194509110
              le_mean =     -22.426374352157
             les_mean =     503.440571035962
             stat err =       0.000584844211
             autocorr =       1.372825700857
   target nu stat err =       0.000584844211
   target dn stat err =       0.004500083127
      target stat err =       0.003305796809
              std dev =       0.705907006645
             le_variance =       0.498304702030


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708194509110        initial  <--
     1.0000e+33     1.0000e+34             6.0936e-38        -0.708194509110
     4.0000e+33     4.0000e+34             1.5234e-38        -0.708194509110
     1.6000e+34     1.6000e+35             4.8927e-39        -0.708194509110

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.5028
  </log>
  <optVariables href="FORM.s034.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1239e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s035 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s035 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=35  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2429e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.4584
    reference variance = 0.402047
====================================================
  Execution time = 7.6715e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s035
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9497e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5244e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495019344357
                                         uncertainty =       0.003529991732

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495019344357
                                         uncertainty =       0.003529991732

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497480326
  error estimate for blocks of size 2^( 2) =       0.000524114584
  error estimate for blocks of size 2^( 3) =       0.000549618558
  error estimate for blocks of size 2^( 4) =       0.000568897487
  error estimate for blocks of size 2^( 5) =       0.000582188907
  error estimate for blocks of size 2^( 6) =       0.000588507790
  error estimate for blocks of size 2^( 7) =       0.000590486207

      target function =      -0.710607499860
              le_mean =     -22.427118494640
             les_mean =     503.470617074336
             stat err =       0.000582520098
             autocorr =       1.371102766701
   target nu stat err =       0.000582520098
   target dn stat err =       0.002943752339
      target stat err =       0.002225346030
              std dev =       0.703543423822
             le_variance =       0.494973349203


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242711849464e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+34, overlap shift 1.0000e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+34, overlap shift 4.0000e+35 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+35, overlap shift 1.6000e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710613447280       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.238706 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0197e+02
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -22.4567
    reference variance = 0.474976
====================================================
  Execution time = 7.6543e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s035
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0375e-01
  Total weights = 2.0000e+06
  Execution time = 6.4530e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501870942
  error estimate for blocks of size 2^( 2) =       0.000527931654
  error estimate for blocks of size 2^( 3) =       0.000552891268
  error estimate for blocks of size 2^( 4) =       0.000572469261
  error estimate for blocks of size 2^( 5) =       0.000585257629
  error estimate for blocks of size 2^( 6) =       0.000592027063
  error estimate for blocks of size 2^( 7) =       0.000595278413

      target function =      -0.704237207453
              le_mean =     -22.427925194447
             les_mean =     503.515577161332
             stat err =       0.000586258092
             autocorr =       1.364563018481
   target nu stat err =       0.000586258092
   target dn stat err =       0.005625568251
      target stat err =       0.004072329073
              std dev =       0.709752693193
             le_variance =       0.503748885495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501870942
  error estimate for blocks of size 2^( 2) =       0.000527931654
  error estimate for blocks of size 2^( 3) =       0.000552891268
  error estimate for blocks of size 2^( 4) =       0.000572469261
  error estimate for blocks of size 2^( 5) =       0.000585257629
  error estimate for blocks of size 2^( 6) =       0.000592027063
  error estimate for blocks of size 2^( 7) =       0.000595278413

      target function =      -0.704237207453
              le_mean =     -22.427925194447
             les_mean =     503.515577161332
             stat err =       0.000586258092
             autocorr =       1.364563018481
   target nu stat err =       0.000586258092
   target dn stat err =       0.005625568251
      target stat err =       0.004072329073
              std dev =       0.709752693193
             le_variance =       0.503748885495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501870942
  error estimate for blocks of size 2^( 2) =       0.000527931654
  error estimate for blocks of size 2^( 3) =       0.000552891268
  error estimate for blocks of size 2^( 4) =       0.000572469261
  error estimate for blocks of size 2^( 5) =       0.000585257629
  error estimate for blocks of size 2^( 6) =       0.000592027063
  error estimate for blocks of size 2^( 7) =       0.000595278413

      target function =      -0.704237207453
              le_mean =     -22.427925194447
             les_mean =     503.515577161332
             stat err =       0.000586258092
             autocorr =       1.364563018481
   target nu stat err =       0.000586258092
   target dn stat err =       0.005625568251
      target stat err =       0.004072329073
              std dev =       0.709752693193
             le_variance =       0.503748885495

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503690430136
                                         uncertainty =       0.005577019483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501870942
  error estimate for blocks of size 2^( 2) =       0.000527931654
  error estimate for blocks of size 2^( 3) =       0.000552891268
  error estimate for blocks of size 2^( 4) =       0.000572469261
  error estimate for blocks of size 2^( 5) =       0.000585257629
  error estimate for blocks of size 2^( 6) =       0.000592027063
  error estimate for blocks of size 2^( 7) =       0.000595278413

      target function =      -0.704237207453
              le_mean =     -22.427925194447
             les_mean =     503.515577161332
             stat err =       0.000586258092
             autocorr =       1.364563018481
   target nu stat err =       0.000586258092
   target dn stat err =       0.005625568251
      target stat err =       0.004072329073
              std dev =       0.709752693193
             le_variance =       0.503748885495


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704237207453        initial  <--
     1.0000e+34     1.0000e+35             0.0000e+00        -0.704237207453
     4.0000e+34     4.0000e+35             0.0000e+00        -0.704237207453
     1.6000e+35     1.6000e+36             0.0000e+00        -0.704237207453

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.9465
  </log>
  <optVariables href="FORM.s035.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1092e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s036 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s036 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=36  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2429e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.4672
    reference variance = 0.508177
====================================================
  Execution time = 7.6685e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s036
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9267e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5531e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492408265421
                                         uncertainty =       0.002653053212

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492408265421
                                         uncertainty =       0.002653053212

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496321919
  error estimate for blocks of size 2^( 2) =       0.000523242554
  error estimate for blocks of size 2^( 3) =       0.000548967531
  error estimate for blocks of size 2^( 4) =       0.000569105417
  error estimate for blocks of size 2^( 5) =       0.000581417766
  error estimate for blocks of size 2^( 6) =       0.000588011449
  error estimate for blocks of size 2^( 7) =       0.000592480093

      target function =      -0.712299749716
              le_mean =     -22.426241363612
             les_mean =     503.428972347045
             stat err =       0.000582753681
             autocorr =       1.378615448790
   target nu stat err =       0.000582753681
   target dn stat err =       0.002650628353
      target stat err =       0.002027233138
              std dev =       0.701905189030
             le_variance =       0.492670894387


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242624136361e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+35, overlap shift 1.0000e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712304588300       residual = 3.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712304588300       residual = 6.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712304588300       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712304588300       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.711914062500       residual = 5.30e+06           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.712304532879       residual = 2.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =       0.220426201820       residual = 4.40e+02           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+35 is 8.543595e-40

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+35, overlap shift 4.0000e+36 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712304588300       residual = 3.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712304588300       residual = 6.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712304588300       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712304588300       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.712890625000       residual = 5.30e+06           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.718750000000       residual = 4.25e+07           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+35 is 2.135899e-40

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+36, overlap shift 1.6000e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.712304588300       residual = 3.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.712304588300       residual = 6.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.712304588300       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.712304588300       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.710937500000       residual = 5.30e+06           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.500000000000       residual = 1.69e+08           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+36 is 5.339747e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.241162 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0222e+02
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -22.4593
    reference variance = 0.378257
====================================================
  Execution time = 7.6569e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s036
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9959e-01
  Total weights = 2.0000e+06
  Execution time = 6.4385e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499796641
  error estimate for blocks of size 2^( 2) =       0.000526165971
  error estimate for blocks of size 2^( 3) =       0.000551194215
  error estimate for blocks of size 2^( 4) =       0.000570744468
  error estimate for blocks of size 2^( 5) =       0.000581940812
  error estimate for blocks of size 2^( 6) =       0.000590089244
  error estimate for blocks of size 2^( 7) =       0.000591770014

      target function =      -0.707272212574
              le_mean =     -22.425655972091
             les_mean =     503.409638894312
             stat err =       0.000583636135
             autocorr =       1.363633550992
   target nu stat err =       0.000583636135
   target dn stat err =       0.005272515811
      target stat err =       0.003842006138
              std dev =       0.706819188710
             le_variance =       0.499593365529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499796641
  error estimate for blocks of size 2^( 2) =       0.000526165971
  error estimate for blocks of size 2^( 3) =       0.000551194215
  error estimate for blocks of size 2^( 4) =       0.000570744468
  error estimate for blocks of size 2^( 5) =       0.000581940812
  error estimate for blocks of size 2^( 6) =       0.000590089244
  error estimate for blocks of size 2^( 7) =       0.000591770014

      target function =      -0.707272212574
              le_mean =     -22.425655972091
             les_mean =     503.409638894312
             stat err =       0.000583636135
             autocorr =       1.363633550992
   target nu stat err =       0.000583636135
   target dn stat err =       0.005272515811
      target stat err =       0.003842006138
              std dev =       0.706819188710
             le_variance =       0.499593365529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499796641
  error estimate for blocks of size 2^( 2) =       0.000526165971
  error estimate for blocks of size 2^( 3) =       0.000551194215
  error estimate for blocks of size 2^( 4) =       0.000570744468
  error estimate for blocks of size 2^( 5) =       0.000581940812
  error estimate for blocks of size 2^( 6) =       0.000590089244
  error estimate for blocks of size 2^( 7) =       0.000591770014

      target function =      -0.707272212574
              le_mean =     -22.425655972091
             les_mean =     503.409638894312
             stat err =       0.000583636135
             autocorr =       1.363633550992
   target nu stat err =       0.000583636135
   target dn stat err =       0.005272515811
      target stat err =       0.003842006138
              std dev =       0.706819188710
             le_variance =       0.499593365529

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499524028930
                                         uncertainty =       0.005189695929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499796641
  error estimate for blocks of size 2^( 2) =       0.000526165971
  error estimate for blocks of size 2^( 3) =       0.000551194215
  error estimate for blocks of size 2^( 4) =       0.000570744468
  error estimate for blocks of size 2^( 5) =       0.000581940812
  error estimate for blocks of size 2^( 6) =       0.000590089244
  error estimate for blocks of size 2^( 7) =       0.000591770014

      target function =      -0.707272212574
              le_mean =     -22.425655972091
             les_mean =     503.409638894312
             stat err =       0.000583636135
             autocorr =       1.363633550992
   target nu stat err =       0.000583636135
   target dn stat err =       0.005272515811
      target stat err =       0.003842006138
              std dev =       0.706819188710
             le_variance =       0.499593365529


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707272212574        initial  <--
     1.0000e+35     1.0000e+36             8.5436e-40        -0.707272212574
     4.0000e+35     4.0000e+36             2.1359e-40        -0.707272212574
     1.6000e+36     1.6000e+37             5.3397e-41        -0.707272212574

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.8486
  </log>
  <optVariables href="FORM.s036.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1108e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s037 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s037 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=37  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2430e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.4536
    reference variance = 0.420719
====================================================
  Execution time = 7.5797e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s037
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0754e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5360e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507634777009
                                         uncertainty =       0.009612915758

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.507634777009
                                         uncertainty =       0.009612915758

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503757145
  error estimate for blocks of size 2^( 2) =       0.000530409772
  error estimate for blocks of size 2^( 3) =       0.000555863563
  error estimate for blocks of size 2^( 4) =       0.000576100102
  error estimate for blocks of size 2^( 5) =       0.000589313285
  error estimate for blocks of size 2^( 6) =       0.000597163003
  error estimate for blocks of size 2^( 7) =       0.000602934971

      target function =      -0.701542156076
              le_mean =     -22.425770709602
             les_mean =     503.422734189044
             stat err =       0.000591377840
             autocorr =       1.378121965869
   target nu stat err =       0.000591377840
   target dn stat err =       0.009969359926
      target stat err =       0.007088212981
              std dev =       0.712420187237
             le_variance =       0.507542523183


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242577070960e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+36, overlap shift 1.0000e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701611856284       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    3: stopping due to imaginary component in cost function
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+36 is 5.594712e-41

solving harmonic davidson linear method for identity shift 4.0000e+36, overlap shift 4.0000e+37 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701611856284       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    3: stopping due to imaginary component in cost function
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+36 is 1.398678e-41

solving harmonic davidson linear method for identity shift 1.6000e+37, overlap shift 1.6000e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.701611856284       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.701611856284       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    3: stopping due to imaginary component in cost function
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+37 is 3.496695e-42

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.242561 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0116e+02
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -22.4948
    reference variance = 0.777367
====================================================
  Execution time = 7.7422e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s037
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9478e-01
  Total weights = 2.0000e+06
  Execution time = 6.4239e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497383977
  error estimate for blocks of size 2^( 2) =       0.000524094111
  error estimate for blocks of size 2^( 3) =       0.000549117409
  error estimate for blocks of size 2^( 4) =       0.000569090080
  error estimate for blocks of size 2^( 5) =       0.000580643657
  error estimate for blocks of size 2^( 6) =       0.000587482601
  error estimate for blocks of size 2^( 7) =       0.000591146879

      target function =      -0.710754799709
              le_mean =     -22.426314300714
             les_mean =     503.434354507413
             stat err =       0.000582090804
             autocorr =       1.369613083597
   target nu stat err =       0.000582090804
   target dn stat err =       0.003697572957
      target stat err =       0.002755964936
              std dev =       0.703407165441
             le_variance =       0.494781640394

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497383977
  error estimate for blocks of size 2^( 2) =       0.000524094111
  error estimate for blocks of size 2^( 3) =       0.000549117409
  error estimate for blocks of size 2^( 4) =       0.000569090080
  error estimate for blocks of size 2^( 5) =       0.000580643657
  error estimate for blocks of size 2^( 6) =       0.000587482601
  error estimate for blocks of size 2^( 7) =       0.000591146879

      target function =      -0.710754799709
              le_mean =     -22.426314300714
             les_mean =     503.434354507413
             stat err =       0.000582090804
             autocorr =       1.369613083597
   target nu stat err =       0.000582090804
   target dn stat err =       0.003697572957
      target stat err =       0.002755964936
              std dev =       0.703407165441
             le_variance =       0.494781640394

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497383977
  error estimate for blocks of size 2^( 2) =       0.000524094111
  error estimate for blocks of size 2^( 3) =       0.000549117409
  error estimate for blocks of size 2^( 4) =       0.000569090080
  error estimate for blocks of size 2^( 5) =       0.000580643657
  error estimate for blocks of size 2^( 6) =       0.000587482601
  error estimate for blocks of size 2^( 7) =       0.000591146879

      target function =      -0.710754799709
              le_mean =     -22.426314300714
             les_mean =     503.434354507413
             stat err =       0.000582090804
             autocorr =       1.369613083597
   target nu stat err =       0.000582090804
   target dn stat err =       0.003697572957
      target stat err =       0.002755964936
              std dev =       0.703407165441
             le_variance =       0.494781640394

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494712905710
                                         uncertainty =       0.003588345075

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497383977
  error estimate for blocks of size 2^( 2) =       0.000524094111
  error estimate for blocks of size 2^( 3) =       0.000549117409
  error estimate for blocks of size 2^( 4) =       0.000569090080
  error estimate for blocks of size 2^( 5) =       0.000580643657
  error estimate for blocks of size 2^( 6) =       0.000587482601
  error estimate for blocks of size 2^( 7) =       0.000591146879

      target function =      -0.710754799709
              le_mean =     -22.426314300714
             les_mean =     503.434354507413
             stat err =       0.000582090804
             autocorr =       1.369613083597
   target nu stat err =       0.000582090804
   target dn stat err =       0.003697572957
      target stat err =       0.002755964936
              std dev =       0.703407165441
             le_variance =       0.494781640394


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710754799709        initial  <--
     1.0000e+36     1.0000e+37             5.5947e-41        -0.710754799709
     4.0000e+36     4.0000e+37             1.3987e-41        -0.710754799709
     1.6000e+37     1.6000e+38             3.4967e-42        -0.710754799709

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.7241
  </log>
  <optVariables href="FORM.s037.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1190e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s038 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s038 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=38  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.4435
    reference variance = 0.551687
====================================================
  Execution time = 7.5880e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s038
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9579e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5655e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495931254515
                                         uncertainty =       0.003305072631

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495931254515
                                         uncertainty =       0.003305072631

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497889979
  error estimate for blocks of size 2^( 2) =       0.000524285939
  error estimate for blocks of size 2^( 3) =       0.000549859594
  error estimate for blocks of size 2^( 4) =       0.000568876801
  error estimate for blocks of size 2^( 5) =       0.000581622479
  error estimate for blocks of size 2^( 6) =       0.000587903183
  error estimate for blocks of size 2^( 7) =       0.000587793064

      target function =      -0.710019192598
              le_mean =     -22.426474098390
             les_mean =     503.442529100049
             stat err =       0.000581548882
             autocorr =       1.364286806551
   target nu stat err =       0.000581548882
   target dn stat err =       0.003874187290
      target stat err =       0.002876299126
              std dev =       0.704122760728
             le_variance =       0.495788862175


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242647409839e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+37, overlap shift 1.0000e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+37, overlap shift 4.0000e+38 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+38, overlap shift 1.6000e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710029856508       residual = 3.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.243658 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0154e+02
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -22.449
    reference variance = 0.529904
====================================================
  Execution time = 7.5088e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s038
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0686e-01
  Total weights = 2.0000e+06
  Execution time = 6.4448e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503420457
  error estimate for blocks of size 2^( 2) =       0.000530234845
  error estimate for blocks of size 2^( 3) =       0.000555382566
  error estimate for blocks of size 2^( 4) =       0.000574896116
  error estimate for blocks of size 2^( 5) =       0.000587976290
  error estimate for blocks of size 2^( 6) =       0.000595258792
  error estimate for blocks of size 2^( 7) =       0.000600225326

      target function =      -0.702008046878
              le_mean =     -22.426310456365
             les_mean =     503.446264745744
             stat err =       0.000589589131
             autocorr =       1.371630764628
   target nu stat err =       0.000589589131
   target dn stat err =       0.009943579210
      target stat err =       0.007084738703
              std dev =       0.711944038471
             le_variance =       0.506864313915

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503420457
  error estimate for blocks of size 2^( 2) =       0.000530234845
  error estimate for blocks of size 2^( 3) =       0.000555382566
  error estimate for blocks of size 2^( 4) =       0.000574896116
  error estimate for blocks of size 2^( 5) =       0.000587976290
  error estimate for blocks of size 2^( 6) =       0.000595258792
  error estimate for blocks of size 2^( 7) =       0.000600225326

      target function =      -0.702008046878
              le_mean =     -22.426310456365
             les_mean =     503.446264745744
             stat err =       0.000589589131
             autocorr =       1.371630764628
   target nu stat err =       0.000589589131
   target dn stat err =       0.009943579210
      target stat err =       0.007084738703
              std dev =       0.711944038471
             le_variance =       0.506864313915

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503420457
  error estimate for blocks of size 2^( 2) =       0.000530234845
  error estimate for blocks of size 2^( 3) =       0.000555382566
  error estimate for blocks of size 2^( 4) =       0.000574896116
  error estimate for blocks of size 2^( 5) =       0.000587976290
  error estimate for blocks of size 2^( 6) =       0.000595258792
  error estimate for blocks of size 2^( 7) =       0.000600225326

      target function =      -0.702008046878
              le_mean =     -22.426310456365
             les_mean =     503.446264745744
             stat err =       0.000589589131
             autocorr =       1.371630764628
   target nu stat err =       0.000589589131
   target dn stat err =       0.009943579210
      target stat err =       0.007084738703
              std dev =       0.711944038471
             le_variance =       0.506864313915

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506843866975
                                         uncertainty =       0.009750917322

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503420457
  error estimate for blocks of size 2^( 2) =       0.000530234845
  error estimate for blocks of size 2^( 3) =       0.000555382566
  error estimate for blocks of size 2^( 4) =       0.000574896116
  error estimate for blocks of size 2^( 5) =       0.000587976290
  error estimate for blocks of size 2^( 6) =       0.000595258792
  error estimate for blocks of size 2^( 7) =       0.000600225326

      target function =      -0.702008046878
              le_mean =     -22.426310456365
             les_mean =     503.446264745744
             stat err =       0.000589589131
             autocorr =       1.371630764628
   target nu stat err =       0.000589589131
   target dn stat err =       0.009943579210
      target stat err =       0.007084738703
              std dev =       0.711944038471
             le_variance =       0.506864313915


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702008046878        initial  <--
     1.0000e+37     1.0000e+38             0.0000e+00        -0.702008046878
     4.0000e+37     4.0000e+38             0.0000e+00        -0.702008046878
     1.6000e+38     1.6000e+39             0.0000e+00        -0.702008046878

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.4521
  </log>
  <optVariables href="FORM.s038.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0900e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s039 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s039 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=39  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.4406
    reference variance = 0.339097
====================================================
  Execution time = 7.6692e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s039
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0206e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5133e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501973854133
                                         uncertainty =       0.007699683388

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501973854133
                                         uncertainty =       0.007699683388

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501029881
  error estimate for blocks of size 2^( 2) =       0.000527671962
  error estimate for blocks of size 2^( 3) =       0.000552725173
  error estimate for blocks of size 2^( 4) =       0.000571451805
  error estimate for blocks of size 2^( 5) =       0.000583477165
  error estimate for blocks of size 2^( 6) =       0.000590589231
  error estimate for blocks of size 2^( 7) =       0.000594723716

      target function =      -0.705460157965
              le_mean =     -22.426484896183
             les_mean =     503.449286431378
             stat err =       0.000585060479
             autocorr =       1.363560052933
   target nu stat err =       0.000585060479
   target dn stat err =       0.007606774248
      target stat err =       0.005487261759
              std dev =       0.708563253135
             le_variance =       0.502061883694


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242648489618e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+38, overlap shift 1.0000e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705502075567       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705502075567       residual = 6.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705502074212       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+38 is 5.727953e-43

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+38, overlap shift 4.0000e+39 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705502075567       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705502075567       residual = 6.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705502075567       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+38 is 1.431988e-43

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+39, overlap shift 1.6000e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705502075567       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705502075567       residual = 6.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705502077937       residual = 4.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+39 is 3.579971e-44

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.244999 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0183e+02
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -22.4
    reference variance = 0.368643
====================================================
  Execution time = 7.4900e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s039
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0310e-01
  Total weights = 2.0000e+06
  Execution time = 6.4380e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501548750
  error estimate for blocks of size 2^( 2) =       0.000527998225
  error estimate for blocks of size 2^( 3) =       0.000552938153
  error estimate for blocks of size 2^( 4) =       0.000572337818
  error estimate for blocks of size 2^( 5) =       0.000583929016
  error estimate for blocks of size 2^( 6) =       0.000590765480
  error estimate for blocks of size 2^( 7) =       0.000597352845

      target function =      -0.704729888362
              le_mean =     -22.426592229407
             les_mean =     503.455141070483
             stat err =       0.000586096290
             autocorr =       1.365562678996
   target nu stat err =       0.000586096290
   target dn stat err =       0.005882568776
      target stat err =       0.004252169040
              std dev =       0.709297044933
             le_variance =       0.503102297950

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501548750
  error estimate for blocks of size 2^( 2) =       0.000527998225
  error estimate for blocks of size 2^( 3) =       0.000552938153
  error estimate for blocks of size 2^( 4) =       0.000572337818
  error estimate for blocks of size 2^( 5) =       0.000583929016
  error estimate for blocks of size 2^( 6) =       0.000590765480
  error estimate for blocks of size 2^( 7) =       0.000597352845

      target function =      -0.704729888362
              le_mean =     -22.426592229407
             les_mean =     503.455141070483
             stat err =       0.000586096290
             autocorr =       1.365562679002
   target nu stat err =       0.000586096290
   target dn stat err =       0.005882568776
      target stat err =       0.004252169040
              std dev =       0.709297044933
             le_variance =       0.503102297950

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501548750
  error estimate for blocks of size 2^( 2) =       0.000527998225
  error estimate for blocks of size 2^( 3) =       0.000552938153
  error estimate for blocks of size 2^( 4) =       0.000572337818
  error estimate for blocks of size 2^( 5) =       0.000583929016
  error estimate for blocks of size 2^( 6) =       0.000590765480
  error estimate for blocks of size 2^( 7) =       0.000597352845

      target function =      -0.704729888362
              le_mean =     -22.426592229407
             les_mean =     503.455141070483
             stat err =       0.000586096290
             autocorr =       1.365562679002
   target nu stat err =       0.000586096290
   target dn stat err =       0.005882568776
      target stat err =       0.004252169040
              std dev =       0.709297044933
             le_variance =       0.503102297950

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503126242155
                                         uncertainty =       0.006187639336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501548750
  error estimate for blocks of size 2^( 2) =       0.000527998225
  error estimate for blocks of size 2^( 3) =       0.000552938153
  error estimate for blocks of size 2^( 4) =       0.000572337818
  error estimate for blocks of size 2^( 5) =       0.000583929016
  error estimate for blocks of size 2^( 6) =       0.000590765480
  error estimate for blocks of size 2^( 7) =       0.000597352845

      target function =      -0.704729888362
              le_mean =     -22.426592229407
             les_mean =     503.455141070483
             stat err =       0.000586096290
             autocorr =       1.365562679002
   target nu stat err =       0.000586096290
   target dn stat err =       0.005882568776
      target stat err =       0.004252169040
              std dev =       0.709297044933
             le_variance =       0.503102297950


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.704729888362        initial  <--
     1.0000e+38     1.0000e+39             5.7280e-43        -0.704729888362
     4.0000e+38     4.0000e+39             1.4320e-43        -0.704729888362
     1.6000e+39     1.6000e+40             3.5800e-44        -0.704729888362

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.1467
  </log>
  <optVariables href="FORM.s039.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0899e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s040 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s040 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=40  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.4009
    reference variance = 0.514184
====================================================
  Execution time = 7.5077e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s040
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9705e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4744e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496939540895
                                         uncertainty =       0.003528525316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496939540895
                                         uncertainty =       0.003528525316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498520891
  error estimate for blocks of size 2^( 2) =       0.000524949377
  error estimate for blocks of size 2^( 3) =       0.000550055232
  error estimate for blocks of size 2^( 4) =       0.000569367017
  error estimate for blocks of size 2^( 5) =       0.000583474670
  error estimate for blocks of size 2^( 6) =       0.000590520640
  error estimate for blocks of size 2^( 7) =       0.000595799206

      target function =      -0.709082250397
              le_mean =     -22.428099900844
             les_mean =     503.516711071728
             stat err =       0.000584790383
             autocorr =       1.376048428820
   target nu stat err =       0.000584790383
   target dn stat err =       0.003268336898
      target stat err =       0.002447703987
              std dev =       0.705015005517
             le_variance =       0.497046158004


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242809990084e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+39, overlap shift 1.0000e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+39, overlap shift 4.0000e+40 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+40, overlap shift 1.6000e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709089727153       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.246110 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 9.9829e+01
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -22.4476
    reference variance = 0.421531
====================================================
  Execution time = 7.6647e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s040
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9514e-01
  Total weights = 2.0000e+06
  Execution time = 6.7559e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564305
  error estimate for blocks of size 2^( 2) =       0.000524168224
  error estimate for blocks of size 2^( 3) =       0.000548618049
  error estimate for blocks of size 2^( 4) =       0.000568243714
  error estimate for blocks of size 2^( 5) =       0.000581826828
  error estimate for blocks of size 2^( 6) =       0.000588266879
  error estimate for blocks of size 2^( 7) =       0.000590384361

      target function =      -0.710490024119
              le_mean =     -22.426686336013
             les_mean =     503.451400240682
             stat err =       0.000582180445
             autocorr =       1.369042073398
   target nu stat err =       0.000582180445
   target dn stat err =       0.003367637641
      target stat err =       0.002521625343
              std dev =       0.703662187658
             le_variance =       0.495140474340

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564305
  error estimate for blocks of size 2^( 2) =       0.000524168224
  error estimate for blocks of size 2^( 3) =       0.000548618049
  error estimate for blocks of size 2^( 4) =       0.000568243714
  error estimate for blocks of size 2^( 5) =       0.000581826828
  error estimate for blocks of size 2^( 6) =       0.000588266879
  error estimate for blocks of size 2^( 7) =       0.000590384361

      target function =      -0.710490024119
              le_mean =     -22.426686336013
             les_mean =     503.451400240682
             stat err =       0.000582180445
             autocorr =       1.369042073394
   target nu stat err =       0.000582180445
   target dn stat err =       0.003367637641
      target stat err =       0.002521625343
              std dev =       0.703662187658
             le_variance =       0.495140474340

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564305
  error estimate for blocks of size 2^( 2) =       0.000524168224
  error estimate for blocks of size 2^( 3) =       0.000548618049
  error estimate for blocks of size 2^( 4) =       0.000568243714
  error estimate for blocks of size 2^( 5) =       0.000581826828
  error estimate for blocks of size 2^( 6) =       0.000588266879
  error estimate for blocks of size 2^( 7) =       0.000590384361

      target function =      -0.710490024119
              le_mean =     -22.426686336013
             les_mean =     503.451400240682
             stat err =       0.000582180445
             autocorr =       1.369042073394
   target nu stat err =       0.000582180445
   target dn stat err =       0.003367637641
      target stat err =       0.002521625343
              std dev =       0.703662187658
             le_variance =       0.495140474340

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495138449890
                                         uncertainty =       0.003423492709

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497564305
  error estimate for blocks of size 2^( 2) =       0.000524168224
  error estimate for blocks of size 2^( 3) =       0.000548618049
  error estimate for blocks of size 2^( 4) =       0.000568243714
  error estimate for blocks of size 2^( 5) =       0.000581826828
  error estimate for blocks of size 2^( 6) =       0.000588266879
  error estimate for blocks of size 2^( 7) =       0.000590384361

      target function =      -0.710490024119
              le_mean =     -22.426686336013
             les_mean =     503.451400240682
             stat err =       0.000582180445
             autocorr =       1.369042073394
   target nu stat err =       0.000582180445
   target dn stat err =       0.003367637641
      target stat err =       0.002521625343
              std dev =       0.703662187658
             le_variance =       0.495140474340


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710490024119        initial  <--
     1.0000e+39     1.0000e+40             0.0000e+00        -0.710490024119
     4.0000e+39     4.0000e+40             0.0000e+00        -0.710490024119
     1.6000e+40     1.6000e+41             0.0000e+00        -0.710490024119

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.2154
  </log>
  <optVariables href="FORM.s040.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0905e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s041 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s041 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=41  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.4525
    reference variance = 0.460012
====================================================
  Execution time = 7.5705e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s041
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9378e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5508e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493746528357
                                         uncertainty =       0.003668950155

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.493746528357
                                         uncertainty =       0.003668950155

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496881436
  error estimate for blocks of size 2^( 2) =       0.000523541040
  error estimate for blocks of size 2^( 3) =       0.000548350725
  error estimate for blocks of size 2^( 4) =       0.000568072702
  error estimate for blocks of size 2^( 5) =       0.000579893780
  error estimate for blocks of size 2^( 6) =       0.000587450037
  error estimate for blocks of size 2^( 7) =       0.000589990249

      target function =      -0.711458076082
              le_mean =     -22.428160109938
             les_mean =     503.516147993618
             stat err =       0.000581351692
             autocorr =       1.368901938469
   target nu stat err =       0.000581351692
   target dn stat err =       0.003481947759
      target stat err =       0.002614781403
              std dev =       0.702696466121
             le_variance =       0.493782323499


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242816010994e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+40, overlap shift 1.0000e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711466829488       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711466829488       residual = 7.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711466826499       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+40 is 4.435701e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+40, overlap shift 4.0000e+41 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711466829488       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711466829488       residual = 7.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711466833949       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+40 is 1.108925e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+41, overlap shift 1.6000e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711466829488       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711466829488       residual = 7.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.711466819048       residual = 2.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+41 is 2.772313e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.247477 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0122e+02
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -22.3513
    reference variance = 0.495632
====================================================
  Execution time = 7.5476e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s041
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9818e-01
  Total weights = 2.0000e+06
  Execution time = 6.4559e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499091339
  error estimate for blocks of size 2^( 2) =       0.000525863281
  error estimate for blocks of size 2^( 3) =       0.000551303989
  error estimate for blocks of size 2^( 4) =       0.000570347963
  error estimate for blocks of size 2^( 5) =       0.000582119259
  error estimate for blocks of size 2^( 6) =       0.000589304113
  error estimate for blocks of size 2^( 7) =       0.000590560958

      target function =      -0.708272175551
              le_mean =     -22.426562819342
             les_mean =     503.448903970645
             stat err =       0.000583083073
             autocorr =       1.364899896634
   target nu stat err =       0.000583083073
   target dn stat err =       0.005333467554
      target stat err =       0.003901240346
              std dev =       0.705821740826
             le_variance =       0.498184329823

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499091339
  error estimate for blocks of size 2^( 2) =       0.000525863281
  error estimate for blocks of size 2^( 3) =       0.000551303989
  error estimate for blocks of size 2^( 4) =       0.000570347963
  error estimate for blocks of size 2^( 5) =       0.000582119259
  error estimate for blocks of size 2^( 6) =       0.000589304113
  error estimate for blocks of size 2^( 7) =       0.000590560958

      target function =      -0.708272175551
              le_mean =     -22.426562819342
             les_mean =     503.448903970645
             stat err =       0.000583083073
             autocorr =       1.364899896634
   target nu stat err =       0.000583083073
   target dn stat err =       0.005333467554
      target stat err =       0.003901240346
              std dev =       0.705821740826
             le_variance =       0.498184329823

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499091339
  error estimate for blocks of size 2^( 2) =       0.000525863281
  error estimate for blocks of size 2^( 3) =       0.000551303989
  error estimate for blocks of size 2^( 4) =       0.000570347963
  error estimate for blocks of size 2^( 5) =       0.000582119259
  error estimate for blocks of size 2^( 6) =       0.000589304113
  error estimate for blocks of size 2^( 7) =       0.000590560958

      target function =      -0.708272175551
              le_mean =     -22.426562819342
             les_mean =     503.448903970645
             stat err =       0.000583083073
             autocorr =       1.364899896634
   target nu stat err =       0.000583083073
   target dn stat err =       0.005333467554
      target stat err =       0.003901240346
              std dev =       0.705821740826
             le_variance =       0.498184329823

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498167438887
                                         uncertainty =       0.004732514352

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499091339
  error estimate for blocks of size 2^( 2) =       0.000525863281
  error estimate for blocks of size 2^( 3) =       0.000551303989
  error estimate for blocks of size 2^( 4) =       0.000570347963
  error estimate for blocks of size 2^( 5) =       0.000582119259
  error estimate for blocks of size 2^( 6) =       0.000589304113
  error estimate for blocks of size 2^( 7) =       0.000590560958

      target function =      -0.708272175551
              le_mean =     -22.426562819342
             les_mean =     503.448903970645
             stat err =       0.000583083073
             autocorr =       1.364899896634
   target nu stat err =       0.000583083073
   target dn stat err =       0.005333467554
      target stat err =       0.003901240346
              std dev =       0.705821740826
             le_variance =       0.498184329823


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708272175551        initial  <--
     1.0000e+40     1.0000e+41             4.4357e-45        -0.708272175551
     4.0000e+40     4.0000e+41             1.1089e-45        -0.708272175551
     1.6000e+41     1.6000e+42             2.7723e-46        -0.708272175551

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.8471
  </log>
  <optVariables href="FORM.s041.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0908e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s042 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s042 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=42  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.3688
    reference variance = 0.395338
====================================================
  Execution time = 7.7513e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s042
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0119e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5601e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501306246837
                                         uncertainty =       0.006679285242

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501306246837
                                         uncertainty =       0.006679285242

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500595583
  error estimate for blocks of size 2^( 2) =       0.000527094131
  error estimate for blocks of size 2^( 3) =       0.000552078482
  error estimate for blocks of size 2^( 4) =       0.000571374218
  error estimate for blocks of size 2^( 5) =       0.000582963036
  error estimate for blocks of size 2^( 6) =       0.000590299434
  error estimate for blocks of size 2^( 7) =       0.000593584784

      target function =      -0.706086615585
              le_mean =     -22.426945049378
             les_mean =     503.469055873609
             stat err =       0.000584555368
             autocorr =       1.363569500565
   target nu stat err =       0.000584555368
   target dn stat err =       0.006549393242
      target stat err =       0.004745527762
              std dev =       0.707949063418
             le_variance =       0.501191876394


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242694504938e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+41, overlap shift 1.0000e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+41 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+41, overlap shift 4.0000e+42 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+41 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+42, overlap shift 1.6000e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.706117110828       residual = 5.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.251787 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0313e+02
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -22.4883
    reference variance = 0.429087
====================================================
  Execution time = 7.4682e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s042
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0179e-01
  Total weights = 2.0000e+06
  Execution time = 6.4335e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500895915
  error estimate for blocks of size 2^( 2) =       0.000527563420
  error estimate for blocks of size 2^( 3) =       0.000552536272
  error estimate for blocks of size 2^( 4) =       0.000572268349
  error estimate for blocks of size 2^( 5) =       0.000585662351
  error estimate for blocks of size 2^( 6) =       0.000594411771
  error estimate for blocks of size 2^( 7) =       0.000596512063

      target function =      -0.705626335354
              le_mean =     -22.427744727960
             les_mean =     503.505526766504
             stat err =       0.000587213633
             autocorr =       1.374349791540
   target nu stat err =       0.000587213633
   target dn stat err =       0.007481757096
      target stat err =       0.005410730509
              std dev =       0.708373796012
             le_variance =       0.501793434877

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500895915
  error estimate for blocks of size 2^( 2) =       0.000527563420
  error estimate for blocks of size 2^( 3) =       0.000552536272
  error estimate for blocks of size 2^( 4) =       0.000572268349
  error estimate for blocks of size 2^( 5) =       0.000585662351
  error estimate for blocks of size 2^( 6) =       0.000594411771
  error estimate for blocks of size 2^( 7) =       0.000596512063

      target function =      -0.705626335354
              le_mean =     -22.427744727960
             les_mean =     503.505526766504
             stat err =       0.000587213633
             autocorr =       1.374349791540
   target nu stat err =       0.000587213633
   target dn stat err =       0.007481757096
      target stat err =       0.005410730509
              std dev =       0.708373796012
             le_variance =       0.501793434877

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500895915
  error estimate for blocks of size 2^( 2) =       0.000527563420
  error estimate for blocks of size 2^( 3) =       0.000552536272
  error estimate for blocks of size 2^( 4) =       0.000572268349
  error estimate for blocks of size 2^( 5) =       0.000585662351
  error estimate for blocks of size 2^( 6) =       0.000594411771
  error estimate for blocks of size 2^( 7) =       0.000596512063

      target function =      -0.705626335354
              le_mean =     -22.427744727960
             les_mean =     503.505526766504
             stat err =       0.000587213633
             autocorr =       1.374349791540
   target nu stat err =       0.000587213633
   target dn stat err =       0.007481757096
      target stat err =       0.005410730509
              std dev =       0.708373796012
             le_variance =       0.501793434877

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501814385251
                                         uncertainty =       0.007649663013

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500895915
  error estimate for blocks of size 2^( 2) =       0.000527563420
  error estimate for blocks of size 2^( 3) =       0.000552536272
  error estimate for blocks of size 2^( 4) =       0.000572268349
  error estimate for blocks of size 2^( 5) =       0.000585662351
  error estimate for blocks of size 2^( 6) =       0.000594411771
  error estimate for blocks of size 2^( 7) =       0.000596512063

      target function =      -0.705626335354
              le_mean =     -22.427744727960
             les_mean =     503.505526766504
             stat err =       0.000587213633
             autocorr =       1.374349791540
   target nu stat err =       0.000587213633
   target dn stat err =       0.007481757096
      target stat err =       0.005410730509
              std dev =       0.708373796012
             le_variance =       0.501793434877


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705626335354        initial  <--
     1.0000e+41     1.0000e+42             0.0000e+00        -0.705626335354
     4.0000e+41     4.0000e+42             0.0000e+00        -0.705626335354
     1.6000e+42     1.6000e+43             0.0000e+00        -0.705626335354

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 106.9464
  </log>
  <optVariables href="FORM.s042.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1025e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s043 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s043 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=43  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.4446
    reference variance = 0.386266
====================================================
  Execution time = 7.6274e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s043
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.1284e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5128e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512902999469
                                         uncertainty =       0.007449921369

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512902999469
                                         uncertainty =       0.007449921369

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506380181
  error estimate for blocks of size 2^( 2) =       0.000532255164
  error estimate for blocks of size 2^( 3) =       0.000556940182
  error estimate for blocks of size 2^( 4) =       0.000576318423
  error estimate for blocks of size 2^( 5) =       0.000588237261
  error estimate for blocks of size 2^( 6) =       0.000593790571
  error estimate for blocks of size 2^( 7) =       0.000600164583

      target function =      -0.697793580565
              le_mean =     -22.427131498593
             les_mean =     503.489068773653
             stat err =       0.000589627709
             autocorr =       1.355821045800
   target nu stat err =       0.000589627709
   target dn stat err =       0.007660727970
      target stat err =       0.005412507784
              std dev =       0.716129719315
             le_variance =       0.512841774886


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242713149859e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+42, overlap shift 1.0000e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+42, overlap shift 4.0000e+43 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+43, overlap shift 1.6000e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.697834301383       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.256111 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0142e+02
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -22.4234
    reference variance = 0.307638
====================================================
  Execution time = 7.7467e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s043
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0150e-01
  Total weights = 2.0000e+06
  Execution time = 6.4540e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500748478
  error estimate for blocks of size 2^( 2) =       0.000527071535
  error estimate for blocks of size 2^( 3) =       0.000552255968
  error estimate for blocks of size 2^( 4) =       0.000571848758
  error estimate for blocks of size 2^( 5) =       0.000585247936
  error estimate for blocks of size 2^( 6) =       0.000590348202
  error estimate for blocks of size 2^( 7) =       0.000595377677

      target function =      -0.705829341482
              le_mean =     -22.428022492207
             les_mean =     503.517690736643
             stat err =       0.000585705643
             autocorr =       1.368105349378
   target nu stat err =       0.000585705643
   target dn stat err =       0.007740356435
      target stat err =       0.005600806852
              std dev =       0.708165288931
             le_variance =       0.501498076447

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500748478
  error estimate for blocks of size 2^( 2) =       0.000527071535
  error estimate for blocks of size 2^( 3) =       0.000552255968
  error estimate for blocks of size 2^( 4) =       0.000571848758
  error estimate for blocks of size 2^( 5) =       0.000585247936
  error estimate for blocks of size 2^( 6) =       0.000590348202
  error estimate for blocks of size 2^( 7) =       0.000595377677

      target function =      -0.705829341482
              le_mean =     -22.428022492207
             les_mean =     503.517690736643
             stat err =       0.000585705643
             autocorr =       1.368105349378
   target nu stat err =       0.000585705643
   target dn stat err =       0.007740356435
      target stat err =       0.005600806852
              std dev =       0.708165288931
             le_variance =       0.501498076447

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500748478
  error estimate for blocks of size 2^( 2) =       0.000527071535
  error estimate for blocks of size 2^( 3) =       0.000552255968
  error estimate for blocks of size 2^( 4) =       0.000571848758
  error estimate for blocks of size 2^( 5) =       0.000585247936
  error estimate for blocks of size 2^( 6) =       0.000590348202
  error estimate for blocks of size 2^( 7) =       0.000595377677

      target function =      -0.705829341482
              le_mean =     -22.428022492207
             les_mean =     503.517690736643
             stat err =       0.000585705643
             autocorr =       1.368105349378
   target nu stat err =       0.000585705643
   target dn stat err =       0.007740356435
      target stat err =       0.005600806852
              std dev =       0.708165288931
             le_variance =       0.501498076447

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501595176701
                                         uncertainty =       0.007911627300

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500748478
  error estimate for blocks of size 2^( 2) =       0.000527071535
  error estimate for blocks of size 2^( 3) =       0.000552255968
  error estimate for blocks of size 2^( 4) =       0.000571848758
  error estimate for blocks of size 2^( 5) =       0.000585247936
  error estimate for blocks of size 2^( 6) =       0.000590348202
  error estimate for blocks of size 2^( 7) =       0.000595377677

      target function =      -0.705829341482
              le_mean =     -22.428022492207
             les_mean =     503.517690736643
             stat err =       0.000585705643
             autocorr =       1.368105349378
   target nu stat err =       0.000585705643
   target dn stat err =       0.007740356435
      target stat err =       0.005600806852
              std dev =       0.708165288931
             le_variance =       0.501498076447


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705829341482        initial  <--
     1.0000e+42     1.0000e+43             0.0000e+00        -0.705829341482
     4.0000e+42     4.0000e+43             0.0000e+00        -0.705829341482
     1.6000e+43     1.6000e+44             0.0000e+00        -0.705829341482

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.7716
  </log>
  <optVariables href="FORM.s043.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1120e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s044 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s044 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=44  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.4531
    reference variance = 0.595025
====================================================
  Execution time = 7.6891e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s044
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9553e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5075e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495604034638
                                         uncertainty =       0.003280466121

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495604034638
                                         uncertainty =       0.003280466121

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497758733
  error estimate for blocks of size 2^( 2) =       0.000524251992
  error estimate for blocks of size 2^( 3) =       0.000549701798
  error estimate for blocks of size 2^( 4) =       0.000569492940
  error estimate for blocks of size 2^( 5) =       0.000582269371
  error estimate for blocks of size 2^( 6) =       0.000590317032
  error estimate for blocks of size 2^( 7) =       0.000593545715

      target function =      -0.710212047229
              le_mean =     -22.426470268342
             les_mean =     503.442095962205
             stat err =       0.000583906265
             autocorr =       1.376095238871
   target nu stat err =       0.000583906265
   target dn stat err =       0.003334639187
      target stat err =       0.002496049183
              std dev =       0.703937151424
             le_variance =       0.495527513155


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242647026834e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+43, overlap shift 1.0000e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710219801921       residual = 4.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710219801921       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710937500000       residual = 4.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -1.000000000000       residual = 8.39e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+43 is 5.233616e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+43, overlap shift 4.0000e+44 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710219801921       residual = 4.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710219801921       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.710937500000       residual = 4.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 3.60e+02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 4.71e+07           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+43 is 1.308404e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+44, overlap shift 1.6000e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.710219801921       residual = 4.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.710219801921       residual = 1.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.718750000000       residual = 3.30e-02           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+44 is 3.271010e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.257758 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0197e+02
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -22.4657
    reference variance = 0.557888
====================================================
  Execution time = 7.5111e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s044
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0631e-01
  Total weights = 2.0000e+06
  Execution time = 6.4337e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503145795
  error estimate for blocks of size 2^( 2) =       0.000529393854
  error estimate for blocks of size 2^( 3) =       0.000554635258
  error estimate for blocks of size 2^( 4) =       0.000573718573
  error estimate for blocks of size 2^( 5) =       0.000586483565
  error estimate for blocks of size 2^( 6) =       0.000594297498
  error estimate for blocks of size 2^( 7) =       0.000597376842

      target function =      -0.702437979839
              le_mean =     -22.426345606191
             les_mean =     503.447288376603
             stat err =       0.000587969120
             autocorr =       1.365593183703
   target nu stat err =       0.000587969120
   target dn stat err =       0.006866357012
      target stat err =       0.004916967857
              std dev =       0.711555606718
             le_variance =       0.506311381452

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503145795
  error estimate for blocks of size 2^( 2) =       0.000529393854
  error estimate for blocks of size 2^( 3) =       0.000554635258
  error estimate for blocks of size 2^( 4) =       0.000573718573
  error estimate for blocks of size 2^( 5) =       0.000586483565
  error estimate for blocks of size 2^( 6) =       0.000594297498
  error estimate for blocks of size 2^( 7) =       0.000597376842

      target function =      -0.702437979839
              le_mean =     -22.426345606191
             les_mean =     503.447288376603
             stat err =       0.000587969120
             autocorr =       1.365593183703
   target nu stat err =       0.000587969120
   target dn stat err =       0.006866357012
      target stat err =       0.004916967857
              std dev =       0.711555606718
             le_variance =       0.506311381452

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503145795
  error estimate for blocks of size 2^( 2) =       0.000529393854
  error estimate for blocks of size 2^( 3) =       0.000554635258
  error estimate for blocks of size 2^( 4) =       0.000573718573
  error estimate for blocks of size 2^( 5) =       0.000586483565
  error estimate for blocks of size 2^( 6) =       0.000594297498
  error estimate for blocks of size 2^( 7) =       0.000597376842

      target function =      -0.702437979839
              le_mean =     -22.426345606191
             les_mean =     503.447288376603
             stat err =       0.000587969120
             autocorr =       1.365593183703
   target nu stat err =       0.000587969120
   target dn stat err =       0.006866357012
      target stat err =       0.004916967857
              std dev =       0.711555606718
             le_variance =       0.506311381452

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.506307112680
                                         uncertainty =       0.006833276866

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000503145795
  error estimate for blocks of size 2^( 2) =       0.000529393854
  error estimate for blocks of size 2^( 3) =       0.000554635258
  error estimate for blocks of size 2^( 4) =       0.000573718573
  error estimate for blocks of size 2^( 5) =       0.000586483565
  error estimate for blocks of size 2^( 6) =       0.000594297498
  error estimate for blocks of size 2^( 7) =       0.000597376842

      target function =      -0.702437979839
              le_mean =     -22.426345606191
             les_mean =     503.447288376603
             stat err =       0.000587969120
             autocorr =       1.365593183703
   target nu stat err =       0.000587969120
   target dn stat err =       0.006866357012
      target stat err =       0.004916967857
              std dev =       0.711555606718
             le_variance =       0.506311381452


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702437979839        initial  <--
     1.0000e+43     1.0000e+44             5.2336e-48        -0.702437979839
     4.0000e+43     4.0000e+44             1.3084e-48        -0.702437979839
     1.6000e+44     1.6000e+45             3.2710e-49        -0.702437979839

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.3370
  </log>
  <optVariables href="FORM.s044.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1232e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s045 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s045 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=45  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.443
    reference variance = 0.484685
====================================================
  Execution time = 7.7331e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s045
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0184e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5371e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501830156758
                                         uncertainty =       0.006209219068

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501830156758
                                         uncertainty =       0.006209219068

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500921551
  error estimate for blocks of size 2^( 2) =       0.000527501664
  error estimate for blocks of size 2^( 3) =       0.000553106586
  error estimate for blocks of size 2^( 4) =       0.000572173274
  error estimate for blocks of size 2^( 5) =       0.000584442708
  error estimate for blocks of size 2^( 6) =       0.000591272643
  error estimate for blocks of size 2^( 7) =       0.000595735834

      target function =      -0.705639338223
              le_mean =     -22.426040360565
             les_mean =     503.429130803919
             stat err =       0.000585906114
             autocorr =       1.368096169089
   target nu stat err =       0.000585906114
   target dn stat err =       0.006191699545
      target stat err =       0.004479227551
              std dev =       0.708410051572
             le_variance =       0.501844801168


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242604036056e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+44, overlap shift 1.0000e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705666909634       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705666909634       residual = 8.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.707031250000       residual = 3.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.705666909634       residual = 4.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.705666909634       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 1.49e+05           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+44 is 1.160366e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+44, overlap shift 4.0000e+45 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705666909634       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705666909634       residual = 8.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703125000000       residual = 7.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+44 is 1.252876e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+45, overlap shift 1.6000e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705666909634       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705666909634       residual = 8.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705666909634       residual = 4.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.703125000000       residual = 5.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 9.00e+08           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+45 is 5.156156e-50

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.259605 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0271e+02
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -22.418
    reference variance = 0.736489
====================================================
  Execution time = 7.6832e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s045
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9835e-01
  Total weights = 2.0000e+06
  Execution time = 6.4626e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499175192
  error estimate for blocks of size 2^( 2) =       0.000525566289
  error estimate for blocks of size 2^( 3) =       0.000550828685
  error estimate for blocks of size 2^( 4) =       0.000570283049
  error estimate for blocks of size 2^( 5) =       0.000582070456
  error estimate for blocks of size 2^( 6) =       0.000589085067
  error estimate for blocks of size 2^( 7) =       0.000594285487

      target function =      -0.708129769929
              le_mean =     -22.427980261342
             les_mean =     503.512650098754
             stat err =       0.000583931015
             autocorr =       1.368412706437
   target nu stat err =       0.000583931015
   target dn stat err =       0.004633288899
      target stat err =       0.003407621008
              std dev =       0.705940326644
             le_variance =       0.498351744783

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499175192
  error estimate for blocks of size 2^( 2) =       0.000525566289
  error estimate for blocks of size 2^( 3) =       0.000550828685
  error estimate for blocks of size 2^( 4) =       0.000570283049
  error estimate for blocks of size 2^( 5) =       0.000582070456
  error estimate for blocks of size 2^( 6) =       0.000589085067
  error estimate for blocks of size 2^( 7) =       0.000594285487

      target function =      -0.708129769929
              le_mean =     -22.427980261342
             les_mean =     503.512650098754
             stat err =       0.000583931015
             autocorr =       1.368412706437
   target nu stat err =       0.000583931015
   target dn stat err =       0.004633288899
      target stat err =       0.003407621008
              std dev =       0.705940326644
             le_variance =       0.498351744783

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499175192
  error estimate for blocks of size 2^( 2) =       0.000525566289
  error estimate for blocks of size 2^( 3) =       0.000550828685
  error estimate for blocks of size 2^( 4) =       0.000570283049
  error estimate for blocks of size 2^( 5) =       0.000582070456
  error estimate for blocks of size 2^( 6) =       0.000589085067
  error estimate for blocks of size 2^( 7) =       0.000594285487

      target function =      -0.708129769929
              le_mean =     -22.427980261342
             les_mean =     503.512650098754
             stat err =       0.000583931015
             autocorr =       1.368412706437
   target nu stat err =       0.000583931015
   target dn stat err =       0.004633288899
      target stat err =       0.003407621008
              std dev =       0.705940326644
             le_variance =       0.498351744783

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498457154035
                                         uncertainty =       0.004612314744

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499175192
  error estimate for blocks of size 2^( 2) =       0.000525566289
  error estimate for blocks of size 2^( 3) =       0.000550828685
  error estimate for blocks of size 2^( 4) =       0.000570283049
  error estimate for blocks of size 2^( 5) =       0.000582070456
  error estimate for blocks of size 2^( 6) =       0.000589085067
  error estimate for blocks of size 2^( 7) =       0.000594285487

      target function =      -0.708129769929
              le_mean =     -22.427980261342
             les_mean =     503.512650098754
             stat err =       0.000583931015
             autocorr =       1.368412706437
   target nu stat err =       0.000583931015
   target dn stat err =       0.004633288899
      target stat err =       0.003407621008
              std dev =       0.705940326644
             le_variance =       0.498351744783


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708129769929        initial  <--
     1.0000e+44     1.0000e+45             1.1604e-48        -0.708129769929
     4.0000e+44     4.0000e+45             1.2529e-49        -0.708129769929
     1.6000e+45     1.6000e+46             5.1562e-50        -0.708129769929

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.1907
  </log>
  <optVariables href="FORM.s045.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1194e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s046 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s046 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=46  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2431e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.4775
    reference variance = 0.631209
====================================================
  Execution time = 7.5733e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s046
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9942e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4925e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499410566382
                                         uncertainty =       0.005733929686

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499410566382
                                         uncertainty =       0.005733929686

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499708374
  error estimate for blocks of size 2^( 2) =       0.000526480924
  error estimate for blocks of size 2^( 3) =       0.000552232645
  error estimate for blocks of size 2^( 4) =       0.000571925094
  error estimate for blocks of size 2^( 5) =       0.000584881265
  error estimate for blocks of size 2^( 6) =       0.000589096715
  error estimate for blocks of size 2^( 7) =       0.000595188489

      target function =      -0.707359360422
              le_mean =     -22.427533919868
             les_mean =     503.493694394382
             stat err =       0.000585272891
             autocorr =       1.371777146142
   target nu stat err =       0.000585272891
   target dn stat err =       0.005857463157
      target stat err =       0.004271401552
              std dev =       0.706694359149
             le_variance =       0.499416917252


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242753391987e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+45, overlap shift 1.0000e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+45, overlap shift 4.0000e+46 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+46, overlap shift 1.6000e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707383900850       residual = 2.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.260700 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0067e+02
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -22.5386
    reference variance = 1.0753
====================================================
  Execution time = 7.6978e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s046
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9498e-01
  Total weights = 2.0000e+06
  Execution time = 6.4190e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497485470
  error estimate for blocks of size 2^( 2) =       0.000523886638
  error estimate for blocks of size 2^( 3) =       0.000549451526
  error estimate for blocks of size 2^( 4) =       0.000569579392
  error estimate for blocks of size 2^( 5) =       0.000582324457
  error estimate for blocks of size 2^( 6) =       0.000589329655
  error estimate for blocks of size 2^( 7) =       0.000596435133

      target function =      -0.710608367486
              le_mean =     -22.426322429222
             les_mean =     503.434921037662
             stat err =       0.000584417159
             autocorr =       1.380019159523
   target nu stat err =       0.000584417159
   target dn stat err =       0.003585568163
      target stat err =       0.002675929829
              std dev =       0.703550698757
             le_variance =       0.494983585721

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497485470
  error estimate for blocks of size 2^( 2) =       0.000523886638
  error estimate for blocks of size 2^( 3) =       0.000549451526
  error estimate for blocks of size 2^( 4) =       0.000569579392
  error estimate for blocks of size 2^( 5) =       0.000582324457
  error estimate for blocks of size 2^( 6) =       0.000589329655
  error estimate for blocks of size 2^( 7) =       0.000596435133

      target function =      -0.710608367486
              le_mean =     -22.426322429222
             les_mean =     503.434921037662
             stat err =       0.000584417159
             autocorr =       1.380019159524
   target nu stat err =       0.000584417159
   target dn stat err =       0.003585568163
      target stat err =       0.002675929829
              std dev =       0.703550698757
             le_variance =       0.494983585721

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497485470
  error estimate for blocks of size 2^( 2) =       0.000523886638
  error estimate for blocks of size 2^( 3) =       0.000549451526
  error estimate for blocks of size 2^( 4) =       0.000569579392
  error estimate for blocks of size 2^( 5) =       0.000582324457
  error estimate for blocks of size 2^( 6) =       0.000589329655
  error estimate for blocks of size 2^( 7) =       0.000596435133

      target function =      -0.710608367486
              le_mean =     -22.426322429222
             les_mean =     503.434921037662
             stat err =       0.000584417159
             autocorr =       1.380019159524
   target nu stat err =       0.000584417159
   target dn stat err =       0.003585568163
      target stat err =       0.002675929829
              std dev =       0.703550698757
             le_variance =       0.494983585721

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494913487290
                                         uncertainty =       0.003707427835

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497485470
  error estimate for blocks of size 2^( 2) =       0.000523886638
  error estimate for blocks of size 2^( 3) =       0.000549451526
  error estimate for blocks of size 2^( 4) =       0.000569579392
  error estimate for blocks of size 2^( 5) =       0.000582324457
  error estimate for blocks of size 2^( 6) =       0.000589329655
  error estimate for blocks of size 2^( 7) =       0.000596435133

      target function =      -0.710608367486
              le_mean =     -22.426322429222
             les_mean =     503.434921037662
             stat err =       0.000584417159
             autocorr =       1.380019159524
   target nu stat err =       0.000584417159
   target dn stat err =       0.003585568163
      target stat err =       0.002675929829
              std dev =       0.703550698757
             le_variance =       0.494983585721


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710608367486        initial  <--
     1.0000e+45     1.0000e+46             0.0000e+00        -0.710608367486
     4.0000e+45     4.0000e+46             0.0000e+00        -0.710608367486
     1.6000e+46     1.6000e+47             0.0000e+00        -0.710608367486

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.1298
  </log>
  <optVariables href="FORM.s046.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0997e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s047 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s047 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=47  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.3858
    reference variance = 0.329637
====================================================
  Execution time = 7.6872e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s047
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0250e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5023e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502569234080
                                         uncertainty =       0.007373084871

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502569234080
                                         uncertainty =       0.007373084871

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501246279
  error estimate for blocks of size 2^( 2) =       0.000527447680
  error estimate for blocks of size 2^( 3) =       0.000552172284
  error estimate for blocks of size 2^( 4) =       0.000571698697
  error estimate for blocks of size 2^( 5) =       0.000583232365
  error estimate for blocks of size 2^( 6) =       0.000589525753
  error estimate for blocks of size 2^( 7) =       0.000593324205

      target function =      -0.705148535802
              le_mean =     -22.426647178980
             les_mean =     503.456999103841
             stat err =       0.000584445255
             autocorr =       1.359519216525
   target nu stat err =       0.000584445255
   target dn stat err =       0.007419093589
      target stat err =       0.005349946579
              std dev =       0.708869285998
             le_variance =       0.502495664631


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242664717898e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+46, overlap shift 1.0000e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705187616600       residual = 4.75e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705187616600       residual = 7.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705187616600       residual = 3.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 1.11e+03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+46 is 6.727119e-51

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+46, overlap shift 4.0000e+47 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705187616600       residual = 4.75e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705187616600       residual = 7.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705187616600       residual = 3.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 1.11e+03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+46 is 1.681780e-51

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+47, overlap shift 1.6000e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705187616600       residual = 4.75e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705187616600       residual = 7.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.705187616600       residual = 3.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 1.11e+03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+47 is 4.204449e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.262301 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0190e+02
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -22.418
    reference variance = 0.341809
====================================================
  Execution time = 7.6932e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s047
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0107e-01
  Total weights = 2.0000e+06
  Execution time = 6.4285e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500535262
  error estimate for blocks of size 2^( 2) =       0.000526593871
  error estimate for blocks of size 2^( 3) =       0.000552278971
  error estimate for blocks of size 2^( 4) =       0.000571680974
  error estimate for blocks of size 2^( 5) =       0.000585558717
  error estimate for blocks of size 2^( 6) =       0.000593697367
  error estimate for blocks of size 2^( 7) =       0.000598264478

      target function =      -0.706189402570
              le_mean =     -22.426412349219
             les_mean =     503.445041703297
             stat err =       0.000587300384
             autocorr =       1.376737725659
   target nu stat err =       0.000587300384
   target dn stat err =       0.005968126716
      target stat err =       0.004329574677
              std dev =       0.707863755690
             le_variance =       0.501071096620

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500535262
  error estimate for blocks of size 2^( 2) =       0.000526593871
  error estimate for blocks of size 2^( 3) =       0.000552278971
  error estimate for blocks of size 2^( 4) =       0.000571680974
  error estimate for blocks of size 2^( 5) =       0.000585558717
  error estimate for blocks of size 2^( 6) =       0.000593697367
  error estimate for blocks of size 2^( 7) =       0.000598264478

      target function =      -0.706189402570
              le_mean =     -22.426412349219
             les_mean =     503.445041703297
             stat err =       0.000587300384
             autocorr =       1.376737725658
   target nu stat err =       0.000587300384
   target dn stat err =       0.005968126716
      target stat err =       0.004329574677
              std dev =       0.707863755690
             le_variance =       0.501071096620

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500535262
  error estimate for blocks of size 2^( 2) =       0.000526593871
  error estimate for blocks of size 2^( 3) =       0.000552278971
  error estimate for blocks of size 2^( 4) =       0.000571680974
  error estimate for blocks of size 2^( 5) =       0.000585558717
  error estimate for blocks of size 2^( 6) =       0.000593697367
  error estimate for blocks of size 2^( 7) =       0.000598264478

      target function =      -0.706189402570
              le_mean =     -22.426412349219
             les_mean =     503.445041703297
             stat err =       0.000587300384
             autocorr =       1.376737725658
   target nu stat err =       0.000587300384
   target dn stat err =       0.005968126716
      target stat err =       0.004329574677
              std dev =       0.707863755690
             le_variance =       0.501071096620

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501095264518
                                         uncertainty =       0.005683135942

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500535262
  error estimate for blocks of size 2^( 2) =       0.000526593871
  error estimate for blocks of size 2^( 3) =       0.000552278971
  error estimate for blocks of size 2^( 4) =       0.000571680974
  error estimate for blocks of size 2^( 5) =       0.000585558717
  error estimate for blocks of size 2^( 6) =       0.000593697367
  error estimate for blocks of size 2^( 7) =       0.000598264478

      target function =      -0.706189402570
              le_mean =     -22.426412349219
             les_mean =     503.445041703297
             stat err =       0.000587300384
             autocorr =       1.376737725658
   target nu stat err =       0.000587300384
   target dn stat err =       0.005968126716
      target stat err =       0.004329574677
              std dev =       0.707863755690
             le_variance =       0.501071096620


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.706189402570        initial  <--
     1.0000e+46     1.0000e+47             6.7271e-51        -0.706189402570
     4.0000e+46     4.0000e+47             1.6818e-51        -0.706189402570
     1.6000e+47     1.6000e+48             4.2044e-52        -0.706189402570

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 112.8118
  </log>
  <optVariables href="FORM.s047.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1472e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s048 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s048 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=48  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.5007
    reference variance = 0.309584
====================================================
  Execution time = 7.5717e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s048
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9428e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5227e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494235548103
                                         uncertainty =       0.002714043105

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.494235548103
                                         uncertainty =       0.002714043105

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497132350
  error estimate for blocks of size 2^( 2) =       0.000523902603
  error estimate for blocks of size 2^( 3) =       0.000549502763
  error estimate for blocks of size 2^( 4) =       0.000568226982
  error estimate for blocks of size 2^( 5) =       0.000581575000
  error estimate for blocks of size 2^( 6) =       0.000586175378
  error estimate for blocks of size 2^( 7) =       0.000591131605

      target function =      -0.711102646044
              le_mean =     -22.427731173271
             les_mean =     503.497406480496
             stat err =       0.000581777241
             autocorr =       1.369523237825
   target nu stat err =       0.000581777241
   target dn stat err =       0.003014297834
      target stat err =       0.002279757084
              std dev =       0.703051311863
             le_variance =       0.494281147112


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242773117327e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+47, overlap shift 1.0000e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+47, overlap shift 4.0000e+48 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+48, overlap shift 1.6000e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.711108937981       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.263384 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0095e+02
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -22.4411
    reference variance = 0.404459
====================================================
  Execution time = 7.5524e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s048
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.1259e-01
  Total weights = 2.0000e+06
  Execution time = 6.4455e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506257662
  error estimate for blocks of size 2^( 2) =       0.000532491314
  error estimate for blocks of size 2^( 3) =       0.000557793565
  error estimate for blocks of size 2^( 4) =       0.000577126717
  error estimate for blocks of size 2^( 5) =       0.000588589725
  error estimate for blocks of size 2^( 6) =       0.000595480573
  error estimate for blocks of size 2^( 7) =       0.000600167824

      target function =      -0.697856571929
              le_mean =     -22.427526444993
             les_mean =     503.506535825163
             stat err =       0.000590341210
             autocorr =       1.359762261007
   target nu stat err =       0.000590341210
   target dn stat err =       0.014009779824
      target stat err =       0.009865321065
              std dev =       0.715956451602
             le_variance =       0.512593640590

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506257662
  error estimate for blocks of size 2^( 2) =       0.000532491314
  error estimate for blocks of size 2^( 3) =       0.000557793565
  error estimate for blocks of size 2^( 4) =       0.000577126717
  error estimate for blocks of size 2^( 5) =       0.000588589725
  error estimate for blocks of size 2^( 6) =       0.000595480573
  error estimate for blocks of size 2^( 7) =       0.000600167824

      target function =      -0.697856571929
              le_mean =     -22.427526444993
             les_mean =     503.506535825163
             stat err =       0.000590341210
             autocorr =       1.359762261006
   target nu stat err =       0.000590341210
   target dn stat err =       0.014009779824
      target stat err =       0.009865321065
              std dev =       0.715956451602
             le_variance =       0.512593640590

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506257662
  error estimate for blocks of size 2^( 2) =       0.000532491314
  error estimate for blocks of size 2^( 3) =       0.000557793565
  error estimate for blocks of size 2^( 4) =       0.000577126717
  error estimate for blocks of size 2^( 5) =       0.000588589725
  error estimate for blocks of size 2^( 6) =       0.000595480573
  error estimate for blocks of size 2^( 7) =       0.000600167824

      target function =      -0.697856571929
              le_mean =     -22.427526444993
             les_mean =     503.506535825163
             stat err =       0.000590341210
             autocorr =       1.359762261006
   target nu stat err =       0.000590341210
   target dn stat err =       0.014009779824
      target stat err =       0.009865321065
              std dev =       0.715956451602
             le_variance =       0.512593640590

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512753398144
                                         uncertainty =       0.013621299136

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506257662
  error estimate for blocks of size 2^( 2) =       0.000532491314
  error estimate for blocks of size 2^( 3) =       0.000557793565
  error estimate for blocks of size 2^( 4) =       0.000577126717
  error estimate for blocks of size 2^( 5) =       0.000588589725
  error estimate for blocks of size 2^( 6) =       0.000595480573
  error estimate for blocks of size 2^( 7) =       0.000600167824

      target function =      -0.697856571929
              le_mean =     -22.427526444993
             les_mean =     503.506535825163
             stat err =       0.000590341210
             autocorr =       1.359762261006
   target nu stat err =       0.000590341210
   target dn stat err =       0.014009779824
      target stat err =       0.009865321065
              std dev =       0.715956451602
             le_variance =       0.512593640590


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.697856571929        initial  <--
     1.0000e+47     1.0000e+48             0.0000e+00        -0.697856571929
     4.0000e+47     4.0000e+48             0.0000e+00        -0.697856571929
     1.6000e+48     1.6000e+49             0.0000e+00        -0.697856571929

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.7863
  </log>
  <optVariables href="FORM.s048.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0874e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s049 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s049 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=49  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.3812
    reference variance = 0.345063
====================================================
  Execution time = 7.6685e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s049
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9717e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5417e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497182296854
                                         uncertainty =       0.004764711425

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497182296854
                                         uncertainty =       0.004764711425

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498581959
  error estimate for blocks of size 2^( 2) =       0.000525148798
  error estimate for blocks of size 2^( 3) =       0.000550705903
  error estimate for blocks of size 2^( 4) =       0.000570444006
  error estimate for blocks of size 2^( 5) =       0.000582595768
  error estimate for blocks of size 2^( 6) =       0.000591861047
  error estimate for blocks of size 2^( 7) =       0.000593166228

      target function =      -0.709012898867
              le_mean =     -22.426536054152
             les_mean =     503.446687079787
             stat err =       0.000584516762
             autocorr =       1.374424284699
   target nu stat err =       0.000584516762
   target dn stat err =       0.004644277352
      target stat err =       0.003416828703
              std dev =       0.705101368741
             le_variance =       0.497167940201


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242653605415e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+48, overlap shift 1.0000e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709028527457       residual = 2.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709028527457       residual = 6.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+48 is 3.929750e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+48, overlap shift 4.0000e+49 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709028527457       residual = 2.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709028527457       residual = 6.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+48 is 9.824376e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+49, overlap shift 1.6000e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709028527457       residual = 2.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709028527457       residual = 6.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.709028527457       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 1.67e+03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+49 is 5.791140e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.264612 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0211e+02
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -22.5033
    reference variance = 0.41148
====================================================
  Execution time = 7.5014e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s049
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.1275e-01
  Total weights = 2.0000e+06
  Execution time = 6.4325e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506336832
  error estimate for blocks of size 2^( 2) =       0.000532412700
  error estimate for blocks of size 2^( 3) =       0.000557570134
  error estimate for blocks of size 2^( 4) =       0.000576914571
  error estimate for blocks of size 2^( 5) =       0.000589447007
  error estimate for blocks of size 2^( 6) =       0.000597719403
  error estimate for blocks of size 2^( 7) =       0.000602545035

      target function =      -0.697845024248
              le_mean =     -22.425741942986
             les_mean =     503.426655411693
             stat err =       0.000591656504
             autocorr =       1.365401093714
   target nu stat err =       0.000591656504
   target dn stat err =       0.011559814110
      target stat err =       0.008125430318
              std dev =       0.716068414797
             le_variance =       0.512753974670

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506336832
  error estimate for blocks of size 2^( 2) =       0.000532412700
  error estimate for blocks of size 2^( 3) =       0.000557570134
  error estimate for blocks of size 2^( 4) =       0.000576914571
  error estimate for blocks of size 2^( 5) =       0.000589447007
  error estimate for blocks of size 2^( 6) =       0.000597719403
  error estimate for blocks of size 2^( 7) =       0.000602545035

      target function =      -0.697845024248
              le_mean =     -22.425741942986
             les_mean =     503.426655411693
             stat err =       0.000591656504
             autocorr =       1.365401093714
   target nu stat err =       0.000591656504
   target dn stat err =       0.011559814110
      target stat err =       0.008125430318
              std dev =       0.716068414797
             le_variance =       0.512753974670

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506336832
  error estimate for blocks of size 2^( 2) =       0.000532412700
  error estimate for blocks of size 2^( 3) =       0.000557570134
  error estimate for blocks of size 2^( 4) =       0.000576914571
  error estimate for blocks of size 2^( 5) =       0.000589447007
  error estimate for blocks of size 2^( 6) =       0.000597719403
  error estimate for blocks of size 2^( 7) =       0.000602545035

      target function =      -0.697845024248
              le_mean =     -22.425741942986
             les_mean =     503.426655411693
             stat err =       0.000591656504
             autocorr =       1.365401093714
   target nu stat err =       0.000591656504
   target dn stat err =       0.011559814110
      target stat err =       0.008125430318
              std dev =       0.716068414797
             le_variance =       0.512753974670

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.512849408806
                                         uncertainty =       0.011445497603

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000506336832
  error estimate for blocks of size 2^( 2) =       0.000532412700
  error estimate for blocks of size 2^( 3) =       0.000557570134
  error estimate for blocks of size 2^( 4) =       0.000576914571
  error estimate for blocks of size 2^( 5) =       0.000589447007
  error estimate for blocks of size 2^( 6) =       0.000597719403
  error estimate for blocks of size 2^( 7) =       0.000602545035

      target function =      -0.697845024248
              le_mean =     -22.425741942986
             les_mean =     503.426655411693
             stat err =       0.000591656504
             autocorr =       1.365401093714
   target nu stat err =       0.000591656504
   target dn stat err =       0.011559814110
      target stat err =       0.008125430318
              std dev =       0.716068414797
             le_variance =       0.512753974670


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.697845024248        initial  <--
     1.0000e+48     1.0000e+49             3.9298e-53        -0.697845024248
     4.0000e+48     4.0000e+49             9.8244e-54        -0.697845024248
     1.6000e+49     1.6000e+50             5.7911e-54        -0.697845024248

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.2162
  </log>
  <optVariables href="FORM.s049.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0933e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s050 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s050 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=50  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.3956
    reference variance = 0.294126
====================================================
  Execution time = 7.5798e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s050
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0442e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4934e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504462328503
                                         uncertainty =       0.004844047715

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504462328503
                                         uncertainty =       0.004844047715

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502205307
  error estimate for blocks of size 2^( 2) =       0.000528735734
  error estimate for blocks of size 2^( 3) =       0.000553499165
  error estimate for blocks of size 2^( 4) =       0.000573146213
  error estimate for blocks of size 2^( 5) =       0.000584600755
  error estimate for blocks of size 2^( 6) =       0.000590237173
  error estimate for blocks of size 2^( 7) =       0.000591908939

      target function =      -0.703795082453
              le_mean =     -22.426579385063
             les_mean =     503.455883003229
             stat err =       0.000584973270
             autocorr =       1.356780046373
   target nu stat err =       0.000584973270
   target dn stat err =       0.004982786651
      target stat err =       0.003605891785
              std dev =       0.710225556358
             le_variance =       0.504420340904


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242657938506e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+49, overlap shift 1.0000e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703812517364       residual = 3.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703812517364       residual = 7.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703125000000       residual = 4.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+49 is 5.377646e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+49, overlap shift 4.0000e+50 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703812517364       residual = 3.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703812517364       residual = 7.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.54e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 3.04e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+49 is 1.344411e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+50, overlap shift 1.6000e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.703812517364       residual = 3.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.703812517364       residual = 7.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.703125000000       residual = 4.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+50 is 3.361029e-55

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.266008 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0076e+02
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -22.4618
    reference variance = 0.784557
====================================================
  Execution time = 7.8843e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s050
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9782e-01
  Total weights = 2.0000e+06
  Execution time = 6.5005e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498906649
  error estimate for blocks of size 2^( 2) =       0.000525389279
  error estimate for blocks of size 2^( 3) =       0.000550378145
  error estimate for blocks of size 2^( 4) =       0.000569733094
  error estimate for blocks of size 2^( 5) =       0.000583174814
  error estimate for blocks of size 2^( 6) =       0.000591915525
  error estimate for blocks of size 2^( 7) =       0.000595556928

      target function =      -0.708541954196
              le_mean =     -22.426749142948
             les_mean =     503.456892559920
             stat err =       0.000585095090
             autocorr =       1.375353459837
   target nu stat err =       0.000585095090
   target dn stat err =       0.004447762860
      target stat err =       0.003273588751
              std dev =       0.705560548876
             le_variance =       0.497815688130

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498906649
  error estimate for blocks of size 2^( 2) =       0.000525389279
  error estimate for blocks of size 2^( 3) =       0.000550378145
  error estimate for blocks of size 2^( 4) =       0.000569733094
  error estimate for blocks of size 2^( 5) =       0.000583174814
  error estimate for blocks of size 2^( 6) =       0.000591915525
  error estimate for blocks of size 2^( 7) =       0.000595556928

      target function =      -0.708541954196
              le_mean =     -22.426749142948
             les_mean =     503.456892559920
             stat err =       0.000585095090
             autocorr =       1.375353459835
   target nu stat err =       0.000585095090
   target dn stat err =       0.004447762860
      target stat err =       0.003273588751
              std dev =       0.705560548876
             le_variance =       0.497815688130

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498906649
  error estimate for blocks of size 2^( 2) =       0.000525389279
  error estimate for blocks of size 2^( 3) =       0.000550378145
  error estimate for blocks of size 2^( 4) =       0.000569733094
  error estimate for blocks of size 2^( 5) =       0.000583174814
  error estimate for blocks of size 2^( 6) =       0.000591915525
  error estimate for blocks of size 2^( 7) =       0.000595556928

      target function =      -0.708541954196
              le_mean =     -22.426749142948
             les_mean =     503.456892559920
             stat err =       0.000585095090
             autocorr =       1.375353459835
   target nu stat err =       0.000585095090
   target dn stat err =       0.004447762860
      target stat err =       0.003273588751
              std dev =       0.705560548876
             le_variance =       0.497815688130

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497812770096
                                         uncertainty =       0.004555833839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498906649
  error estimate for blocks of size 2^( 2) =       0.000525389279
  error estimate for blocks of size 2^( 3) =       0.000550378145
  error estimate for blocks of size 2^( 4) =       0.000569733094
  error estimate for blocks of size 2^( 5) =       0.000583174814
  error estimate for blocks of size 2^( 6) =       0.000591915525
  error estimate for blocks of size 2^( 7) =       0.000595556928

      target function =      -0.708541954196
              le_mean =     -22.426749142948
             les_mean =     503.456892559920
             stat err =       0.000585095090
             autocorr =       1.375353459835
   target nu stat err =       0.000585095090
   target dn stat err =       0.004447762860
      target stat err =       0.003273588751
              std dev =       0.705560548876
             le_variance =       0.497815688130


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708541954196        initial  <--
     1.0000e+49     1.0000e+50             5.3776e-54        -0.708541954196
     4.0000e+49     4.0000e+50             1.3444e-54        -0.708541954196
     1.6000e+50     1.6000e+51             3.3610e-55        -0.708541954196

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 111.4220
  </log>
  <optVariables href="FORM.s050.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1219e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s051 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s051 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=51  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.4029
    reference variance = 0.534828
====================================================
  Execution time = 7.5631e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s051
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.0351e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5379e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503300232509
                                         uncertainty =       0.003875275529

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.503300232509
                                         uncertainty =       0.003875275529

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501751064
  error estimate for blocks of size 2^( 2) =       0.000528834436
  error estimate for blocks of size 2^( 3) =       0.000554571819
  error estimate for blocks of size 2^( 4) =       0.000575081374
  error estimate for blocks of size 2^( 5) =       0.000587083074
  error estimate for blocks of size 2^( 6) =       0.000591939630
  error estimate for blocks of size 2^( 7) =       0.000592056908

      target function =      -0.704435014612
              le_mean =     -22.427348046263
             les_mean =     503.489448396431
             stat err =       0.000586540247
             autocorr =       1.366529562107
   target nu stat err =       0.000586540247
   target dn stat err =       0.004032657051
      target stat err =       0.002947844076
              std dev =       0.709583159305
             le_variance =       0.503508259970


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242734804626e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+50, overlap shift 1.0000e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+50, overlap shift 4.0000e+51 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+51, overlap shift 1.6000e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.704446352770       residual = 5.84e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.267089 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0102e+02
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -22.4406
    reference variance = 0.458909
====================================================
  Execution time = 7.5200e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s051
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9877e-01
  Total weights = 2.0000e+06
  Execution time = 6.4230e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499383838
  error estimate for blocks of size 2^( 2) =       0.000526040359
  error estimate for blocks of size 2^( 3) =       0.000551786390
  error estimate for blocks of size 2^( 4) =       0.000571025972
  error estimate for blocks of size 2^( 5) =       0.000583688118
  error estimate for blocks of size 2^( 6) =       0.000590414404
  error estimate for blocks of size 2^( 7) =       0.000594448311

      target function =      -0.707827217356
              le_mean =     -22.427222875948
             les_mean =     503.479094114011
             stat err =       0.000584894201
             autocorr =       1.371783785724
   target nu stat err =       0.000584894201
   target dn stat err =       0.006585405572
      target stat err =       0.004796549914
              std dev =       0.706235396989
             le_variance =       0.498768435960

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499383838
  error estimate for blocks of size 2^( 2) =       0.000526040359
  error estimate for blocks of size 2^( 3) =       0.000551786390
  error estimate for blocks of size 2^( 4) =       0.000571025972
  error estimate for blocks of size 2^( 5) =       0.000583688118
  error estimate for blocks of size 2^( 6) =       0.000590414404
  error estimate for blocks of size 2^( 7) =       0.000594448311

      target function =      -0.707827217356
              le_mean =     -22.427222875948
             les_mean =     503.479094114011
             stat err =       0.000584894201
             autocorr =       1.371783785725
   target nu stat err =       0.000584894201
   target dn stat err =       0.006585405572
      target stat err =       0.004796549914
              std dev =       0.706235396989
             le_variance =       0.498768435960

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499383838
  error estimate for blocks of size 2^( 2) =       0.000526040359
  error estimate for blocks of size 2^( 3) =       0.000551786390
  error estimate for blocks of size 2^( 4) =       0.000571025972
  error estimate for blocks of size 2^( 5) =       0.000583688118
  error estimate for blocks of size 2^( 6) =       0.000590414404
  error estimate for blocks of size 2^( 7) =       0.000594448311

      target function =      -0.707827217356
              le_mean =     -22.427222875948
             les_mean =     503.479094114011
             stat err =       0.000584894201
             autocorr =       1.371783785725
   target nu stat err =       0.000584894201
   target dn stat err =       0.006585405572
      target stat err =       0.004796549914
              std dev =       0.706235396989
             le_variance =       0.498768435960

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498804059942
                                         uncertainty =       0.006108312306

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499383838
  error estimate for blocks of size 2^( 2) =       0.000526040359
  error estimate for blocks of size 2^( 3) =       0.000551786390
  error estimate for blocks of size 2^( 4) =       0.000571025972
  error estimate for blocks of size 2^( 5) =       0.000583688118
  error estimate for blocks of size 2^( 6) =       0.000590414404
  error estimate for blocks of size 2^( 7) =       0.000594448311

      target function =      -0.707827217356
              le_mean =     -22.427222875948
             les_mean =     503.479094114011
             stat err =       0.000584894201
             autocorr =       1.371783785725
   target nu stat err =       0.000584894201
   target dn stat err =       0.006585405572
      target stat err =       0.004796549914
              std dev =       0.706235396989
             le_variance =       0.498768435960


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.707827217356        initial  <--
     1.0000e+50     1.0000e+51             0.0000e+00        -0.707827217356
     4.0000e+50     4.0000e+51             0.0000e+00        -0.707827217356
     1.6000e+51     1.6000e+52             0.0000e+00        -0.707827217356

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.4094
  </log>
  <optVariables href="FORM.s051.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0843e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s052 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s052 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=52  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.4382
    reference variance = 0.396179
====================================================
  Execution time = 7.8697e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s052
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9809e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.4967e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498163706846
                                         uncertainty =       0.007128656917

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498163706846
                                         uncertainty =       0.007128656917

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499043626
  error estimate for blocks of size 2^( 2) =       0.000525575967
  error estimate for blocks of size 2^( 3) =       0.000551258676
  error estimate for blocks of size 2^( 4) =       0.000571155470
  error estimate for blocks of size 2^( 5) =       0.000584123248
  error estimate for blocks of size 2^( 6) =       0.000591952301
  error estimate for blocks of size 2^( 7) =       0.000592697895

      target function =      -0.708310347131
              le_mean =     -22.427876887580
             les_mean =     503.507750517311
             stat err =       0.000584982228
             autocorr =       1.374068294475
   target nu stat err =       0.000584982228
   target dn stat err =       0.006125110545
      target stat err =       0.004476932718
              std dev =       0.705754264551
             le_variance =       0.498089081932


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242787688758e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+51, overlap shift 1.0000e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708337518538       residual = 6.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708337518538       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 2.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+51 is 5.873661e-56

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+51, overlap shift 4.0000e+52 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708337518538       residual = 6.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708337518538       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+51 is 1.468415e-56

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+52, overlap shift 1.6000e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708337518538       residual = 6.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708337518538       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 2.55e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+52 is 3.671038e-57

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.268599 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0367e+02
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -22.4378
    reference variance = 0.451671
====================================================
  Execution time = 7.5976e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s052
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9788e-01
  Total weights = 2.0000e+06
  Execution time = 6.4630e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498937016
  error estimate for blocks of size 2^( 2) =       0.000525562073
  error estimate for blocks of size 2^( 3) =       0.000550811686
  error estimate for blocks of size 2^( 4) =       0.000569599915
  error estimate for blocks of size 2^( 5) =       0.000583057873
  error estimate for blocks of size 2^( 6) =       0.000590527927
  error estimate for blocks of size 2^( 7) =       0.000594496309

      target function =      -0.708495502065
              le_mean =     -22.426745278664
             les_mean =     503.456779836584
             stat err =       0.000584420506
             autocorr =       1.372016839995
   target nu stat err =       0.000584420506
   target dn stat err =       0.004794450231
      target stat err =       0.003519970631
              std dev =       0.705603494501
             le_variance =       0.497876291453

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498937016
  error estimate for blocks of size 2^( 2) =       0.000525562073
  error estimate for blocks of size 2^( 3) =       0.000550811686
  error estimate for blocks of size 2^( 4) =       0.000569599915
  error estimate for blocks of size 2^( 5) =       0.000583057873
  error estimate for blocks of size 2^( 6) =       0.000590527927
  error estimate for blocks of size 2^( 7) =       0.000594496309

      target function =      -0.708495502065
              le_mean =     -22.426745278664
             les_mean =     503.456779836584
             stat err =       0.000584420506
             autocorr =       1.372016839995
   target nu stat err =       0.000584420506
   target dn stat err =       0.004794450231
      target stat err =       0.003519970631
              std dev =       0.705603494501
             le_variance =       0.497876291453

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498937016
  error estimate for blocks of size 2^( 2) =       0.000525562073
  error estimate for blocks of size 2^( 3) =       0.000550811686
  error estimate for blocks of size 2^( 4) =       0.000569599915
  error estimate for blocks of size 2^( 5) =       0.000583057873
  error estimate for blocks of size 2^( 6) =       0.000590527927
  error estimate for blocks of size 2^( 7) =       0.000594496309

      target function =      -0.708495502065
              le_mean =     -22.426745278664
             les_mean =     503.456779836584
             stat err =       0.000584420506
             autocorr =       1.372016839995
   target nu stat err =       0.000584420506
   target dn stat err =       0.004794450231
      target stat err =       0.003519970631
              std dev =       0.705603494501
             le_variance =       0.497876291453

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.497882502825
                                         uncertainty =       0.005181718120

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498937016
  error estimate for blocks of size 2^( 2) =       0.000525562073
  error estimate for blocks of size 2^( 3) =       0.000550811686
  error estimate for blocks of size 2^( 4) =       0.000569599915
  error estimate for blocks of size 2^( 5) =       0.000583057873
  error estimate for blocks of size 2^( 6) =       0.000590527927
  error estimate for blocks of size 2^( 7) =       0.000594496309

      target function =      -0.708495502065
              le_mean =     -22.426745278664
             les_mean =     503.456779836584
             stat err =       0.000584420506
             autocorr =       1.372016839995
   target nu stat err =       0.000584420506
   target dn stat err =       0.004794450231
      target stat err =       0.003519970631
              std dev =       0.705603494501
             le_variance =       0.497876291453


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.708495502065        initial  <--
     1.0000e+51     1.0000e+52             5.8737e-56        -0.708495502065
     4.0000e+51     4.0000e+52             1.4684e-56        -0.708495502065
     1.6000e+52     1.6000e+53             3.6710e-57        -0.708495502065

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 108.3188
  </log>
  <optVariables href="FORM.s052.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1200e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s053 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s053 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=53  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.4672
    reference variance = 0.399725
====================================================
  Execution time = 7.7094e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s053
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 5.4277e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5496e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.542918088606
                                         uncertainty =       0.045168055789

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.542918088606
                                         uncertainty =       0.045168055789

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000520945904
  error estimate for blocks of size 2^( 2) =       0.000546314593
  error estimate for blocks of size 2^( 3) =       0.000570544674
  error estimate for blocks of size 2^( 4) =       0.000588898840
  error estimate for blocks of size 2^( 5) =       0.000601242494
  error estimate for blocks of size 2^( 6) =       0.000606081492
  error estimate for blocks of size 2^( 7) =       0.000610228327

      target function =      -0.676099660074
              le_mean =     -22.427002998316
             les_mean =     503.513232485888
             stat err =       0.000601612788
             autocorr =       1.333671475344
   target nu stat err =       0.000601612788
   target dn stat err =       0.045463914687
      target stat err =       0.030031227703
              std dev =       0.736728763398
             le_variance =       0.542769270819


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242700299832e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+52, overlap shift 1.0000e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+52, overlap shift 4.0000e+53 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+53, overlap shift 1.6000e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.677438104018       residual = 4.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.269672 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0610e+02
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -22.3772
    reference variance = 0.337278
====================================================
  Execution time = 7.7960e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s053
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 4.9535e-01
  Total weights = 2.0000e+06
  Execution time = 6.4324e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497668565
  error estimate for blocks of size 2^( 2) =       0.000524443455
  error estimate for blocks of size 2^( 3) =       0.000549954211
  error estimate for blocks of size 2^( 4) =       0.000568703052
  error estimate for blocks of size 2^( 5) =       0.000580798400
  error estimate for blocks of size 2^( 6) =       0.000588882469
  error estimate for blocks of size 2^( 7) =       0.000593855409

      target function =      -0.710351456224
              le_mean =     -22.425733748864
             les_mean =     503.408881927909
             stat err =       0.000583059833
             autocorr =       1.372605796128
   target nu stat err =       0.000583059833
   target dn stat err =       0.003586919167
      target stat err =       0.002672424248
              std dev =       0.703809633821
             le_variance =       0.495348000659

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497668565
  error estimate for blocks of size 2^( 2) =       0.000524443455
  error estimate for blocks of size 2^( 3) =       0.000549954211
  error estimate for blocks of size 2^( 4) =       0.000568703052
  error estimate for blocks of size 2^( 5) =       0.000580798400
  error estimate for blocks of size 2^( 6) =       0.000588882469
  error estimate for blocks of size 2^( 7) =       0.000593855409

      target function =      -0.710351456224
              le_mean =     -22.425733748864
             les_mean =     503.408881927909
             stat err =       0.000583059833
             autocorr =       1.372605796129
   target nu stat err =       0.000583059833
   target dn stat err =       0.003586919167
      target stat err =       0.002672424248
              std dev =       0.703809633821
             le_variance =       0.495348000659

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497668565
  error estimate for blocks of size 2^( 2) =       0.000524443455
  error estimate for blocks of size 2^( 3) =       0.000549954211
  error estimate for blocks of size 2^( 4) =       0.000568703052
  error estimate for blocks of size 2^( 5) =       0.000580798400
  error estimate for blocks of size 2^( 6) =       0.000588882469
  error estimate for blocks of size 2^( 7) =       0.000593855409

      target function =      -0.710351456224
              le_mean =     -22.425733748864
             les_mean =     503.408881927909
             stat err =       0.000583059833
             autocorr =       1.372605796129
   target nu stat err =       0.000583059833
   target dn stat err =       0.003586919167
      target stat err =       0.002672424248
              std dev =       0.703809633821
             le_variance =       0.495348000659

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.495431844925
                                         uncertainty =       0.003555848965

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000497668565
  error estimate for blocks of size 2^( 2) =       0.000524443455
  error estimate for blocks of size 2^( 3) =       0.000549954211
  error estimate for blocks of size 2^( 4) =       0.000568703052
  error estimate for blocks of size 2^( 5) =       0.000580798400
  error estimate for blocks of size 2^( 6) =       0.000588882469
  error estimate for blocks of size 2^( 7) =       0.000593855409

      target function =      -0.710351456224
              le_mean =     -22.425733748864
             les_mean =     503.408881927909
             stat err =       0.000583059833
             autocorr =       1.372605796129
   target nu stat err =       0.000583059833
   target dn stat err =       0.003586919167
      target stat err =       0.002672424248
              std dev =       0.703809633821
             le_variance =       0.495348000659


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.710351456224        initial  <--
     1.0000e+52     1.0000e+53             0.0000e+00        -0.710351456224
     4.0000e+52     4.0000e+53             0.0000e+00        -0.710351456224
     1.6000e+53     1.6000e+54             0.0000e+00        -0.710351456224

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 110.1715
  </log>
  <optVariables href="FORM.s053.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1627e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s054 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s054 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=54  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.4477
    reference variance = 0.562074
====================================================
  Execution time = 7.6039e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s054
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9645e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5550e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496561467599
                                         uncertainty =       0.003322762738

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.496561467599
                                         uncertainty =       0.003322762738

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000498222208
  error estimate for blocks of size 2^( 2) =       0.000524788996
  error estimate for blocks of size 2^( 3) =       0.000548876731
  error estimate for blocks of size 2^( 4) =       0.000569822115
  error estimate for blocks of size 2^( 5) =       0.000581895642
  error estimate for blocks of size 2^( 6) =       0.000589734702
  error estimate for blocks of size 2^( 7) =       0.000594843190

      target function =      -0.709532763282
              le_mean =     -22.426985934576
             les_mean =     503.466148598762
             stat err =       0.000584073912
             autocorr =       1.374325022114
   target nu stat err =       0.000584073913
   target dn stat err =       0.003491184647
      target stat err =       0.002603778243
              std dev =       0.704592603783
             le_variance =       0.496450737305


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242698593458e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+53, overlap shift 1.0000e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+53, overlap shift 4.0000e+54 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+54, overlap shift 1.6000e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.709541320528       residual = 3.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.270738 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0160e+02
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -22.42
    reference variance = 0.328737
====================================================
  Execution time = 7.4323e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s054
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 4.9092e-01
  Total weights = 2.0000e+06
  Execution time = 6.4393e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495437671
  error estimate for blocks of size 2^( 2) =       0.000522061357
  error estimate for blocks of size 2^( 3) =       0.000547542278
  error estimate for blocks of size 2^( 4) =       0.000566878765
  error estimate for blocks of size 2^( 5) =       0.000579957693
  error estimate for blocks of size 2^( 6) =       0.000588782079
  error estimate for blocks of size 2^( 7) =       0.000592625942

      target function =      -0.713566718778
              le_mean =     -22.427719463065
             les_mean =     503.493517040407
             stat err =       0.000582061120
             autocorr =       1.380254367287
   target nu stat err =       0.000582061120
   target dn stat err =       0.002993315167
      target stat err =       0.002280196212
              std dev =       0.700654673816
             le_variance =       0.490916971940

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495437671
  error estimate for blocks of size 2^( 2) =       0.000522061357
  error estimate for blocks of size 2^( 3) =       0.000547542278
  error estimate for blocks of size 2^( 4) =       0.000566878765
  error estimate for blocks of size 2^( 5) =       0.000579957693
  error estimate for blocks of size 2^( 6) =       0.000588782079
  error estimate for blocks of size 2^( 7) =       0.000592625942

      target function =      -0.713566718778
              le_mean =     -22.427719463065
             les_mean =     503.493517040407
             stat err =       0.000582061120
             autocorr =       1.380254367287
   target nu stat err =       0.000582061120
   target dn stat err =       0.002993315167
      target stat err =       0.002280196212
              std dev =       0.700654673816
             le_variance =       0.490916971940

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495437671
  error estimate for blocks of size 2^( 2) =       0.000522061357
  error estimate for blocks of size 2^( 3) =       0.000547542278
  error estimate for blocks of size 2^( 4) =       0.000566878765
  error estimate for blocks of size 2^( 5) =       0.000579957693
  error estimate for blocks of size 2^( 6) =       0.000588782079
  error estimate for blocks of size 2^( 7) =       0.000592625942

      target function =      -0.713566718778
              le_mean =     -22.427719463065
             les_mean =     503.493517040407
             stat err =       0.000582061120
             autocorr =       1.380254367287
   target nu stat err =       0.000582061120
   target dn stat err =       0.002993315167
      target stat err =       0.002280196212
              std dev =       0.700654673816
             le_variance =       0.490916971940

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490907673242
                                         uncertainty =       0.002838325400

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495437671
  error estimate for blocks of size 2^( 2) =       0.000522061357
  error estimate for blocks of size 2^( 3) =       0.000547542278
  error estimate for blocks of size 2^( 4) =       0.000566878765
  error estimate for blocks of size 2^( 5) =       0.000579957693
  error estimate for blocks of size 2^( 6) =       0.000588782079
  error estimate for blocks of size 2^( 7) =       0.000592625942

      target function =      -0.713566718778
              le_mean =     -22.427719463065
             les_mean =     503.493517040407
             stat err =       0.000582061120
             autocorr =       1.380254367287
   target nu stat err =       0.000582061120
   target dn stat err =       0.002993315167
      target stat err =       0.002280196212
              std dev =       0.700654673816
             le_variance =       0.490916971940


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.713566718778        initial  <--
     1.0000e+53     1.0000e+54             0.0000e+00        -0.713566718778
     4.0000e+53     4.0000e+54             0.0000e+00        -0.713566718778
     1.6000e+54     1.6000e+55             0.0000e+00        -0.713566718778

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 106.6336
  </log>
  <optVariables href="FORM.s054.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0824e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s055 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s055 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=55  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.4058
    reference variance = 0.442953
====================================================
  Execution time = 7.6756e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s055
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0238e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.6147e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502430721648
                                         uncertainty =       0.004715934999

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.502430721648
                                         uncertainty =       0.004715934999

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000501186809
  error estimate for blocks of size 2^( 2) =       0.000527781408
  error estimate for blocks of size 2^( 3) =       0.000552939885
  error estimate for blocks of size 2^( 4) =       0.000572104157
  error estimate for blocks of size 2^( 5) =       0.000586085542
  error estimate for blocks of size 2^( 6) =       0.000591076058
  error estimate for blocks of size 2^( 7) =       0.000590622561

      target function =      -0.705227124746
              le_mean =     -22.427973194974
             les_mean =     503.516357818161
             stat err =       0.000584972080
             autocorr =       1.362294527082
   target nu stat err =       0.000584972080
   target dn stat err =       0.004723922592
      target stat err =       0.003444414593
              std dev =       0.708785182451
             le_variance =       0.502376434862


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242797319497e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+54, overlap shift 1.0000e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+54, overlap shift 4.0000e+55 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+55, overlap shift 1.6000e+56 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.705243105526       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.271908 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0291e+02
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -22.3315
    reference variance = 0.525735
====================================================
  Execution time = 7.5380e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s055
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0467e-01
  Total weights = 2.0000e+06
  Execution time = 6.4428e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502328729
  error estimate for blocks of size 2^( 2) =       0.000528745159
  error estimate for blocks of size 2^( 3) =       0.000554262283
  error estimate for blocks of size 2^( 4) =       0.000573508638
  error estimate for blocks of size 2^( 5) =       0.000585665669
  error estimate for blocks of size 2^( 6) =       0.000593060545
  error estimate for blocks of size 2^( 7) =       0.000596859761

      target function =      -0.703595984503
              le_mean =     -22.427630567458
             les_mean =     503.503280921581
             stat err =       0.000587273653
             autocorr =       1.366800098422
   target nu stat err =       0.000587273653
   target dn stat err =       0.004415091783
      target stat err =       0.003210378820
              std dev =       0.710400101029
             le_variance =       0.504668303543

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502328729
  error estimate for blocks of size 2^( 2) =       0.000528745159
  error estimate for blocks of size 2^( 3) =       0.000554262283
  error estimate for blocks of size 2^( 4) =       0.000573508638
  error estimate for blocks of size 2^( 5) =       0.000585665669
  error estimate for blocks of size 2^( 6) =       0.000593060545
  error estimate for blocks of size 2^( 7) =       0.000596859761

      target function =      -0.703595984503
              le_mean =     -22.427630567458
             les_mean =     503.503280921581
             stat err =       0.000587273653
             autocorr =       1.366800098423
   target nu stat err =       0.000587273653
   target dn stat err =       0.004415091783
      target stat err =       0.003210378820
              std dev =       0.710400101029
             le_variance =       0.504668303543

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502328729
  error estimate for blocks of size 2^( 2) =       0.000528745159
  error estimate for blocks of size 2^( 3) =       0.000554262283
  error estimate for blocks of size 2^( 4) =       0.000573508638
  error estimate for blocks of size 2^( 5) =       0.000585665669
  error estimate for blocks of size 2^( 6) =       0.000593060545
  error estimate for blocks of size 2^( 7) =       0.000596859761

      target function =      -0.703595984503
              le_mean =     -22.427630567458
             les_mean =     503.503280921581
             stat err =       0.000587273653
             autocorr =       1.366800098423
   target nu stat err =       0.000587273653
   target dn stat err =       0.004415091783
      target stat err =       0.003210378820
              std dev =       0.710400101029
             le_variance =       0.504668303543

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.504698242092
                                         uncertainty =       0.004362053510

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502328729
  error estimate for blocks of size 2^( 2) =       0.000528745159
  error estimate for blocks of size 2^( 3) =       0.000554262283
  error estimate for blocks of size 2^( 4) =       0.000573508638
  error estimate for blocks of size 2^( 5) =       0.000585665669
  error estimate for blocks of size 2^( 6) =       0.000593060545
  error estimate for blocks of size 2^( 7) =       0.000596859761

      target function =      -0.703595984503
              le_mean =     -22.427630567458
             les_mean =     503.503280921581
             stat err =       0.000587273653
             autocorr =       1.366800098423
   target nu stat err =       0.000587273653
   target dn stat err =       0.004415091783
      target stat err =       0.003210378820
              std dev =       0.710400101029
             le_variance =       0.504668303543


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.703595984503        initial  <--
     1.0000e+54     1.0000e+55             0.0000e+00        -0.703595984503
     4.0000e+54     4.0000e+55             0.0000e+00        -0.703595984503
     1.6000e+55     1.6000e+56             0.0000e+00        -0.703595984503

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.7433
  </log>
  <optVariables href="FORM.s055.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1067e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s056 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s056 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=56  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.5154
    reference variance = 0.465194
====================================================
  Execution time = 7.6771e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s056
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9085e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5293e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490843345919
                                         uncertainty =       0.003303708528

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.490843345919
                                         uncertainty =       0.003303708528

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000495403970
  error estimate for blocks of size 2^( 2) =       0.000522291057
  error estimate for blocks of size 2^( 3) =       0.000548124929
  error estimate for blocks of size 2^( 4) =       0.000567468941
  error estimate for blocks of size 2^( 5) =       0.000579628851
  error estimate for blocks of size 2^( 6) =       0.000586549908
  error estimate for blocks of size 2^( 7) =       0.000588548667

      target function =      -0.713623839686
              le_mean =     -22.426987311671
             les_mean =     503.460609818922
             stat err =       0.000580549092
             autocorr =       1.373279494909
   target nu stat err =       0.000580549092
   target dn stat err =       0.003020870961
      target stat err =       0.002297264816
              std dev =       0.700607012866
             le_variance =       0.490850186476


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242698731167e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+55, overlap shift 1.0000e+56 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713630275823       residual = 5.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713630275823       residual = 7.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 2.57e+02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 2.58e+02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+55 is 6.125751e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+55, overlap shift 4.0000e+56 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713630275823       residual = 5.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713630275823       residual = 7.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713630275823       residual = 4.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+55 is 2.004269e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+56, overlap shift 1.6000e+57 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.713630275823       residual = 5.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.713630275823       residual = 7.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.713630275823       residual = 4.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+56 is 5.010673e-61

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.273347 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0501e+02
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -22.4026
    reference variance = 0.301535
====================================================
  Execution time = 7.5075e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s056
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9224e-01
  Total weights = 2.0000e+06
  Execution time = 6.4340e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496105448
  error estimate for blocks of size 2^( 2) =       0.000522495708
  error estimate for blocks of size 2^( 3) =       0.000547716776
  error estimate for blocks of size 2^( 4) =       0.000566891681
  error estimate for blocks of size 2^( 5) =       0.000579166991
  error estimate for blocks of size 2^( 6) =       0.000585249730
  error estimate for blocks of size 2^( 7) =       0.000589230256

      target function =      -0.712605357344
              le_mean =     -22.426711982112
             les_mean =     503.449651314423
             stat err =       0.000580134664
             autocorr =       1.367444281159
   target nu stat err =       0.000580134664
   target dn stat err =       0.003397194399
      target stat err =       0.002556874428
              std dev =       0.701599053537
             le_variance =       0.492241231925

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496105448
  error estimate for blocks of size 2^( 2) =       0.000522495708
  error estimate for blocks of size 2^( 3) =       0.000547716776
  error estimate for blocks of size 2^( 4) =       0.000566891681
  error estimate for blocks of size 2^( 5) =       0.000579166991
  error estimate for blocks of size 2^( 6) =       0.000585249730
  error estimate for blocks of size 2^( 7) =       0.000589230256

      target function =      -0.712605357344
              le_mean =     -22.426711982112
             les_mean =     503.449651314423
             stat err =       0.000580134664
             autocorr =       1.367444281159
   target nu stat err =       0.000580134664
   target dn stat err =       0.003397194399
      target stat err =       0.002556874428
              std dev =       0.701599053537
             le_variance =       0.492241231925

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496105448
  error estimate for blocks of size 2^( 2) =       0.000522495708
  error estimate for blocks of size 2^( 3) =       0.000547716776
  error estimate for blocks of size 2^( 4) =       0.000566891681
  error estimate for blocks of size 2^( 5) =       0.000579166991
  error estimate for blocks of size 2^( 6) =       0.000585249730
  error estimate for blocks of size 2^( 7) =       0.000589230256

      target function =      -0.712605357344
              le_mean =     -22.426711982112
             les_mean =     503.449651314423
             stat err =       0.000580134664
             autocorr =       1.367444281159
   target nu stat err =       0.000580134664
   target dn stat err =       0.003397194399
      target stat err =       0.002556874428
              std dev =       0.701599053537
             le_variance =       0.492241231925

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492100412233
                                         uncertainty =       0.003365444189

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496105448
  error estimate for blocks of size 2^( 2) =       0.000522495708
  error estimate for blocks of size 2^( 3) =       0.000547716776
  error estimate for blocks of size 2^( 4) =       0.000566891681
  error estimate for blocks of size 2^( 5) =       0.000579166991
  error estimate for blocks of size 2^( 6) =       0.000585249730
  error estimate for blocks of size 2^( 7) =       0.000589230256

      target function =      -0.712605357344
              le_mean =     -22.426711982112
             les_mean =     503.449651314423
             stat err =       0.000580134664
             autocorr =       1.367444281159
   target nu stat err =       0.000580134664
   target dn stat err =       0.003397194399
      target stat err =       0.002556874428
              std dev =       0.701599053537
             le_variance =       0.492241231925


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.712605357344        initial  <--
     1.0000e+55     1.0000e+56             6.1258e-60        -0.712605357344
     4.0000e+55     4.0000e+56             2.0043e-60        -0.712605357344
     1.6000e+56     1.6000e+57             5.0107e-61        -0.712605357344

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.2956
  </log>
  <optVariables href="FORM.s056.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1246e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s057 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s057 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=57  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2432e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.503
    reference variance = 0.377978
====================================================
  Execution time = 7.7596e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s057
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2425e+01
  VMC Evar = 4.9925e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5457e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499332255337
                                         uncertainty =       0.005017967610

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.499332255337
                                         uncertainty =       0.005017967610

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499625277
  error estimate for blocks of size 2^( 2) =       0.000525862319
  error estimate for blocks of size 2^( 3) =       0.000551172680
  error estimate for blocks of size 2^( 4) =       0.000570475407
  error estimate for blocks of size 2^( 5) =       0.000583183683
  error estimate for blocks of size 2^( 6) =       0.000590077782
  error estimate for blocks of size 2^( 7) =       0.000595180981

      target function =      -0.707526487835
              le_mean =     -22.425120551674
             les_mean =     503.385282343179
             stat err =       0.000584729463
             autocorr =       1.369686420622
   target nu stat err =       0.000584729463
   target dn stat err =       0.005388893552
      target stat err =       0.003924744565
              std dev =       0.706576843430
             le_variance =       0.499250835672


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242512055167e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+56, overlap shift 1.0000e+57 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+56, overlap shift 4.0000e+57 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+57, overlap shift 1.6000e+58 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707547338656       residual = 7.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+57 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.274426 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0306e+02
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -22.4907
    reference variance = 0.581428
====================================================
  Execution time = 7.6989e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s057
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9263e-01
  Total weights = 2.0000e+06
  Execution time = 6.4259e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496303849
  error estimate for blocks of size 2^( 2) =       0.000522984241
  error estimate for blocks of size 2^( 3) =       0.000548853422
  error estimate for blocks of size 2^( 4) =       0.000568010323
  error estimate for blocks of size 2^( 5) =       0.000579974855
  error estimate for blocks of size 2^( 6) =       0.000586145941
  error estimate for blocks of size 2^( 7) =       0.000586567528

      target function =      -0.712316928590
              le_mean =     -22.426851400868
             les_mean =     503.456298531545
             stat err =       0.000580174662
             autocorr =       1.366539623798
   target nu stat err =       0.000580174662
   target dn stat err =       0.003120120408
      target stat err =       0.002358765895
              std dev =       0.701879634453
             le_variance =       0.492635021260

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496303849
  error estimate for blocks of size 2^( 2) =       0.000522984241
  error estimate for blocks of size 2^( 3) =       0.000548853422
  error estimate for blocks of size 2^( 4) =       0.000568010323
  error estimate for blocks of size 2^( 5) =       0.000579974855
  error estimate for blocks of size 2^( 6) =       0.000586145941
  error estimate for blocks of size 2^( 7) =       0.000586567528

      target function =      -0.712316928590
              le_mean =     -22.426851400868
             les_mean =     503.456298531545
             stat err =       0.000580174662
             autocorr =       1.366539623798
   target nu stat err =       0.000580174662
   target dn stat err =       0.003120120408
      target stat err =       0.002358765895
              std dev =       0.701879634453
             le_variance =       0.492635021260

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496303849
  error estimate for blocks of size 2^( 2) =       0.000522984241
  error estimate for blocks of size 2^( 3) =       0.000548853422
  error estimate for blocks of size 2^( 4) =       0.000568010323
  error estimate for blocks of size 2^( 5) =       0.000579974855
  error estimate for blocks of size 2^( 6) =       0.000586145941
  error estimate for blocks of size 2^( 7) =       0.000586567528

      target function =      -0.712316928590
              le_mean =     -22.426851400868
             les_mean =     503.456298531545
             stat err =       0.000580174662
             autocorr =       1.366539623798
   target nu stat err =       0.000580174662
   target dn stat err =       0.003120120408
      target stat err =       0.002358765895
              std dev =       0.701879634453
             le_variance =       0.492635021260

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.492569203037
                                         uncertainty =       0.003016334705

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000496303849
  error estimate for blocks of size 2^( 2) =       0.000522984241
  error estimate for blocks of size 2^( 3) =       0.000548853422
  error estimate for blocks of size 2^( 4) =       0.000568010323
  error estimate for blocks of size 2^( 5) =       0.000579974855
  error estimate for blocks of size 2^( 6) =       0.000586145941
  error estimate for blocks of size 2^( 7) =       0.000586567528

      target function =      -0.712316928590
              le_mean =     -22.426851400868
             les_mean =     503.456298531545
             stat err =       0.000580174662
             autocorr =       1.366539623798
   target nu stat err =       0.000580174662
   target dn stat err =       0.003120120408
      target stat err =       0.002358765895
              std dev =       0.701879634453
             le_variance =       0.492635021260


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.712316928590        initial  <--
     1.0000e+56     1.0000e+57             0.0000e+00        -0.712316928590
     4.0000e+56     4.0000e+57             0.0000e+00        -0.712316928590
     1.6000e+57     1.6000e+58             0.0000e+00        -0.712316928590

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 109.4352
  </log>
  <optVariables href="FORM.s057.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1251e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s058 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s058 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=58  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.4869
    reference variance = 0.371151
====================================================
  Execution time = 7.6457e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s058
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9833e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5166e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498237693569
                                         uncertainty =       0.004687556331

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498237693569
                                         uncertainty =       0.004687556331

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499161953
  error estimate for blocks of size 2^( 2) =       0.000525618641
  error estimate for blocks of size 2^( 3) =       0.000551493768
  error estimate for blocks of size 2^( 4) =       0.000570312789
  error estimate for blocks of size 2^( 5) =       0.000583036781
  error estimate for blocks of size 2^( 6) =       0.000590218411
  error estimate for blocks of size 2^( 7) =       0.000594810213

      target function =      -0.708171824624
              le_mean =     -22.426668806666
             les_mean =     503.453798825997
             stat err =       0.000584594548
             autocorr =       1.371597141111
   target nu stat err =       0.000584594548
   target dn stat err =       0.004880241938
      target stat err =       0.003577572343
              std dev =       0.705921604189
             le_variance =       0.498325311260


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242666880667e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+57, overlap shift 1.0000e+58 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+57 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+57, overlap shift 4.0000e+58 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+57 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+58, overlap shift 1.6000e+59 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.708188795503       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+58 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.275533 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0163e+02
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -22.3002
    reference variance = 0.569153
====================================================
  Execution time = 7.4920e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s058
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2426e+01
  VMC Evar = 5.0142e-01
  Total weights = 2.0000e+06
  Execution time = 6.4290e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500707635
  error estimate for blocks of size 2^( 2) =       0.000527489748
  error estimate for blocks of size 2^( 3) =       0.000553108877
  error estimate for blocks of size 2^( 4) =       0.000572795922
  error estimate for blocks of size 2^( 5) =       0.000586168794
  error estimate for blocks of size 2^( 6) =       0.000593562037
  error estimate for blocks of size 2^( 7) =       0.000597713308

      target function =      -0.705962297766
              le_mean =     -22.425855891458
             les_mean =     503.420428485529
             stat err =       0.000587560015
             autocorr =       1.377006654783
   target nu stat err =       0.000587560015
   target dn stat err =       0.004705772876
      target stat err =       0.003428602433
              std dev =       0.708107528410
             le_variance =       0.501416271791

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500707635
  error estimate for blocks of size 2^( 2) =       0.000527489748
  error estimate for blocks of size 2^( 3) =       0.000553108877
  error estimate for blocks of size 2^( 4) =       0.000572795922
  error estimate for blocks of size 2^( 5) =       0.000586168794
  error estimate for blocks of size 2^( 6) =       0.000593562037
  error estimate for blocks of size 2^( 7) =       0.000597713308

      target function =      -0.705962297766
              le_mean =     -22.425855891458
             les_mean =     503.420428485529
             stat err =       0.000587560015
             autocorr =       1.377006654783
   target nu stat err =       0.000587560015
   target dn stat err =       0.004705772876
      target stat err =       0.003428602433
              std dev =       0.708107528410
             le_variance =       0.501416271791

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500707635
  error estimate for blocks of size 2^( 2) =       0.000527489748
  error estimate for blocks of size 2^( 3) =       0.000553108877
  error estimate for blocks of size 2^( 4) =       0.000572795922
  error estimate for blocks of size 2^( 5) =       0.000586168794
  error estimate for blocks of size 2^( 6) =       0.000593562037
  error estimate for blocks of size 2^( 7) =       0.000597713308

      target function =      -0.705962297766
              le_mean =     -22.425855891458
             les_mean =     503.420428485529
             stat err =       0.000587560015
             autocorr =       1.377006654783
   target nu stat err =       0.000587560015
   target dn stat err =       0.004705772876
      target stat err =       0.003428602433
              std dev =       0.708107528410
             le_variance =       0.501416271791

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.501220699820
                                         uncertainty =       0.004544499004

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000500707635
  error estimate for blocks of size 2^( 2) =       0.000527489748
  error estimate for blocks of size 2^( 3) =       0.000553108877
  error estimate for blocks of size 2^( 4) =       0.000572795922
  error estimate for blocks of size 2^( 5) =       0.000586168794
  error estimate for blocks of size 2^( 6) =       0.000593562037
  error estimate for blocks of size 2^( 7) =       0.000597713308

      target function =      -0.705962297766
              le_mean =     -22.425855891458
             les_mean =     503.420428485529
             stat err =       0.000587560015
             autocorr =       1.377006654783
   target nu stat err =       0.000587560015
   target dn stat err =       0.004705772876
      target stat err =       0.003428602433
              std dev =       0.708107528410
             le_variance =       0.501416271791


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.705962297766        initial  <--
     1.0000e+57     1.0000e+58             0.0000e+00        -0.705962297766
     4.0000e+57     4.0000e+58             0.0000e+00        -0.705962297766
     1.6000e+58     1.6000e+59             0.0000e+00        -0.705962297766

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.1581
  </log>
  <optVariables href="FORM.s058.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.0879e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root FORM.s059 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root FORM.s059 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=59  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -2.2433e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 30888 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.4155
    reference variance = 0.401807
====================================================
  Execution time = 7.8462e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot FORM.s059
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -2.2427e+01
  VMC Evar = 4.9886e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 2.5466e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498829692131
                                         uncertainty =       0.002893163128

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.498829692131
                                         uncertainty =       0.002893163128

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000499429127
  error estimate for blocks of size 2^( 2) =       0.000526328469
  error estimate for blocks of size 2^( 3) =       0.000551966292
  error estimate for blocks of size 2^( 4) =       0.000571361509
  error estimate for blocks of size 2^( 5) =       0.000584036390
  error estimate for blocks of size 2^( 6) =       0.000591632544
  error estimate for blocks of size 2^( 7) =       0.000596595614

      target function =      -0.707782805577
              le_mean =     -22.427363772055
             les_mean =     503.485504420537
             stat err =       0.000585906514
             autocorr =       1.376286719059
   target nu stat err =       0.000585906514
   target dn stat err =       0.003302822786
      target stat err =       0.002460867407
              std dev =       0.706299444917
             le_variance =       0.498858905891


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -2.242736377205e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 60
Check correct_vf_var_size: 183, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+58, overlap shift 1.0000e+59 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.0000e+58 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+58, overlap shift 4.0000e+59 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 4.0000e+58 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+59, overlap shift 1.6000e+60 and omega -2.3121e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.707790344671       residual = 2.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 61 and evec_eigen.size(): 61
The largest weight on the derivative vector for shift 1.6000e+59 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.276621 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 61 and numParams is: 60

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 1.0394e+02
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -22.4866
    reference variance = 0.451369
====================================================
  Execution time = 7.4928e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot FORM.s059
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -2.2428e+01
  VMC Evar = 5.0587e-01
  Total weights = 2.0000e+06
  Execution time = 6.4720e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502927243
  error estimate for blocks of size 2^( 2) =       0.000529085920
  error estimate for blocks of size 2^( 3) =       0.000554391618
  error estimate for blocks of size 2^( 4) =       0.000572768006
  error estimate for blocks of size 2^( 5) =       0.000585017966
  error estimate for blocks of size 2^( 6) =       0.000590677338
  error estimate for blocks of size 2^( 7) =       0.000592097295

      target function =      -0.702710865970
              le_mean =     -22.427614155405
             les_mean =     503.503748074240
             stat err =       0.000585140151
             autocorr =       1.353659627338
   target nu stat err =       0.000585140151
   target dn stat err =       0.007576052240
      target stat err =       0.005431935001
              std dev =       0.711246527895
             le_variance =       0.505871623443

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502927243
  error estimate for blocks of size 2^( 2) =       0.000529085920
  error estimate for blocks of size 2^( 3) =       0.000554391618
  error estimate for blocks of size 2^( 4) =       0.000572768006
  error estimate for blocks of size 2^( 5) =       0.000585017966
  error estimate for blocks of size 2^( 6) =       0.000590677338
  error estimate for blocks of size 2^( 7) =       0.000592097295

      target function =      -0.702710865970
              le_mean =     -22.427614155405
             les_mean =     503.503748074240
             stat err =       0.000585140151
             autocorr =       1.353659627338
   target nu stat err =       0.000585140151
   target dn stat err =       0.007576052240
      target stat err =       0.005431935001
              std dev =       0.711246527895
             le_variance =       0.505871623443

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502927243
  error estimate for blocks of size 2^( 2) =       0.000529085920
  error estimate for blocks of size 2^( 3) =       0.000554391618
  error estimate for blocks of size 2^( 4) =       0.000572768006
  error estimate for blocks of size 2^( 5) =       0.000585017966
  error estimate for blocks of size 2^( 6) =       0.000590677338
  error estimate for blocks of size 2^( 7) =       0.000592097295

      target function =      -0.702710865970
              le_mean =     -22.427614155405
             les_mean =     503.503748074240
             stat err =       0.000585140151
             autocorr =       1.353659627338
   target nu stat err =       0.000585140151
   target dn stat err =       0.007576052240
      target stat err =       0.005431935001
              std dev =       0.711246527895
             le_variance =       0.505871623443

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.505851427185
                                         uncertainty =       0.007537659585

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000502927243
  error estimate for blocks of size 2^( 2) =       0.000529085920
  error estimate for blocks of size 2^( 3) =       0.000554391618
  error estimate for blocks of size 2^( 4) =       0.000572768006
  error estimate for blocks of size 2^( 5) =       0.000585017966
  error estimate for blocks of size 2^( 6) =       0.000590677338
  error estimate for blocks of size 2^( 7) =       0.000592097295

      target function =      -0.702710865970
              le_mean =     -22.427614155405
             les_mean =     503.503748074240
             stat err =       0.000585140151
             autocorr =       1.353659627338
   target nu stat err =       0.000585140151
   target dn stat err =       0.007576052240
      target stat err =       0.005431935001
              std dev =       0.711246527895
             le_variance =       0.505871623443


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.702710865970        initial  <--
     1.0000e+58     1.0000e+59             0.0000e+00        -0.702710865970
     4.0000e+58     4.0000e+59             0.0000e+00        -0.702710865970
     1.6000e+59     1.6000e+60             0.0000e+00        -0.702710865970

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 107.3304
  </log>
  <optVariables href="FORM.s059.opt.xml">
 uu_0                 2.552564e-01 1 1  ON 0
 uu_1                 9.297146e-02 1 1  ON 1
 uu_2                -7.920286e-03 1 1  ON 2
 uu_3                -6.923399e-02 1 1  ON 3
 uu_4                -1.052604e-01 1 1  ON 4
 uu_5                -1.267169e-01 1 1  ON 5
 uu_6                -1.374582e-01 1 1  ON 6
 uu_7                -1.336277e-01 1 1  ON 7
 uu_8                -1.132616e-01 1 1  ON 8
 uu_9                -6.856223e-02 1 1  ON 9
 ud_0                 3.731544e-01 1 1  ON 10
 ud_1                 1.324656e-01 1 1  ON 11
 ud_2                 1.338636e-02 1 1  ON 12
 ud_3                -4.969111e-02 1 1  ON 13
 ud_4                -8.583432e-02 1 1  ON 14
 ud_5                -1.074506e-01 1 1  ON 15
 ud_6                -1.175900e-01 1 1  ON 16
 ud_7                -1.128472e-01 1 1  ON 17
 ud_8                -9.300090e-02 1 1  ON 18
 ud_9                -5.426882e-02 1 1  ON 19
 eC_0                -4.979348e-01 1 1  ON 20
 eC_1                -3.532771e-01 1 1  ON 21
 eC_2                -1.036266e-01 1 1  ON 22
 eC_3                 6.840189e-02 1 1  ON 23
 eC_4                 1.507106e-01 1 1  ON 24
 eC_5                 2.326891e-01 1 1  ON 25
 eC_6                 2.311927e-01 1 1  ON 26
 eC_7                 1.913392e-01 1 1  ON 27
 eC_8                 7.350101e-02 1 1  ON 28
 eC_9                 5.800106e-03 1 1  ON 29
 eO_0                -8.991038e-01 1 1  ON 30
 eO_1                -5.913999e-01 1 1  ON 31
 eO_2                -1.810805e-01 1 1  ON 32
 eO_3                 8.172785e-02 1 1  ON 33
 eO_4                 2.361583e-01 1 1  ON 34
 eO_5                 3.379148e-01 1 1  ON 35
 eO_6                 3.342742e-01 1 1  ON 36
 eO_7                 2.985276e-01 1 1  ON 37
 eO_8                 2.076720e-01 1 1  ON 38
 eO_9                 1.093498e-01 1 1  ON 39
eH1_0                -1.333662e-01 1 1  ON 40
eH1_1                -3.149677e-02 1 1  ON 41
eH1_2                -1.524322e-02 1 1  ON 42
eH1_3                -2.543346e-02 1 1  ON 43
eH1_4                 3.820773e-03 1 1  ON 44
eH1_5                 1.895373e-02 1 1  ON 45
eH1_6                 3.983370e-02 1 1  ON 46
eH1_7                 4.319402e-02 1 1  ON 47
eH1_8                 3.913136e-02 1 1  ON 48
eH1_9                 4.724031e-02 1 1  ON 49
eH2_0                -1.451078e-01 1 1  ON 50
eH2_1                -4.404086e-02 1 1  ON 51
eH2_2                -2.577917e-02 1 1  ON 52
eH2_3                -3.487602e-02 1 1  ON 53
eH2_4                -6.873062e-03 1 1  ON 54
eH2_5                 8.664230e-03 1 1  ON 55
eH2_6                 3.559350e-02 1 1  ON 56
eH2_7                 4.803406e-02 1 1  ON 57
eH2_8                 6.894747e-02 1 1  ON 58
eH2_9                 6.265784e-02 1 1  ON 59
  </optVariables>
eC
Array
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 2.1127e+02 secs
  Total Execution time = 1.2674e+04 secs

=========================================================
  A new xml input file : FORM.s059.cont.xml
