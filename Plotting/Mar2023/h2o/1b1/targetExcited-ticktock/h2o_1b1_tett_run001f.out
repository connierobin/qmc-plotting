Rank =    0  Free Memory = 90038 MB
Rank =    1  Free Memory = 90038 MB
Rank =    2  Free Memory = 90038 MB
Rank =    3  Free Memory = 90038 MB
Rank =    4  Free Memory = 90037 MB
Rank =    5  Free Memory = 90037 MB
Rank =    6  Free Memory = 90037 MB
Rank =    7  Free Memory = 90037 MB
Rank =    8  Free Memory = 90037 MB
Rank =    9  Free Memory = 90037 MB
Rank =   10  Free Memory = 90037 MB
Rank =   11  Free Memory = 90037 MB
Rank =   12  Free Memory = 90037 MB
Rank =   13  Free Memory = 90037 MB
Rank =   14  Free Memory = 90036 MB
Rank =   15  Free Memory = 90021 MB
Rank =   16  Free Memory = 90021 MB
Rank =   17  Free Memory = 90021 MB
Rank =   18  Free Memory = 90021 MB
Rank =   19  Free Memory = 90021 MB
Rank =   20  Free Memory = 90021 MB
Rank =   21  Free Memory = 90021 MB
Rank =   22  Free Memory = 90021 MB
Rank =   23  Free Memory = 90021 MB
Rank =   24  Free Memory = 90021 MB
Rank =   25  Free Memory = 90021 MB
Rank =   26  Free Memory = 90021 MB
Rank =   27  Free Memory = 90021 MB
Rank =   28  Free Memory = 90021 MB
Rank =   29  Free Memory = 90021 MB
Rank =   30  Free Memory = 90021 MB
Rank =   31  Free Memory = 90021 MB
Rank =   32  Free Memory = 89939 MB
Rank =   33  Free Memory = 89939 MB
Rank =   34  Free Memory = 89939 MB
Rank =   35  Free Memory = 89939 MB
Rank =   36  Free Memory = 89939 MB
Rank =   37  Free Memory = 89939 MB
Rank =   38  Free Memory = 89939 MB
Rank =   39  Free Memory = 89939 MB
Rank =   40  Free Memory = 89939 MB
Rank =   41  Free Memory = 89939 MB
Rank =   42  Free Memory = 89939 MB
Rank =   43  Free Memory = 89939 MB
Rank =   44  Free Memory = 89939 MB
Rank =   45  Free Memory = 89939 MB
Rank =   46  Free Memory = 89939 MB
Rank =   47  Free Memory = 89939 MB
Rank =   48  Free Memory = 89939 MB
Rank =   49  Free Memory = 89939 MB
Rank =   50  Free Memory = 89939 MB
Rank =   51  Free Memory = 89939 MB
Rank =   52  Free Memory = 89939 MB
Rank =   53  Free Memory = 89939 MB
Rank =   54  Free Memory = 89939 MB
Rank =   55  Free Memory = 89939 MB
Rank =   56  Free Memory = 89939 MB
Rank =   57  Free Memory = 89939 MB
Rank =   58  Free Memory = 89939 MB
Rank =   59  Free Memory = 89939 MB
Rank =   60  Free Memory = 89939 MB
Rank =   61  Free Memory = 89939 MB
Rank =   62  Free Memory = 89939 MB
Rank =   63  Free Memory = 89939 MB
Rank =   64  Free Memory = 74849 MB
Rank =   65  Free Memory = 74849 MB
Rank =   66  Free Memory = 74849 MB
Rank =   67  Free Memory = 74849 MB
Rank =   68  Free Memory = 74849 MB
Rank =   69  Free Memory = 74849 MB
Rank =   70  Free Memory = 74849 MB
Rank =   71  Free Memory = 74849 MB
Rank =   72  Free Memory = 74849 MB
Rank =   73  Free Memory = 74849 MB
Rank =   74  Free Memory = 74849 MB
Rank =   75  Free Memory = 74849 MB
Rank =   76  Free Memory = 74849 MB
Rank =   77  Free Memory = 74849 MB
Rank =   78  Free Memory = 74849 MB
Rank =   79  Free Memory = 74849 MB
Rank =   80  Free Memory = 74849 MB
Rank =   81  Free Memory = 74849 MB
Rank =   82  Free Memory = 74849 MB
Rank =   83  Free Memory = 74849 MB
Rank =   84  Free Memory = 74849 MB
Rank =   85  Free Memory = 74849 MB
Rank =   86  Free Memory = 74849 MB
Rank =   87  Free Memory = 74849 MB
Rank =   88  Free Memory = 74849 MB
Rank =   89  Free Memory = 74849 MB
Rank =   90  Free Memory = 74849 MB
Rank =   91  Free Memory = 74849 MB
Rank =   92  Free Memory = 74849 MB
Rank =   93  Free Memory = 74849 MB
Rank =   94  Free Memory = 74849 MB
Rank =   95  Free Memory = 74849 MB
Rank =   96  Free Memory = 84937 MB
Rank =   97  Free Memory = 84937 MB
Rank =   98  Free Memory = 84937 MB
Rank =   99  Free Memory = 84937 MB
Rank =  100  Free Memory = 84937 MB
Rank =  101  Free Memory = 84937 MB
Rank =  102  Free Memory = 84937 MB
Rank =  103  Free Memory = 84937 MB
Rank =  104  Free Memory = 84937 MB
Rank =  105  Free Memory = 84937 MB
Rank =  106  Free Memory = 84937 MB
Rank =  107  Free Memory = 84937 MB
Rank =  108  Free Memory = 84937 MB
Rank =  109  Free Memory = 84937 MB
Rank =  110  Free Memory = 84937 MB
Rank =  111  Free Memory = 84937 MB
Rank =  112  Free Memory = 84937 MB
Rank =  113  Free Memory = 84937 MB
Rank =  114  Free Memory = 84937 MB
Rank =  115  Free Memory = 84937 MB
Rank =  116  Free Memory = 84937 MB
Rank =  117  Free Memory = 84937 MB
Rank =  118  Free Memory = 84937 MB
Rank =  119  Free Memory = 84937 MB
Rank =  120  Free Memory = 84937 MB
Rank =  121  Free Memory = 84937 MB
Rank =  122  Free Memory = 84937 MB
Rank =  123  Free Memory = 84937 MB
Rank =  124  Free Memory = 84937 MB
Rank =  125  Free Memory = 84937 MB
Rank =  126  Free Memory = 84937 MB
Rank =  127  Free Memory = 84937 MB
  Input file(s): opt_h2o_1b1_tett_run001f.xml 

=====================================================
                    QMCPACK 3.7.9

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: gvp
  Last git commit: a1d851bbe8d902a0d3168a885b757a378aeaab54-dirty
  Last git commit date: Mon Feb 13 11:52:39 2023 -0800
  Last git commit subject: Print param update magnitude and largest update
=====================================================
  Global options 

  Total number of MPI ranks = 128
  Number of MPI groups      = 1
  MPI group ID              = 0
  Number of ranks in group  = 128
  MPI ranks per node        = 32
  OMP 1st level threads     = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Structure-of-arrays (SoA) optimization enabled

  Input XML = opt_h2o_1b1_tett_run001f.xml

  Project = H2O
  date    = 2023-03-10 23:37:28 PST
  host    = n0055.savio3

 Random Number
 -------------
  Offset for the random number seeds based on time: 952

  Range of prime numbers to use as seeds over processors and threads = 7529-8689


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 8

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 3

 Wavefunction setup: 
 ------------------- 
  Name: psi0

   Jastrow
   -------
    Name: J2   Type: Two-Body   Function: Bspline

    Radial function for species: u - u
     Number of parameters: 10
     Cusp: -0.25
     Cutoff radius: 10

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     uu_0                 2.517233e-01    1         1  ON     0
     uu_1                 1.009440e-01    1         1  ON     1
     uu_2                 1.617079e-02    1         1  ON     2
     uu_3                -3.223684e-02    1         1  ON     3
     uu_4                -6.387117e-02    1         1  ON     4
     uu_5                -8.576607e-02    1         1  ON     5
     uu_6                -1.001312e-01    1         1  ON     6
     uu_7                -1.065673e-01    1         1  ON     7
     uu_8                -9.668739e-02    1         1  ON     8
     uu_9                -6.389513e-02    1         1  ON     9

    Radial function for species: u - d
     Number of parameters: 10
     Cusp: -5.000000e-01
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     ud_0                 3.492134e-01    1         1  ON     0
     ud_1                 1.235409e-01    1         1  ON     1
     ud_2                 2.392782e-02    1         1  ON     2
     ud_3                -3.019578e-02    1         1  ON     3
     ud_4                -6.975615e-02    1         1  ON     4
     ud_5                -9.484122e-02    1         1  ON     5
     ud_6                -1.085598e-01    1         1  ON     6
     ud_7                -1.109505e-01    1         1  ON     7
     ud_8                -9.792103e-02    1         1  ON     8
     ud_9                -6.281979e-02    1         1  ON     9


   Jastrow
   -------
    Name: J1   Type: One-Body   Function: Bspline

    Radial function for element: O
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eO_0                -5.692885e-01    1         1  ON     0
     eO_1                -3.060844e-01    1         1  ON     1
     eO_2                 4.730127e-02    1         1  ON     2
     eO_3                 2.840620e-01    1         1  ON     3
     eO_4                 3.913445e-01    1         1  ON     4
     eO_5                 3.212389e-01    1         1  ON     5
     eO_6                 1.205694e-01    1         1  ON     6
     eO_7                -7.888705e-02    1         1  ON     7
     eO_8                -1.549102e-01    1         1  ON     8
     eO_9                -6.122098e-02    1         1  ON     9

    Radial function for element: H1
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH1_0                -2.277697e-01    1         1  ON     0
     eH1_1                -1.106400e-01    1         1  ON     1
     eH1_2                -6.162952e-02    1         1  ON     2
     eH1_3                -2.530653e-02    1         1  ON     3
     eH1_4                 4.247832e-03    1         1  ON     4
     eH1_5                 2.367079e-02    1         1  ON     5
     eH1_6                 6.569443e-02    1         1  ON     6
     eH1_7                 1.154361e-01    1         1  ON     7
     eH1_8                 1.435221e-01    1         1  ON     8
     eH1_9                 7.467419e-02    1         1  ON     9

    Radial function for element: H2
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH2_0                -2.307043e-01    1         1  ON     0
     eH2_1                -1.139386e-01    1         1  ON     1
     eH2_2                -6.444539e-02    1         1  ON     2
     eH2_3                -2.722663e-02    1         1  ON     3
     eH2_4                 1.073593e-03    1         1  ON     4
     eH2_5                 2.532957e-02    1         1  ON     5
     eH2_6                 7.564477e-02    1         1  ON     6
     eH2_7                 1.260027e-01    1         1  ON     7
     eH2_8                 1.609124e-01    1         1  ON     8
     eH2_9                 6.417217e-02    1         1  ON     9

  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  LCAO: SoaAtomicBasisSet<MultiQuintic,0>
  AO BasisSet for O
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.018591e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for H1
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

  AO BasisSet for H2
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with '' basis set.
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with '' basis set.
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 75 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 9.917821e-01
Norm of qchem ci vector (sum of qchem_ci^2): 0.000000e+00
Found 30 unique up determinants.
Found 30 unique down determinants.
Number of terms in pairs array: 20
Number of terms in pairs array: 20
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec

  ECPotential builder for pseudopotential 

  Adding pseudopotential for O
   Linear grid  ri=0.000000e+00 rf=1.000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.075000e+00
  Using global grid with delta = 1.000000e-03
   Making L=1 a local potential with a radial cutoff of 9.999000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.075000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0750000000e+00

  Adding pseudopotential for H1
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03

  Adding pseudopotential for H2
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03
  QMCHamiltonian::addOperator LocalECP to H, physical Hamiltonian 

  Using NonLocalECP potential 
    Maximum grid on a sphere for NonLocalECPotential: 12
  QMCHamiltonian::addOperator NonLocalECP to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type pseudo named NonLocalECP
  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    5 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 10
ParticleSetPool::randomize 
  Initialization Execution time = 3.6102e-01 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet 'e' contains 8 particles :  u(4) d(4)

    u  6.1002844054e-01  1.3250453608e-01 -4.2267217978e-01
    u -4.3494847795e-01 -2.3203549626e-01  1.0876787134e-01
    u -1.5984350305e-01  8.1842956548e-01  5.1837161342e-02
    u  1.1948334779e+00  1.4453040952e+00  1.6346730752e+00
    d -9.5054657961e-01  2.3768909128e-01 -6.0876959125e-01
    d -2.0429807517e-01  1.5546410594e+00 -1.0292769217e-01
    d  4.7451519973e-01  3.4811618685e-02  3.5425821429e-01
    d -8.6403568621e-02 -1.8286319639e+00  9.9844026831e-01

  Distance table for similar particles (A-A):
    source/target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  ParticleSet 'ion0' contains 3 particles :  O(1) H1(1) H2(1)

    O  0.0000000000e+00  0.0000000000e+00 -1.3209751581e-01
    H1  0.0000000000e+00  1.4315279079e+00  9.7970009311e-01
    H2  0.0000000000e+00 -1.4315279079e+00  9.7970009311e-01

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  LocalECP        LocalECPotential: ion0
  NonLocalECP     NonLocalECPotential: ion0
  IonIon          CoulombAA source/target ion0


Loop execution max-interations = 60
Inside LM engine constructor, num_params is: 0 and _total_num_params is: 0

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s000 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02

=========================================================
  Start VMC
  File Root H2O.s000 append = no 
=========================================================
Resetting walkers
  Using the current 1 walkers.
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000000000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000000000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000000000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000000000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000000000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: 0 and ratio_threshold_: 0.0000000000e+00
Allocating full size _hmat_temp and _smat_temp
Inside LM engine's get_param, num_params is: 50
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -16.8294
    reference variance = 0.235818
====================================================
  Execution time = 4.0696e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s000
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9716e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0740e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297158311541
                                         uncertainty =       0.004357622441

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297158311541
                                         uncertainty =       0.004357622441

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385462855
  error estimate for blocks of size 2^( 2) =       0.000401949588
  error estimate for blocks of size 2^( 3) =       0.000418978468
  error estimate for blocks of size 2^( 4) =       0.000433390532
  error estimate for blocks of size 2^( 5) =       0.000444414820
  error estimate for blocks of size 2^( 6) =       0.000450568224
  error estimate for blocks of size 2^( 7) =       0.000456116339

      target function =      -0.916851759938
              le_mean =     -16.898841562898
             les_mean =     285.868009244223
             stat err =       0.000446122479
             autocorr =       1.339501319718
   target nu stat err =       0.000446122479
   target dn stat err =       0.004332613171
      target stat err =       0.006902162171
              std dev =       0.545126797058
             le_variance =       0.297163224871


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy-1.689884156290e+01 
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e-01, overlap shift 2.5000e+00 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916902735649       residual = 8.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916974031558       residual = 9.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916991749890       residual = 6.29e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.916998737656       residual = 2.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917012109916       residual = 2.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917022192831       residual = 2.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917026386407       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917028706731       residual = 9.69e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917032994934       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917034389988       residual = 5.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917037025498       residual = 3.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917040439245       residual = 2.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917041603314       residual = 2.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917042143907       residual = 1.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917044269849       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917046144708       residual = 7.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917047931447       residual = 5.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917048575195       residual = 2.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917048719220       residual = 8.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917048606546       residual = 7.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917049047554       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917049010455       residual = 3.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917048875850       residual = 3.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917048961739       residual = 1.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917048983061       residual = 8.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917049038603       residual = 3.18e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.917049081824       residual = 9.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e-01 is 3.121332e-03

solving harmonic davidson linear method for identity shift 1.0000e+00, overlap shift 1.0000e+01 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916902735649       residual = 8.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916924011326       residual = 9.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916929217062       residual = 5.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.916931180198       residual = 2.51e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.916935119037       residual = 2.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.916937923637       residual = 2.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.916939112146       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.916939690730       residual = 9.01e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.916940868391       residual = 4.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916941243527       residual = 4.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.916941909727       residual = 2.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.916942862796       residual = 2.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.916943122843       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.916943270273       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.916943788116       residual = 1.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.916944226934       residual = 5.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.916944632018       residual = 3.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.916944743742       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.916944768314       residual = 5.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.916944733806       residual = 5.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.916944834266       residual = 3.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.916944813403       residual = 1.59e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.916944786343       residual = 1.84e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.916944804337       residual = 9.55e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.916944804511       residual = 3.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.916944814512       residual = 1.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.916944822930       residual = 4.42e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+00 is 8.173056e-04

solving harmonic davidson linear method for identity shift 4.0000e+00, overlap shift 4.0000e+01 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916902735649       residual = 8.72e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916908325153       residual = 9.16e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916909687355       residual = 5.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.916910193027       residual = 2.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.916911223236       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.916911943238       residual = 2.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.916912251662       residual = 1.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.916912394838       residual = 8.82e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.916912696407       residual = 4.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916912791967       residual = 4.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.916912958224       residual = 2.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.916913203135       residual = 1.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.916913265635       residual = 1.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.916913305407       residual = 1.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.916913431436       residual = 1.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.916913537992       residual = 4.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.916913635994       residual = 2.95e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.916913660284       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.916913665786       residual = 5.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.916913656809       residual = 4.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.916913681214       residual = 2.65e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.916913675338       residual = 1.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.916913669202       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.916913673359       residual = 8.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.916913673043       residual = 3.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.916913675349       residual = 1.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.916913677308       residual = 3.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+00 is 2.067292e-04

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.132306 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1577e+01
  </log>
  <optVariables href="H2O.s000.opt.xml">
uu_0  2.517335e-01                 1 1 ON  0
uu_1  1.009234e-01                 1 1 ON  1
uu_2  1.615926e-02                 1 1 ON  2
uu_3  -3.225140e-02                1 1 ON  3
uu_4  -6.385153e-02                1 1 ON  4
uu_5  -8.565985e-02                1 1 ON  5
uu_6  -1.000988e-01                1 1 ON  6
uu_7  -1.065764e-01                1 1 ON  7
uu_8  -9.683291e-02                1 1 ON  8
uu_9  -6.391858e-02                1 1 ON  9
ud_0  3.490555e-01                 1 1 ON  10
ud_1  1.233429e-01                 1 1 ON  11
ud_2  2.360787e-02                 1 1 ON  12
ud_3  -3.054034e-02                1 1 ON  13
ud_4  -7.003164e-02                1 1 ON  14
ud_5  -9.502779e-02                1 1 ON  15
ud_6  -1.087001e-01                1 1 ON  16
ud_7  -1.109550e-01                1 1 ON  17
ud_8  -9.732963e-02                1 1 ON  18
ud_9  -6.200248e-02                1 1 ON  19
eO_0  -5.690856e-01                1 1 ON  20
eO_1  -3.058066e-01                1 1 ON  21
eO_2  4.749471e-02                 1 1 ON  22
eO_3  2.841179e-01                 1 1 ON  23
eO_4  3.915422e-01                 1 1 ON  24
eO_5  3.211549e-01                 1 1 ON  25
eO_6  1.200985e-01                 1 1 ON  26
eO_7  -7.925272e-02                1 1 ON  27
eO_8  -1.549145e-01                1 1 ON  28
eO_9  -6.123407e-02                1 1 ON  29
eH1_0 -2.281630e-01                1 1 ON  30
eH1_1 -1.105592e-01                1 1 ON  31
eH1_2 -6.149144e-02                1 1 ON  32
eH1_3 -2.520064e-02                1 1 ON  33
eH1_4 4.213640e-03                 1 1 ON  34
eH1_5 2.384569e-02                 1 1 ON  35
eH1_6 6.574910e-02                 1 1 ON  36
eH1_7 1.153918e-01                 1 1 ON  37
eH1_8 1.433687e-01                 1 1 ON  38
eH1_9 7.472702e-02                 1 1 ON  39
eH2_0 -2.308847e-01                1 1 ON  40
eH2_1 -1.140379e-01                1 1 ON  41
eH2_2 -6.434990e-02                1 1 ON  42
eH2_3 -2.726667e-02                1 1 ON  43
eH2_4 7.622685e-04                 1 1 ON  44
eH2_5 2.482069e-02                 1 1 ON  45
eH2_6 7.585290e-02                 1 1 ON  46
eH2_7 1.266358e-01                 1 1 ON  47
eH2_8 1.609218e-01                 1 1 ON  48
eH2_9 6.436916e-02                 1 1 ON  49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -16.9229
    reference variance = 0.215416
====================================================
  Execution time = 3.9381e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s000
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0325e-01
  Total weights = 2.0000e+06
  Execution time = 3.7359e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303286689031
                                         uncertainty =       0.006900746432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303286689031
                                         uncertainty =       0.006900746432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389364327
  error estimate for blocks of size 2^( 2) =       0.000405731168
  error estimate for blocks of size 2^( 3) =       0.000422389400
  error estimate for blocks of size 2^( 4) =       0.000436754701
  error estimate for blocks of size 2^( 5) =       0.000447767484
  error estimate for blocks of size 2^( 6) =       0.000454612576
  error estimate for blocks of size 2^( 7) =       0.000458872617

      target function =      -0.907300582441
              le_mean =     -16.898720842065
             les_mean =     285.869975104014
             stat err =       0.000449501845
             autocorr =       1.332755975100
   target nu stat err =       0.000449501845
   target dn stat err =       0.007227884477
      target stat err =       0.011230243978
              std dev =       0.550644311308
             le_variance =       0.303209157575

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303451798409
                                         uncertainty =       0.006887602081

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303451798409
                                         uncertainty =       0.006887602081

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389470268
  error estimate for blocks of size 2^( 2) =       0.000405863083
  error estimate for blocks of size 2^( 3) =       0.000422569038
  error estimate for blocks of size 2^( 4) =       0.000436988479
  error estimate for blocks of size 2^( 5) =       0.000448055208
  error estimate for blocks of size 2^( 6) =       0.000454906829
  error estimate for blocks of size 2^( 7) =       0.000459210312

      target function =      -0.907045206131
              le_mean =     -16.898724450575
             les_mean =     285.870262083332
             stat err =       0.000449790207
             autocorr =       1.333740605679
   target nu stat err =       0.000449790207
   target dn stat err =       0.007214634058
      target stat err =       0.011203560735
              std dev =       0.550794134460
             le_variance =       0.303374178556

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303377763832
                                         uncertainty =       0.006893414173

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303377763832
                                         uncertainty =       0.006893414173

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389422763
  error estimate for blocks of size 2^( 2) =       0.000405802002
  error estimate for blocks of size 2^( 3) =       0.000422484994
  error estimate for blocks of size 2^( 4) =       0.000436878897
  error estimate for blocks of size 2^( 5) =       0.000447921047
  error estimate for blocks of size 2^( 6) =       0.000454769250
  error estimate for blocks of size 2^( 7) =       0.000459054014

      target function =      -0.907159806780
              le_mean =     -16.898721307786
             les_mean =     285.870081863817
             stat err =       0.000449655802
             autocorr =       1.333268855623
   target nu stat err =       0.000449655802
   target dn stat err =       0.007220494466
      target stat err =       0.011215366452
              std dev =       0.550726953446
             le_variance =       0.303300177252

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303297912090
                                         uncertainty =       0.006899800689

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303297912090
                                         uncertainty =       0.006899800689

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389371528
  error estimate for blocks of size 2^( 2) =       0.000405739805
  error estimate for blocks of size 2^( 3) =       0.000422401075
  error estimate for blocks of size 2^( 4) =       0.000436769938
  error estimate for blocks of size 2^( 5) =       0.000447786440
  error estimate for blocks of size 2^( 6) =       0.000454631897
  error estimate for blocks of size 2^( 7) =       0.000458895131

      target function =      -0.907283248514
              le_mean =     -16.898720680668
             les_mean =     285.869980864911
             stat err =       0.000449520852
             autocorr =       1.332819386591
   target nu stat err =       0.000449520852
   target dn stat err =       0.007226931352
      target stat err =       0.011228340251
              std dev =       0.550654495383
             le_variance =       0.303220373286


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.907300582441        initial  <--
     2.5000e-01     2.5000e+00             3.1213e-03        -0.907045206131
     1.0000e+00     1.0000e+01             8.1731e-04        -0.907159806780
     4.0000e+00     4.0000e+01             2.0673e-04        -0.907283248514

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.2454
  </log>
  <optVariables href="H2O.s000.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0985e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s001 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s001 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=1  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6876e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -16.9089
    reference variance = 0.282953
====================================================
  Execution time = 4.2349e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s001
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9058e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0695e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290621624161
                                         uncertainty =       0.002190452977

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290621624161
                                         uncertainty =       0.002190452977

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381172343
  error estimate for blocks of size 2^( 2) =       0.000397862694
  error estimate for blocks of size 2^( 3) =       0.000414813688
  error estimate for blocks of size 2^( 4) =       0.000429651755
  error estimate for blocks of size 2^( 5) =       0.000440502985
  error estimate for blocks of size 2^( 6) =       0.000447176835
  error estimate for blocks of size 2^( 7) =       0.000452333546

      target function =      -0.927419872485
              le_mean =     -16.899040450371
             les_mean =     285.868152707990
             stat err =       0.000442416280
             autocorr =       1.347160797573
   target nu stat err =       0.000442416280
   target dn stat err =       0.002162097846
      target stat err =       0.003587645324
              std dev =       0.539059096954
             le_variance =       0.290584710009


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689904045037e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+00, overlap shift 2.5000e+01 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927432267089       residual = 1.07e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927441815679       residual = 1.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927444270788       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927445013055       residual = 1.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927445621265       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927446309942       residual = 1.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927447158791       residual = 5.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927447264688       residual = 4.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927447553595       residual = 2.74e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927447739127       residual = 1.92e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927447866282       residual = 1.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927448132824       residual = 2.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927448159266       residual = 9.93e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927448220788       residual = 5.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927448352221       residual = 4.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927448354076       residual = 3.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927448380244       residual = 1.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927448393859       residual = 1.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927448424369       residual = 3.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927448455911       residual = 5.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927448439056       residual = 1.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927448447579       residual = 1.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927448438986       residual = 4.29e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927448437011       residual = 2.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927448439055       residual = 2.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.927448440835       residual = 7.41e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+00 is 1.806531e-04

solving harmonic davidson linear method for identity shift 1.0000e+01, overlap shift 1.0000e+02 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927432267089       residual = 1.07e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927434703134       residual = 1.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927435327945       residual = 4.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927435515358       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927435670058       residual = 1.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927435844987       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927436060144       residual = 4.70e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927436087283       residual = 4.21e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927436159917       residual = 2.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927436206216       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927436238274       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927436304831       residual = 2.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927436310406       residual = 9.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927436326012       residual = 4.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927436358563       residual = 4.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927436358861       residual = 2.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927436365387       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927436368585       residual = 1.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927436376039       residual = 3.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927436383756       residual = 4.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927436379492       residual = 1.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927436381496       residual = 1.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927436379460       residual = 3.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927436378956       residual = 2.71e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927436379472       residual = 1.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.927436379885       residual = 6.72e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+01 is 4.541621e-05

solving harmonic davidson linear method for identity shift 4.0000e+01, overlap shift 4.0000e+02 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927432267089       residual = 1.07e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927432879235       residual = 1.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927433036145       residual = 4.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927433083114       residual = 1.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927433121958       residual = 1.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927433165866       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927433219840       residual = 4.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927433226679       residual = 4.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927433244853       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927433256422       residual = 1.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927433264454       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927433281086       residual = 2.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927433282414       residual = 9.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927433286330       residual = 4.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927433294448       residual = 4.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927433294512       residual = 2.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927433296142       residual = 1.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927433296929       residual = 1.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927433298781       residual = 3.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927433300699       residual = 4.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927433299630       residual = 1.70e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927433300123       residual = 1.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927433299622       residual = 3.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927433299495       residual = 2.65e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927433299624       residual = 1.78e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.927433299726       residual = 6.55e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+01 is 1.137009e-05

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.166749 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3087e+01
  </log>
  <optVariables href="H2O.s001.opt.xml">
 uu_0                 2.517023e-01 1 1  ON 0
 uu_1                 1.009211e-01 1 1  ON 1
 uu_2                 1.614597e-02 1 1  ON 2
 uu_3                -3.226007e-02 1 1  ON 3
 uu_4                -6.388844e-02 1 1  ON 4
 uu_5                -8.576820e-02 1 1  ON 5
 uu_6                -1.001157e-01 1 1  ON 6
 uu_7                -1.065357e-01 1 1  ON 7
 uu_8                -9.666190e-02 1 1  ON 8
 uu_9                -6.385770e-02 1 1  ON 9
 ud_0                 3.492240e-01 1 1  ON 10
 ud_1                 1.235400e-01 1 1  ON 11
 ud_2                 2.391460e-02 1 1  ON 12
 ud_3                -3.021390e-02 1 1  ON 13
 ud_4                -6.977014e-02 1 1  ON 14
 ud_5                -9.485344e-02 1 1  ON 15
 ud_6                -1.085670e-01 1 1  ON 16
 ud_7                -1.109560e-01 1 1  ON 17
 ud_8                -9.791943e-02 1 1  ON 18
 ud_9                -6.280626e-02 1 1  ON 19
 eO_0                -5.692569e-01 1 1  ON 20
 eO_1                -3.060416e-01 1 1  ON 21
 eO_2                 4.732294e-02 1 1  ON 22
 eO_3                 2.840615e-01 1 1  ON 23
 eO_4                 3.913251e-01 1 1  ON 24
 eO_5                 3.211935e-01 1 1  ON 25
 eO_6                 1.205306e-01 1 1  ON 26
 eO_7                -7.890958e-02 1 1  ON 27
 eO_8                -1.548863e-01 1 1  ON 28
 eO_9                -6.121484e-02 1 1  ON 29
eH1_0                -2.278052e-01 1 1  ON 30
eH1_1                -1.106474e-01 1 1  ON 31
eH1_2                -6.162594e-02 1 1  ON 32
eH1_3                -2.530602e-02 1 1  ON 33
eH1_4                 4.235581e-03 1 1  ON 34
eH1_5                 2.366229e-02 1 1  ON 35
eH1_6                 6.569620e-02 1 1  ON 36
eH1_7                 1.154514e-01 1 1  ON 37
eH1_8                 1.435394e-01 1 1  ON 38
eH1_9                 7.469792e-02 1 1  ON 39
eH2_0                -2.307341e-01 1 1  ON 40
eH2_1                -1.139263e-01 1 1  ON 41
eH2_2                -6.442714e-02 1 1  ON 42
eH2_3                -2.722371e-02 1 1  ON 43
eH2_4                 1.079492e-03 1 1  ON 44
eH2_5                 2.532200e-02 1 1  ON 45
eH2_6                 7.563593e-02 1 1  ON 46
eH2_7                 1.260095e-01 1 1  ON 47
eH2_8                 1.608947e-01 1 1  ON 48
eH2_9                 6.418921e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -16.8553
    reference variance = 0.237742
====================================================
  Execution time = 3.9161e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s001
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0141e-01
  Total weights = 2.0000e+06
  Execution time = 3.7361e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301424150134
                                         uncertainty =       0.005023172545

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301424150134
                                         uncertainty =       0.005023172545

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388202039
  error estimate for blocks of size 2^( 2) =       0.000404778526
  error estimate for blocks of size 2^( 3) =       0.000421291847
  error estimate for blocks of size 2^( 4) =       0.000436054728
  error estimate for blocks of size 2^( 5) =       0.000446650046
  error estimate for blocks of size 2^( 6) =       0.000454367721
  error estimate for blocks of size 2^( 7) =       0.000458186255

      target function =      -0.910184150224
              le_mean =     -16.898683324070
             les_mean =     285.866899582262
             stat err =       0.000448814688
             autocorr =       1.336652448407
   target nu stat err =       0.000448814688
   target dn stat err =       0.004983471686
      target stat err =       0.007810870931
              std dev =       0.549000588127
             le_variance =       0.301401645764

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301448001944
                                         uncertainty =       0.005025334700

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301448001944
                                         uncertainty =       0.005025334700

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388217398
  error estimate for blocks of size 2^( 2) =       0.000404795840
  error estimate for blocks of size 2^( 3) =       0.000421315315
  error estimate for blocks of size 2^( 4) =       0.000436085343
  error estimate for blocks of size 2^( 5) =       0.000446686872
  error estimate for blocks of size 2^( 6) =       0.000454408349
  error estimate for blocks of size 2^( 7) =       0.000458227135

      target function =      -0.910146894370
              le_mean =     -16.898683520429
             les_mean =     285.866930068513
             stat err =       0.000448851925
             autocorr =       1.336768478197
   target nu stat err =       0.000448851925
   target dn stat err =       0.004985392150
      target stat err =       0.007813224805
              std dev =       0.549022308833
             le_variance =       0.301425495596

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301436249285
                                         uncertainty =       0.005024277719

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301436249285
                                         uncertainty =       0.005024277719

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388209830
  error estimate for blocks of size 2^( 2) =       0.000404787267
  error estimate for blocks of size 2^( 3) =       0.000421303669
  error estimate for blocks of size 2^( 4) =       0.000436070137
  error estimate for blocks of size 2^( 5) =       0.000446668579
  error estimate for blocks of size 2^( 6) =       0.000454388166
  error estimate for blocks of size 2^( 7) =       0.000458206832

      target function =      -0.910165252525
              le_mean =     -16.898683401201
             les_mean =     285.866914287147
             stat err =       0.000448833428
             autocorr =       1.336710422763
   target nu stat err =       0.000448833428
   target dn stat err =       0.004984453943
      target stat err =       0.007812077217
              std dev =       0.549011606266
             le_variance =       0.301413743815

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301425663019
                                         uncertainty =       0.005023311432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301425663019
                                         uncertainty =       0.005023311432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388203013
  error estimate for blocks of size 2^( 2) =       0.000404779617
  error estimate for blocks of size 2^( 3) =       0.000421293322
  error estimate for blocks of size 2^( 4) =       0.000436056652
  error estimate for blocks of size 2^( 5) =       0.000446652360
  error estimate for blocks of size 2^( 6) =       0.000454370274
  error estimate for blocks of size 2^( 7) =       0.000458188825

      target function =      -0.910181787330
              le_mean =     -16.898683331272
             les_mean =     285.866901338414
             stat err =       0.000448817028
             autocorr =       1.336659679253
   target nu stat err =       0.000448817028
   target dn stat err =       0.004983595142
      target stat err =       0.007811022722
              std dev =       0.549001965850
             le_variance =       0.301403158507


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910184150224        initial  <--
     2.5000e+00     2.5000e+01             1.8065e-04        -0.910146894370
     1.0000e+01     1.0000e+02             4.5416e-05        -0.910165252525
     4.0000e+01     4.0000e+02             1.1370e-05        -0.910181787330

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 57.9096
  </log>
  <optVariables href="H2O.s001.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1100e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s002 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s002 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=2  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6879e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -16.9139
    reference variance = 0.291682
====================================================
  Execution time = 4.0436e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s002
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9269e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0874e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292748020493
                                         uncertainty =       0.004008063449

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292748020493
                                         uncertainty =       0.004008063449

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382548313
  error estimate for blocks of size 2^( 2) =       0.000399180180
  error estimate for blocks of size 2^( 3) =       0.000415842281
  error estimate for blocks of size 2^( 4) =       0.000430198965
  error estimate for blocks of size 2^( 5) =       0.000439937528
  error estimate for blocks of size 2^( 6) =       0.000447560773
  error estimate for blocks of size 2^( 7) =       0.000451500108

      target function =      -0.924021823017
              le_mean =     -16.898393828599
             les_mean =     285.848400263046
             stat err =       0.000442299343
             autocorr =       1.336780210579
   target nu stat err =       0.000442299343
   target dn stat err =       0.003733579728
      target stat err =       0.006047461087
              std dev =       0.541005011962
             le_variance =       0.292686422968


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689839382860e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+01, overlap shift 2.5000e+02 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924059838471       residual = 6.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924060499688       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924060947239       residual = 9.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924061111294       residual = 6.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924061307714       residual = 3.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924061450066       residual = 4.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.924061579520       residual = 1.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924061638983       residual = 8.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.924061720828       residual = 8.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.924061746245       residual = 5.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.924061848325       residual = 6.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.924061908736       residual = 3.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.924061937372       residual = 1.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.924061947274       residual = 2.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.924061977020       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.924062006586       residual = 7.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.924062014173       residual = 3.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924062018598       residual = 2.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.924062014332       residual = 1.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.924062017575       residual = 9.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.924062024683       residual = 6.71e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.924062027517       residual = 8.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.924062026386       residual = 2.71e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.924062026631       residual = 9.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.924062028460       residual = 7.29e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.924062028748       residual = 1.80e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.924062028588       residual = 8.60e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+01 is 5.322859e-05

solving harmonic davidson linear method for identity shift 1.0000e+02, overlap shift 1.0000e+03 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924059838471       residual = 6.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924060004139       residual = 1.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924060116279       residual = 9.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924060157357       residual = 6.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924060206517       residual = 3.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924060242065       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.924060274520       residual = 1.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924060289421       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.924060309910       residual = 8.29e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.924060316239       residual = 5.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.924060341791       residual = 6.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.924060356876       residual = 3.72e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.924060364023       residual = 1.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.924060366506       residual = 2.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.924060373939       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.924060381322       residual = 7.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.924060383210       residual = 3.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924060384312       residual = 2.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.924060383240       residual = 1.87e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.924060384052       residual = 9.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.924060385827       residual = 6.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.924060386531       residual = 8.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.924060386247       residual = 2.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.924060386309       residual = 9.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.924060386767       residual = 6.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.924060386835       residual = 1.80e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.924060386795       residual = 8.50e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+02 is 1.330748e-05

solving harmonic davidson linear method for identity shift 4.0000e+02, overlap shift 4.0000e+03 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924059838471       residual = 6.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924059879911       residual = 1.24e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924059907962       residual = 9.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924059918235       residual = 6.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924059930529       residual = 3.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924059939414       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.924059947533       residual = 1.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924059951260       residual = 8.88e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.924059956384       residual = 8.28e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.924059957965       residual = 5.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.924059964355       residual = 6.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.924059968125       residual = 3.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.924059969911       residual = 1.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.924059970532       residual = 2.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.924059972390       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.924059974235       residual = 7.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.924059974708       residual = 3.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924059974980       residual = 2.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.924059974714       residual = 1.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.924059974917       residual = 9.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.924059975359       residual = 6.65e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.924059975536       residual = 8.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.924059975466       residual = 2.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.924059975480       residual = 9.06e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.924059975592       residual = 6.91e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.924059975612       residual = 1.80e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.924059975602       residual = 8.47e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+02 is 3.326891e-06

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.202229 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1353e+01
  </log>
  <optVariables href="H2O.s002.opt.xml">
 uu_0                 2.517180e-01 1 1  ON 0
 uu_1                 1.009401e-01 1 1  ON 1
 uu_2                 1.616742e-02 1 1  ON 2
 uu_3                -3.223838e-02 1 1  ON 3
 uu_4                -6.387195e-02 1 1  ON 4
 uu_5                -8.576551e-02 1 1  ON 5
 uu_6                -1.001291e-01 1 1  ON 6
 uu_7                -1.065609e-01 1 1  ON 7
 uu_8                -9.668390e-02 1 1  ON 8
 uu_9                -6.389378e-02 1 1  ON 9
 ud_0                 3.492124e-01 1 1  ON 10
 ud_1                 1.235395e-01 1 1  ON 11
 ud_2                 2.392574e-02 1 1  ON 12
 ud_3                -3.019771e-02 1 1  ON 13
 ud_4                -6.975739e-02 1 1  ON 14
 ud_5                -9.484231e-02 1 1  ON 15
 ud_6                -1.085592e-01 1 1  ON 16
 ud_7                -1.109482e-01 1 1  ON 17
 ud_8                -9.792017e-02 1 1  ON 18
 ud_9                -6.281801e-02 1 1  ON 19
 eO_0                -5.692838e-01 1 1  ON 20
 eO_1                -3.060805e-01 1 1  ON 21
 eO_2                 4.730049e-02 1 1  ON 22
 eO_3                 2.840589e-01 1 1  ON 23
 eO_4                 3.913427e-01 1 1  ON 24
 eO_5                 3.212343e-01 1 1  ON 25
 eO_6                 1.205649e-01 1 1  ON 26
 eO_7                -7.888067e-02 1 1  ON 27
 eO_8                -1.549104e-01 1 1  ON 28
 eO_9                -6.122117e-02 1 1  ON 29
eH1_0                -2.277720e-01 1 1  ON 30
eH1_1                -1.106393e-01 1 1  ON 31
eH1_2                -6.162982e-02 1 1  ON 32
eH1_3                -2.530754e-02 1 1  ON 33
eH1_4                 4.245316e-03 1 1  ON 34
eH1_5                 2.366537e-02 1 1  ON 35
eH1_6                 6.569055e-02 1 1  ON 36
eH1_7                 1.154349e-01 1 1  ON 37
eH1_8                 1.435260e-01 1 1  ON 38
eH1_9                 7.468750e-02 1 1  ON 39
eH2_0                -2.307059e-01 1 1  ON 40
eH2_1                -1.139370e-01 1 1  ON 41
eH2_2                -6.444427e-02 1 1  ON 42
eH2_3                -2.722801e-02 1 1  ON 43
eH2_4                 1.074802e-03 1 1  ON 44
eH2_5                 2.532751e-02 1 1  ON 45
eH2_6                 7.564543e-02 1 1  ON 46
eH2_7                 1.260020e-01 1 1  ON 47
eH2_8                 1.609116e-01 1 1  ON 48
eH2_9                 6.417371e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -16.9441
    reference variance = 0.358551
====================================================
  Execution time = 4.1359e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s002
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9728e-01
  Total weights = 2.0000e+06
  Execution time = 3.7179e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296501413
                                         uncertainty =       0.004778937822

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296501413
                                         uncertainty =       0.004778937822

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385540327
  error estimate for blocks of size 2^( 2) =       0.000402303496
  error estimate for blocks of size 2^( 3) =       0.000419047639
  error estimate for blocks of size 2^( 4) =       0.000433904245
  error estimate for blocks of size 2^( 5) =       0.000445014917
  error estimate for blocks of size 2^( 6) =       0.000450970968
  error estimate for blocks of size 2^( 7) =       0.000454123952

      target function =      -0.916626375589
              le_mean =     -16.899350830407
             les_mean =     285.885341027735
             stat err =       0.000446003520
             autocorr =       1.338249072111
   target nu stat err =       0.000446003520
   target dn stat err =       0.004835415930
      target stat err =       0.007697403219
              std dev =       0.545236359005
             le_variance =       0.297282687182

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296641346
                                         uncertainty =       0.004778967888

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296641346
                                         uncertainty =       0.004778967888

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385540418
  error estimate for blocks of size 2^( 2) =       0.000402304335
  error estimate for blocks of size 2^( 3) =       0.000419049502
  error estimate for blocks of size 2^( 4) =       0.000433907092
  error estimate for blocks of size 2^( 5) =       0.000445018289
  error estimate for blocks of size 2^( 6) =       0.000450974674
  error estimate for blocks of size 2^( 7) =       0.000454127738

      target function =      -0.916626150842
              le_mean =     -16.899350848694
             les_mean =     285.885341786898
             stat err =       0.000446006949
             autocorr =       1.338269009844
   target nu stat err =       0.000446006949
   target dn stat err =       0.004835431797
      target stat err =       0.007697425330
              std dev =       0.545236488407
             le_variance =       0.297282828291

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296570535
                                         uncertainty =       0.004778952878

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296570535
                                         uncertainty =       0.004778952878

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385540372
  error estimate for blocks of size 2^( 2) =       0.000402303915
  error estimate for blocks of size 2^( 3) =       0.000419048571
  error estimate for blocks of size 2^( 4) =       0.000433905669
  error estimate for blocks of size 2^( 5) =       0.000445016603
  error estimate for blocks of size 2^( 6) =       0.000450972822
  error estimate for blocks of size 2^( 7) =       0.000454125845

      target function =      -0.916626264563
              le_mean =     -16.899350839311
             les_mean =     285.885341398389
             stat err =       0.000446005235
             autocorr =       1.338259045943
   target nu stat err =       0.000446005235
   target dn stat err =       0.004835423875
      target stat err =       0.007697414312
              std dev =       0.545236422933
             le_variance =       0.297282756893

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296509971
                                         uncertainty =       0.004778939704

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297296509971
                                         uncertainty =       0.004778939704

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385540332
  error estimate for blocks of size 2^( 2) =       0.000402303549
  error estimate for blocks of size 2^( 3) =       0.000419047755
  error estimate for blocks of size 2^( 4) =       0.000433904423
  error estimate for blocks of size 2^( 5) =       0.000445015127
  error estimate for blocks of size 2^( 6) =       0.000450971200
  error estimate for blocks of size 2^( 7) =       0.000454124188

      target function =      -0.916626361842
              le_mean =     -16.899350831494
             les_mean =     285.885341073097
             stat err =       0.000446003735
             autocorr =       1.338250318856
   target nu stat err =       0.000446003735
   target dn stat err =       0.004835416924
      target stat err =       0.007697404608
              std dev =       0.545236366921
             le_variance =       0.297282695813


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916626375589        initial  <--
     2.5000e+01     2.5000e+02             5.3229e-05        -0.916626150842
     1.0000e+02     1.0000e+03             1.3307e-05        -0.916626264563
     4.0000e+02     4.0000e+03             3.3269e-06        -0.916626361842

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.0947
  </log>
  <optVariables href="H2O.s002.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1148e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s003 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s003 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=3  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -16.9339
    reference variance = 0.263887
====================================================
  Execution time = 4.0428e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s003
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9898e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0928e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298986879131
                                         uncertainty =       0.003858035710

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298986879131
                                         uncertainty =       0.003858035710

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386639461
  error estimate for blocks of size 2^( 2) =       0.000403179549
  error estimate for blocks of size 2^( 3) =       0.000420371713
  error estimate for blocks of size 2^( 4) =       0.000435185156
  error estimate for blocks of size 2^( 5) =       0.000446317658
  error estimate for blocks of size 2^( 6) =       0.000454631609
  error estimate for blocks of size 2^( 7) =       0.000456781064

      target function =      -0.914023888925
              le_mean =     -16.898253253113
             les_mean =     285.849943002128
             stat err =       0.000448228872
             autocorr =       1.343962966903
   target nu stat err =       0.000448228872
   target dn stat err =       0.003917432041
      target stat err =       0.006204723240
              std dev =       0.546790769204
             le_variance =       0.298980145287


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689825325311e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+02, overlap shift 2.5000e+03 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914064228087       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914064313708       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914064339026       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.914064356767       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.914064371257       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.914064380356       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.914064388101       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.914064391281       residual = 5.17e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.914064398277       residual = 2.63e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.914064401483       residual = 2.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.914064403658       residual = 3.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.914064405722       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.914064406674       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.914064407155       residual = 6.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.914064408651       residual = 4.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.914064409278       residual = 2.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.914064409734       residual = 1.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.914064410020       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.914064409985       residual = 4.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.914064409898       residual = 4.98e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.914064409909       residual = 3.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.914064410091       residual = 1.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.914064410116       residual = 8.92e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.914064410001       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.914064410050       residual = 2.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.914064410055       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.914064410090       residual = 2.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+02 is 2.270782e-06

solving harmonic davidson linear method for identity shift 1.0000e+03, overlap shift 1.0000e+04 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914064228087       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914064249497       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914064255827       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.914064260263       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.914064263886       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.914064266164       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.914064268099       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.914064268892       residual = 5.17e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.914064270642       residual = 2.63e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.914064271444       residual = 2.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.914064271991       residual = 3.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.914064272504       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.914064272740       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.914064272862       residual = 6.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.914064273233       residual = 4.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.914064273390       residual = 2.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.914064273508       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.914064273576       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.914064273569       residual = 4.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.914064273548       residual = 4.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.914064273548       residual = 3.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.914064273599       residual = 1.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.914064273604       residual = 8.91e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.914064273572       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.914064273587       residual = 2.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.914064273587       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.914064273597       residual = 2.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+03 is 5.677406e-07

solving harmonic davidson linear method for identity shift 4.0000e+03, overlap shift 4.0000e+04 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914064228087       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914064233440       residual = 9.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914064235022       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.914064236131       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.914064237031       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.914064237597       residual = 1.55e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.914064238090       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.914064238289       residual = 5.17e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.914064238733       residual = 2.63e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.914064238936       residual = 2.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.914064239054       residual = 3.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.914064239193       residual = 1.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.914064239248       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.914064239277       residual = 6.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.914064239366       residual = 4.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.914064239415       residual = 2.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.914064239427       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.914064239454       residual = 1.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.914064239456       residual = 4.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.914064239455       residual = 4.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.914064239442       residual = 3.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.914064239463       residual = 1.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.914064239464       residual = 8.90e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.914064239457       residual = 3.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.914064239455       residual = 2.79e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.914064239467       residual = 1.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.914064239455       residual = 2.52e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+03 is 1.419380e-07

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.237602 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1399e+01
  </log>
  <optVariables href="H2O.s003.opt.xml">
 uu_0                 2.517229e-01 1 1  ON 0
 uu_1                 1.009437e-01 1 1  ON 1
 uu_2                 1.617050e-02 1 1  ON 2
 uu_3                -3.223701e-02 1 1  ON 3
 uu_4                -6.387119e-02 1 1  ON 4
 uu_5                -8.576595e-02 1 1  ON 5
 uu_6                -1.001310e-01 1 1  ON 6
 uu_7                -1.065670e-01 1 1  ON 7
 uu_8                -9.668719e-02 1 1  ON 8
 uu_9                -6.389499e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235408e-01 1 1  ON 11
 ud_2                 2.392767e-02 1 1  ON 12
 ud_3                -3.019601e-02 1 1  ON 13
 ud_4                -6.975638e-02 1 1  ON 14
 ud_5                -9.484141e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109503e-01 1 1  ON 17
 ud_8                -9.792095e-02 1 1  ON 18
 ud_9                -6.281961e-02 1 1  ON 19
 eO_0                -5.692880e-01 1 1  ON 20
 eO_1                -3.060839e-01 1 1  ON 21
 eO_2                 4.730138e-02 1 1  ON 22
 eO_3                 2.840619e-01 1 1  ON 23
 eO_4                 3.913443e-01 1 1  ON 24
 eO_5                 3.212384e-01 1 1  ON 25
 eO_6                 1.205689e-01 1 1  ON 26
 eO_7                -7.888716e-02 1 1  ON 27
 eO_8                -1.549101e-01 1 1  ON 28
 eO_9                -6.122092e-02 1 1  ON 29
eH1_0                -2.277700e-01 1 1  ON 30
eH1_1                -1.106401e-01 1 1  ON 31
eH1_2                -6.162951e-02 1 1  ON 32
eH1_3                -2.530643e-02 1 1  ON 33
eH1_4                 4.247841e-03 1 1  ON 34
eH1_5                 2.367085e-02 1 1  ON 35
eH1_6                 6.569459e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435220e-01 1 1  ON 38
eH1_9                 7.467427e-02 1 1  ON 39
eH2_0                -2.307045e-01 1 1  ON 40
eH2_1                -1.139384e-01 1 1  ON 41
eH2_2                -6.444517e-02 1 1  ON 42
eH2_3                -2.722649e-02 1 1  ON 43
eH2_4                 1.073619e-03 1 1  ON 44
eH2_5                 2.532935e-02 1 1  ON 45
eH2_6                 7.564444e-02 1 1  ON 46
eH2_7                 1.260026e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417247e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -16.881
    reference variance = 0.265149
====================================================
  Execution time = 3.9617e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s003
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8870e-01
  Total weights = 2.0000e+06
  Execution time = 3.7334e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721924546
                                         uncertainty =       0.002513162457

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721924546
                                         uncertainty =       0.002513162457

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379934055
  error estimate for blocks of size 2^( 2) =       0.000396559349
  error estimate for blocks of size 2^( 3) =       0.000413499675
  error estimate for blocks of size 2^( 4) =       0.000428960507
  error estimate for blocks of size 2^( 5) =       0.000439644291
  error estimate for blocks of size 2^( 6) =       0.000446723594
  error estimate for blocks of size 2^( 7) =       0.000448754723

      target function =      -0.930473811857
              le_mean =     -16.899172791482
             les_mean =     285.870740664870
             stat err =       0.000441020778
             autocorr =       1.347415864798
   target nu stat err =       0.000441020778
   target dn stat err =       0.002707801035
      target stat err =       0.004484870161
              std dev =       0.537307893910
             le_variance =       0.288699772858

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288722030086
                                         uncertainty =       0.002513173777

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288722030086
                                         uncertainty =       0.002513173777

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379934125
  error estimate for blocks of size 2^( 2) =       0.000396559466
  error estimate for blocks of size 2^( 3) =       0.000413499870
  error estimate for blocks of size 2^( 4) =       0.000428960787
  error estimate for blocks of size 2^( 5) =       0.000439644639
  error estimate for blocks of size 2^( 6) =       0.000446723969
  error estimate for blocks of size 2^( 7) =       0.000448755098

      target function =      -0.930473638940
              le_mean =     -16.899172797868
             les_mean =     285.870740986497
             stat err =       0.000441021123
             autocorr =       1.347417477754
   target nu stat err =       0.000441021123
   target dn stat err =       0.002707813535
      target stat err =       0.004484888766
              std dev =       0.537307992355
             le_variance =       0.288699878648

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721977320
                                         uncertainty =       0.002513168118

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721977320
                                         uncertainty =       0.002513168118

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379934090
  error estimate for blocks of size 2^( 2) =       0.000396559408
  error estimate for blocks of size 2^( 3) =       0.000413499773
  error estimate for blocks of size 2^( 4) =       0.000428960647
  error estimate for blocks of size 2^( 5) =       0.000439644465
  error estimate for blocks of size 2^( 6) =       0.000446723782
  error estimate for blocks of size 2^( 7) =       0.000448754910

      target function =      -0.930473725391
              le_mean =     -16.899172794673
             les_mean =     285.870740825633
             stat err =       0.000441020951
             autocorr =       1.347416671323
   target nu stat err =       0.000441020951
   target dn stat err =       0.002707807286
      target stat err =       0.004484879465
              std dev =       0.537307943136
             le_variance =       0.288699825757

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721931143
                                         uncertainty =       0.002513163165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288721931143
                                         uncertainty =       0.002513163165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379934060
  error estimate for blocks of size 2^( 2) =       0.000396559357
  error estimate for blocks of size 2^( 3) =       0.000413499688
  error estimate for blocks of size 2^( 4) =       0.000428960524
  error estimate for blocks of size 2^( 5) =       0.000439644312
  error estimate for blocks of size 2^( 6) =       0.000446723617
  error estimate for blocks of size 2^( 7) =       0.000448754746

      target function =      -0.930473801049
              le_mean =     -16.899172791881
             les_mean =     285.870740684958
             stat err =       0.000441020800
             autocorr =       1.347415965615
   target nu stat err =       0.000441020800
   target dn stat err =       0.002707801817
      target stat err =       0.004484871324
              std dev =       0.537307900063
             le_variance =       0.288699779470


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.930473811857        initial  <--
     2.5000e+02     2.5000e+03             2.2708e-06        -0.930473638940
     1.0000e+03     1.0000e+04             5.6774e-07        -0.930473725391
     4.0000e+03     4.0000e+04             1.4194e-07        -0.930473801049

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.0792
  </log>
  <optVariables href="H2O.s003.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1149e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s004 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s004 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=4  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -16.9523
    reference variance = 0.203016
====================================================
  Execution time = 4.0444e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s004
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9571e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0809e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295792533323
                                         uncertainty =       0.004677083200

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295792533323
                                         uncertainty =       0.004677083200

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384517496
  error estimate for blocks of size 2^( 2) =       0.000401527716
  error estimate for blocks of size 2^( 3) =       0.000418594424
  error estimate for blocks of size 2^( 4) =       0.000433123497
  error estimate for blocks of size 2^( 5) =       0.000444678239
  error estimate for blocks of size 2^( 6) =       0.000451437113
  error estimate for blocks of size 2^( 7) =       0.000457683804

      target function =      -0.919170992644
              le_mean =     -16.898305030476
             les_mean =     285.848420164541
             stat err =       0.000446730663
             autocorr =       1.349768582782
   target nu stat err =       0.000446730663
   target dn stat err =       0.004827093094
      target stat err =       0.007711721405
              std dev =       0.543789857742
             le_variance =       0.295707409383


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689830503048e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+03, overlap shift 2.5000e+04 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919234993290       residual = 9.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919235003395       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.919235007891       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.919235010056       residual = 4.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.919235010640       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.919235011971       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.919235012142       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.919235012480       residual = 4.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.919235012696       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.919235012789       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.919235013082       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.919235013194       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.919235013353       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.919235013552       residual = 3.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.919235013591       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.919235013568       residual = 2.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.919235013612       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.919235013634       residual = 8.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.919235013644       residual = 5.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.919235013671       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.919235013673       residual = 2.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.919235013679       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.919235013690       residual = 5.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.919235013678       residual = 2.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.919235013671       residual = 9.48e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+03 is 2.004716e-07

solving harmonic davidson linear method for identity shift 1.0000e+04, overlap shift 1.0000e+05 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919234993290       residual = 9.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919234995816       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.919234996940       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.919234997481       residual = 4.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.919234997624       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.919234997943       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.919234998006       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.919234998078       residual = 4.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.919234998129       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.919234998159       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.919234998269       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.919234998261       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.919234998316       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.919234998368       residual = 3.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.919234998369       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.919234998363       residual = 2.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.919234998363       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.919234998352       residual = 8.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.919234998364       residual = 5.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.919234998381       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.919234998363       residual = 2.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.919234998387       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.919234998350       residual = 5.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.919234998393       residual = 2.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.919234998361       residual = 9.48e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+04 is 5.011834e-08

solving harmonic davidson linear method for identity shift 4.0000e+04, overlap shift 4.0000e+05 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919234993290       residual = 9.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919234993921       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.919234994202       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.919234994337       residual = 4.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.919234994331       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.919234994459       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.919234994412       residual = 1.34e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.919234994495       residual = 4.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.919234994529       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.919234994612       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.919234994558       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.919234994523       residual = 1.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.919234994539       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.919234994597       residual = 3.76e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.919234994506       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.919234994537       residual = 2.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.919234994555       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.919234994498       residual = 8.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.919234994544       residual = 5.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.919234994546       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.919234994500       residual = 2.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.919234994717       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.919234994725       residual = 5.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.919234994675       residual = 2.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.919234994619       residual = 9.48e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+04 is 1.252961e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.268374 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1291e+01
  </log>
  <optVariables href="H2O.s004.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617076e-02 1 1  ON 2
 uu_3                -3.223687e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576606e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065672e-01 1 1  ON 7
 uu_8                -9.668738e-02 1 1  ON 8
 uu_9                -6.389512e-02 1 1  ON 9
 ud_0                 3.492135e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392783e-02 1 1  ON 12
 ud_3                -3.019577e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792106e-02 1 1  ON 18
 ud_9                -6.281980e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060843e-01 1 1  ON 21
 eO_2                 4.730130e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913444e-01 1 1  ON 24
 eO_5                 3.212388e-01 1 1  ON 25
 eO_6                 1.205693e-01 1 1  ON 26
 eO_7                -7.888707e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277698e-01 1 1  ON 30
eH1_1                -1.106401e-01 1 1  ON 31
eH1_2                -6.162949e-02 1 1  ON 32
eH1_3                -2.530650e-02 1 1  ON 33
eH1_4                 4.247831e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467420e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444537e-02 1 1  ON 42
eH2_3                -2.722662e-02 1 1  ON 43
eH2_4                 1.073596e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417218e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -16.923
    reference variance = 0.247355
====================================================
  Execution time = 4.0187e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s004
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9494e-01
  Total weights = 2.0000e+06
  Execution time = 3.7200e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873513988
                                         uncertainty =       0.005177671195

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873513988
                                         uncertainty =       0.005177671195

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384018857
  error estimate for blocks of size 2^( 2) =       0.000400813487
  error estimate for blocks of size 2^( 3) =       0.000418349583
  error estimate for blocks of size 2^( 4) =       0.000433670704
  error estimate for blocks of size 2^( 5) =       0.000445743996
  error estimate for blocks of size 2^( 6) =       0.000454251757
  error estimate for blocks of size 2^( 7) =       0.000459664979

      target function =      -0.920379366725
              le_mean =     -16.898217518642
             les_mean =     285.844696124329
             stat err =       0.000448332859
             autocorr =       1.363000576414
   target nu stat err =       0.000448332859
   target dn stat err =       0.005394845035
      target stat err =       0.008631657629
              std dev =       0.543084675220
             le_variance =       0.294940964459

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873528843
                                         uncertainty =       0.005177672704

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873528843
                                         uncertainty =       0.005177672704

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384018866
  error estimate for blocks of size 2^( 2) =       0.000400813500
  error estimate for blocks of size 2^( 3) =       0.000418349601
  error estimate for blocks of size 2^( 4) =       0.000433670728
  error estimate for blocks of size 2^( 5) =       0.000445744022
  error estimate for blocks of size 2^( 6) =       0.000454251787
  error estimate for blocks of size 2^( 7) =       0.000459665010

      target function =      -0.920379342979
              le_mean =     -16.898217518723
             les_mean =     285.844696141946
             stat err =       0.000448332887
             autocorr =       1.363000676871
   target nu stat err =       0.000448332887
   target dn stat err =       0.005394846632
      target stat err =       0.008631659725
              std dev =       0.543084688913
             le_variance =       0.294940979331

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873521416
                                         uncertainty =       0.005177671949

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873521416
                                         uncertainty =       0.005177671949

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384018861
  error estimate for blocks of size 2^( 2) =       0.000400813494
  error estimate for blocks of size 2^( 3) =       0.000418349592
  error estimate for blocks of size 2^( 4) =       0.000433670716
  error estimate for blocks of size 2^( 5) =       0.000445744009
  error estimate for blocks of size 2^( 6) =       0.000454251772
  error estimate for blocks of size 2^( 7) =       0.000459664994

      target function =      -0.920379354852
              le_mean =     -16.898217518683
             les_mean =     285.844696133137
             stat err =       0.000448332873
             autocorr =       1.363000626636
   target nu stat err =       0.000448332873
   target dn stat err =       0.005394845834
      target stat err =       0.008631658677
              std dev =       0.543084682067
             le_variance =       0.294940971895

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873514917
                                         uncertainty =       0.005177671289

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294873514917
                                         uncertainty =       0.005177671289

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384018857
  error estimate for blocks of size 2^( 2) =       0.000400813488
  error estimate for blocks of size 2^( 3) =       0.000418349584
  error estimate for blocks of size 2^( 4) =       0.000433670705
  error estimate for blocks of size 2^( 5) =       0.000445743997
  error estimate for blocks of size 2^( 6) =       0.000454251759
  error estimate for blocks of size 2^( 7) =       0.000459664981

      target function =      -0.920379365241
              le_mean =     -16.898217518647
             les_mean =     285.844696125430
             stat err =       0.000448332861
             autocorr =       1.363000582680
   target nu stat err =       0.000448332861
   target dn stat err =       0.005394845135
      target stat err =       0.008631657760
              std dev =       0.543084676076
             le_variance =       0.294940965389


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.920379366725        initial  <--
     2.5000e+03     2.5000e+04             2.0047e-07        -0.920379342979
     1.0000e+04     1.0000e+05             5.0118e-08        -0.920379354852
     4.0000e+04     4.0000e+05             1.2530e-08        -0.920379365241

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.8773
  </log>
  <optVariables href="H2O.s004.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1018e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s005 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s005 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=5  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6906e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -16.8458
    reference variance = 0.16738
====================================================
  Execution time = 4.2180e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s005
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9668e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0866e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296741194646
                                         uncertainty =       0.003777139146

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296741194646
                                         uncertainty =       0.003777139146

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385148451
  error estimate for blocks of size 2^( 2) =       0.000402440923
  error estimate for blocks of size 2^( 3) =       0.000419115051
  error estimate for blocks of size 2^( 4) =       0.000434161640
  error estimate for blocks of size 2^( 5) =       0.000446226453
  error estimate for blocks of size 2^( 6) =       0.000454460833
  error estimate for blocks of size 2^( 7) =       0.000461345404

      target function =      -0.917635235956
              le_mean =     -16.898714373385
             les_mean =     285.863225984079
             stat err =       0.000449048583
             autocorr =       1.359347046682
   target nu stat err =       0.000449048583
   target dn stat err =       0.003920757464
      target stat err =       0.006264309873
              std dev =       0.544682163432
             le_variance =       0.296678659161


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689871437339e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917676102546       residual = 8.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917676103474       residual = 7.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917676103692       residual = 4.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917676103761       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917676103866       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917676103925       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917676104005       residual = 7.52e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917676104020       residual = 2.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917676104030       residual = 2.00e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917676104050       residual = 9.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917676104054       residual = 7.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917676104035       residual = 6.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917676104001       residual = 4.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917676104107       residual = 2.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917676103975       residual = 2.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917676104085       residual = 2.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917676104068       residual = 7.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917676104117       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917676104100       residual = 2.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917676104164       residual = 1.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917676104100       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917676104060       residual = 1.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917676104155       residual = 2.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917676104033       residual = 2.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917676104249       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917676104088       residual = 2.03e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+04 is 1.812849e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917676102546       residual = 8.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917676102778       residual = 7.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917676102833       residual = 4.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917676102872       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917676102876       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917676102972       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917676102911       residual = 7.52e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917676102872       residual = 2.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917676103056       residual = 2.00e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917676102942       residual = 9.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917676102761       residual = 7.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917676102926       residual = 6.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917676102926       residual = 4.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917676102976       residual = 2.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917676102829       residual = 2.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917676102343       residual = 2.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917676102814       residual = 7.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917676102883       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917676102771       residual = 2.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917676102787       residual = 1.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917676102565       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917676102484       residual = 1.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917676102568       residual = 2.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917676103282       residual = 2.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917676102815       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917676102633       residual = 2.03e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+05 is 4.532129e-09

solving harmonic davidson linear method for identity shift 4.0000e+05, overlap shift 4.0000e+06 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917676102546       residual = 8.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917676102604       residual = 7.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917676102618       residual = 4.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917676102622       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917676102565       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917676102761       residual = 1.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917676102828       residual = 7.52e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917676102552       residual = 2.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917676103819       residual = 2.00e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917676101809       residual = 9.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917676102859       residual = 7.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917676102593       residual = 6.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917676102621       residual = 4.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917676102217       residual = 2.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917676102698       residual = 2.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917676103082       residual = 2.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917676102541       residual = 7.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917676102400       residual = 3.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917676102482       residual = 2.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917676102354       residual = 1.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917676104372       residual = 1.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917676102479       residual = 1.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917676103534       residual = 2.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917676101667       residual = 2.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917676103018       residual = 1.02e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917676102195       residual = 2.03e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+05 is 1.133032e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.302016 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3088e+01
  </log>
  <optVariables href="H2O.s005.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975616e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730128e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106401e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247831e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073594e-03 1 1  ON 44
eH2_5                 2.532958e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -16.9167
    reference variance = 0.526837
====================================================
  Execution time = 3.9632e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s005
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9193e-01
  Total weights = 2.0000e+06
  Execution time = 3.7349e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941310482
                                         uncertainty =       0.002164864003

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941310482
                                         uncertainty =       0.002164864003

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382056239
  error estimate for blocks of size 2^( 2) =       0.000398536782
  error estimate for blocks of size 2^( 3) =       0.000415263364
  error estimate for blocks of size 2^( 4) =       0.000429434670
  error estimate for blocks of size 2^( 5) =       0.000440978875
  error estimate for blocks of size 2^( 6) =       0.000447461098
  error estimate for blocks of size 2^( 7) =       0.000453545934

      target function =      -0.925257141753
              le_mean =     -16.898329897913
             les_mean =     285.845487131605
             stat err =       0.000442855144
             autocorr =       1.343596290979
   target nu stat err =       0.000442855144
   target dn stat err =       0.002405815464
      target stat err =       0.003950900864
              std dev =       0.540309114189
             le_variance =       0.291933938876

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941312789
                                         uncertainty =       0.002164864017

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941312789
                                         uncertainty =       0.002164864017

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382056240
  error estimate for blocks of size 2^( 2) =       0.000398536784
  error estimate for blocks of size 2^( 3) =       0.000415263366
  error estimate for blocks of size 2^( 4) =       0.000429434673
  error estimate for blocks of size 2^( 5) =       0.000440978878
  error estimate for blocks of size 2^( 6) =       0.000447461101
  error estimate for blocks of size 2^( 7) =       0.000453545937

      target function =      -0.925257138040
              le_mean =     -16.898329897875
             les_mean =     285.845487132614
             stat err =       0.000442855147
             autocorr =       1.343596297582
   target nu stat err =       0.000442855147
   target dn stat err =       0.002405815490
      target stat err =       0.003950900875
              std dev =       0.540309116323
             le_variance =       0.291933941181

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941311636
                                         uncertainty =       0.002164864010

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941311636
                                         uncertainty =       0.002164864010

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382056239
  error estimate for blocks of size 2^( 2) =       0.000398536783
  error estimate for blocks of size 2^( 3) =       0.000415263365
  error estimate for blocks of size 2^( 4) =       0.000429434671
  error estimate for blocks of size 2^( 5) =       0.000440978876
  error estimate for blocks of size 2^( 6) =       0.000447461100
  error estimate for blocks of size 2^( 7) =       0.000453545935

      target function =      -0.925257139896
              le_mean =     -16.898329897894
             les_mean =     285.845487132110
             stat err =       0.000442855146
             autocorr =       1.343596294277
   target nu stat err =       0.000442855146
   target dn stat err =       0.002405815477
      target stat err =       0.003950900869
              std dev =       0.540309115256
             le_variance =       0.291933940029

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941310626
                                         uncertainty =       0.002164864004

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291941310626
                                         uncertainty =       0.002164864004

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382056239
  error estimate for blocks of size 2^( 2) =       0.000398536782
  error estimate for blocks of size 2^( 3) =       0.000415263364
  error estimate for blocks of size 2^( 4) =       0.000429434670
  error estimate for blocks of size 2^( 5) =       0.000440978875
  error estimate for blocks of size 2^( 6) =       0.000447461098
  error estimate for blocks of size 2^( 7) =       0.000453545934

      target function =      -0.925257141521
              le_mean =     -16.898329897910
             les_mean =     285.845487131668
             stat err =       0.000442855144
             autocorr =       1.343596291393
   target nu stat err =       0.000442855144
   target dn stat err =       0.002405815466
      target stat err =       0.003950900864
              std dev =       0.540309114322
             le_variance =       0.291933939020


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925257141753        initial  <--
     2.5000e+04     2.5000e+05             1.8128e-08        -0.925257138040
     1.0000e+05     1.0000e+06             4.5321e-09        -0.925257139896
     4.0000e+05     4.0000e+06             1.1330e-09        -0.925257141521

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.4088
  </log>
  <optVariables href="H2O.s005.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1152e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s006 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s006 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=6  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6902e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -16.9045
    reference variance = 0.170554
====================================================
  Execution time = 4.0212e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s006
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9612e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0981e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296143471209
                                         uncertainty =       0.004397938707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296143471209
                                         uncertainty =       0.004397938707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384783149
  error estimate for blocks of size 2^( 2) =       0.000401526313
  error estimate for blocks of size 2^( 3) =       0.000418250167
  error estimate for blocks of size 2^( 4) =       0.000433522484
  error estimate for blocks of size 2^( 5) =       0.000445287998
  error estimate for blocks of size 2^( 6) =       0.000453022946
  error estimate for blocks of size 2^( 7) =       0.000457113267

      target function =      -0.918502877050
              le_mean =     -16.899031830384
             les_mean =     285.873392799412
             stat err =       0.000447236674
             autocorr =       1.350960742328
   target nu stat err =       0.000447236674
   target dn stat err =       0.004407471970
      target stat err =       0.007047846529
              std dev =       0.544165547551
             le_variance =       0.296116143141


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689903183038e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+05, overlap shift 2.5000e+06 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918555376781       residual = 9.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918555376875       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918555376897       residual = 6.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918555376907       residual = 2.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918555376913       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918555376919       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918555377259       residual = 5.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.918555376924       residual = 5.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.918555377223       residual = 3.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.918555376926       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.918555377017       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.918555376514       residual = 9.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.918555376968       residual = 7.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.918555376230       residual = 3.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.918555376986       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.918555376653       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.918555376482       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.918555377432       residual = 3.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.918555373001       residual = 2.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.918555376180       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.918555375731       residual = 7.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.918555376491       residual = 6.06e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.918555376742       residual = 3.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.918555376842       residual = 2.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.918555377811       residual = 7.49e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+05 is 1.707707e-09

solving harmonic davidson linear method for identity shift 1.0000e+06, overlap shift 1.0000e+07 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918555376781       residual = 9.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918555376804       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918555376810       residual = 6.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918555376812       residual = 2.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918555376814       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918555376815       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918555376816       residual = 5.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.918555376816       residual = 5.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.918555377991       residual = 3.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.918555376817       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.918555378287       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.918555376817       residual = 9.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.918555376817       residual = 7.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.918555376255       residual = 3.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.918555380415       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.918555375081       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.918555375031       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.918555379244       residual = 3.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.918555368241       residual = 2.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.918555376418       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.918555378901       residual = 7.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.918555378821       residual = 6.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.918555374466       residual = 3.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.918555378294       residual = 2.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.918555374775       residual = 7.49e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+06 is 4.269268e-10

solving harmonic davidson linear method for identity shift 4.0000e+06, overlap shift 4.0000e+07 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918555376781       residual = 9.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918555376787       residual = 1.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918555376788       residual = 6.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918555376788       residual = 2.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918555376789       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918555375892       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918555369919       residual = 5.14e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.918555377887       residual = 5.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.918555374636       residual = 3.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.918555372092       residual = 1.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.918555374520       residual = 1.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.918555381972       residual = 9.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.918555379805       residual = 7.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.918555368284       residual = 3.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.918555381727       residual = 1.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.918555365809       residual = 1.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.918555367724       residual = 6.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.918555374993       residual = 3.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.918555359184       residual = 2.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.918555380081       residual = 1.36e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.918555359558       residual = 7.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.918555368107       residual = 6.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.918555376008       residual = 3.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.918555384290       residual = 2.39e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.918555368284       residual = 7.49e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+06 is 1.067322e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.333521 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1232e+01
  </log>
  <optVariables href="H2O.s006.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -16.928
    reference variance = 0.201331
====================================================
  Execution time = 4.1945e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s006
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9612e-01
  Total weights = 2.0000e+06
  Execution time = 3.7245e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509224
                                         uncertainty =       0.004149890897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509224
                                         uncertainty =       0.004149890897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384788271
  error estimate for blocks of size 2^( 2) =       0.000401641131
  error estimate for blocks of size 2^( 3) =       0.000418677085
  error estimate for blocks of size 2^( 4) =       0.000433662288
  error estimate for blocks of size 2^( 5) =       0.000445331276
  error estimate for blocks of size 2^( 6) =       0.000451802861
  error estimate for blocks of size 2^( 7) =       0.000455610859

      target function =      -0.918527441239
              le_mean =     -16.898458105408
             les_mean =     285.854010219412
             stat err =       0.000446601821
             autocorr =       1.347092218633
   target nu stat err =       0.000446601821
   target dn stat err =       0.003838229251
      target stat err =       0.006142829007
              std dev =       0.544172791714
             le_variance =       0.296124027242

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509432
                                         uncertainty =       0.004149890898

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509432
                                         uncertainty =       0.004149890898

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384788271
  error estimate for blocks of size 2^( 2) =       0.000401641131
  error estimate for blocks of size 2^( 3) =       0.000418677085
  error estimate for blocks of size 2^( 4) =       0.000433662288
  error estimate for blocks of size 2^( 5) =       0.000445331276
  error estimate for blocks of size 2^( 6) =       0.000451802861
  error estimate for blocks of size 2^( 7) =       0.000455610860

      target function =      -0.918527440909
              le_mean =     -16.898458105415
             les_mean =     285.854010219840
             stat err =       0.000446601821
             autocorr =       1.347092219850
   target nu stat err =       0.000446601821
   target dn stat err =       0.003838229251
      target stat err =       0.006142829003
              std dev =       0.544172791905
             le_variance =       0.296124027450

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509328
                                         uncertainty =       0.004149890898

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509328
                                         uncertainty =       0.004149890898

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384788271
  error estimate for blocks of size 2^( 2) =       0.000401641131
  error estimate for blocks of size 2^( 3) =       0.000418677085
  error estimate for blocks of size 2^( 4) =       0.000433662288
  error estimate for blocks of size 2^( 5) =       0.000445331276
  error estimate for blocks of size 2^( 6) =       0.000451802861
  error estimate for blocks of size 2^( 7) =       0.000455610859

      target function =      -0.918527441074
              le_mean =     -16.898458105411
             les_mean =     285.854010219626
             stat err =       0.000446601821
             autocorr =       1.347092219244
   target nu stat err =       0.000446601821
   target dn stat err =       0.003838229251
      target stat err =       0.006142829005
              std dev =       0.544172791809
             le_variance =       0.296124027345

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509237
                                         uncertainty =       0.004149890897

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296234509237
                                         uncertainty =       0.004149890897

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384788271
  error estimate for blocks of size 2^( 2) =       0.000401641131
  error estimate for blocks of size 2^( 3) =       0.000418677085
  error estimate for blocks of size 2^( 4) =       0.000433662288
  error estimate for blocks of size 2^( 5) =       0.000445331276
  error estimate for blocks of size 2^( 6) =       0.000451802861
  error estimate for blocks of size 2^( 7) =       0.000455610859

      target function =      -0.918527441219
              le_mean =     -16.898458105408
             les_mean =     285.854010219438
             stat err =       0.000446601821
             autocorr =       1.347092218708
   target nu stat err =       0.000446601821
   target dn stat err =       0.003838229251
      target stat err =       0.006142829007
              std dev =       0.544172791726
             le_variance =       0.296124027255


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918527441239        initial  <--
     2.5000e+05     2.5000e+06             1.7077e-09        -0.918527440909
     1.0000e+06     1.0000e+07             4.2693e-10        -0.918527441074
     4.0000e+06     4.0000e+07             1.0673e-10        -0.918527441219

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.6743
  </log>
  <optVariables href="H2O.s006.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1193e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s007 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s007 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=7  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6904e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -16.8856
    reference variance = 0.326768
====================================================
  Execution time = 4.0599e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s007
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9465e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0825e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294676771123
                                         uncertainty =       0.002916958396

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294676771123
                                         uncertainty =       0.002916958396

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383832243
  error estimate for blocks of size 2^( 2) =       0.000400648446
  error estimate for blocks of size 2^( 3) =       0.000417687723
  error estimate for blocks of size 2^( 4) =       0.000433056123
  error estimate for blocks of size 2^( 5) =       0.000445009044
  error estimate for blocks of size 2^( 6) =       0.000454161915
  error estimate for blocks of size 2^( 7) =       0.000457857904

      target function =      -0.920899806725
              le_mean =     -16.897965760424
             les_mean =     285.835901074620
             stat err =       0.000447521247
             autocorr =       1.359391060766
   target nu stat err =       0.000447521247
   target dn stat err =       0.003023916520
      target stat err =       0.004883356616
              std dev =       0.542820763680
             le_variance =       0.294654381482


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689796576042e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920924144877       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920924144883       residual = 6.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920924144884       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920924144886       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920924146005       residual = 1.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.920924145239       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.920924144124       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.920924144510       residual = 3.95e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.920924142797       residual = 2.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.920924146446       residual = 2.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.920924146476       residual = 1.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.920924147287       residual = 1.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.920924142377       residual = 5.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.920924138985       residual = 4.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.920924143737       residual = 3.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.920924144863       residual = 3.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.920924144512       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.920924148023       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.920924143798       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.920924139501       residual = 2.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.920924148678       residual = 2.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.920924143960       residual = 1.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.920924145198       residual = 9.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.920924142621       residual = 2.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.920924142504       residual = 1.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.920924127294       residual = 4.78e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+06 is 2.119717e-10

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920924144877       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920924144878       residual = 6.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920924144879       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920924144879       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920924144826       residual = 1.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.920924143213       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.920924132278       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.920924152949       residual = 3.95e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.920924128589       residual = 2.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.920924134363       residual = 2.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.920924141956       residual = 1.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.920924135788       residual = 1.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.920924120077       residual = 5.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.920924138692       residual = 4.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.920924137157       residual = 3.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.920924132123       residual = 3.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.920924161159       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.920924108583       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.920924134519       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.920924185673       residual = 2.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.920924131502       residual = 2.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.920924141065       residual = 1.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.920924120406       residual = 9.15e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.920924125108       residual = 2.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.920924140137       residual = 1.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.920924141985       residual = 4.77e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+07 is 5.299306e-11

solving harmonic davidson linear method for identity shift 4.0000e+07, overlap shift 4.0000e+08 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920924144877       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920924144877       residual = 6.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920924144878       residual = 4.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920924131520       residual = 2.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920924142949       residual = 1.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.920924147660       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.920924198358       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.920924220197       residual = 3.95e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.920924155871       residual = 2.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.920924206992       residual = 2.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.920924141506       residual = 1.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.920924145458       residual = 1.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.920924192768       residual = 5.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.920924022916       residual = 4.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.920924079959       residual = 3.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.920924121943       residual = 3.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.920924139925       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.920924217074       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.920924209773       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.920924159690       residual = 2.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.920924206879       residual = 2.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.920923987986       residual = 1.38e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.920924089603       residual = 9.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.920924254402       residual = 2.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.920924173955       residual = 1.40e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.920924113737       residual = 4.79e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+07 is 1.324793e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.367606 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1466e+01
  </log>
  <optVariables href="H2O.s007.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -16.8981
    reference variance = 0.131867
====================================================
  Execution time = 3.9973e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s007
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9608e-01
  Total weights = 2.0000e+06
  Execution time = 3.7337e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309026
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309026
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384759909
  error estimate for blocks of size 2^( 2) =       0.000401927230
  error estimate for blocks of size 2^( 3) =       0.000419155178
  error estimate for blocks of size 2^( 4) =       0.000434380084
  error estimate for blocks of size 2^( 5) =       0.000447118631
  error estimate for blocks of size 2^( 6) =       0.000455436397
  error estimate for blocks of size 2^( 7) =       0.000459648560

      target function =      -0.918605122768
              le_mean =     -16.898264248183
             les_mean =     285.847414829031
             stat err =       0.000449145918
             autocorr =       1.362684408089
   target nu stat err =       0.000449145918
   target dn stat err =       0.003833368014
      target stat err =       0.006134515104
              std dev =       0.544132682030
             le_variance =       0.296080375653

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309046
                                         uncertainty =       0.003716700180

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309046
                                         uncertainty =       0.003716700180

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384759909
  error estimate for blocks of size 2^( 2) =       0.000401927230
  error estimate for blocks of size 2^( 3) =       0.000419155178
  error estimate for blocks of size 2^( 4) =       0.000434380084
  error estimate for blocks of size 2^( 5) =       0.000447118631
  error estimate for blocks of size 2^( 6) =       0.000455436397
  error estimate for blocks of size 2^( 7) =       0.000459648560

      target function =      -0.918605122736
              le_mean =     -16.898264248183
             les_mean =     285.847414829044
             stat err =       0.000449145918
             autocorr =       1.362684408178
   target nu stat err =       0.000449145918
   target dn stat err =       0.003833368014
      target stat err =       0.006134515105
              std dev =       0.544132682049
             le_variance =       0.296080375674

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309036
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309036
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384759909
  error estimate for blocks of size 2^( 2) =       0.000401927230
  error estimate for blocks of size 2^( 3) =       0.000419155178
  error estimate for blocks of size 2^( 4) =       0.000434380084
  error estimate for blocks of size 2^( 5) =       0.000447118631
  error estimate for blocks of size 2^( 6) =       0.000455436397
  error estimate for blocks of size 2^( 7) =       0.000459648560

      target function =      -0.918605122752
              le_mean =     -16.898264248183
             les_mean =     285.847414829038
             stat err =       0.000449145918
             autocorr =       1.362684408134
   target nu stat err =       0.000449145918
   target dn stat err =       0.003833368014
      target stat err =       0.006134515104
              std dev =       0.544132682040
             le_variance =       0.296080375664

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309027
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296038309027
                                         uncertainty =       0.003716700179

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384759909
  error estimate for blocks of size 2^( 2) =       0.000401927230
  error estimate for blocks of size 2^( 3) =       0.000419155178
  error estimate for blocks of size 2^( 4) =       0.000434380084
  error estimate for blocks of size 2^( 5) =       0.000447118631
  error estimate for blocks of size 2^( 6) =       0.000455436397
  error estimate for blocks of size 2^( 7) =       0.000459648560

      target function =      -0.918605122766
              le_mean =     -16.898264248183
             les_mean =     285.847414829032
             stat err =       0.000449145918
             autocorr =       1.362684408101
   target nu stat err =       0.000449145918
   target dn stat err =       0.003833368014
      target stat err =       0.006134515104
              std dev =       0.544132682032
             le_variance =       0.296080375655


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918605122768        initial  <--
     2.5000e+06     2.5000e+07             2.1197e-10        -0.918605122736
     1.0000e+07     1.0000e+08             5.2993e-11        -0.918605122752
     4.0000e+07     4.0000e+08             1.3248e-11        -0.918605122766

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.8130
  </log>
  <optVariables href="H2O.s007.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1430e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s008 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s008 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=8  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6903e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -16.9568
    reference variance = 0.235761
====================================================
  Execution time = 4.0423e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s008
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.1062e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0911e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.310691181406
                                         uncertainty =       0.013260123684

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.310691181406
                                         uncertainty =       0.013260123684

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394091986
  error estimate for blocks of size 2^( 2) =       0.000410252081
  error estimate for blocks of size 2^( 3) =       0.000427073361
  error estimate for blocks of size 2^( 4) =       0.000440449981
  error estimate for blocks of size 2^( 5) =       0.000450443812
  error estimate for blocks of size 2^( 6) =       0.000456398527
  error estimate for blocks of size 2^( 7) =       0.000463126227

      target function =      -0.895608448479
              le_mean =     -16.898968714094
             les_mean =     285.885760430774
             stat err =       0.000452604637
             autocorr =       1.318993915519
   target nu stat err =       0.000452604637
   target dn stat err =       0.013515505819
      target stat err =       0.020445313263
              std dev =       0.557330230785
             le_variance =       0.310616986147


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689896871409e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+07, overlap shift 2.5000e+08 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.896075824816       residual = 1.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.896075824818       residual = 4.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.896075824820       residual = 4.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.896075824821       residual = 3.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.896075818150       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.896075808891       residual = 9.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.896075792341       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.896075859792       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.896075817522       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.896075803565       residual = 3.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.896075808055       residual = 3.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.896075808825       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.896075895615       residual = 8.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.896075943651       residual = 8.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.896075918484       residual = 4.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.896075848294       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.896075805303       residual = 1.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.896075839083       residual = 7.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.896075912277       residual = 4.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.896075926804       residual = 2.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.896075697035       residual = 1.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.896075786735       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.896075765002       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.896075879223       residual = 1.51e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.896075849877       residual = 2.22e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.896075825235       residual = 6.34e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.896075645931       residual = 3.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.896075787531       residual = 7.51e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+07 is 9.651633e-11

solving harmonic davidson linear method for identity shift 1.0000e+08, overlap shift 1.0000e+09 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.896075824816       residual = 1.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.896075824817       residual = 4.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.896075824817       residual = 4.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.896075824818       residual = 3.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.896075824818       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.896075824818       residual = 9.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.896075824818       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.896075824818       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.896075824818       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.896075824818       residual = 3.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.896076011642       residual = 3.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.896075907905       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.896075915159       residual = 8.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.896075831938       residual = 8.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.896075683868       residual = 4.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.896075881235       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.896075649707       residual = 1.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.896076013035       residual = 7.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.896075890409       residual = 4.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.896076006871       residual = 2.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.896075873450       residual = 1.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.896075465965       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.896075853023       residual = 4.69e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.896075598090       residual = 1.51e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.896075781323       residual = 2.22e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.896075676534       residual = 6.35e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.896076018152       residual = 3.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.896075323925       residual = 7.38e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+08 is 2.412918e-11

solving harmonic davidson linear method for identity shift 4.0000e+08, overlap shift 4.0000e+09 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.896075824816       residual = 1.68e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.896075824816       residual = 4.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.896075824817       residual = 4.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.896075824817       residual = 3.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.896075824817       residual = 1.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.896075836059       residual = 9.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.896076327579       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.896075806014       residual = 6.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.896075515157       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.896075729036       residual = 3.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.896075824817       residual = 3.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.896075335234       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.896075730810       residual = 8.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.896076161661       residual = 8.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.896075213347       residual = 4.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.896074807580       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.896076320666       residual = 1.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.896074366649       residual = 7.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.896074619142       residual = 4.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.896075286888       residual = 2.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.896075876452       residual = 1.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.896075015824       residual = 1.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.896075206583       residual = 4.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.896077503923       residual = 1.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.896075685889       residual = 2.17e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.896076677430       residual = 6.31e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.896075889947       residual = 3.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.896075391701       residual = 7.38e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+08 is 6.032390e-12

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.407122 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1382e+01
  </log>
  <optVariables href="H2O.s008.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -16.9355
    reference variance = 0.242861
====================================================
  Execution time = 3.9590e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s008
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9710e-01
  Total weights = 2.0000e+06
  Execution time = 3.7499e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581834
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581834
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385420238
  error estimate for blocks of size 2^( 2) =       0.000402094009
  error estimate for blocks of size 2^( 3) =       0.000419561641
  error estimate for blocks of size 2^( 4) =       0.000434470206
  error estimate for blocks of size 2^( 5) =       0.000446386838
  error estimate for blocks of size 2^( 6) =       0.000454403588
  error estimate for blocks of size 2^( 7) =       0.000458773314

      target function =      -0.916987394458
              le_mean =     -16.898738835178
             les_mean =     285.864471590049
             stat err =       0.000448508486
             autocorr =       1.354167230125
   target nu stat err =       0.000448508486
   target dn stat err =       0.003005697653
      target stat err =       0.004821318962
              std dev =       0.545066527184
             le_variance =       0.297097519057

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581838
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581838
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385420238
  error estimate for blocks of size 2^( 2) =       0.000402094009
  error estimate for blocks of size 2^( 3) =       0.000419561641
  error estimate for blocks of size 2^( 4) =       0.000434470206
  error estimate for blocks of size 2^( 5) =       0.000446386838
  error estimate for blocks of size 2^( 6) =       0.000454403588
  error estimate for blocks of size 2^( 7) =       0.000458773314

      target function =      -0.916987394452
              le_mean =     -16.898738835178
             les_mean =     285.864471590053
             stat err =       0.000448508486
             autocorr =       1.354167230163
   target nu stat err =       0.000448508486
   target dn stat err =       0.003005697653
      target stat err =       0.004821318962
              std dev =       0.545066527188
             le_variance =       0.297097519061

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581836
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581836
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385420238
  error estimate for blocks of size 2^( 2) =       0.000402094009
  error estimate for blocks of size 2^( 3) =       0.000419561641
  error estimate for blocks of size 2^( 4) =       0.000434470206
  error estimate for blocks of size 2^( 5) =       0.000446386838
  error estimate for blocks of size 2^( 6) =       0.000454403588
  error estimate for blocks of size 2^( 7) =       0.000458773314

      target function =      -0.916987394455
              le_mean =     -16.898738835178
             les_mean =     285.864471590051
             stat err =       0.000448508486
             autocorr =       1.354167230144
   target nu stat err =       0.000448508486
   target dn stat err =       0.003005697653
      target stat err =       0.004821318962
              std dev =       0.545066527186
             le_variance =       0.297097519059

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581834
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297013581834
                                         uncertainty =       0.002877453476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385420238
  error estimate for blocks of size 2^( 2) =       0.000402094009
  error estimate for blocks of size 2^( 3) =       0.000419561641
  error estimate for blocks of size 2^( 4) =       0.000434470206
  error estimate for blocks of size 2^( 5) =       0.000446386838
  error estimate for blocks of size 2^( 6) =       0.000454403588
  error estimate for blocks of size 2^( 7) =       0.000458773314

      target function =      -0.916987394458
              le_mean =     -16.898738835178
             les_mean =     285.864471590049
             stat err =       0.000448508486
             autocorr =       1.354167230124
   target nu stat err =       0.000448508486
   target dn stat err =       0.003005697653
      target stat err =       0.004821318962
              std dev =       0.545066527184
             le_variance =       0.297097519057


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916987394458        initial  <--
     2.5000e+07     2.5000e+08             9.6516e-11        -0.916987394452
     1.0000e+08     1.0000e+09             2.4129e-11        -0.916987394455
     4.0000e+08     4.0000e+09             6.0324e-12        -0.916987394458

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3933
  </log>
  <optVariables href="H2O.s008.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0978e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s009 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s009 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=9  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -16.8602
    reference variance = 0.185148
====================================================
  Execution time = 4.3130e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s009
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0508e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0776e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.305164710601
                                         uncertainty =       0.006883039879

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.305164710601
                                         uncertainty =       0.006883039879

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390561673
  error estimate for blocks of size 2^( 2) =       0.000407107003
  error estimate for blocks of size 2^( 3) =       0.000423875823
  error estimate for blocks of size 2^( 4) =       0.000438097703
  error estimate for blocks of size 2^( 5) =       0.000449394555
  error estimate for blocks of size 2^( 6) =       0.000455829383
  error estimate for blocks of size 2^( 7) =       0.000459997122

      target function =      -0.904450150070
              le_mean =     -16.898154296633
             les_mean =     285.852695320869
             stat err =       0.000450829691
             autocorr =       1.332434213063
   target nu stat err =       0.000450829691
   target dn stat err =       0.007317919275
      target stat err =       0.011286457542
              std dev =       0.552337614666
             le_variance =       0.305076840575


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689815429663e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+08, overlap shift 2.5000e+09 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904588009948       residual = 1.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904588009948       residual = 1.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904588009948       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.904588009948       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.904587991725       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.904588012091       residual = 2.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.904588038261       residual = 9.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.904587890703       residual = 6.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.904588241009       residual = 3.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.904587962030       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.904587785162       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.904588174437       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.904587693736       residual = 8.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.904588542904       residual = 8.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.904587697370       residual = 4.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.904589275395       residual = 2.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.904587844702       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.904587845255       residual = 6.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.904587983857       residual = 4.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.904588177522       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.904586219686       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.904587936973       residual = 1.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.904586873395       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.904587533280       residual = 2.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.904587141986       residual = 5.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.904586731574       residual = 4.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.904588515911       residual = 1.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.904588309294       residual = 3.99e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+08 is 1.036171e-11

solving harmonic davidson linear method for identity shift 1.0000e+09, overlap shift 1.0000e+10 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904588009948       residual = 1.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904588009948       residual = 1.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904588009948       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.904588009948       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.904588024080       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.904588046485       residual = 2.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.904587474714       residual = 9.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.904587547993       residual = 6.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.904588009027       residual = 3.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.904587443905       residual = 3.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.904590860739       residual = 2.73e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.904588564388       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.904586768238       residual = 8.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.904587583525       residual = 8.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.904587878875       residual = 4.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.904587223416       residual = 2.45e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.904594115473       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.904587544098       residual = 6.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.904583260848       residual = 5.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.904584128419       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.904588559468       residual = 3.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.904588951082       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.904586022540       residual = 1.30e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.904585363079       residual = 2.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.904588771519       residual = 5.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.904588001807       residual = 4.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.904590869974       residual = 1.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.904586448862       residual = 4.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         27 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+09 is 2.590490e-12

solving harmonic davidson linear method for identity shift 4.0000e+09, overlap shift 4.0000e+10 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904588009948       residual = 1.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904588009948       residual = 1.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904588009948       residual = 1.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.904588009948       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.904586720623       residual = 1.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.904588671142       residual = 2.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.904593406998       residual = 9.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.904587274414       residual = 6.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.904586899234       residual = 3.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.904588308757       residual = 3.57e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.904584298859       residual = 2.44e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.904603264455       residual = 1.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.904585008334       residual = 8.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.904585242647       residual = 8.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.904589522454       residual = 4.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.904596218560       residual = 2.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.904571694008       residual = 1.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.904591477143       residual = 6.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.904577827182       residual = 5.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.904591222667       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.904597632597       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.904584461946       residual = 1.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.904587869714       residual = 1.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.904594918238       residual = 2.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.904588171470       residual = 5.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.904581752195       residual = 5.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.904581244745       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.904603489130       residual = 3.51e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.904598439244       residual = 1.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.904570273358       residual = 2.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.904635479735       residual = 1.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.904579501573       residual = 1.37e-08           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.904595025704       residual = 1.54e-08           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.904465198859       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.904576866335       residual = 1.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.904562849372       residual = 2.41e-07           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.904618877891       residual = 1.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.904562514965       residual = 1.81e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.904602571827       residual = 2.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.904468080240       residual = 1.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.904712411127       residual = 1.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.904586651668       residual = 8.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.904443947607       residual = 3.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.904425622674       residual = 4.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.904083846954       residual = 2.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.904464292405       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.904163430027       residual = 5.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.905781081161       residual = 3.03e-04           smallest_sin_value = 1.00e+00
davidson iteration   48 stopping due to small subspace S singular value of 9.41e-01
davidson solver did not converge after         48 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+09 is 6.479791e-13

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.496493 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.4003e+01
  </log>
  <optVariables href="H2O.s009.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -16.8425
    reference variance = 0.20729
====================================================
  Execution time = 4.0295e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s009
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9211e-01
  Total weights = 2.0000e+06
  Execution time = 3.7358e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146322
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146322
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382171133
  error estimate for blocks of size 2^( 2) =       0.000399202193
  error estimate for blocks of size 2^( 3) =       0.000416489388
  error estimate for blocks of size 2^( 4) =       0.000431513217
  error estimate for blocks of size 2^( 5) =       0.000442651332
  error estimate for blocks of size 2^( 6) =       0.000452325402
  error estimate for blocks of size 2^( 7) =       0.000457095760

      target function =      -0.924960150846
              le_mean =     -16.898745446083
             les_mean =     285.859707054737
             stat err =       0.000445896428
             autocorr =       1.361294929851
   target nu stat err =       0.000445896428
   target dn stat err =       0.002531998690
      target stat err =       0.004152045546
              std dev =       0.540471598945
             le_variance =       0.292109549266

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146323
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146323
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382171133
  error estimate for blocks of size 2^( 2) =       0.000399202193
  error estimate for blocks of size 2^( 3) =       0.000416489388
  error estimate for blocks of size 2^( 4) =       0.000431513217
  error estimate for blocks of size 2^( 5) =       0.000442651332
  error estimate for blocks of size 2^( 6) =       0.000452325402
  error estimate for blocks of size 2^( 7) =       0.000457095760

      target function =      -0.924960150845
              le_mean =     -16.898745446083
             les_mean =     285.859707054737
             stat err =       0.000445896428
             autocorr =       1.361294929850
   target nu stat err =       0.000445896428
   target dn stat err =       0.002531998690
      target stat err =       0.004152045546
              std dev =       0.540471598945
             le_variance =       0.292109549267

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146323
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146323
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382171133
  error estimate for blocks of size 2^( 2) =       0.000399202193
  error estimate for blocks of size 2^( 3) =       0.000416489388
  error estimate for blocks of size 2^( 4) =       0.000431513217
  error estimate for blocks of size 2^( 5) =       0.000442651332
  error estimate for blocks of size 2^( 6) =       0.000452325402
  error estimate for blocks of size 2^( 7) =       0.000457095760

      target function =      -0.924960150846
              le_mean =     -16.898745446083
             les_mean =     285.859707054737
             stat err =       0.000445896428
             autocorr =       1.361294929845
   target nu stat err =       0.000445896428
   target dn stat err =       0.002531998690
      target stat err =       0.004152045546
              std dev =       0.540471598945
             le_variance =       0.292109549266

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146322
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292185146322
                                         uncertainty =       0.002643181209

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382171133
  error estimate for blocks of size 2^( 2) =       0.000399202193
  error estimate for blocks of size 2^( 3) =       0.000416489388
  error estimate for blocks of size 2^( 4) =       0.000431513217
  error estimate for blocks of size 2^( 5) =       0.000442651332
  error estimate for blocks of size 2^( 6) =       0.000452325402
  error estimate for blocks of size 2^( 7) =       0.000457095760

      target function =      -0.924960150846
              le_mean =     -16.898745446083
             les_mean =     285.859707054737
             stat err =       0.000445896428
             autocorr =       1.361294929840
   target nu stat err =       0.000445896428
   target dn stat err =       0.002531998690
      target stat err =       0.004152045546
              std dev =       0.540471598945
             le_variance =       0.292109549266


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924960150846        initial  <--
     2.5000e+08     2.5000e+09             1.0362e-11        -0.924960150845
     1.0000e+09     1.0000e+10             2.5905e-12        -0.924960150846
     4.0000e+09     4.0000e+10             6.4798e-13        -0.924960150846

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 59.0937
  </log>
  <optVariables href="H2O.s009.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1310e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s010 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s010 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=10  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6902e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -16.9152
    reference variance = 0.224396
====================================================
  Execution time = 4.1148e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s010
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9349e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0994e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293559842829
                                         uncertainty =       0.002427619712

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293559842829
                                         uncertainty =       0.002427619712

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383074561
  error estimate for blocks of size 2^( 2) =       0.000399871883
  error estimate for blocks of size 2^( 3) =       0.000417069963
  error estimate for blocks of size 2^( 4) =       0.000432194247
  error estimate for blocks of size 2^( 5) =       0.000441800088
  error estimate for blocks of size 2^( 6) =       0.000448633445
  error estimate for blocks of size 2^( 7) =       0.000452591842

      target function =      -0.922724394529
              le_mean =     -16.898986109477
             les_mean =     285.869223620274
             stat err =       0.000443804906
             autocorr =       1.342201041926
   target nu stat err =       0.000443804906
   target dn stat err =       0.002889071945
      target stat err =       0.004697412742
              std dev =       0.541749239702
             le_variance =       0.293492238717


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689898610948e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+09, overlap shift 2.5000e+10 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922746682503       residual = 6.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922746682503       residual = 5.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922746682503       residual = 3.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922746682503       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922746682503       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922745976370       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922748514585       residual = 9.98e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922743080274       residual = 2.98e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922750096396       residual = 2.81e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922739568278       residual = 1.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922742303020       residual = 2.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922743997803       residual = 1.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922745493105       residual = 8.95e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922743815561       residual = 3.56e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922742643989       residual = 3.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922753213291       residual = 1.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922739819561       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922748282229       residual = 7.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922748366533       residual = 3.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922745310383       residual = 2.70e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922753538706       residual = 1.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922737410823       residual = 1.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922741822189       residual = 5.26e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922745898816       residual = 2.18e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922748406004       residual = 1.70e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922734081754       residual = 2.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922744485307       residual = 3.12e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+09 is 2.328085e-13

solving harmonic davidson linear method for identity shift 1.0000e+10, overlap shift 1.0000e+11 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922746682503       residual = 6.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922746682503       residual = 5.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922746682503       residual = 3.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922746682503       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922746682503       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922746682483       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922745772632       residual = 9.97e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922748685585       residual = 3.02e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922751410723       residual = 2.81e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922758719421       residual = 1.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922758814976       residual = 2.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922721619186       residual = 1.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922735228884       residual = 9.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922740059787       residual = 3.54e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922762376427       residual = 3.72e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922743915307       residual = 1.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922733864767       residual = 1.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922706407961       residual = 8.88e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922762487620       residual = 4.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922733845049       residual = 4.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922732912016       residual = 1.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922751956071       residual = 1.28e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922745403905       residual = 8.12e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922770512037       residual = 8.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922783724959       residual = 1.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922757725772       residual = 4.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922737529276       residual = 2.22e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.922717542119       residual = 1.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.922710809454       residual = 9.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.922634580999       residual = 1.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.922769425673       residual = 8.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.922782002104       residual = 1.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.922769595831       residual = 3.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.922832615391       residual = 6.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.923142781633       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.922602714914       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.922744330642       residual = 1.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.922783654082       residual = 2.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.922675830009       residual = 1.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.922936014332       residual = 3.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.923107450279       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.922677837651       residual = 7.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.923192304996       residual = 1.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.922529656226       residual = 1.05e-05           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.922201324195       residual = 5.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.923885477208       residual = 2.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.922678457516       residual = 8.25e-05           smallest_sin_value = 9.97e-01
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.929240227075       residual = 7.54e-03           smallest_sin_value = 9.97e-01
davidson iteration   48 stopping due to small subspace S singular value of 6.19e-01
davidson solver did not converge after         48 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+10 is 5.864336e-14

solving harmonic davidson linear method for identity shift 4.0000e+10, overlap shift 4.0000e+11 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922746682503       residual = 6.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922746682503       residual = 5.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922746682503       residual = 3.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922746682503       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922746682684       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922746682501       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922746030101       residual = 9.94e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922737677000       residual = 3.04e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922835587496       residual = 3.08e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922749140691       residual = 1.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922712746917       residual = 2.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922734061710       residual = 1.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922748902499       residual = 9.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922810292744       residual = 4.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922815024145       residual = 4.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922609528274       residual = 3.78e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922669506265       residual = 2.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922825070139       residual = 3.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922745730546       residual = 9.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922721728960       residual = 5.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922690061220       residual = 8.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922658753712       residual = 1.22e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922593160586       residual = 2.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922949265912       residual = 3.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922488924846       residual = 4.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923049449960       residual = 7.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922575597292       residual = 2.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.922945381313       residual = 3.50e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.922801336216       residual = 5.50e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.922792842923       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.922992336733       residual = 6.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.923333898182       residual = 3.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.922423212283       residual = 1.85e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.922197622185       residual = 2.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.922708159424       residual = 2.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.924123681997       residual = 1.53e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.920515605640       residual = 4.82e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.920856772396       residual = 5.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.921873370487       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.924939914532       residual = 6.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.922393535530       residual = 2.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.924167126637       residual = 4.22e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.921928123785       residual = 5.06e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.925165437253       residual = 6.66e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.922745991714       residual = 2.92e-04           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.917752668618       residual = 3.47e-03           smallest_sin_value = 1.00e+00
davidson iteration   46 stopping due to small subspace S singular value of 9.89e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+10 is 1.443453e-14

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.615116 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2268e+01
  </log>
  <optVariables href="H2O.s010.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -16.9396
    reference variance = 0.748381
====================================================
  Execution time = 4.1876e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s010
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9216e-01
  Total weights = 2.0000e+06
  Execution time = 3.7313e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382202378
  error estimate for blocks of size 2^( 2) =       0.000398945484
  error estimate for blocks of size 2^( 3) =       0.000416277526
  error estimate for blocks of size 2^( 4) =       0.000430403158
  error estimate for blocks of size 2^( 5) =       0.000441561060
  error estimate for blocks of size 2^( 6) =       0.000447819722
  error estimate for blocks of size 2^( 7) =       0.000452956776

      target function =      -0.924905218948
              le_mean =     -16.898132180614
             les_mean =     285.839028363610
             stat err =       0.000443185179
             autocorr =       1.344570830490
   target nu stat err =       0.000443185179
   target dn stat err =       0.002225557889
      target stat err =       0.003662608140
              std dev =       0.540515787177
             le_variance =       0.292157316188

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382202378
  error estimate for blocks of size 2^( 2) =       0.000398945484
  error estimate for blocks of size 2^( 3) =       0.000416277526
  error estimate for blocks of size 2^( 4) =       0.000430403158
  error estimate for blocks of size 2^( 5) =       0.000441561060
  error estimate for blocks of size 2^( 6) =       0.000447819722
  error estimate for blocks of size 2^( 7) =       0.000452956776

      target function =      -0.924905218948
              le_mean =     -16.898132180614
             les_mean =     285.839028363610
             stat err =       0.000443185179
             autocorr =       1.344570830495
   target nu stat err =       0.000443185179
   target dn stat err =       0.002225557889
      target stat err =       0.003662608140
              std dev =       0.540515787177
             le_variance =       0.292157316188

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382202378
  error estimate for blocks of size 2^( 2) =       0.000398945484
  error estimate for blocks of size 2^( 3) =       0.000416277526
  error estimate for blocks of size 2^( 4) =       0.000430403158
  error estimate for blocks of size 2^( 5) =       0.000441561060
  error estimate for blocks of size 2^( 6) =       0.000447819722
  error estimate for blocks of size 2^( 7) =       0.000452956776

      target function =      -0.924905218948
              le_mean =     -16.898132180614
             les_mean =     285.839028363610
             stat err =       0.000443185179
             autocorr =       1.344570830489
   target nu stat err =       0.000443185179
   target dn stat err =       0.002225557889
      target stat err =       0.003662608140
              std dev =       0.540515787177
             le_variance =       0.292157316188

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292168237548
                                         uncertainty =       0.002413507407

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382202378
  error estimate for blocks of size 2^( 2) =       0.000398945484
  error estimate for blocks of size 2^( 3) =       0.000416277526
  error estimate for blocks of size 2^( 4) =       0.000430403158
  error estimate for blocks of size 2^( 5) =       0.000441561060
  error estimate for blocks of size 2^( 6) =       0.000447819722
  error estimate for blocks of size 2^( 7) =       0.000452956776

      target function =      -0.924905218948
              le_mean =     -16.898132180614
             les_mean =     285.839028363610
             stat err =       0.000443185179
             autocorr =       1.344570830489
   target nu stat err =       0.000443185179
   target dn stat err =       0.002225557889
      target stat err =       0.003662608140
              std dev =       0.540515787177
             le_variance =       0.292157316188


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924905218948        initial  <--
     2.5000e+09     2.5000e+10             2.3281e-13        -0.924905218948
     1.0000e+10     1.0000e+11             5.8643e-14        -0.924905218948
     4.0000e+10     4.0000e+11             1.4435e-14        -0.924905218948

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.6490
  </log>
  <optVariables href="H2O.s010.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1295e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s011 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s011 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=11  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6904e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -16.9018
    reference variance = 0.204918
====================================================
  Execution time = 4.0870e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s011
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8878e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0937e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288825910758
                                         uncertainty =       0.002297675621

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288825910758
                                         uncertainty =       0.002297675621

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379986963
  error estimate for blocks of size 2^( 2) =       0.000396939296
  error estimate for blocks of size 2^( 3) =       0.000413444903
  error estimate for blocks of size 2^( 4) =       0.000428473607
  error estimate for blocks of size 2^( 5) =       0.000439955181
  error estimate for blocks of size 2^( 6) =       0.000447778211
  error estimate for blocks of size 2^( 7) =       0.000450238835

      target function =      -0.930349257048
              le_mean =     -16.898958109450
             les_mean =     285.863565224163
             stat err =       0.000441611458
             autocorr =       1.350651404299
   target nu stat err =       0.000441611458
   target dn stat err =       0.002577540693
      target stat err =       0.004273017559
              std dev =       0.537382716140
             le_variance =       0.288780183605


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689895810945e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+10, overlap shift 2.5000e+11 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930367305849       residual = 7.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930367305849       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930367305849       residual = 5.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.930367305850       residual = 1.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.930363536323       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.930356058458       residual = 9.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.930361073403       residual = 3.98e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.930385121425       residual = 3.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.930349763440       residual = 2.25e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.930335645897       residual = 1.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.930397631773       residual = 6.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.930280222435       residual = 8.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.930383157257       residual = 6.55e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.930376677069       residual = 5.05e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.930479254596       residual = 5.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.930360974789       residual = 1.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.930268884281       residual = 1.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.930338926774       residual = 5.57e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.930340729668       residual = 7.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.930248536209       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.930422694794       residual = 9.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.930370716125       residual = 2.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.930300540310       residual = 3.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.930506997802       residual = 1.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.930366521352       residual = 1.11e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.930451873523       residual = 6.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.930368677879       residual = 1.20e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.930339189795       residual = 2.74e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.930266495504       residual = 7.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.929914891110       residual = 1.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.930204267845       residual = 2.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.930324056787       residual = 1.20e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.931635302457       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.930969385465       residual = 2.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.930588894839       residual = 5.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.930452751221       residual = 5.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.930475076891       residual = 4.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.929971116515       residual = 2.84e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.929493604953       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.930313110749       residual = 1.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.926382463728       residual = 1.26e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.929589284478       residual = 1.51e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.930174335287       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.925867404601       residual = 1.47e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.912619534233       residual = 3.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.928050790120       residual = 5.25e-04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.939028976813       residual = 6.92e-03           smallest_sin_value = 9.97e-01
davidson iteration   47 stopping due to small subspace S singular value of 6.67e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+10 is 1.170996e-14

solving harmonic davidson linear method for identity shift 1.0000e+11, overlap shift 1.0000e+12 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930367305849       residual = 7.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930367305849       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930367305849       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.930367305849       residual = 2.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.930318016068       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.930390421372       residual = 8.94e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.930409927665       residual = 3.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.930243487202       residual = 3.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.930358035962       residual = 3.44e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.930446619816       residual = 2.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.930409785596       residual = 8.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.930408462773       residual = 1.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.930440394950       residual = 1.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.930431167748       residual = 9.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.930561578948       residual = 9.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.929702455829       residual = 4.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.930294258463       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.930630333883       residual = 8.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.930595216965       residual = 6.16e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.930191288458       residual = 5.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.930444847691       residual = 4.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.930848602609       residual = 2.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.930407874348       residual = 2.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.930216073041       residual = 4.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.930400036145       residual = 1.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.930849077263       residual = 2.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.931174683243       residual = 5.82e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.928791659259       residual = 2.87e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.929443931577       residual = 8.76e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.930554619084       residual = 7.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.929573661213       residual = 8.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.930405549425       residual = 2.43e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.931304763862       residual = 9.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.927639068631       residual = 6.41e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.931606319591       residual = 2.02e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.927389121268       residual = 1.22e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.928536580320       residual = 2.87e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.932741342463       residual = 5.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.934141485853       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.929720132975       residual = 2.82e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.934848022356       residual = 2.97e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.938112489044       residual = 8.13e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.939354597600       residual = 6.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.925995690460       residual = 3.36e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.909669568512       residual = 3.41e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.980506398690       residual = 2.59e-01           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 7.82e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+11 is 2.849446e-15

solving harmonic davidson linear method for identity shift 4.0000e+11, overlap shift 4.0000e+12 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930367305849       residual = 7.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930367305849       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930367305849       residual = 5.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.930367305849       residual = 1.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.930367305849       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.930416327103       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.930381393318       residual = 3.56e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.931704684136       residual = 2.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.929699197731       residual = 9.55e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.931010492536       residual = 6.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.931071508158       residual = 8.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.929990945089       residual = 5.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.931498590108       residual = 1.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.930899329244       residual = 9.35e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.930330179495       residual = 5.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.929185743541       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.929392234137       residual = 9.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.931204069147       residual = 1.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.929641938054       residual = 6.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.929687471197       residual = 8.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.929135611040       residual = 1.35e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.930011890070       residual = 5.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.932793044410       residual = 4.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.928656229189       residual = 2.81e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.932977420596       residual = 5.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.929986821486       residual = 7.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.931700960592       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.928197552052       residual = 4.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.926747269513       residual = 1.10e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.928104418448       residual = 5.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.929900011324       residual = 1.86e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.932330703952       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.931502672605       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.930801510122       residual = 4.56e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.926429860145       residual = 1.29e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.932233443016       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.935276984744       residual = 2.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.934524632651       residual = 1.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.927890987273       residual = 3.89e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.931834344346       residual = 3.64e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.926810410930       residual = 8.57e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.900662749490       residual = 6.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.938025379515       residual = 6.56e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.916513510853       residual = 2.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.946220212277       residual = 6.62e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.928718119623       residual = 5.03e-02           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.66e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+11 is 5.285815e-16

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.771909 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1972e+01
  </log>
  <optVariables href="H2O.s011.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -16.8505
    reference variance = 0.24522
====================================================
  Execution time = 4.0081e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s011
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0046e-01
  Total weights = 2.0000e+06
  Execution time = 3.7269e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387597239
  error estimate for blocks of size 2^( 2) =       0.000404265038
  error estimate for blocks of size 2^( 3) =       0.000420801278
  error estimate for blocks of size 2^( 4) =       0.000436482720
  error estimate for blocks of size 2^( 5) =       0.000448188157
  error estimate for blocks of size 2^( 6) =       0.000454546685
  error estimate for blocks of size 2^( 7) =       0.000458676924

      target function =      -0.911613767011
              le_mean =     -16.898817985517
             les_mean =     285.870512397373
             stat err =       0.000449473621
             autocorr =       1.344767075944
   target nu stat err =       0.000449473621
   target dn stat err =       0.005995155401
      target stat err =       0.009414629096
              std dev =       0.548145272701
             le_variance =       0.300463239984

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387597239
  error estimate for blocks of size 2^( 2) =       0.000404265038
  error estimate for blocks of size 2^( 3) =       0.000420801278
  error estimate for blocks of size 2^( 4) =       0.000436482720
  error estimate for blocks of size 2^( 5) =       0.000448188157
  error estimate for blocks of size 2^( 6) =       0.000454546685
  error estimate for blocks of size 2^( 7) =       0.000458676924

      target function =      -0.911613767011
              le_mean =     -16.898817985517
             les_mean =     285.870512397373
             stat err =       0.000449473621
             autocorr =       1.344767075942
   target nu stat err =       0.000449473621
   target dn stat err =       0.005995155401
      target stat err =       0.009414629096
              std dev =       0.548145272701
             le_variance =       0.300463239984

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387597239
  error estimate for blocks of size 2^( 2) =       0.000404265038
  error estimate for blocks of size 2^( 3) =       0.000420801278
  error estimate for blocks of size 2^( 4) =       0.000436482720
  error estimate for blocks of size 2^( 5) =       0.000448188157
  error estimate for blocks of size 2^( 6) =       0.000454546685
  error estimate for blocks of size 2^( 7) =       0.000458676924

      target function =      -0.911613767011
              le_mean =     -16.898817985517
             les_mean =     285.870512397373
             stat err =       0.000449473621
             autocorr =       1.344767075944
   target nu stat err =       0.000449473621
   target dn stat err =       0.005995155401
      target stat err =       0.009414629096
              std dev =       0.548145272701
             le_variance =       0.300463239984

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300510169533
                                         uncertainty =       0.005674457811

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387597239
  error estimate for blocks of size 2^( 2) =       0.000404265038
  error estimate for blocks of size 2^( 3) =       0.000420801278
  error estimate for blocks of size 2^( 4) =       0.000436482720
  error estimate for blocks of size 2^( 5) =       0.000448188157
  error estimate for blocks of size 2^( 6) =       0.000454546685
  error estimate for blocks of size 2^( 7) =       0.000458676924

      target function =      -0.911613767011
              le_mean =     -16.898817985517
             les_mean =     285.870512397373
             stat err =       0.000449473621
             autocorr =       1.344767075944
   target nu stat err =       0.000449473621
   target dn stat err =       0.005995155401
      target stat err =       0.009414629096
              std dev =       0.548145272701
             le_variance =       0.300463239984


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.911613767011        initial  <--
     2.5000e+10     2.5000e+11             1.1710e-14        -0.911613767011
     1.0000e+11     1.0000e+12             2.8494e-15        -0.911613767011
     4.0000e+11     4.0000e+12             5.2858e-16        -0.911613767011

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 63.4431
  </log>
  <optVariables href="H2O.s011.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1542e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s012 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s012 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=12  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6902e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -16.8727
    reference variance = 0.214072
====================================================
  Execution time = 4.0664e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s012
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9006e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1078e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290021740878
                                         uncertainty =       0.002031577543

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290021740878
                                         uncertainty =       0.002031577543

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380829484
  error estimate for blocks of size 2^( 2) =       0.000397617778
  error estimate for blocks of size 2^( 3) =       0.000414490138
  error estimate for blocks of size 2^( 4) =       0.000429477661
  error estimate for blocks of size 2^( 5) =       0.000441235011
  error estimate for blocks of size 2^( 6) =       0.000448901284
  error estimate for blocks of size 2^( 7) =       0.000455796770

      target function =      -0.928282210303
              le_mean =     -16.898446671234
             les_mean =     285.847561947509
             stat err =       0.000443852682
             autocorr =       1.358365263491
   target nu stat err =       0.000443852682
   target dn stat err =       0.002116408697
      target stat err =       0.003518384935
              std dev =       0.538574221441
             le_variance =       0.290062192001


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689844667123e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.928294194096       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.928294194096       residual = 8.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.928294194096       residual = 4.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.928294194096       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.928244235460       residual = 1.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.928204490845       residual = 1.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.928388479663       residual = 6.97e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.928610974500       residual = 8.99e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927884285878       residual = 5.35e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.928162042541       residual = 3.30e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927829955168       residual = 3.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927530958802       residual = 6.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.928281834808       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.928561271864       residual = 3.53e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.928555748940       residual = 2.20e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927925618418       residual = 4.34e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.929069970602       residual = 7.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.928869664001       residual = 5.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.928310137073       residual = 3.25e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927260419325       residual = 9.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.929131634498       residual = 6.87e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927300539513       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.929112303996       residual = 5.80e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927625670931       residual = 5.31e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927149571695       residual = 1.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.929597267317       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.930022130047       residual = 2.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.928348447591       residual = 4.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.928141120686       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.927610956269       residual = 6.54e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.927312809558       residual = 9.65e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.928777745502       residual = 9.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.930688217133       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.925648218409       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.918963356679       residual = 8.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.934484456476       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.921667904532       residual = 4.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.924422059868       residual = 2.63e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.930846092324       residual = 7.16e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.916024366660       residual = 1.54e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.923290937901       residual = 6.71e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.920906878534       residual = 4.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.918377858873       residual = 8.98e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.949763813451       residual = 6.60e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.946117524059       residual = 4.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.792857925361       residual = 1.67e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.936060975066       residual = 3.20e-01           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 9.81e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+11 is 1.236645e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.928294194096       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.928294194096       residual = 8.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.928294194096       residual = 4.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927970504335       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927972127998       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.928294194096       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.928660318163       residual = 1.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927390072684       residual = 5.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.928294194096       residual = 2.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.928294194096       residual = 1.08e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.928294194096       residual = 9.84e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927200045918       residual = 1.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927820430907       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927635094350       residual = 2.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.926289247398       residual = 5.56e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.930828934599       residual = 4.98e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.932203749446       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927761218732       residual = 4.46e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925977743648       residual = 8.95e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923206131377       residual = 2.18e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927677406594       residual = 4.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.932572045501       residual = 1.36e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927884356411       residual = 5.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925210937503       residual = 9.29e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925376570717       residual = 8.76e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.929355442175       residual = 3.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922286819171       residual = 3.03e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.930988489051       residual = 3.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.917886425414       residual = 8.10e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.932092584583       residual = 1.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.911494431490       residual = 3.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.900904490641       residual = 5.70e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.890688051853       residual = 1.04e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.938790701648       residual = 1.21e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.949338060473       residual = 1.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.986664108312       residual = 3.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.938324143188       residual = 6.74e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.940228645536       residual = 1.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.932995543770       residual = 5.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.922565307618       residual = 6.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -1.015886323255       residual = 8.36e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.937532627550       residual = 1.67e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.835850195060       residual = 6.57e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.943512032821       residual = 5.14e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.868460830736       residual = 4.24e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.808900876734       residual = 8.24e+00           smallest_sin_value = 1.00e+00
davidson iteration   46 stopping due to small subspace S singular value of 9.64e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 3.355031e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.928294194096       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.928294194096       residual = 8.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.928294194096       residual = 2.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.928294194096       residual = 2.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.928294194096       residual = 1.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.928294194096       residual = 9.29e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.929348889077       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927644167097       residual = 4.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.920875104580       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916794961272       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.924796371881       residual = 2.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925269504801       residual = 2.03e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.928987451637       residual = 6.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.916986513627       residual = 1.14e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.934623885752       residual = 4.59e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.947095631670       residual = 3.80e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.934046705776       residual = 3.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.960519968262       residual = 7.71e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.907518154432       residual = 3.30e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.910653795233       residual = 3.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.906447790243       residual = 4.69e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.961597577245       residual = 8.92e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.940940565594       residual = 7.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.885612885945       residual = 2.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.928231653460       residual = 7.10e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.977832131291       residual = 1.86e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922370884279       residual = 5.59e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.940875666934       residual = 5.94e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -1.072178747063       residual = 2.87e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -1.088802274886       residual = 2.30e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.807986621984       residual = 2.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -1.039556047708       residual = 1.38e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.902779938642       residual = 5.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.674644617018       residual = 4.85e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.965721074725       residual = 2.38e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -1.021499327796       residual = 9.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.916262834862       residual = 2.07e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.063956428657       residual = 1.54e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -1.505355003417       residual = 3.11e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.029246987177       residual = 1.26e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -1.091756543240       residual = 5.12e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.134268699058       residual = 4.33e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.099281480727       residual = 3.75e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.955619576112       residual = 2.25e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.991186241656       residual = 1.61e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -1.408589264158       residual = 1.20e+02           smallest_sin_value = 1.00e+00
davidson iteration   46 stopping due to small subspace S singular value of 9.46e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 4.627429e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.931829 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1910e+01
  </log>
  <optVariables href="H2O.s012.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -16.8671
    reference variance = 0.720113
====================================================
  Execution time = 3.9893e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s012
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9974e-01
  Total weights = 2.0000e+06
  Execution time = 3.7231e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387131610
  error estimate for blocks of size 2^( 2) =       0.000403727806
  error estimate for blocks of size 2^( 3) =       0.000420361958
  error estimate for blocks of size 2^( 4) =       0.000435173114
  error estimate for blocks of size 2^( 5) =       0.000446811255
  error estimate for blocks of size 2^( 6) =       0.000453577651
  error estimate for blocks of size 2^( 7) =       0.000457698316

      target function =      -0.912813468166
              le_mean =     -16.898616374141
             les_mean =     285.862976977510
             stat err =       0.000448315084
             autocorr =       1.341063787117
   target nu stat err =       0.000448315084
   target dn stat err =       0.003722026434
      target stat err =       0.005888659143
              std dev =       0.547486773358
             le_variance =       0.299741767002

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387131610
  error estimate for blocks of size 2^( 2) =       0.000403727806
  error estimate for blocks of size 2^( 3) =       0.000420361958
  error estimate for blocks of size 2^( 4) =       0.000435173114
  error estimate for blocks of size 2^( 5) =       0.000446811255
  error estimate for blocks of size 2^( 6) =       0.000453577651
  error estimate for blocks of size 2^( 7) =       0.000457698316

      target function =      -0.912813468166
              le_mean =     -16.898616374141
             les_mean =     285.862976977510
             stat err =       0.000448315084
             autocorr =       1.341063787120
   target nu stat err =       0.000448315084
   target dn stat err =       0.003722026434
      target stat err =       0.005888659143
              std dev =       0.547486773358
             le_variance =       0.299741767002

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387131610
  error estimate for blocks of size 2^( 2) =       0.000403727806
  error estimate for blocks of size 2^( 3) =       0.000420361958
  error estimate for blocks of size 2^( 4) =       0.000435173114
  error estimate for blocks of size 2^( 5) =       0.000446811255
  error estimate for blocks of size 2^( 6) =       0.000453577651
  error estimate for blocks of size 2^( 7) =       0.000457698316

      target function =      -0.912813468166
              le_mean =     -16.898616374141
             les_mean =     285.862976977510
             stat err =       0.000448315084
             autocorr =       1.341063787123
   target nu stat err =       0.000448315084
   target dn stat err =       0.003722026434
      target stat err =       0.005888659143
              std dev =       0.547486773358
             le_variance =       0.299741767002

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299739277068
                                         uncertainty =       0.003552860949

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387131610
  error estimate for blocks of size 2^( 2) =       0.000403727806
  error estimate for blocks of size 2^( 3) =       0.000420361958
  error estimate for blocks of size 2^( 4) =       0.000435173114
  error estimate for blocks of size 2^( 5) =       0.000446811255
  error estimate for blocks of size 2^( 6) =       0.000453577651
  error estimate for blocks of size 2^( 7) =       0.000457698316

      target function =      -0.912813468166
              le_mean =     -16.898616374141
             les_mean =     285.862976977510
             stat err =       0.000448315084
             autocorr =       1.341063787117
   target nu stat err =       0.000448315084
   target dn stat err =       0.003722026434
      target stat err =       0.005888659143
              std dev =       0.547486773358
             le_variance =       0.299741767002


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.912813468166        initial
     2.5000e+11     2.5000e+12             1.2366e-15        -0.912813468166
     1.0000e+12     1.0000e+13             3.3550e-16        -0.912813468166  <--
     4.0000e+12     4.0000e+13             4.6274e-17        -0.912813468166

*****************************************************************************
Applying the update for shift_i =   1.0000e+12     and shift_s =   1.0000e+13
*****************************************************************************

  Execution time = 5.8681e+01
  </log>
  <optVariables href="H2O.s012.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1060e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s013 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s013 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=13  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -16.8822
    reference variance = 0.219709
====================================================
  Execution time = 4.2653e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s013
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0904e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0940e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.308888634240
                                         uncertainty =       0.012247217913

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.308888634240
                                         uncertainty =       0.012247217913

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000393089232
  error estimate for blocks of size 2^( 2) =       0.000409676656
  error estimate for blocks of size 2^( 3) =       0.000426286591
  error estimate for blocks of size 2^( 4) =       0.000440784876
  error estimate for blocks of size 2^( 5) =       0.000452535869
  error estimate for blocks of size 2^( 6) =       0.000460803773
  error estimate for blocks of size 2^( 7) =       0.000464764028

      target function =      -0.898140292965
              le_mean =     -16.898296198619
             les_mean =     285.861452550594
             stat err =       0.000454722136
             autocorr =       1.338165714705
   target nu stat err =       0.000454722136
   target dn stat err =       0.012155862272
      target stat err =       0.018470563880
              std dev =       0.555912123325
             le_variance =       0.309038288860


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689829619862e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.898521556194       residual = 2.36e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.898521556194       residual = 2.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.898521556194       residual = 9.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.898521556195       residual = 5.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.898539613038       residual = 2.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.898521578208       residual = 1.83e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.898604710337       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.898314979670       residual = 1.62e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.898531519814       residual = 7.11e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.898607559101       residual = 5.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.898343792768       residual = 3.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.898057946496       residual = 4.99e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.898660642393       residual = 2.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.898042364535       residual = 2.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.897516497657       residual = 7.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.898558642978       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.898429855355       residual = 7.38e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.898463280627       residual = 1.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.898635047015       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.898510655171       residual = 1.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.898752457718       residual = 2.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.899189349068       residual = 4.64e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.896814953810       residual = 2.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.896965172696       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.898835175251       residual = 1.67e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.899398934770       residual = 1.29e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.899233450966       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.896634793979       residual = 2.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.897817307275       residual = 8.15e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.899242691570       residual = 7.86e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.898306946198       residual = 5.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.901927180948       residual = 9.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.897699558624       residual = 1.05e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.899703288218       residual = 6.39e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.895129963787       residual = 3.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.900353914595       residual = 4.33e-04           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.900229131194       residual = 8.41e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.903138711384       residual = 1.42e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.897593568670       residual = 1.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.896584231507       residual = 7.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.899769525697       residual = 8.22e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.895673685364       residual = 3.64e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.895847306910       residual = 5.08e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.893430057621       residual = 1.31e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.917137219309       residual = 2.24e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.902903738948       residual = 4.99e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.955404665953       residual = 5.37e-01           smallest_sin_value = 9.97e-01
davidson iteration   47 stopping due to small subspace S singular value of 8.14e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+11 is 2.237754e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.898521556194       residual = 2.36e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.898521556194       residual = 2.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.898521556194       residual = 9.96e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.898521556194       residual = 5.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.898690087196       residual = 2.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.898082463620       residual = 3.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.898521502042       residual = 1.42e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.898403462634       residual = 9.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.900006216655       residual = 6.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.895163163279       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.898823258345       residual = 6.15e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.894565751375       residual = 1.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.901044631534       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.900153503372       residual = 6.88e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.899236787909       residual = 5.66e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.899290705214       residual = 5.29e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.902504227106       residual = 1.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.898325160207       residual = 7.24e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.902461783183       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.895064746567       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.897448817140       residual = 4.86e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.897621037200       residual = 2.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.905638032610       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.898317454127       residual = 3.05e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.901208274534       residual = 1.57e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.899071513943       residual = 9.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.902395566357       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.895200180045       residual = 2.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.875061109291       residual = 5.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.882074505498       residual = 2.98e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.883153419093       residual = 2.35e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.889383439720       residual = 2.04e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.918433162374       residual = 1.07e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.900027003948       residual = 2.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.902019336231       residual = 2.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.885633829958       residual = 5.99e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.868696329993       residual = 1.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.915765160010       residual = 2.76e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.937580956266       residual = 1.84e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.881093186005       residual = 6.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.978198668236       residual = 7.69e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.870106101481       residual = 1.31e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.874484006030       residual = 4.94e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.972142449767       residual = 4.81e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.857737221199       residual = 9.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -1.102143419136       residual = 5.35e+00           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.24e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 6.688394e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.898521556194       residual = 2.36e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.898521556194       residual = 2.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.898521556194       residual = 9.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.898521556194       residual = 5.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.898958959562       residual = 3.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.898521556194       residual = 1.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.899683381657       residual = 3.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.896010502255       residual = 9.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.897917722948       residual = 2.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.894435887741       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.887318890083       residual = 1.79e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.893101511579       residual = 8.93e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.893694290358       residual = 8.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.898694790553       residual = 4.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.893646258159       residual = 6.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.893102184053       residual = 3.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.898545236730       residual = 7.39e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.899938584676       residual = 2.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.891352978222       residual = 2.52e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.897882315020       residual = 1.09e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.898292133296       residual = 6.33e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.914344959785       residual = 2.17e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.902771587757       residual = 1.74e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.914597416629       residual = 2.74e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.883833832435       residual = 2.78e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.905057762154       residual = 3.73e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.926502525142       residual = 1.31e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.916337476206       residual = 3.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.933207623678       residual = 1.64e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.890990604063       residual = 5.84e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.846678323096       residual = 2.82e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.865815995350       residual = 5.74e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.840393729921       residual = 2.51e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.893810728372       residual = 1.20e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.951929932484       residual = 6.50e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.775903407159       residual = 1.61e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.590683996917       residual = 9.79e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.638551688460       residual = 6.81e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.936851863577       residual = 1.25e+00           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.723312649286       residual = 3.54e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.944587873743       residual = 9.49e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.145001574407       residual = 5.89e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.555485755642       residual = 1.97e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.399327586874       residual = 2.45e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =       0.488385745117       residual = 1.60e+02           smallest_sin_value = 9.96e-01
davidson iteration   45 stopping due to small subspace S singular value of 9.47e-01
davidson solver did not converge after         45 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 6.863010e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.087361 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3756e+01
  </log>
  <optVariables href="H2O.s013.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -16.9326
    reference variance = 0.272432
====================================================
  Execution time = 3.9616e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s013
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9870e-01
  Total weights = 2.0000e+06
  Execution time = 3.7178e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386459117
  error estimate for blocks of size 2^( 2) =       0.000403178557
  error estimate for blocks of size 2^( 3) =       0.000420268356
  error estimate for blocks of size 2^( 4) =       0.000434861079
  error estimate for blocks of size 2^( 5) =       0.000446371482
  error estimate for blocks of size 2^( 6) =       0.000454500487
  error estimate for blocks of size 2^( 7) =       0.000456661263

      target function =      -0.914463714728
              le_mean =     -16.898586626298
             les_mean =     285.860931114638
             stat err =       0.000448098578
             autocorr =       1.344435643772
   target nu stat err =       0.000448098578
   target dn stat err =       0.002967117349
      target stat err =       0.004733739675
              std dev =       0.546535723895
             le_variance =       0.298701297493

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386459117
  error estimate for blocks of size 2^( 2) =       0.000403178557
  error estimate for blocks of size 2^( 3) =       0.000420268356
  error estimate for blocks of size 2^( 4) =       0.000434861079
  error estimate for blocks of size 2^( 5) =       0.000446371482
  error estimate for blocks of size 2^( 6) =       0.000454500487
  error estimate for blocks of size 2^( 7) =       0.000456661263

      target function =      -0.914463714728
              le_mean =     -16.898586626298
             les_mean =     285.860931114638
             stat err =       0.000448098578
             autocorr =       1.344435643771
   target nu stat err =       0.000448098578
   target dn stat err =       0.002967117349
      target stat err =       0.004733739675
              std dev =       0.546535723895
             le_variance =       0.298701297493

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386459117
  error estimate for blocks of size 2^( 2) =       0.000403178557
  error estimate for blocks of size 2^( 3) =       0.000420268356
  error estimate for blocks of size 2^( 4) =       0.000434861079
  error estimate for blocks of size 2^( 5) =       0.000446371482
  error estimate for blocks of size 2^( 6) =       0.000454500487
  error estimate for blocks of size 2^( 7) =       0.000456661263

      target function =      -0.914463714728
              le_mean =     -16.898586626298
             les_mean =     285.860931114638
             stat err =       0.000448098578
             autocorr =       1.344435643775
   target nu stat err =       0.000448098578
   target dn stat err =       0.002967117349
      target stat err =       0.004733739675
              std dev =       0.546535723895
             le_variance =       0.298701297493

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298728746794
                                         uncertainty =       0.003172325534

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386459117
  error estimate for blocks of size 2^( 2) =       0.000403178557
  error estimate for blocks of size 2^( 3) =       0.000420268356
  error estimate for blocks of size 2^( 4) =       0.000434861079
  error estimate for blocks of size 2^( 5) =       0.000446371482
  error estimate for blocks of size 2^( 6) =       0.000454500487
  error estimate for blocks of size 2^( 7) =       0.000456661263

      target function =      -0.914463714728
              le_mean =     -16.898586626298
             les_mean =     285.860931114638
             stat err =       0.000448098578
             autocorr =       1.344435643771
   target nu stat err =       0.000448098578
   target dn stat err =       0.002967117349
      target stat err =       0.004733739675
              std dev =       0.546535723895
             le_variance =       0.298701297493


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.914463714728        initial
     2.5000e+11     2.5000e+12             2.2378e-15        -0.914463714728
     1.0000e+12     1.0000e+13             6.6884e-16        -0.914463714728
     4.0000e+12     4.0000e+13             6.8630e-17        -0.914463714728  <--

*****************************************************************************
Applying the update for shift_i =   4.0000e+12     and shift_s =   4.0000e+13
*****************************************************************************

  Execution time = 5.8369e+01
  </log>
  <optVariables href="H2O.s013.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1215e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s014 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s014 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=14  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -16.8236
    reference variance = 0.272349
====================================================
  Execution time = 4.1251e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s014
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9166e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1083e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291683915586
                                         uncertainty =       0.002332177459

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291683915586
                                         uncertainty =       0.002332177459

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381879273
  error estimate for blocks of size 2^( 2) =       0.000398620183
  error estimate for blocks of size 2^( 3) =       0.000416335398
  error estimate for blocks of size 2^( 4) =       0.000431793395
  error estimate for blocks of size 2^( 5) =       0.000444216184
  error estimate for blocks of size 2^( 6) =       0.000451467772
  error estimate for blocks of size 2^( 7) =       0.000456177194

      target function =      -0.925668230359
              le_mean =     -16.899231664998
             les_mean =     285.875694279765
             stat err =       0.000445913636
             autocorr =       1.363481761112
   target nu stat err =       0.000445913636
   target dn stat err =       0.002244016940
      target stat err =       0.003706265120
              std dev =       0.540058847085
             le_variance =       0.291663558315


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689923166500e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925681590592       residual = 6.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925681590592       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925681590592       residual = 4.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925681590592       residual = 4.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925681590682       residual = 2.35e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925681585864       residual = 1.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925688183115       residual = 1.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.926481274382       residual = 2.37e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.926268137322       residual = 3.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927122514925       residual = 2.96e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922976915765       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923414279854       residual = 6.80e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923436867060       residual = 4.38e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922328477620       residual = 1.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.928913600720       residual = 9.59e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.926979594306       residual = 2.79e-04           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.928479193498       residual = 9.52e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.929630478519       residual = 1.75e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.931054609191       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925814385172       residual = 8.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.929072312036       residual = 7.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.930037471593       residual = 1.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.905808240510       residual = 3.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927181408139       residual = 8.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.920493312474       residual = 2.35e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.931046783514       residual = 2.32e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.933884312944       residual = 5.34e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.912825518738       residual = 1.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.927641521105       residual = 2.64e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.919307918932       residual = 3.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.905409195264       residual = 4.62e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.945943997580       residual = 1.42e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.924423305249       residual = 4.64e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.936485882542       residual = 1.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.936107791613       residual = 2.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.925710723657       residual = 3.57e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.919832656172       residual = 7.59e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.917312871416       residual = 4.61e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.957158398085       residual = 1.16e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.986935893986       residual = 4.96e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.864328523548       residual = 3.19e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.967064054078       residual = 4.19e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.932655065775       residual = 1.77e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -1.093187725004       residual = 2.11e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.918265752128       residual = 2.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.855900669468       residual = 1.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.494647362395       residual = 1.88e+01           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 9.80e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 5.211392e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925681590592       residual = 6.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925681590592       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925681590592       residual = 4.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925681590592       residual = 3.48e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925681590592       residual = 2.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925681590592       residual = 1.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925681588182       residual = 1.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924352962649       residual = 6.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.936357142667       residual = 1.10e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.937266020185       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.919031988845       residual = 8.24e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.929113136505       residual = 8.88e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.949951912327       residual = 4.27e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927360280048       residual = 1.86e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.930533484011       residual = 5.53e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923818081010       residual = 4.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.905153910487       residual = 3.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924121466893       residual = 5.18e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.936426235706       residual = 1.31e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.864000228904       residual = 2.83e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.961763984026       residual = 9.80e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.960842968941       residual = 1.11e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.906480597726       residual = 3.28e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.899682237215       residual = 5.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.911162678927       residual = 2.32e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.918261440395       residual = 7.51e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.936469770068       residual = 1.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.921426764982       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.945217258792       residual = 6.32e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.851762333532       residual = 4.54e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.858382727232       residual = 3.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.829108723984       residual = 1.75e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.896186955442       residual = 2.09e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.919728333012       residual = 1.30e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.837614707610       residual = 1.84e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -1.083436271777       residual = 2.68e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.075172799860       residual = 1.68e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.011223032194       residual = 1.37e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -1.314406478060       residual = 1.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.710153372785       residual = 3.70e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.885435790923       residual = 4.24e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.183829955612       residual = 5.93e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.845687752302       residual = 1.26e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.691888801415       residual = 6.25e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -1.369346301622       residual = 3.84e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       4.768825548872       residual = 2.95e+03           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =       0.354998833514       residual = 1.31e+02           smallest_sin_value = 1.00e+00
davidson iteration   47 stopping due to small subspace S singular value of 9.45e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 7.996332e-17

solving harmonic davidson linear method for identity shift 1.6000e+13, overlap shift 1.6000e+14 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925681590592       residual = 6.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925681590592       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925681590592       residual = 4.73e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925681590592       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925681590477       residual = 1.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925798987070       residual = 1.41e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923604854086       residual = 1.69e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923548694755       residual = 6.17e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.931731656790       residual = 5.24e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925505384594       residual = 5.14e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.904203487701       residual = 4.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.938359447345       residual = 6.22e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.999814213612       residual = 4.60e-01           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.872316094917       residual = 2.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.904473849722       residual = 4.28e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.976781867838       residual = 2.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.967875172512       residual = 3.23e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.937571331617       residual = 6.15e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913436637934       residual = 4.42e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.906766936484       residual = 6.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.905202565387       residual = 2.52e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.947862763666       residual = 6.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.975742972714       residual = 5.59e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.966782977044       residual = 3.60e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.932376810122       residual = 6.77e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.941827711343       residual = 9.18e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -1.295302429384       residual = 1.08e+01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -1.043429363914       residual = 1.10e+00           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.953875263479       residual = 6.10e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.728193523710       residual = 5.32e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.898405192180       residual = 9.45e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.748007019007       residual = 3.79e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.425883906108       residual = 1.93e+01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -1.322237394051       residual = 2.69e+01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.535996323653       residual = 1.46e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -1.030431146945       residual = 3.92e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.223951683382       residual = 4.31e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.293407185606       residual = 3.75e+01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -2.480549129090       residual = 1.91e+02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.193219100184       residual = 4.28e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -1.065907063790       residual = 1.49e+02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.366135115279       residual = 6.16e+01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.615537639770       residual = 5.53e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.563477531737       residual = 5.71e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.159950885619       residual = 2.50e+02           smallest_sin_value = 9.99e-01
davidson iteration   45:   krylov dim =  46   tar_fn =      -7.755848338723       residual = 3.61e+03           smallest_sin_value = 9.92e-01
davidson iteration   46 stopping due to small subspace S singular value of 6.23e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+13 is 5.766640e-18

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.250745 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2506e+01
  </log>
  <optVariables href="H2O.s014.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -16.9709
    reference variance = 0.62542
====================================================
  Execution time = 4.1707e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s014
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0187e-01
  Total weights = 2.0000e+06
  Execution time = 3.7079e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388502382
  error estimate for blocks of size 2^( 2) =       0.000405509377
  error estimate for blocks of size 2^( 3) =       0.000422530830
  error estimate for blocks of size 2^( 4) =       0.000437448791
  error estimate for blocks of size 2^( 5) =       0.000449301006
  error estimate for blocks of size 2^( 6) =       0.000457024063
  error estimate for blocks of size 2^( 7) =       0.000464647116

      target function =      -0.909408543915
              le_mean =     -16.898831482629
             les_mean =     285.872373529655
             stat err =       0.000452105244
             autocorr =       1.354227772632
   target nu stat err =       0.000452105244
   target dn stat err =       0.006322926159
      target stat err =       0.009878883809
              std dev =       0.549425338227
             le_variance =       0.301868202286

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388502382
  error estimate for blocks of size 2^( 2) =       0.000405509377
  error estimate for blocks of size 2^( 3) =       0.000422530830
  error estimate for blocks of size 2^( 4) =       0.000437448791
  error estimate for blocks of size 2^( 5) =       0.000449301006
  error estimate for blocks of size 2^( 6) =       0.000457024063
  error estimate for blocks of size 2^( 7) =       0.000464647116

      target function =      -0.909408543915
              le_mean =     -16.898831482629
             les_mean =     285.872373529655
             stat err =       0.000452105244
             autocorr =       1.354227772631
   target nu stat err =       0.000452105244
   target dn stat err =       0.006322926159
      target stat err =       0.009878883809
              std dev =       0.549425338227
             le_variance =       0.301868202286

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388502382
  error estimate for blocks of size 2^( 2) =       0.000405509377
  error estimate for blocks of size 2^( 3) =       0.000422530830
  error estimate for blocks of size 2^( 4) =       0.000437448791
  error estimate for blocks of size 2^( 5) =       0.000449301006
  error estimate for blocks of size 2^( 6) =       0.000457024063
  error estimate for blocks of size 2^( 7) =       0.000464647116

      target function =      -0.909408543915
              le_mean =     -16.898831482629
             les_mean =     285.872373529655
             stat err =       0.000452105244
             autocorr =       1.354227772632
   target nu stat err =       0.000452105244
   target dn stat err =       0.006322926159
      target stat err =       0.009878883809
              std dev =       0.549425338227
             le_variance =       0.301868202286

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301935328993
                                         uncertainty =       0.006178851561

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388502382
  error estimate for blocks of size 2^( 2) =       0.000405509377
  error estimate for blocks of size 2^( 3) =       0.000422530830
  error estimate for blocks of size 2^( 4) =       0.000437448791
  error estimate for blocks of size 2^( 5) =       0.000449301006
  error estimate for blocks of size 2^( 6) =       0.000457024063
  error estimate for blocks of size 2^( 7) =       0.000464647116

      target function =      -0.909408543915
              le_mean =     -16.898831482629
             les_mean =     285.872373529655
             stat err =       0.000452105244
             autocorr =       1.354227772632
   target nu stat err =       0.000452105244
   target dn stat err =       0.006322926159
      target stat err =       0.009878883809
              std dev =       0.549425338227
             le_variance =       0.301868202286


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.909408543915        initial
     1.0000e+12     1.0000e+13             5.2114e-16        -0.909408543915
     4.0000e+12     4.0000e+13             7.9963e-17        -0.909408543915
     1.6000e+13     1.6000e+14             5.7666e-18        -0.909408543915  <--

*****************************************************************************
Applying the update for shift_i =   1.6000e+13     and shift_s =   1.6000e+14
*****************************************************************************

  Execution time = 6.0435e+01
  </log>
  <optVariables href="H2O.s014.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1299e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s015 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s015 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=15  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -16.9409
    reference variance = 0.47362
====================================================
  Execution time = 4.1011e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s015
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9328e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0844e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293137870865
                                         uncertainty =       0.003168976299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293137870865
                                         uncertainty =       0.003168976299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382934935
  error estimate for blocks of size 2^( 2) =       0.000399980557
  error estimate for blocks of size 2^( 3) =       0.000417367795
  error estimate for blocks of size 2^( 4) =       0.000432198098
  error estimate for blocks of size 2^( 5) =       0.000443391376
  error estimate for blocks of size 2^( 6) =       0.000450875572
  error estimate for blocks of size 2^( 7) =       0.000455817830

      target function =      -0.923049216614
              le_mean =     -16.899407209379
             les_mean =     285.883242210653
             stat err =       0.000445570719
             autocorr =       1.353889777276
   target nu stat err =       0.000445570719
   target dn stat err =       0.003104985223
      target stat err =       0.005047325432
              std dev =       0.541551778576
             le_variance =       0.293278328879


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689940720938e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923075020546       residual = 7.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923075020546       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923075020546       residual = 7.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923075020546       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923075020546       residual = 2.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923075025298       residual = 1.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922900756230       residual = 1.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923642764950       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.920609528871       residual = 1.20e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.924995052545       residual = 5.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.915691900709       residual = 6.23e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925078882826       residual = 4.45e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.912836325980       residual = 1.29e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.948824242720       residual = 5.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.924632317876       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.916870644031       residual = 8.85e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925586789353       residual = 1.63e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.919685178538       residual = 3.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.929421611465       residual = 1.77e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.928515050761       residual = 1.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.919572793532       residual = 9.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.930177946879       residual = 2.02e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.962602201682       residual = 1.43e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.832457371111       residual = 6.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.957560036909       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.872650391928       residual = 1.94e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.949201438549       residual = 9.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.920079619848       residual = 1.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.872817117237       residual = 7.79e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.932171070749       residual = 7.58e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.897292805734       residual = 1.59e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.973112569337       residual = 4.15e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.902478354269       residual = 4.92e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.946916247020       residual = 1.88e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.905495180732       residual = 3.09e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.818072007662       residual = 9.25e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.857571298226       residual = 6.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.752952563084       residual = 2.82e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.954090785034       residual = 4.85e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.794613760360       residual = 2.67e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.993889843344       residual = 2.89e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.795518220771       residual = 2.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.979237927241       residual = 6.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.773803136243       residual = 5.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -1.283194321797       residual = 1.40e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.520452576528       residual = 1.62e+02           smallest_sin_value = 9.95e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.16e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 5.773204e-17

solving harmonic davidson linear method for identity shift 1.6000e+13, overlap shift 1.6000e+14 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923075020546       residual = 7.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923075020546       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923075020546       residual = 7.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923075020546       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923075020546       residual = 2.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923075020546       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.926262808195       residual = 2.02e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923004432574       residual = 1.95e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.909978901164       residual = 1.65e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916245114836       residual = 1.76e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.947401177275       residual = 2.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.825098416837       residual = 6.86e-01           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.933156155282       residual = 4.14e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.944856089563       residual = 8.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.899213273469       residual = 2.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.921081845550       residual = 1.17e-01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.919941186617       residual = 1.16e-01           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923854057683       residual = 1.72e-01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.915529987283       residual = 8.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.950279778232       residual = 1.59e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -1.335587323997       residual = 1.56e+01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.963524160427       residual = 2.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927859199585       residual = 2.67e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.921955694139       residual = 2.51e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.828621546056       residual = 7.63e-01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -1.073858200968       residual = 2.74e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -1.052277045353       residual = 3.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -1.065850330713       residual = 7.91e+00           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.899594392473       residual = 7.20e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -1.130308204506       residual = 3.39e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.757645942002       residual = 4.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.800563518678       residual = 2.26e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.740543705818       residual = 4.51e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.610969752793       residual = 2.38e+01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.311288433599       residual = 3.17e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.378285427597       residual = 3.44e+01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.905374760703       residual = 2.00e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.184568951947       residual = 6.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.575272456943       residual = 1.24e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.455019424320       residual = 3.35e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -1.867715226855       residual = 9.36e+01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.866521381492       residual = 1.60e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.405669027115       residual = 3.74e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.446716867660       residual = 1.22e+02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.614498826156       residual = 6.92e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -2.381342711359       residual = 1.23e+03           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.40e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+13 is 1.445081e-17

solving harmonic davidson linear method for identity shift 6.4000e+13, overlap shift 6.4000e+14 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923075020546       residual = 7.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923075020546       residual = 1.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923075020546       residual = 7.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923075020546       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923075020546       residual = 2.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923075020546       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922620778546       residual = 3.22e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.921665409159       residual = 9.90e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.838551006895       residual = 3.25e+00           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.790688990258       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.846720832405       residual = 4.30e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.899820553876       residual = 6.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.665312260476       residual = 5.02e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.899386468196       residual = 1.41e+00           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923081128954       residual = 1.13e+00           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.986075902742       residual = 1.83e+00           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.791404955172       residual = 1.33e+00           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.841372541679       residual = 1.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -1.057213647828       residual = 2.98e+00           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.955043786677       residual = 8.44e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.888759588408       residual = 1.47e+00           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -1.136568816752       residual = 6.63e+00           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.873850154786       residual = 5.49e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -1.026968109475       residual = 1.94e+00           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.978359960229       residual = 5.89e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -1.001443120763       residual = 5.75e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.158982817960       residual = 7.82e+01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.972099187321       residual = 4.64e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -1.210032023869       residual = 1.19e+01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -3.399542902528       residual = 5.49e+02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -1.988053923599       residual = 1.40e+02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.432425148969       residual = 2.12e+01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.679824792499       residual = 9.23e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -1.950232650017       residual = 1.03e+02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -2.484153613827       residual = 3.42e+02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =       1.209392117232       residual = 5.33e+02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =       0.211135831256       residual = 1.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.144613287501       residual = 1.10e+02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -2.435287669258       residual = 3.33e+02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.715607003895       residual = 1.16e+02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =       3.172328496353       residual = 1.57e+03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -4.398946055676       residual = 1.14e+03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -2.858188303476       residual = 2.77e+03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -4.956231800625       residual = 2.02e+03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -6.834633009262       residual = 3.82e+03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       0.956356583746       residual = 4.25e+03           smallest_sin_value = 1.00e+00
davidson iteration   46 stopping due to too large eigenvalue change
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+13 is 3.612705e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.407165 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2019e+01
  </log>
  <optVariables href="H2O.s015.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -16.9138
    reference variance = 0.237915
====================================================
  Execution time = 3.9766e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s015
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9710e-01
  Total weights = 2.0000e+06
  Execution time = 3.7287e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385422446
  error estimate for blocks of size 2^( 2) =       0.000402355479
  error estimate for blocks of size 2^( 3) =       0.000419788024
  error estimate for blocks of size 2^( 4) =       0.000434354842
  error estimate for blocks of size 2^( 5) =       0.000445333736
  error estimate for blocks of size 2^( 6) =       0.000452623805
  error estimate for blocks of size 2^( 7) =       0.000456517312

      target function =      -0.916974710744
              le_mean =     -16.898436939974
             les_mean =     285.854271790188
             stat err =       0.000447207424
             autocorr =       1.346306682562
   target nu stat err =       0.000447207424
   target dn stat err =       0.004082020514
      target stat err =       0.006505026968
              std dev =       0.545069651019
             le_variance =       0.297100924462

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385422446
  error estimate for blocks of size 2^( 2) =       0.000402355479
  error estimate for blocks of size 2^( 3) =       0.000419788024
  error estimate for blocks of size 2^( 4) =       0.000434354842
  error estimate for blocks of size 2^( 5) =       0.000445333736
  error estimate for blocks of size 2^( 6) =       0.000452623805
  error estimate for blocks of size 2^( 7) =       0.000456517312

      target function =      -0.916974710744
              le_mean =     -16.898436939974
             les_mean =     285.854271790188
             stat err =       0.000447207424
             autocorr =       1.346306682559
   target nu stat err =       0.000447207424
   target dn stat err =       0.004082020514
      target stat err =       0.006505026968
              std dev =       0.545069651019
             le_variance =       0.297100924462

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385422446
  error estimate for blocks of size 2^( 2) =       0.000402355479
  error estimate for blocks of size 2^( 3) =       0.000419788024
  error estimate for blocks of size 2^( 4) =       0.000434354842
  error estimate for blocks of size 2^( 5) =       0.000445333736
  error estimate for blocks of size 2^( 6) =       0.000452623805
  error estimate for blocks of size 2^( 7) =       0.000456517312

      target function =      -0.916974710744
              le_mean =     -16.898436939974
             les_mean =     285.854271790188
             stat err =       0.000447207424
             autocorr =       1.346306682562
   target nu stat err =       0.000447207424
   target dn stat err =       0.004082020514
      target stat err =       0.006505026968
              std dev =       0.545069651019
             le_variance =       0.297100924462

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297154719525
                                         uncertainty =       0.003938600929

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385422446
  error estimate for blocks of size 2^( 2) =       0.000402355479
  error estimate for blocks of size 2^( 3) =       0.000419788024
  error estimate for blocks of size 2^( 4) =       0.000434354842
  error estimate for blocks of size 2^( 5) =       0.000445333736
  error estimate for blocks of size 2^( 6) =       0.000452623805
  error estimate for blocks of size 2^( 7) =       0.000456517312

      target function =      -0.916974710744
              le_mean =     -16.898436939974
             les_mean =     285.854271790188
             stat err =       0.000447207424
             autocorr =       1.346306682562
   target nu stat err =       0.000447207424
   target dn stat err =       0.004082020514
      target stat err =       0.006505026968
              std dev =       0.545069651019
             le_variance =       0.297100924462


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916974710744        initial  <--
     4.0000e+12     4.0000e+13             5.7732e-17        -0.916974710744
     1.6000e+13     1.6000e+14             1.4451e-17        -0.916974710744
     6.4000e+13     6.4000e+14             3.6127e-18        -0.916974710744

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.5663
  </log>
  <optVariables href="H2O.s015.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1459e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s016 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s016 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=16  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6902e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -16.8872
    reference variance = 0.199239
====================================================
  Execution time = 4.0647e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s016
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6900e+01
  VMC Evar = 2.9270e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0943e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292762188981
                                         uncertainty =       0.002421975918

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292762188981
                                         uncertainty =       0.002421975918

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382555950
  error estimate for blocks of size 2^( 2) =       0.000399558022
  error estimate for blocks of size 2^( 3) =       0.000416532925
  error estimate for blocks of size 2^( 4) =       0.000432272905
  error estimate for blocks of size 2^( 5) =       0.000444509381
  error estimate for blocks of size 2^( 6) =       0.000450041511
  error estimate for blocks of size 2^( 7) =       0.000454942093

      target function =      -0.923976699441
              le_mean =     -16.899782317843
             les_mean =     285.895340353341
             stat err =       0.000445441473
             autocorr =       1.355786725255
   target nu stat err =       0.000445441473
   target dn stat err =       0.002598842033
      target stat err =       0.004257143693
              std dev =       0.541015812350
             le_variance =       0.292698109213


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689978231784e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+13, overlap shift 4.0000e+14 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.28e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+13 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+14, overlap shift 1.6000e+15 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 8.10e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 6.4000e+14, overlap shift 6.4000e+15 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923994853471       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 8.10e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+14 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.408631 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1599e+01
  </log>
  <optVariables href="H2O.s016.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -16.8982
    reference variance = 0.254382
====================================================
  Execution time = 3.9581e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s016
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0481e-01
  Total weights = 2.0000e+06
  Execution time = 3.7214e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390392934
  error estimate for blocks of size 2^( 2) =       0.000406908223
  error estimate for blocks of size 2^( 3) =       0.000423627775
  error estimate for blocks of size 2^( 4) =       0.000438316443
  error estimate for blocks of size 2^( 5) =       0.000450371928
  error estimate for blocks of size 2^( 6) =       0.000458384579
  error estimate for blocks of size 2^( 7) =       0.000464286080

      target function =      -0.904646546177
              le_mean =     -16.898978353667
             les_mean =     285.880282531190
             stat err =       0.000452839758
             autocorr =       1.345504645286
   target nu stat err =       0.000452839758
   target dn stat err =       0.010540341904
      target stat err =       0.016272174534
              std dev =       0.552098981977
             le_variance =       0.304813285900

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390392934
  error estimate for blocks of size 2^( 2) =       0.000406908223
  error estimate for blocks of size 2^( 3) =       0.000423627775
  error estimate for blocks of size 2^( 4) =       0.000438316443
  error estimate for blocks of size 2^( 5) =       0.000450371928
  error estimate for blocks of size 2^( 6) =       0.000458384579
  error estimate for blocks of size 2^( 7) =       0.000464286080

      target function =      -0.904646546177
              le_mean =     -16.898978353667
             les_mean =     285.880282531190
             stat err =       0.000452839758
             autocorr =       1.345504645285
   target nu stat err =       0.000452839758
   target dn stat err =       0.010540341904
      target stat err =       0.016272174534
              std dev =       0.552098981977
             le_variance =       0.304813285900

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390392934
  error estimate for blocks of size 2^( 2) =       0.000406908223
  error estimate for blocks of size 2^( 3) =       0.000423627775
  error estimate for blocks of size 2^( 4) =       0.000438316443
  error estimate for blocks of size 2^( 5) =       0.000450371928
  error estimate for blocks of size 2^( 6) =       0.000458384579
  error estimate for blocks of size 2^( 7) =       0.000464286080

      target function =      -0.904646546177
              le_mean =     -16.898978353667
             les_mean =     285.880282531190
             stat err =       0.000452839758
             autocorr =       1.345504645285
   target nu stat err =       0.000452839758
   target dn stat err =       0.010540341904
      target stat err =       0.016272174534
              std dev =       0.552098981977
             le_variance =       0.304813285900

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304862242487
                                         uncertainty =       0.010649291886

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390392934
  error estimate for blocks of size 2^( 2) =       0.000406908223
  error estimate for blocks of size 2^( 3) =       0.000423627775
  error estimate for blocks of size 2^( 4) =       0.000438316443
  error estimate for blocks of size 2^( 5) =       0.000450371928
  error estimate for blocks of size 2^( 6) =       0.000458384579
  error estimate for blocks of size 2^( 7) =       0.000464286080

      target function =      -0.904646546177
              le_mean =     -16.898978353667
             les_mean =     285.880282531190
             stat err =       0.000452839758
             autocorr =       1.345504645285
   target nu stat err =       0.000452839758
   target dn stat err =       0.010540341904
      target stat err =       0.016272174534
              std dev =       0.552098981977
             le_variance =       0.304813285900


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.904646546177        initial  <--
     4.0000e+13     4.0000e+14             0.0000e+00        -0.904646546177
     1.6000e+14     1.6000e+15             0.0000e+00        -0.904646546177
     6.4000e+14     6.4000e+15             0.0000e+00        -0.904646546177

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3654
  </log>
  <optVariables href="H2O.s016.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0999e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s017 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s017 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=17  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6901e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -17.0031
    reference variance = 0.267903
====================================================
  Execution time = 4.2660e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s017
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9095e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1015e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017411964
                                         uncertainty =       0.002073475321

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017411964
                                         uncertainty =       0.002073475321

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381412844
  error estimate for blocks of size 2^( 2) =       0.000398319889
  error estimate for blocks of size 2^( 3) =       0.000415052216
  error estimate for blocks of size 2^( 4) =       0.000430228664
  error estimate for blocks of size 2^( 5) =       0.000441553936
  error estimate for blocks of size 2^( 6) =       0.000447963251
  error estimate for blocks of size 2^( 7) =       0.000453428722

      target function =      -0.926832769942
              le_mean =     -16.898780807557
             les_mean =     285.859744150872
             stat err =       0.000443293643
             autocorr =       1.350804131786
   target nu stat err =       0.000443293643
   target dn stat err =       0.002186007713
      target stat err =       0.003619560967
              std dev =       0.539399216244
             le_variance =       0.290951514485


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689878080756e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+14, overlap shift 4.0000e+15 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.78e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+15, overlap shift 1.6000e+16 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 6.4000e+15, overlap shift 6.4000e+16 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926845439895       residual = 6.66e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+15 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.410222 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3685e+01
  </log>
  <optVariables href="H2O.s017.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -16.9416
    reference variance = 0.191344
====================================================
  Execution time = 3.9686e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s017
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9531e-01
  Total weights = 2.0000e+06
  Execution time = 3.7217e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384255871
  error estimate for blocks of size 2^( 2) =       0.000400846781
  error estimate for blocks of size 2^( 3) =       0.000417820973
  error estimate for blocks of size 2^( 4) =       0.000432891584
  error estimate for blocks of size 2^( 5) =       0.000444728130
  error estimate for blocks of size 2^( 6) =       0.000452170803
  error estimate for blocks of size 2^( 7) =       0.000456255537

      target function =      -0.919843722979
              le_mean =     -16.898042007671
             les_mean =     285.839128693693
             stat err =       0.000446511513
             autocorr =       1.350281447102
   target nu stat err =       0.000446511513
   target dn stat err =       0.003889192247
      target stat err =       0.006235931574
              std dev =       0.543419863775
             le_variance =       0.295305148346

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384255871
  error estimate for blocks of size 2^( 2) =       0.000400846781
  error estimate for blocks of size 2^( 3) =       0.000417820973
  error estimate for blocks of size 2^( 4) =       0.000432891584
  error estimate for blocks of size 2^( 5) =       0.000444728130
  error estimate for blocks of size 2^( 6) =       0.000452170803
  error estimate for blocks of size 2^( 7) =       0.000456255537

      target function =      -0.919843722979
              le_mean =     -16.898042007671
             les_mean =     285.839128693693
             stat err =       0.000446511513
             autocorr =       1.350281447102
   target nu stat err =       0.000446511513
   target dn stat err =       0.003889192247
      target stat err =       0.006235931574
              std dev =       0.543419863775
             le_variance =       0.295305148346

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384255871
  error estimate for blocks of size 2^( 2) =       0.000400846781
  error estimate for blocks of size 2^( 3) =       0.000417820973
  error estimate for blocks of size 2^( 4) =       0.000432891584
  error estimate for blocks of size 2^( 5) =       0.000444728130
  error estimate for blocks of size 2^( 6) =       0.000452170803
  error estimate for blocks of size 2^( 7) =       0.000456255537

      target function =      -0.919843722979
              le_mean =     -16.898042007671
             les_mean =     285.839128693693
             stat err =       0.000446511513
             autocorr =       1.350281447102
   target nu stat err =       0.000446511513
   target dn stat err =       0.003889192247
      target stat err =       0.006235931574
              std dev =       0.543419863775
             le_variance =       0.295305148346

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295356050822
                                         uncertainty =       0.003640609014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384255871
  error estimate for blocks of size 2^( 2) =       0.000400846781
  error estimate for blocks of size 2^( 3) =       0.000417820973
  error estimate for blocks of size 2^( 4) =       0.000432891584
  error estimate for blocks of size 2^( 5) =       0.000444728130
  error estimate for blocks of size 2^( 6) =       0.000452170803
  error estimate for blocks of size 2^( 7) =       0.000456255537

      target function =      -0.919843722979
              le_mean =     -16.898042007671
             les_mean =     285.839128693693
             stat err =       0.000446511513
             autocorr =       1.350281447102
   target nu stat err =       0.000446511513
   target dn stat err =       0.003889192247
      target stat err =       0.006235931574
              std dev =       0.543419863775
             le_variance =       0.295305148346


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919843722979        initial  <--
     4.0000e+14     4.0000e+15             0.0000e+00        -0.919843722979
     1.6000e+15     1.6000e+16             0.0000e+00        -0.919843722979
     6.4000e+15     6.4000e+16             0.0000e+00        -0.919843722979

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5020
  </log>
  <optVariables href="H2O.s017.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1219e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s018 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s018 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=18  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6905e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -16.9165
    reference variance = 0.146311
====================================================
  Execution time = 4.1023e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s018
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9337e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1005e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293348956609
                                         uncertainty =       0.002958755686

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293348956609
                                         uncertainty =       0.002958755686

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382996375
  error estimate for blocks of size 2^( 2) =       0.000399670455
  error estimate for blocks of size 2^( 3) =       0.000416419675
  error estimate for blocks of size 2^( 4) =       0.000431994641
  error estimate for blocks of size 2^( 5) =       0.000443856324
  error estimate for blocks of size 2^( 6) =       0.000451372796
  error estimate for blocks of size 2^( 7) =       0.000454947785

      target function =      -0.922919468407
              le_mean =     -16.898804598780
             les_mean =     285.862969167152
             stat err =       0.000445542886
             autocorr =       1.353286351798
   target nu stat err =       0.000445542886
   target dn stat err =       0.003096262265
      target stat err =       0.005026364391
              std dev =       0.541638667477
             le_variance =       0.293372446106


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689880459878e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+15, overlap shift 4.0000e+16 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+16, overlap shift 1.6000e+17 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.21e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+16 is 0.000000e+00

solving harmonic davidson linear method for identity shift 6.4000e+16, overlap shift 6.4000e+17 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922945136291       residual = 9.04e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+16 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.411822 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2037e+01
  </log>
  <optVariables href="H2O.s018.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -16.8783
    reference variance = 0.162089
====================================================
  Execution time = 4.1840e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s018
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.4205e-01
  Total weights = 2.0000e+06
  Execution time = 3.7213e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000413553150
  error estimate for blocks of size 2^( 2) =       0.000428543069
  error estimate for blocks of size 2^( 3) =       0.000444497619
  error estimate for blocks of size 2^( 4) =       0.000457343256
  error estimate for blocks of size 2^( 5) =       0.000465809112
  error estimate for blocks of size 2^( 6) =       0.000470936355
  error estimate for blocks of size 2^( 7) =       0.000473868041

      target function =      -0.846620967851
              le_mean =     -16.899103733530
             les_mean =     285.921759240563
             stat err =       0.000466989191
             autocorr =       1.275119806036
   target nu stat err =       0.000466989191
   target dn stat err =       0.044378226721
      target stat err =       0.060239237030
              std dev =       0.584852472835
             le_variance =       0.342052414981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000413553150
  error estimate for blocks of size 2^( 2) =       0.000428543069
  error estimate for blocks of size 2^( 3) =       0.000444497619
  error estimate for blocks of size 2^( 4) =       0.000457343256
  error estimate for blocks of size 2^( 5) =       0.000465809112
  error estimate for blocks of size 2^( 6) =       0.000470936355
  error estimate for blocks of size 2^( 7) =       0.000473868041

      target function =      -0.846620967851
              le_mean =     -16.899103733530
             les_mean =     285.921759240563
             stat err =       0.000466989191
             autocorr =       1.275119806036
   target nu stat err =       0.000466989191
   target dn stat err =       0.044378226721
      target stat err =       0.060239237030
              std dev =       0.584852472835
             le_variance =       0.342052414981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000413553150
  error estimate for blocks of size 2^( 2) =       0.000428543069
  error estimate for blocks of size 2^( 3) =       0.000444497619
  error estimate for blocks of size 2^( 4) =       0.000457343256
  error estimate for blocks of size 2^( 5) =       0.000465809112
  error estimate for blocks of size 2^( 6) =       0.000470936355
  error estimate for blocks of size 2^( 7) =       0.000473868041

      target function =      -0.846620967851
              le_mean =     -16.899103733530
             les_mean =     285.921759240563
             stat err =       0.000466989191
             autocorr =       1.275119806036
   target nu stat err =       0.000466989191
   target dn stat err =       0.044378226721
      target stat err =       0.060239237030
              std dev =       0.584852472835
             le_variance =       0.342052414981

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.342096153776
                                         uncertainty =       0.045408917030

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000413553150
  error estimate for blocks of size 2^( 2) =       0.000428543069
  error estimate for blocks of size 2^( 3) =       0.000444497619
  error estimate for blocks of size 2^( 4) =       0.000457343256
  error estimate for blocks of size 2^( 5) =       0.000465809112
  error estimate for blocks of size 2^( 6) =       0.000470936355
  error estimate for blocks of size 2^( 7) =       0.000473868041

      target function =      -0.846620967851
              le_mean =     -16.899103733530
             les_mean =     285.921759240563
             stat err =       0.000466989191
             autocorr =       1.275119806036
   target nu stat err =       0.000466989191
   target dn stat err =       0.044378226721
      target stat err =       0.060239237030
              std dev =       0.584852472835
             le_variance =       0.342052414981


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.846620967851        initial  <--
     4.0000e+15     4.0000e+16             0.0000e+00        -0.846620967851
     1.6000e+16     1.6000e+17             0.0000e+00        -0.846620967851
     6.4000e+16     6.4000e+17             0.0000e+00        -0.846620967851

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.6147
  </log>
  <optVariables href="H2O.s018.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1270e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s019 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s019 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=19  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6905e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -16.9835
    reference variance = 0.349258
====================================================
  Execution time = 4.0436e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s019
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9441e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0896e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294374862062
                                         uncertainty =       0.004189053192

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294374862062
                                         uncertainty =       0.004189053192

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383671745
  error estimate for blocks of size 2^( 2) =       0.000400577312
  error estimate for blocks of size 2^( 3) =       0.000417940975
  error estimate for blocks of size 2^( 4) =       0.000433207378
  error estimate for blocks of size 2^( 5) =       0.000444172766
  error estimate for blocks of size 2^( 6) =       0.000450870540
  error estimate for blocks of size 2^( 7) =       0.000452777701

      target function =      -0.921258973497
              le_mean =     -16.898388461421
             les_mean =     285.849940461866
             stat err =       0.000445257096
             autocorr =       1.346796764755
   target nu stat err =       0.000445257096
   target dn stat err =       0.004006558676
      target stat err =       0.006444856140
              std dev =       0.542593785425
             le_variance =       0.294408015982


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689838846142e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+16, overlap shift 4.0000e+17 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.48e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+16 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+17, overlap shift 1.6000e+18 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.48e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+17 is 0.000000e+00

solving harmonic davidson linear method for identity shift 6.4000e+17, overlap shift 6.4000e+18 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921302262468       residual = 9.27e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.48e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+17 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.413376 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1342e+01
  </log>
  <optVariables href="H2O.s019.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -16.9347
    reference variance = 0.200779
====================================================
  Execution time = 3.9648e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s019
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9270e-01
  Total weights = 2.0000e+06
  Execution time = 3.7077e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382557155
  error estimate for blocks of size 2^( 2) =       0.000399423441
  error estimate for blocks of size 2^( 3) =       0.000415888031
  error estimate for blocks of size 2^( 4) =       0.000431265446
  error estimate for blocks of size 2^( 5) =       0.000442949653
  error estimate for blocks of size 2^( 6) =       0.000451442496
  error estimate for blocks of size 2^( 7) =       0.000455672712

      target function =      -0.924017236512
              le_mean =     -16.898515646581
             les_mean =     285.852530864939
             stat err =       0.000445332577
             autocorr =       1.355115376549
   target nu stat err =       0.000445332577
   target dn stat err =       0.002531351745
      target stat err =       0.004140736220
              std dev =       0.541017516861
             le_variance =       0.292699953550

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382557155
  error estimate for blocks of size 2^( 2) =       0.000399423441
  error estimate for blocks of size 2^( 3) =       0.000415888031
  error estimate for blocks of size 2^( 4) =       0.000431265446
  error estimate for blocks of size 2^( 5) =       0.000442949653
  error estimate for blocks of size 2^( 6) =       0.000451442496
  error estimate for blocks of size 2^( 7) =       0.000455672712

      target function =      -0.924017236512
              le_mean =     -16.898515646581
             les_mean =     285.852530864939
             stat err =       0.000445332577
             autocorr =       1.355115376547
   target nu stat err =       0.000445332577
   target dn stat err =       0.002531351745
      target stat err =       0.004140736220
              std dev =       0.541017516861
             le_variance =       0.292699953550

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382557155
  error estimate for blocks of size 2^( 2) =       0.000399423441
  error estimate for blocks of size 2^( 3) =       0.000415888031
  error estimate for blocks of size 2^( 4) =       0.000431265446
  error estimate for blocks of size 2^( 5) =       0.000442949653
  error estimate for blocks of size 2^( 6) =       0.000451442496
  error estimate for blocks of size 2^( 7) =       0.000455672712

      target function =      -0.924017236512
              le_mean =     -16.898515646581
             les_mean =     285.852530864939
             stat err =       0.000445332577
             autocorr =       1.355115376547
   target nu stat err =       0.000445332577
   target dn stat err =       0.002531351745
      target stat err =       0.004140736220
              std dev =       0.541017516861
             le_variance =       0.292699953550

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292698747833
                                         uncertainty =       0.002842993259

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382557155
  error estimate for blocks of size 2^( 2) =       0.000399423441
  error estimate for blocks of size 2^( 3) =       0.000415888031
  error estimate for blocks of size 2^( 4) =       0.000431265446
  error estimate for blocks of size 2^( 5) =       0.000442949653
  error estimate for blocks of size 2^( 6) =       0.000451442496
  error estimate for blocks of size 2^( 7) =       0.000455672712

      target function =      -0.924017236512
              le_mean =     -16.898515646581
             les_mean =     285.852530864939
             stat err =       0.000445332577
             autocorr =       1.355115376547
   target nu stat err =       0.000445332577
   target dn stat err =       0.002531351745
      target stat err =       0.004140736220
              std dev =       0.541017516861
             le_variance =       0.292699953550


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924017236512        initial  <--
     4.0000e+16     4.0000e+17             0.0000e+00        -0.924017236512
     1.6000e+17     1.6000e+18             0.0000e+00        -0.924017236512
     6.4000e+17     6.4000e+18             0.0000e+00        -0.924017236512

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.3231
  </log>
  <optVariables href="H2O.s019.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1367e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s020 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s020 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=20  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6907e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -16.9485
    reference variance = 0.304197
====================================================
  Execution time = 4.0423e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s020
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9663e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0819e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296630484531
                                         uncertainty =       0.002931326726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296630484531
                                         uncertainty =       0.002931326726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385118620
  error estimate for blocks of size 2^( 2) =       0.000402273132
  error estimate for blocks of size 2^( 3) =       0.000419655830
  error estimate for blocks of size 2^( 4) =       0.000435169439
  error estimate for blocks of size 2^( 5) =       0.000448339194
  error estimate for blocks of size 2^( 6) =       0.000457986287
  error estimate for blocks of size 2^( 7) =       0.000464576678

      target function =      -0.917720450628
              le_mean =     -16.898778677984
             les_mean =     285.865353362349
             stat err =       0.000451517900
             autocorr =       1.374551164580
   target nu stat err =       0.000451517900
   target dn stat err =       0.003143786784
      target stat err =       0.005046381556
              std dev =       0.544639975736
             le_variance =       0.296632703169


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689877867798e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+17, overlap shift 4.0000e+18 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+17 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+18, overlap shift 1.6000e+19 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+18, overlap shift 6.4000e+19 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917746177372       residual = 7.89e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.414975 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1251e+01
  </log>
  <optVariables href="H2O.s020.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -16.875
    reference variance = 0.334183
====================================================
  Execution time = 3.9832e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s020
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9619e-01
  Total weights = 2.0000e+06
  Execution time = 3.7194e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384834197
  error estimate for blocks of size 2^( 2) =       0.000401279364
  error estimate for blocks of size 2^( 3) =       0.000417647251
  error estimate for blocks of size 2^( 4) =       0.000432500325
  error estimate for blocks of size 2^( 5) =       0.000444383440
  error estimate for blocks of size 2^( 6) =       0.000451566056
  error estimate for blocks of size 2^( 7) =       0.000457288075

      target function =      -0.918376652347
              le_mean =     -16.899355034904
             les_mean =     285.884395165883
             stat err =       0.000446434474
             autocorr =       1.345761604916
   target nu stat err =       0.000446434474
   target dn stat err =       0.003847268859
      target stat err =       0.006165434239
              std dev =       0.544237740547
             le_variance =       0.296194718236

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384834197
  error estimate for blocks of size 2^( 2) =       0.000401279364
  error estimate for blocks of size 2^( 3) =       0.000417647251
  error estimate for blocks of size 2^( 4) =       0.000432500325
  error estimate for blocks of size 2^( 5) =       0.000444383440
  error estimate for blocks of size 2^( 6) =       0.000451566056
  error estimate for blocks of size 2^( 7) =       0.000457288075

      target function =      -0.918376652347
              le_mean =     -16.899355034904
             les_mean =     285.884395165883
             stat err =       0.000446434474
             autocorr =       1.345761604916
   target nu stat err =       0.000446434474
   target dn stat err =       0.003847268859
      target stat err =       0.006165434239
              std dev =       0.544237740547
             le_variance =       0.296194718236

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384834197
  error estimate for blocks of size 2^( 2) =       0.000401279364
  error estimate for blocks of size 2^( 3) =       0.000417647251
  error estimate for blocks of size 2^( 4) =       0.000432500325
  error estimate for blocks of size 2^( 5) =       0.000444383440
  error estimate for blocks of size 2^( 6) =       0.000451566056
  error estimate for blocks of size 2^( 7) =       0.000457288075

      target function =      -0.918376652347
              le_mean =     -16.899355034904
             les_mean =     285.884395165883
             stat err =       0.000446434474
             autocorr =       1.345761604916
   target nu stat err =       0.000446434474
   target dn stat err =       0.003847268859
      target stat err =       0.006165434239
              std dev =       0.544237740547
             le_variance =       0.296194718236

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296014357274
                                         uncertainty =       0.003857819035

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384834197
  error estimate for blocks of size 2^( 2) =       0.000401279364
  error estimate for blocks of size 2^( 3) =       0.000417647251
  error estimate for blocks of size 2^( 4) =       0.000432500325
  error estimate for blocks of size 2^( 5) =       0.000444383440
  error estimate for blocks of size 2^( 6) =       0.000451566056
  error estimate for blocks of size 2^( 7) =       0.000457288075

      target function =      -0.918376652347
              le_mean =     -16.899355034904
             les_mean =     285.884395165883
             stat err =       0.000446434474
             autocorr =       1.345761604916
   target nu stat err =       0.000446434474
   target dn stat err =       0.003847268859
      target stat err =       0.006165434239
              std dev =       0.544237740547
             le_variance =       0.296194718236


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918376652347        initial  <--
     4.0000e+17     4.0000e+18             0.0000e+00        -0.918376652347
     1.6000e+18     1.6000e+19             0.0000e+00        -0.918376652347
     6.4000e+18     6.4000e+19             0.0000e+00        -0.918376652347

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5750
  </log>
  <optVariables href="H2O.s020.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0983e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s021 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s021 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=21  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -16.9515
    reference variance = 0.210492
====================================================
  Execution time = 4.2048e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s021
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9428e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1098e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294316195852
                                         uncertainty =       0.003773005777

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294316195852
                                         uncertainty =       0.003773005777

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383589930
  error estimate for blocks of size 2^( 2) =       0.000400780968
  error estimate for blocks of size 2^( 3) =       0.000417890533
  error estimate for blocks of size 2^( 4) =       0.000433502995
  error estimate for blocks of size 2^( 5) =       0.000445123459
  error estimate for blocks of size 2^( 6) =       0.000453232510
  error estimate for blocks of size 2^( 7) =       0.000457844656

      target function =      -0.921467874208
              le_mean =     -16.898570957709
             les_mean =     285.855982734966
             stat err =       0.000447425905
             autocorr =       1.360529159838
   target nu stat err =       0.000447425905
   target dn stat err =       0.003255182548
      target stat err =       0.005260143670
              std dev =       0.542478081930
             le_variance =       0.294282469374


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689857095771e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+18, overlap shift 4.0000e+19 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+19, overlap shift 1.6000e+20 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+19, overlap shift 6.4000e+20 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921496272068       residual = 6.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.416531 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3156e+01
  </log>
  <optVariables href="H2O.s021.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -16.8943
    reference variance = 0.362588
====================================================
  Execution time = 3.9750e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s021
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9255e-01
  Total weights = 2.0000e+06
  Execution time = 3.6995e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382459383
  error estimate for blocks of size 2^( 2) =       0.000399162969
  error estimate for blocks of size 2^( 3) =       0.000416270628
  error estimate for blocks of size 2^( 4) =       0.000431354868
  error estimate for blocks of size 2^( 5) =       0.000442207918
  error estimate for blocks of size 2^( 6) =       0.000448696463
  error estimate for blocks of size 2^( 7) =       0.000454385776

      target function =      -0.924231966644
              le_mean =     -16.898880596136
             les_mean =     285.864715614879
             stat err =       0.000444161256
             autocorr =       1.348685556806
   target nu stat err =       0.000444161256
   target dn stat err =       0.003399063495
      target stat err =       0.005522768966
              std dev =       0.540879245956
             le_variance =       0.292550358705

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382459383
  error estimate for blocks of size 2^( 2) =       0.000399162969
  error estimate for blocks of size 2^( 3) =       0.000416270628
  error estimate for blocks of size 2^( 4) =       0.000431354868
  error estimate for blocks of size 2^( 5) =       0.000442207918
  error estimate for blocks of size 2^( 6) =       0.000448696463
  error estimate for blocks of size 2^( 7) =       0.000454385776

      target function =      -0.924231966644
              le_mean =     -16.898880596136
             les_mean =     285.864715614879
             stat err =       0.000444161256
             autocorr =       1.348685556806
   target nu stat err =       0.000444161256
   target dn stat err =       0.003399063495
      target stat err =       0.005522768966
              std dev =       0.540879245956
             le_variance =       0.292550358705

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382459383
  error estimate for blocks of size 2^( 2) =       0.000399162969
  error estimate for blocks of size 2^( 3) =       0.000416270628
  error estimate for blocks of size 2^( 4) =       0.000431354868
  error estimate for blocks of size 2^( 5) =       0.000442207918
  error estimate for blocks of size 2^( 6) =       0.000448696463
  error estimate for blocks of size 2^( 7) =       0.000454385776

      target function =      -0.924231966644
              le_mean =     -16.898880596136
             les_mean =     285.864715614879
             stat err =       0.000444161256
             autocorr =       1.348685556806
   target nu stat err =       0.000444161256
   target dn stat err =       0.003399063495
      target stat err =       0.005522768966
              std dev =       0.540879245956
             le_variance =       0.292550358705

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292540304516
                                         uncertainty =       0.003031076091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382459383
  error estimate for blocks of size 2^( 2) =       0.000399162969
  error estimate for blocks of size 2^( 3) =       0.000416270628
  error estimate for blocks of size 2^( 4) =       0.000431354868
  error estimate for blocks of size 2^( 5) =       0.000442207918
  error estimate for blocks of size 2^( 6) =       0.000448696463
  error estimate for blocks of size 2^( 7) =       0.000454385776

      target function =      -0.924231966644
              le_mean =     -16.898880596136
             les_mean =     285.864715614879
             stat err =       0.000444161256
             autocorr =       1.348685556806
   target nu stat err =       0.000444161256
   target dn stat err =       0.003399063495
      target stat err =       0.005522768966
              std dev =       0.540879245956
             le_variance =       0.292550358705


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924231966644        initial  <--
     4.0000e+18     4.0000e+19             0.0000e+00        -0.924231966644
     1.6000e+19     1.6000e+20             0.0000e+00        -0.924231966644
     6.4000e+19     6.4000e+20             0.0000e+00        -0.924231966644

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3976
  </log>
  <optVariables href="H2O.s021.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1156e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s022 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s022 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=22  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -16.9432
    reference variance = 0.188649
====================================================
  Execution time = 4.0745e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s022
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9510e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0971e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295094812263
                                         uncertainty =       0.003368992760

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295094812263
                                         uncertainty =       0.003368992760

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384121749
  error estimate for blocks of size 2^( 2) =       0.000401244536
  error estimate for blocks of size 2^( 3) =       0.000418381558
  error estimate for blocks of size 2^( 4) =       0.000433173506
  error estimate for blocks of size 2^( 5) =       0.000445131242
  error estimate for blocks of size 2^( 6) =       0.000454460206
  error estimate for blocks of size 2^( 7) =       0.000461681493

      target function =      -0.920173624675
              le_mean =     -16.898401891366
             les_mean =     285.851085370814
             stat err =       0.000448611612
             autocorr =       1.363965000833
   target nu stat err =       0.000448611612
   target dn stat err =       0.003088570629
      target stat err =       0.004981788068
              std dev =       0.543230187146
             le_variance =       0.295099036227


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689840189137e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+19, overlap shift 4.0000e+20 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920199463135       residual = 7.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920199463135       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920199463135       residual = 4.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920199463135       residual = 8.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+19 is 3.218033e-24

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+20, overlap shift 1.6000e+21 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920199463135       residual = 7.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920199463135       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920199463135       residual = 4.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920199463135       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920199461605       residual = 6.37e-01           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+20 is 5.156846e-25

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+20, overlap shift 6.4000e+21 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920199463135       residual = 7.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920199463135       residual = 4.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920199463135       residual = 4.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920199463135       residual = 8.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920193735098       residual = 1.00e+03           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+20 is 2.011270e-25

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.419476 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1731e+01
  </log>
  <optVariables href="H2O.s022.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -16.9398
    reference variance = 0.211298
====================================================
  Execution time = 4.1767e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s022
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9206e-01
  Total weights = 2.0000e+06
  Execution time = 3.7070e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382137438
  error estimate for blocks of size 2^( 2) =       0.000399178632
  error estimate for blocks of size 2^( 3) =       0.000416656887
  error estimate for blocks of size 2^( 4) =       0.000432517509
  error estimate for blocks of size 2^( 5) =       0.000443479487
  error estimate for blocks of size 2^( 6) =       0.000449542440
  error estimate for blocks of size 2^( 7) =       0.000453874777

      target function =      -0.925031475906
              le_mean =     -16.899284922696
             les_mean =     285.877888795988
             stat err =       0.000444853553
             autocorr =       1.355173658952
   target nu stat err =       0.000444853553
   target dn stat err =       0.002106448252
      target stat err =       0.003484627097
              std dev =       0.540423947985
             le_variance =       0.292058043556

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382137438
  error estimate for blocks of size 2^( 2) =       0.000399178632
  error estimate for blocks of size 2^( 3) =       0.000416656887
  error estimate for blocks of size 2^( 4) =       0.000432517509
  error estimate for blocks of size 2^( 5) =       0.000443479487
  error estimate for blocks of size 2^( 6) =       0.000449542440
  error estimate for blocks of size 2^( 7) =       0.000453874777

      target function =      -0.925031475906
              le_mean =     -16.899284922696
             les_mean =     285.877888795988
             stat err =       0.000444853553
             autocorr =       1.355173658952
   target nu stat err =       0.000444853553
   target dn stat err =       0.002106448252
      target stat err =       0.003484627097
              std dev =       0.540423947985
             le_variance =       0.292058043556

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382137438
  error estimate for blocks of size 2^( 2) =       0.000399178632
  error estimate for blocks of size 2^( 3) =       0.000416656887
  error estimate for blocks of size 2^( 4) =       0.000432517509
  error estimate for blocks of size 2^( 5) =       0.000443479487
  error estimate for blocks of size 2^( 6) =       0.000449542440
  error estimate for blocks of size 2^( 7) =       0.000453874777

      target function =      -0.925031475906
              le_mean =     -16.899284922696
             les_mean =     285.877888795988
             stat err =       0.000444853553
             autocorr =       1.355173658952
   target nu stat err =       0.000444853553
   target dn stat err =       0.002106448252
      target stat err =       0.003484627097
              std dev =       0.540423947985
             le_variance =       0.292058043556

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291871380719
                                         uncertainty =       0.001902192869

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382137438
  error estimate for blocks of size 2^( 2) =       0.000399178632
  error estimate for blocks of size 2^( 3) =       0.000416656887
  error estimate for blocks of size 2^( 4) =       0.000432517509
  error estimate for blocks of size 2^( 5) =       0.000443479487
  error estimate for blocks of size 2^( 6) =       0.000449542440
  error estimate for blocks of size 2^( 7) =       0.000453874777

      target function =      -0.925031475906
              le_mean =     -16.899284922696
             les_mean =     285.877888795988
             stat err =       0.000444853553
             autocorr =       1.355173658952
   target nu stat err =       0.000444853553
   target dn stat err =       0.002106448252
      target stat err =       0.003484627097
              std dev =       0.540423947985
             le_variance =       0.292058043556


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925031475906        initial  <--
     4.0000e+19     4.0000e+20             3.2180e-24        -0.925031475906
     1.6000e+20     1.6000e+21             5.1568e-25        -0.925031475906
     6.4000e+20     6.4000e+21             2.0113e-25        -0.925031475906

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.4316
  </log>
  <optVariables href="H2O.s022.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1217e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s023 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s023 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=23  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6910e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -16.9648
    reference variance = 0.240157
====================================================
  Execution time = 4.0637e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s023
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9403e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0845e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294054859184
                                         uncertainty =       0.002802363076

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294054859184
                                         uncertainty =       0.002802363076

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383427927
  error estimate for blocks of size 2^( 2) =       0.000400229967
  error estimate for blocks of size 2^( 3) =       0.000417725224
  error estimate for blocks of size 2^( 4) =       0.000433049699
  error estimate for blocks of size 2^( 5) =       0.000444695931
  error estimate for blocks of size 2^( 6) =       0.000452104121
  error estimate for blocks of size 2^( 7) =       0.000453545899

      target function =      -0.921876304081
              le_mean =     -16.898440943890
             les_mean =     285.851340137792
             stat err =       0.000445848912
             autocorr =       1.352097281661
   target nu stat err =       0.000445848912
   target dn stat err =       0.002877407469
      target stat err =       0.004666272826
              std dev =       0.542248974797
             le_variance =       0.294033950669


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689844094389e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+20, overlap shift 4.0000e+21 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921898228011       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+20 is 1.501738e-25

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+21, overlap shift 1.6000e+22 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921898228011       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+21 is 3.754344e-26

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+21, overlap shift 6.4000e+22 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921898228011       residual = 7.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921898228011       residual = 6.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+21 is 9.385861e-27

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.421377 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1492e+01
  </log>
  <optVariables href="H2O.s023.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -17.0084
    reference variance = 0.350602
====================================================
  Execution time = 3.9939e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s023
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0100e-01
  Total weights = 2.0000e+06
  Execution time = 3.7082e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387944890
  error estimate for blocks of size 2^( 2) =       0.000404893041
  error estimate for blocks of size 2^( 3) =       0.000422336357
  error estimate for blocks of size 2^( 4) =       0.000437876742
  error estimate for blocks of size 2^( 5) =       0.000449093361
  error estimate for blocks of size 2^( 6) =       0.000457097716
  error estimate for blocks of size 2^( 7) =       0.000463907747

      target function =      -0.910807597785
              le_mean =     -16.899215165745
             les_mean =     285.884475542866
             stat err =       0.000451993892
             autocorr =       1.357453807266
   target nu stat err =       0.000451993892
   target dn stat err =       0.003681599400
      target stat err =       0.005807826780
              std dev =       0.548636924756
             le_variance =       0.301002475205

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387944890
  error estimate for blocks of size 2^( 2) =       0.000404893041
  error estimate for blocks of size 2^( 3) =       0.000422336357
  error estimate for blocks of size 2^( 4) =       0.000437876742
  error estimate for blocks of size 2^( 5) =       0.000449093361
  error estimate for blocks of size 2^( 6) =       0.000457097716
  error estimate for blocks of size 2^( 7) =       0.000463907747

      target function =      -0.910807597785
              le_mean =     -16.899215165745
             les_mean =     285.884475542866
             stat err =       0.000451993892
             autocorr =       1.357453807266
   target nu stat err =       0.000451993892
   target dn stat err =       0.003681599400
      target stat err =       0.005807826780
              std dev =       0.548636924756
             le_variance =       0.301002475205

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387944890
  error estimate for blocks of size 2^( 2) =       0.000404893041
  error estimate for blocks of size 2^( 3) =       0.000422336357
  error estimate for blocks of size 2^( 4) =       0.000437876742
  error estimate for blocks of size 2^( 5) =       0.000449093361
  error estimate for blocks of size 2^( 6) =       0.000457097716
  error estimate for blocks of size 2^( 7) =       0.000463907747

      target function =      -0.910807597785
              le_mean =     -16.899215165745
             les_mean =     285.884475542866
             stat err =       0.000451993892
             autocorr =       1.357453807266
   target nu stat err =       0.000451993892
   target dn stat err =       0.003681599400
      target stat err =       0.005807826780
              std dev =       0.548636924756
             le_variance =       0.301002475205

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300967198059
                                         uncertainty =       0.003587238635

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387944890
  error estimate for blocks of size 2^( 2) =       0.000404893041
  error estimate for blocks of size 2^( 3) =       0.000422336357
  error estimate for blocks of size 2^( 4) =       0.000437876742
  error estimate for blocks of size 2^( 5) =       0.000449093361
  error estimate for blocks of size 2^( 6) =       0.000457097716
  error estimate for blocks of size 2^( 7) =       0.000463907747

      target function =      -0.910807597785
              le_mean =     -16.899215165745
             les_mean =     285.884475542866
             stat err =       0.000451993892
             autocorr =       1.357453807266
   target nu stat err =       0.000451993892
   target dn stat err =       0.003681599400
      target stat err =       0.005807826780
              std dev =       0.548636924756
             le_variance =       0.301002475205


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910807597785        initial  <--
     4.0000e+20     4.0000e+21             1.5017e-25        -0.910807597785
     1.6000e+21     1.6000e+22             3.7543e-26        -0.910807597785
     6.4000e+21     6.4000e+22             9.3859e-27        -0.910807597785

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.4367
  </log>
  <optVariables href="H2O.s023.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1395e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s024 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s024 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=24  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6913e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -16.9986
    reference variance = 0.280823
====================================================
  Execution time = 4.0824e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s024
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9586e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1070e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295877602197
                                         uncertainty =       0.005336994178

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295877602197
                                         uncertainty =       0.005336994178

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384618828
  error estimate for blocks of size 2^( 2) =       0.000401191574
  error estimate for blocks of size 2^( 3) =       0.000417969362
  error estimate for blocks of size 2^( 4) =       0.000432442989
  error estimate for blocks of size 2^( 5) =       0.000443569970
  error estimate for blocks of size 2^( 6) =       0.000450584776
  error estimate for blocks of size 2^( 7) =       0.000455362969

      target function =      -0.918894762012
              le_mean =     -16.898611556970
             les_mean =     285.858935691331
             stat err =       0.000445490176
             autocorr =       1.341575697088
   target nu stat err =       0.000445490176
   target dn stat err =       0.005440351660
      target stat err =       0.008681946558
              std dev =       0.543933163081
             le_variance =       0.295863285899


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689861155697e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+21, overlap shift 4.0000e+22 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+22, overlap shift 1.6000e+23 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+22, overlap shift 6.4000e+23 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918974914110       residual = 1.00e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.423118 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1909e+01
  </log>
  <optVariables href="H2O.s024.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -16.8816
    reference variance = 0.135611
====================================================
  Execution time = 3.9821e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s024
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8995e-01
  Total weights = 2.0000e+06
  Execution time = 3.7012e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380758187
  error estimate for blocks of size 2^( 2) =       0.000397658351
  error estimate for blocks of size 2^( 3) =       0.000415134782
  error estimate for blocks of size 2^( 4) =       0.000429895372
  error estimate for blocks of size 2^( 5) =       0.000441985102
  error estimate for blocks of size 2^( 6) =       0.000448885402
  error estimate for blocks of size 2^( 7) =       0.000453523173

      target function =      -0.928457258080
              le_mean =     -16.898545185885
             les_mean =     285.850782849011
             stat err =       0.000443572262
             autocorr =       1.357157528643
   target nu stat err =       0.000443572262
   target dn stat err =       0.002020561657
      target stat err =       0.003368701529
              std dev =       0.538473392643
             le_variance =       0.289953594584

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380758187
  error estimate for blocks of size 2^( 2) =       0.000397658351
  error estimate for blocks of size 2^( 3) =       0.000415134782
  error estimate for blocks of size 2^( 4) =       0.000429895372
  error estimate for blocks of size 2^( 5) =       0.000441985102
  error estimate for blocks of size 2^( 6) =       0.000448885402
  error estimate for blocks of size 2^( 7) =       0.000453523173

      target function =      -0.928457258080
              le_mean =     -16.898545185885
             les_mean =     285.850782849011
             stat err =       0.000443572262
             autocorr =       1.357157528643
   target nu stat err =       0.000443572262
   target dn stat err =       0.002020561657
      target stat err =       0.003368701529
              std dev =       0.538473392643
             le_variance =       0.289953594584

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380758187
  error estimate for blocks of size 2^( 2) =       0.000397658351
  error estimate for blocks of size 2^( 3) =       0.000415134782
  error estimate for blocks of size 2^( 4) =       0.000429895372
  error estimate for blocks of size 2^( 5) =       0.000441985102
  error estimate for blocks of size 2^( 6) =       0.000448885402
  error estimate for blocks of size 2^( 7) =       0.000453523173

      target function =      -0.928457258080
              le_mean =     -16.898545185885
             les_mean =     285.850782849011
             stat err =       0.000443572262
             autocorr =       1.357157528643
   target nu stat err =       0.000443572262
   target dn stat err =       0.002020561657
      target stat err =       0.003368701529
              std dev =       0.538473392643
             le_variance =       0.289953594584

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290028718108
                                         uncertainty =       0.001927417366

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380758187
  error estimate for blocks of size 2^( 2) =       0.000397658351
  error estimate for blocks of size 2^( 3) =       0.000415134782
  error estimate for blocks of size 2^( 4) =       0.000429895372
  error estimate for blocks of size 2^( 5) =       0.000441985102
  error estimate for blocks of size 2^( 6) =       0.000448885402
  error estimate for blocks of size 2^( 7) =       0.000453523173

      target function =      -0.928457258080
              le_mean =     -16.898545185885
             les_mean =     285.850782849011
             stat err =       0.000443572262
             autocorr =       1.357157528643
   target nu stat err =       0.000443572262
   target dn stat err =       0.002020561657
      target stat err =       0.003368701529
              std dev =       0.538473392643
             le_variance =       0.289953594584


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.928457258080        initial  <--
     4.0000e+21     4.0000e+22             0.0000e+00        -0.928457258080
     1.6000e+22     1.6000e+23             0.0000e+00        -0.928457258080
     6.4000e+22     6.4000e+23             0.0000e+00        -0.928457258080

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5227
  </log>
  <optVariables href="H2O.s024.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1044e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s025 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s025 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=25  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6914e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -16.8849
    reference variance = 0.204731
====================================================
  Execution time = 4.2605e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s025
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9885e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1032e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298828282804
                                         uncertainty =       0.003190887578

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298828282804
                                         uncertainty =       0.003190887578

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386552852
  error estimate for blocks of size 2^( 2) =       0.000403339629
  error estimate for blocks of size 2^( 3) =       0.000420580251
  error estimate for blocks of size 2^( 4) =       0.000435005526
  error estimate for blocks of size 2^( 5) =       0.000447177776
  error estimate for blocks of size 2^( 6) =       0.000456027933
  error estimate for blocks of size 2^( 7) =       0.000459656103

      target function =      -0.914238342813
              le_mean =     -16.898457334845
             les_mean =     285.856706362510
             stat err =       0.000449466834
             autocorr =       1.352002639043
   target nu stat err =       0.000449466834
   target dn stat err =       0.003164246593
      target stat err =       0.005036843710
              std dev =       0.546668285481
             le_variance =       0.298846214351


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689845733485e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+22, overlap shift 4.0000e+23 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+23, overlap shift 1.6000e+24 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+23, overlap shift 6.4000e+24 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914264899645       residual = 9.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.424701 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3646e+01
  </log>
  <optVariables href="H2O.s025.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -16.9775
    reference variance = 0.332173
====================================================
  Execution time = 4.0252e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s025
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9854e-01
  Total weights = 2.0000e+06
  Execution time = 3.6924e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386358029
  error estimate for blocks of size 2^( 2) =       0.000403191604
  error estimate for blocks of size 2^( 3) =       0.000419866668
  error estimate for blocks of size 2^( 4) =       0.000434735880
  error estimate for blocks of size 2^( 5) =       0.000444893938
  error estimate for blocks of size 2^( 6) =       0.000450979189
  error estimate for blocks of size 2^( 7) =       0.000453923574

      target function =      -0.914719498058
              le_mean =     -16.898271961665
             les_mean =     285.850140194953
             stat err =       0.000446133145
             autocorr =       1.333365137134
   target nu stat err =       0.000446133145
   target dn stat err =       0.003283790397
      target stat err =       0.005225506686
              std dev =       0.546392765176
             le_variance =       0.298545053836

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386358029
  error estimate for blocks of size 2^( 2) =       0.000403191604
  error estimate for blocks of size 2^( 3) =       0.000419866668
  error estimate for blocks of size 2^( 4) =       0.000434735880
  error estimate for blocks of size 2^( 5) =       0.000444893938
  error estimate for blocks of size 2^( 6) =       0.000450979189
  error estimate for blocks of size 2^( 7) =       0.000453923574

      target function =      -0.914719498058
              le_mean =     -16.898271961665
             les_mean =     285.850140194953
             stat err =       0.000446133145
             autocorr =       1.333365137134
   target nu stat err =       0.000446133145
   target dn stat err =       0.003283790397
      target stat err =       0.005225506686
              std dev =       0.546392765176
             le_variance =       0.298545053836

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386358029
  error estimate for blocks of size 2^( 2) =       0.000403191604
  error estimate for blocks of size 2^( 3) =       0.000419866668
  error estimate for blocks of size 2^( 4) =       0.000434735880
  error estimate for blocks of size 2^( 5) =       0.000444893938
  error estimate for blocks of size 2^( 6) =       0.000450979189
  error estimate for blocks of size 2^( 7) =       0.000453923574

      target function =      -0.914719498058
              le_mean =     -16.898271961665
             les_mean =     285.850140194953
             stat err =       0.000446133145
             autocorr =       1.333365137134
   target nu stat err =       0.000446133145
   target dn stat err =       0.003283790397
      target stat err =       0.005225506686
              std dev =       0.546392765176
             le_variance =       0.298545053836

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298462973448
                                         uncertainty =       0.003347238074

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386358029
  error estimate for blocks of size 2^( 2) =       0.000403191604
  error estimate for blocks of size 2^( 3) =       0.000419866668
  error estimate for blocks of size 2^( 4) =       0.000434735880
  error estimate for blocks of size 2^( 5) =       0.000444893938
  error estimate for blocks of size 2^( 6) =       0.000450979189
  error estimate for blocks of size 2^( 7) =       0.000453923574

      target function =      -0.914719498058
              le_mean =     -16.898271961665
             les_mean =     285.850140194953
             stat err =       0.000446133145
             autocorr =       1.333365137134
   target nu stat err =       0.000446133145
   target dn stat err =       0.003283790397
      target stat err =       0.005225506686
              std dev =       0.546392765176
             le_variance =       0.298545053836


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.914719498058        initial  <--
     4.0000e+22     4.0000e+23             0.0000e+00        -0.914719498058
     1.6000e+23     1.6000e+24             0.0000e+00        -0.914719498058
     6.4000e+23     6.4000e+24             0.0000e+00        -0.914719498058

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.8908
  </log>
  <optVariables href="H2O.s025.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1254e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s026 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s026 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=26  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6915e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -16.875
    reference variance = 0.366525
====================================================
  Execution time = 4.0631e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s026
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8959e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0927e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289590204896
                                         uncertainty =       0.002073772555

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289590204896
                                         uncertainty =       0.002073772555

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380521896
  error estimate for blocks of size 2^( 2) =       0.000397645046
  error estimate for blocks of size 2^( 3) =       0.000414336266
  error estimate for blocks of size 2^( 4) =       0.000429387745
  error estimate for blocks of size 2^( 5) =       0.000440144401
  error estimate for blocks of size 2^( 6) =       0.000446793267
  error estimate for blocks of size 2^( 7) =       0.000450896132

      target function =      -0.929039105625
              le_mean =     -16.898595693746
             les_mean =     285.852130103070
             stat err =       0.000441805386
             autocorr =       1.348039779705
   target nu stat err =       0.000441805386
   target dn stat err =       0.002139032705
      target stat err =       0.003560058417
              std dev =       0.538139226587
             le_variance =       0.289593827191


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689859569375e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+23, overlap shift 4.0000e+24 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+24, overlap shift 1.6000e+25 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+24, overlap shift 6.4000e+25 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929050995096       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.426334 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1567e+01
  </log>
  <optVariables href="H2O.s026.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -16.8881
    reference variance = 0.195564
====================================================
  Execution time = 4.1964e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s026
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.6671e-01
  Total weights = 2.0000e+06
  Execution time = 3.7196e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000428198361
  error estimate for blocks of size 2^( 2) =       0.000443766773
  error estimate for blocks of size 2^( 3) =       0.000459183911
  error estimate for blocks of size 2^( 4) =       0.000473399657
  error estimate for blocks of size 2^( 5) =       0.000484960310
  error estimate for blocks of size 2^( 6) =       0.000493455934
  error estimate for blocks of size 2^( 7) =       0.000496347757

      target function =      -0.809584745892
              le_mean =     -16.898219695514
             les_mean =     285.916536366756
             stat err =       0.000487040914
             autocorr =       1.293721785989
   target nu stat err =       0.000487040914
   target dn stat err =       0.068928802065
      target stat err =       0.085941321426
              std dev =       0.605563929115
             le_variance =       0.366707672246

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000428198361
  error estimate for blocks of size 2^( 2) =       0.000443766773
  error estimate for blocks of size 2^( 3) =       0.000459183911
  error estimate for blocks of size 2^( 4) =       0.000473399657
  error estimate for blocks of size 2^( 5) =       0.000484960310
  error estimate for blocks of size 2^( 6) =       0.000493455934
  error estimate for blocks of size 2^( 7) =       0.000496347757

      target function =      -0.809584745892
              le_mean =     -16.898219695514
             les_mean =     285.916536366756
             stat err =       0.000487040914
             autocorr =       1.293721785989
   target nu stat err =       0.000487040914
   target dn stat err =       0.068928802065
      target stat err =       0.085941321426
              std dev =       0.605563929115
             le_variance =       0.366707672246

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000428198361
  error estimate for blocks of size 2^( 2) =       0.000443766773
  error estimate for blocks of size 2^( 3) =       0.000459183911
  error estimate for blocks of size 2^( 4) =       0.000473399657
  error estimate for blocks of size 2^( 5) =       0.000484960310
  error estimate for blocks of size 2^( 6) =       0.000493455934
  error estimate for blocks of size 2^( 7) =       0.000496347757

      target function =      -0.809584745892
              le_mean =     -16.898219695514
             les_mean =     285.916536366756
             stat err =       0.000487040914
             autocorr =       1.293721785989
   target nu stat err =       0.000487040914
   target dn stat err =       0.068928802065
      target stat err =       0.085941321426
              std dev =       0.605563929115
             le_variance =       0.366707672246

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.366869437310
                                         uncertainty =       0.069037075476

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000428198361
  error estimate for blocks of size 2^( 2) =       0.000443766773
  error estimate for blocks of size 2^( 3) =       0.000459183911
  error estimate for blocks of size 2^( 4) =       0.000473399657
  error estimate for blocks of size 2^( 5) =       0.000484960310
  error estimate for blocks of size 2^( 6) =       0.000493455934
  error estimate for blocks of size 2^( 7) =       0.000496347757

      target function =      -0.809584745892
              le_mean =     -16.898219695514
             les_mean =     285.916536366756
             stat err =       0.000487040914
             autocorr =       1.293721785989
   target nu stat err =       0.000487040914
   target dn stat err =       0.068928802065
      target stat err =       0.085941321426
              std dev =       0.605563929115
             le_variance =       0.366707672246


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.809584745892        initial  <--
     4.0000e+23     4.0000e+24             0.0000e+00        -0.809584745892
     1.6000e+24     1.6000e+25             0.0000e+00        -0.809584745892
     6.4000e+24     6.4000e+25             0.0000e+00        -0.809584745892

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.7188
  </log>
  <optVariables href="H2O.s026.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1232e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s027 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s027 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=27  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6913e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -16.956
    reference variance = 0.34157
====================================================
  Execution time = 4.0884e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s027
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9137e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0822e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291417329780
                                         uncertainty =       0.002287556420

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291417329780
                                         uncertainty =       0.002287556420

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381688940
  error estimate for blocks of size 2^( 2) =       0.000398456623
  error estimate for blocks of size 2^( 3) =       0.000415363657
  error estimate for blocks of size 2^( 4) =       0.000430693714
  error estimate for blocks of size 2^( 5) =       0.000443235113
  error estimate for blocks of size 2^( 6) =       0.000450916164
  error estimate for blocks of size 2^( 7) =       0.000455281485

      target function =      -0.926172886974
              le_mean =     -16.897943304517
             les_mean =     285.831860671538
             stat err =       0.000445031619
             autocorr =       1.359447949448
   target nu stat err =       0.000445031619
   target dn stat err =       0.002305506194
      target stat err =       0.003797933779
              std dev =       0.539789676213
             le_variance =       0.291372894546


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689794330452e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+24, overlap shift 4.0000e+25 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+25, overlap shift 1.6000e+26 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+25, overlap shift 6.4000e+26 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926186933803       residual = 3.80e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.427904 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1715e+01
  </log>
  <optVariables href="H2O.s027.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -16.8507
    reference variance = 0.182385
====================================================
  Execution time = 3.9638e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s027
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9577e-01
  Total weights = 2.0000e+06
  Execution time = 3.6970e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384556159
  error estimate for blocks of size 2^( 2) =       0.000401035142
  error estimate for blocks of size 2^( 3) =       0.000418279420
  error estimate for blocks of size 2^( 4) =       0.000433798687
  error estimate for blocks of size 2^( 5) =       0.000445960456
  error estimate for blocks of size 2^( 6) =       0.000453085016
  error estimate for blocks of size 2^( 7) =       0.000457074556

      target function =      -0.919091425270
              le_mean =     -16.898617613411
             les_mean =     285.859043975954
             stat err =       0.000447479679
             autocorr =       1.354026273467
   target nu stat err =       0.000447479679
   target dn stat err =       0.003660450053
      target stat err =       0.005871989130
              std dev =       0.543844536185
             le_variance =       0.295766879538

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384556159
  error estimate for blocks of size 2^( 2) =       0.000401035142
  error estimate for blocks of size 2^( 3) =       0.000418279420
  error estimate for blocks of size 2^( 4) =       0.000433798687
  error estimate for blocks of size 2^( 5) =       0.000445960456
  error estimate for blocks of size 2^( 6) =       0.000453085016
  error estimate for blocks of size 2^( 7) =       0.000457074556

      target function =      -0.919091425270
              le_mean =     -16.898617613411
             les_mean =     285.859043975954
             stat err =       0.000447479679
             autocorr =       1.354026273467
   target nu stat err =       0.000447479679
   target dn stat err =       0.003660450053
      target stat err =       0.005871989130
              std dev =       0.543844536185
             le_variance =       0.295766879538

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384556159
  error estimate for blocks of size 2^( 2) =       0.000401035142
  error estimate for blocks of size 2^( 3) =       0.000418279420
  error estimate for blocks of size 2^( 4) =       0.000433798687
  error estimate for blocks of size 2^( 5) =       0.000445960456
  error estimate for blocks of size 2^( 6) =       0.000453085016
  error estimate for blocks of size 2^( 7) =       0.000457074556

      target function =      -0.919091425270
              le_mean =     -16.898617613411
             les_mean =     285.859043975954
             stat err =       0.000447479679
             autocorr =       1.354026273467
   target nu stat err =       0.000447479679
   target dn stat err =       0.003660450053
      target stat err =       0.005871989130
              std dev =       0.543844536185
             le_variance =       0.295766879538

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295790303207
                                         uncertainty =       0.003606356624

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384556159
  error estimate for blocks of size 2^( 2) =       0.000401035142
  error estimate for blocks of size 2^( 3) =       0.000418279420
  error estimate for blocks of size 2^( 4) =       0.000433798687
  error estimate for blocks of size 2^( 5) =       0.000445960456
  error estimate for blocks of size 2^( 6) =       0.000453085016
  error estimate for blocks of size 2^( 7) =       0.000457074556

      target function =      -0.919091425270
              le_mean =     -16.898617613411
             les_mean =     285.859043975954
             stat err =       0.000447479679
             autocorr =       1.354026273467
   target nu stat err =       0.000447479679
   target dn stat err =       0.003660450053
      target stat err =       0.005871989130
              std dev =       0.543844536185
             le_variance =       0.295766879538


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919091425270        initial  <--
     4.0000e+24     4.0000e+25             0.0000e+00        -0.919091425270
     1.6000e+25     1.6000e+26             0.0000e+00        -0.919091425270
     6.4000e+25     6.4000e+26             0.0000e+00        -0.919091425270

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.3436
  </log>
  <optVariables href="H2O.s027.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1408e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s028 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s028 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=28  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6913e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -16.9473
    reference variance = 0.279783
====================================================
  Execution time = 4.0557e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s028
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9911e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0980e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299206536118
                                         uncertainty =       0.005621521207

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299206536118
                                         uncertainty =       0.005621521207

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386725673
  error estimate for blocks of size 2^( 2) =       0.000403687947
  error estimate for blocks of size 2^( 3) =       0.000420347722
  error estimate for blocks of size 2^( 4) =       0.000435203927
  error estimate for blocks of size 2^( 5) =       0.000445794095
  error estimate for blocks of size 2^( 6) =       0.000454003127
  error estimate for blocks of size 2^( 7) =       0.000457531601

      target function =      -0.913759770220
              le_mean =     -16.898532942880
             les_mean =     285.859528964703
             stat err =       0.000448133187
             autocorr =       1.342790335568
   target nu stat err =       0.000448133187
   target dn stat err =       0.005481107641
      target stat err =       0.008648510811
              std dev =       0.546912691983
             le_variance =       0.299113492652


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689853294288e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+25, overlap shift 4.0000e+26 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+26, overlap shift 1.6000e+27 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+26, overlap shift 6.4000e+27 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913840922019       residual = 1.04e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.429502 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1558e+01
  </log>
  <optVariables href="H2O.s028.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -16.8761
    reference variance = 0.455247
====================================================
  Execution time = 3.9680e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s028
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9197e-01
  Total weights = 2.0000e+06
  Execution time = 3.7130e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382080665
  error estimate for blocks of size 2^( 2) =       0.000398980725
  error estimate for blocks of size 2^( 3) =       0.000416036592
  error estimate for blocks of size 2^( 4) =       0.000430755576
  error estimate for blocks of size 2^( 5) =       0.000441789472
  error estimate for blocks of size 2^( 6) =       0.000447585688
  error estimate for blocks of size 2^( 7) =       0.000450682123

      target function =      -0.925190755310
              le_mean =     -16.898439526207
             les_mean =     285.849229543342
             stat err =       0.000442703215
             autocorr =       1.342502893005
   target nu stat err =       0.000442703215
   target dn stat err =       0.002598048833
      target stat err =       0.004255245164
              std dev =       0.540343657743
             le_variance =       0.291971268463

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382080665
  error estimate for blocks of size 2^( 2) =       0.000398980725
  error estimate for blocks of size 2^( 3) =       0.000416036592
  error estimate for blocks of size 2^( 4) =       0.000430755576
  error estimate for blocks of size 2^( 5) =       0.000441789472
  error estimate for blocks of size 2^( 6) =       0.000447585688
  error estimate for blocks of size 2^( 7) =       0.000450682123

      target function =      -0.925190755310
              le_mean =     -16.898439526207
             les_mean =     285.849229543342
             stat err =       0.000442703215
             autocorr =       1.342502893002
   target nu stat err =       0.000442703215
   target dn stat err =       0.002598048833
      target stat err =       0.004255245164
              std dev =       0.540343657743
             le_variance =       0.291971268463

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382080665
  error estimate for blocks of size 2^( 2) =       0.000398980725
  error estimate for blocks of size 2^( 3) =       0.000416036592
  error estimate for blocks of size 2^( 4) =       0.000430755576
  error estimate for blocks of size 2^( 5) =       0.000441789472
  error estimate for blocks of size 2^( 6) =       0.000447585688
  error estimate for blocks of size 2^( 7) =       0.000450682123

      target function =      -0.925190755310
              le_mean =     -16.898439526207
             les_mean =     285.849229543342
             stat err =       0.000442703215
             autocorr =       1.342502893002
   target nu stat err =       0.000442703215
   target dn stat err =       0.002598048833
      target stat err =       0.004255245164
              std dev =       0.540343657743
             le_variance =       0.291971268463

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292018979567
                                         uncertainty =       0.002720390706

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382080665
  error estimate for blocks of size 2^( 2) =       0.000398980725
  error estimate for blocks of size 2^( 3) =       0.000416036592
  error estimate for blocks of size 2^( 4) =       0.000430755576
  error estimate for blocks of size 2^( 5) =       0.000441789472
  error estimate for blocks of size 2^( 6) =       0.000447585688
  error estimate for blocks of size 2^( 7) =       0.000450682123

      target function =      -0.925190755310
              le_mean =     -16.898439526207
             les_mean =     285.849229543342
             stat err =       0.000442703215
             autocorr =       1.342502893002
   target nu stat err =       0.000442703215
   target dn stat err =       0.002598048833
      target stat err =       0.004255245164
              std dev =       0.540343657743
             le_variance =       0.291971268463


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925190755310        initial  <--
     4.0000e+25     4.0000e+26             0.0000e+00        -0.925190755310
     1.6000e+26     1.6000e+27             0.0000e+00        -0.925190755310
     6.4000e+26     6.4000e+27             0.0000e+00        -0.925190755310

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3979
  </log>
  <optVariables href="H2O.s028.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0996e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s029 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s029 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=29  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6913e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -16.8641
    reference variance = 0.191922
====================================================
  Execution time = 4.2848e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s029
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9683e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0704e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296890659334
                                         uncertainty =       0.006292492420

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296890659334
                                         uncertainty =       0.006292492420

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385246879
  error estimate for blocks of size 2^( 2) =       0.000401601035
  error estimate for blocks of size 2^( 3) =       0.000418577352
  error estimate for blocks of size 2^( 4) =       0.000433250799
  error estimate for blocks of size 2^( 5) =       0.000445610955
  error estimate for blocks of size 2^( 6) =       0.000453323345
  error estimate for blocks of size 2^( 7) =       0.000456483603

      target function =      -0.917342488532
              le_mean =     -16.898689128106
             les_mean =     285.862524415462
             stat err =       0.000447167176
             autocorr =       1.347291516260
   target nu stat err =       0.000447167176
   target dn stat err =       0.005925983834
      target stat err =       0.009421043131
              std dev =       0.544821361086
             le_variance =       0.296830315496


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689868912811e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+26, overlap shift 4.0000e+27 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+27, overlap shift 1.6000e+28 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+27, overlap shift 6.4000e+28 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917436821839       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.431103 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3562e+01
  </log>
  <optVariables href="H2O.s029.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -16.9626
    reference variance = 0.431579
====================================================
  Execution time = 3.9304e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s029
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.1482e-01
  Total weights = 2.0000e+06
  Execution time = 3.7107e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000396749519
  error estimate for blocks of size 2^( 2) =       0.000413552498
  error estimate for blocks of size 2^( 3) =       0.000430336993
  error estimate for blocks of size 2^( 4) =       0.000444941090
  error estimate for blocks of size 2^( 5) =       0.000457173068
  error estimate for blocks of size 2^( 6) =       0.000464951307
  error estimate for blocks of size 2^( 7) =       0.000468587457

      target function =      -0.888833421341
              le_mean =     -16.898499079815
             les_mean =     285.874091354367
             stat err =       0.000458913230
             autocorr =       1.337914436057
   target nu stat err =       0.000458913230
   target dn stat err =       0.019818684365
      target stat err =       0.029508634991
              std dev =       0.561088550279
             le_variance =       0.314820361254

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000396749519
  error estimate for blocks of size 2^( 2) =       0.000413552498
  error estimate for blocks of size 2^( 3) =       0.000430336993
  error estimate for blocks of size 2^( 4) =       0.000444941090
  error estimate for blocks of size 2^( 5) =       0.000457173068
  error estimate for blocks of size 2^( 6) =       0.000464951307
  error estimate for blocks of size 2^( 7) =       0.000468587457

      target function =      -0.888833421341
              le_mean =     -16.898499079815
             les_mean =     285.874091354367
             stat err =       0.000458913230
             autocorr =       1.337914436057
   target nu stat err =       0.000458913230
   target dn stat err =       0.019818684365
      target stat err =       0.029508634991
              std dev =       0.561088550279
             le_variance =       0.314820361254

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000396749519
  error estimate for blocks of size 2^( 2) =       0.000413552498
  error estimate for blocks of size 2^( 3) =       0.000430336993
  error estimate for blocks of size 2^( 4) =       0.000444941090
  error estimate for blocks of size 2^( 5) =       0.000457173068
  error estimate for blocks of size 2^( 6) =       0.000464951307
  error estimate for blocks of size 2^( 7) =       0.000468587457

      target function =      -0.888833421341
              le_mean =     -16.898499079815
             les_mean =     285.874091354367
             stat err =       0.000458913230
             autocorr =       1.337914436057
   target nu stat err =       0.000458913230
   target dn stat err =       0.019818684365
      target stat err =       0.029508634991
              std dev =       0.561088550279
             le_variance =       0.314820361254

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.314651398644
                                         uncertainty =       0.019422652038

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000396749519
  error estimate for blocks of size 2^( 2) =       0.000413552498
  error estimate for blocks of size 2^( 3) =       0.000430336993
  error estimate for blocks of size 2^( 4) =       0.000444941090
  error estimate for blocks of size 2^( 5) =       0.000457173068
  error estimate for blocks of size 2^( 6) =       0.000464951307
  error estimate for blocks of size 2^( 7) =       0.000468587457

      target function =      -0.888833421341
              le_mean =     -16.898499079815
             les_mean =     285.874091354367
             stat err =       0.000458913230
             autocorr =       1.337914436057
   target nu stat err =       0.000458913230
   target dn stat err =       0.019818684365
      target stat err =       0.029508634991
              std dev =       0.561088550279
             le_variance =       0.314820361254


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.888833421341        initial  <--
     4.0000e+26     4.0000e+27             0.0000e+00        -0.888833421341
     1.6000e+27     1.6000e+28             0.0000e+00        -0.888833421341
     6.4000e+27     6.4000e+28             0.0000e+00        -0.888833421341

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 57.9995
  </log>
  <optVariables href="H2O.s029.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1158e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s030 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s030 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=30  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6913e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -16.8411
    reference variance = 0.325959
====================================================
  Execution time = 4.0265e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s030
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9176e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0578e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291795177187
                                         uncertainty =       0.002469247954

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291795177187
                                         uncertainty =       0.002469247954

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381939993
  error estimate for blocks of size 2^( 2) =       0.000398804117
  error estimate for blocks of size 2^( 3) =       0.000415599047
  error estimate for blocks of size 2^( 4) =       0.000430323030
  error estimate for blocks of size 2^( 5) =       0.000441048438
  error estimate for blocks of size 2^( 6) =       0.000448110626
  error estimate for blocks of size 2^( 7) =       0.000453902062

      target function =      -0.925530733614
              le_mean =     -16.898646995045
             les_mean =     285.856026433509
             stat err =       0.000443346039
             autocorr =       1.347396437790
   target nu stat err =       0.000443346039
   target dn stat err =       0.002622710813
      target stat err =       0.004299306165
              std dev =       0.540144717864
             le_variance =       0.291756316236


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689864699505e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+27, overlap shift 4.0000e+28 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+28, overlap shift 1.6000e+29 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+28, overlap shift 6.4000e+29 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925549380766       residual = 9.63e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.432750 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.0852e+01
  </log>
  <optVariables href="H2O.s030.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -16.919
    reference variance = 0.212181
====================================================
  Execution time = 4.1281e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s030
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9806e-01
  Total weights = 2.0000e+06
  Execution time = 3.7229e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386041935
  error estimate for blocks of size 2^( 2) =       0.000402687331
  error estimate for blocks of size 2^( 3) =       0.000419368258
  error estimate for blocks of size 2^( 4) =       0.000434045953
  error estimate for blocks of size 2^( 5) =       0.000444967658
  error estimate for blocks of size 2^( 6) =       0.000453301056
  error estimate for blocks of size 2^( 7) =       0.000457659833

      target function =      -0.915460222132
              le_mean =     -16.898531160457
             les_mean =     285.858411982487
             stat err =       0.000447493625
             autocorr =       1.343707491482
   target nu stat err =       0.000447493625
   target dn stat err =       0.004113663012
      target stat err =       0.006534478742
              std dev =       0.545945739605
             le_variance =       0.298056750593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386041935
  error estimate for blocks of size 2^( 2) =       0.000402687331
  error estimate for blocks of size 2^( 3) =       0.000419368258
  error estimate for blocks of size 2^( 4) =       0.000434045953
  error estimate for blocks of size 2^( 5) =       0.000444967658
  error estimate for blocks of size 2^( 6) =       0.000453301056
  error estimate for blocks of size 2^( 7) =       0.000457659833

      target function =      -0.915460222132
              le_mean =     -16.898531160457
             les_mean =     285.858411982487
             stat err =       0.000447493625
             autocorr =       1.343707491482
   target nu stat err =       0.000447493625
   target dn stat err =       0.004113663012
      target stat err =       0.006534478742
              std dev =       0.545945739605
             le_variance =       0.298056750593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386041935
  error estimate for blocks of size 2^( 2) =       0.000402687331
  error estimate for blocks of size 2^( 3) =       0.000419368258
  error estimate for blocks of size 2^( 4) =       0.000434045953
  error estimate for blocks of size 2^( 5) =       0.000444967658
  error estimate for blocks of size 2^( 6) =       0.000453301056
  error estimate for blocks of size 2^( 7) =       0.000457659833

      target function =      -0.915460222132
              le_mean =     -16.898531160457
             les_mean =     285.858411982487
             stat err =       0.000447493625
             autocorr =       1.343707491482
   target nu stat err =       0.000447493625
   target dn stat err =       0.004113663012
      target stat err =       0.006534478742
              std dev =       0.545945739605
             le_variance =       0.298056750593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298118487563
                                         uncertainty =       0.003802923285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386041935
  error estimate for blocks of size 2^( 2) =       0.000402687331
  error estimate for blocks of size 2^( 3) =       0.000419368258
  error estimate for blocks of size 2^( 4) =       0.000434045953
  error estimate for blocks of size 2^( 5) =       0.000444967658
  error estimate for blocks of size 2^( 6) =       0.000453301056
  error estimate for blocks of size 2^( 7) =       0.000457659833

      target function =      -0.915460222132
              le_mean =     -16.898531160457
             les_mean =     285.858411982487
             stat err =       0.000447493625
             autocorr =       1.343707491482
   target nu stat err =       0.000447493625
   target dn stat err =       0.004113663012
      target stat err =       0.006534478742
              std dev =       0.545945739605
             le_variance =       0.298056750593


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.915460222132        initial  <--
     4.0000e+27     4.0000e+28             0.0000e+00        -0.915460222132
     1.6000e+28     1.6000e+29             0.0000e+00        -0.915460222132
     6.4000e+28     6.4000e+29             0.0000e+00        -0.915460222132

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.0129
  </log>
  <optVariables href="H2O.s030.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1091e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s031 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s031 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=31  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6912e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -16.9076
    reference variance = 0.318158
====================================================
  Execution time = 4.0160e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s031
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9964e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0847e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299606205419
                                         uncertainty =       0.003817903720

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299606205419
                                         uncertainty =       0.003817903720

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387066825
  error estimate for blocks of size 2^( 2) =       0.000403405223
  error estimate for blocks of size 2^( 3) =       0.000420555213
  error estimate for blocks of size 2^( 4) =       0.000435861619
  error estimate for blocks of size 2^( 5) =       0.000448366939
  error estimate for blocks of size 2^( 6) =       0.000455857244
  error estimate for blocks of size 2^( 7) =       0.000458207545

      target function =      -0.912954949752
              le_mean =     -16.898854359064
             les_mean =     285.870919952818
             stat err =       0.000449573337
             autocorr =       1.349053560677
   target nu stat err =       0.000449573337
   target dn stat err =       0.003896308314
      target stat err =       0.006164728420
              std dev =       0.547395153224
             le_variance =       0.299641453773


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689885435906e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+28, overlap shift 4.0000e+29 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+29, overlap shift 1.6000e+30 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+29, overlap shift 6.4000e+30 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912995235126       residual = 7.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.434308 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1017e+01
  </log>
  <optVariables href="H2O.s031.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -16.883
    reference variance = 0.23128
====================================================
  Execution time = 4.0157e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s031
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9448e-01
  Total weights = 2.0000e+06
  Execution time = 3.6998e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383720248
  error estimate for blocks of size 2^( 2) =       0.000400817880
  error estimate for blocks of size 2^( 3) =       0.000417908006
  error estimate for blocks of size 2^( 4) =       0.000433362985
  error estimate for blocks of size 2^( 5) =       0.000444739990
  error estimate for blocks of size 2^( 6) =       0.000452935439
  error estimate for blocks of size 2^( 7) =       0.000460588455

      target function =      -0.921101059982
              le_mean =     -16.899482223080
             les_mean =     285.886981719069
             stat err =       0.000447906717
             autocorr =       1.362528883937
   target nu stat err =       0.000447906717
   target dn stat err =       0.003946245906
      target stat err =       0.006360713549
              std dev =       0.542662379481
             le_variance =       0.294482458104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383720248
  error estimate for blocks of size 2^( 2) =       0.000400817880
  error estimate for blocks of size 2^( 3) =       0.000417908006
  error estimate for blocks of size 2^( 4) =       0.000433362985
  error estimate for blocks of size 2^( 5) =       0.000444739990
  error estimate for blocks of size 2^( 6) =       0.000452935439
  error estimate for blocks of size 2^( 7) =       0.000460588455

      target function =      -0.921101059982
              le_mean =     -16.899482223080
             les_mean =     285.886981719069
             stat err =       0.000447906717
             autocorr =       1.362528883937
   target nu stat err =       0.000447906717
   target dn stat err =       0.003946245906
      target stat err =       0.006360713549
              std dev =       0.542662379481
             le_variance =       0.294482458104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383720248
  error estimate for blocks of size 2^( 2) =       0.000400817880
  error estimate for blocks of size 2^( 3) =       0.000417908006
  error estimate for blocks of size 2^( 4) =       0.000433362985
  error estimate for blocks of size 2^( 5) =       0.000444739990
  error estimate for blocks of size 2^( 6) =       0.000452935439
  error estimate for blocks of size 2^( 7) =       0.000460588455

      target function =      -0.921101059982
              le_mean =     -16.899482223080
             les_mean =     285.886981719069
             stat err =       0.000447906717
             autocorr =       1.362528883937
   target nu stat err =       0.000447906717
   target dn stat err =       0.003946245906
      target stat err =       0.006360713549
              std dev =       0.542662379481
             le_variance =       0.294482458104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566105750
                                         uncertainty =       0.003729860856

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383720248
  error estimate for blocks of size 2^( 2) =       0.000400817880
  error estimate for blocks of size 2^( 3) =       0.000417908006
  error estimate for blocks of size 2^( 4) =       0.000433362985
  error estimate for blocks of size 2^( 5) =       0.000444739990
  error estimate for blocks of size 2^( 6) =       0.000452935439
  error estimate for blocks of size 2^( 7) =       0.000460588455

      target function =      -0.921101059982
              le_mean =     -16.899482223080
             les_mean =     285.886981719069
             stat err =       0.000447906717
             autocorr =       1.362528883937
   target nu stat err =       0.000447906717
   target dn stat err =       0.003946245906
      target stat err =       0.006360713549
              std dev =       0.542662379481
             le_variance =       0.294482458104


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.921101059982        initial  <--
     4.0000e+28     4.0000e+29             0.0000e+00        -0.921101059982
     1.6000e+29     1.6000e+30             0.0000e+00        -0.921101059982
     6.4000e+29     6.4000e+30             0.0000e+00        -0.921101059982

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.8629
  </log>
  <optVariables href="H2O.s031.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0989e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s032 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s032 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=32  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6911e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -16.8254
    reference variance = 0.449626
====================================================
  Execution time = 4.1956e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s032
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9138e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0980e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291347714380
                                         uncertainty =       0.002223759309

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291347714380
                                         uncertainty =       0.002223759309

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381696644
  error estimate for blocks of size 2^( 2) =       0.000398511238
  error estimate for blocks of size 2^( 3) =       0.000415758643
  error estimate for blocks of size 2^( 4) =       0.000430567835
  error estimate for blocks of size 2^( 5) =       0.000441768828
  error estimate for blocks of size 2^( 6) =       0.000450265895
  error estimate for blocks of size 2^( 7) =       0.000452929206

      target function =      -0.926140306859
              le_mean =     -16.898432207872
             les_mean =     285.848395594279
             stat err =       0.000443882941
             autocorr =       1.352384633288
   target nu stat err =       0.000443882941
   target dn stat err =       0.002356605746
      target stat err =       0.003881547916
              std dev =       0.539800570500
             le_variance =       0.291384655912


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689843220787e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+29, overlap shift 4.0000e+30 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+29 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+30, overlap shift 1.6000e+31 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+30, overlap shift 6.4000e+31 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926155043782       residual = 7.57e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.435829 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2945e+01
  </log>
  <optVariables href="H2O.s032.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -16.9094
    reference variance = 0.240192
====================================================
  Execution time = 3.9496e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s032
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9920e-01
  Total weights = 2.0000e+06
  Execution time = 3.7085e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386783012
  error estimate for blocks of size 2^( 2) =       0.000403183296
  error estimate for blocks of size 2^( 3) =       0.000419912429
  error estimate for blocks of size 2^( 4) =       0.000434180202
  error estimate for blocks of size 2^( 5) =       0.000444200172
  error estimate for blocks of size 2^( 6) =       0.000449045055
  error estimate for blocks of size 2^( 7) =       0.000453730685

      target function =      -0.913584884545
              le_mean =     -16.898974366149
             les_mean =     285.874536674963
             stat err =       0.000445289029
             autocorr =       1.325406839762
   target nu stat err =       0.000445289029
   target dn stat err =       0.005907742360
      target stat err =       0.009320452861
              std dev =       0.546993781326
             le_variance =       0.299202196809

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386783012
  error estimate for blocks of size 2^( 2) =       0.000403183296
  error estimate for blocks of size 2^( 3) =       0.000419912429
  error estimate for blocks of size 2^( 4) =       0.000434180202
  error estimate for blocks of size 2^( 5) =       0.000444200172
  error estimate for blocks of size 2^( 6) =       0.000449045055
  error estimate for blocks of size 2^( 7) =       0.000453730685

      target function =      -0.913584884545
              le_mean =     -16.898974366149
             les_mean =     285.874536674963
             stat err =       0.000445289029
             autocorr =       1.325406839762
   target nu stat err =       0.000445289029
   target dn stat err =       0.005907742360
      target stat err =       0.009320452861
              std dev =       0.546993781326
             le_variance =       0.299202196809

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386783012
  error estimate for blocks of size 2^( 2) =       0.000403183296
  error estimate for blocks of size 2^( 3) =       0.000419912429
  error estimate for blocks of size 2^( 4) =       0.000434180202
  error estimate for blocks of size 2^( 5) =       0.000444200172
  error estimate for blocks of size 2^( 6) =       0.000449045055
  error estimate for blocks of size 2^( 7) =       0.000453730685

      target function =      -0.913584884545
              le_mean =     -16.898974366149
             les_mean =     285.874536674963
             stat err =       0.000445289029
             autocorr =       1.325406839762
   target nu stat err =       0.000445289029
   target dn stat err =       0.005907742360
      target stat err =       0.009320452861
              std dev =       0.546993781326
             le_variance =       0.299202196809

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299283155877
                                         uncertainty =       0.005771306780

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386783012
  error estimate for blocks of size 2^( 2) =       0.000403183296
  error estimate for blocks of size 2^( 3) =       0.000419912429
  error estimate for blocks of size 2^( 4) =       0.000434180202
  error estimate for blocks of size 2^( 5) =       0.000444200172
  error estimate for blocks of size 2^( 6) =       0.000449045055
  error estimate for blocks of size 2^( 7) =       0.000453730685

      target function =      -0.913584884545
              le_mean =     -16.898974366149
             les_mean =     285.874536674963
             stat err =       0.000445289029
             autocorr =       1.325406839762
   target nu stat err =       0.000445289029
   target dn stat err =       0.005907742360
      target stat err =       0.009320452861
              std dev =       0.546993781326
             le_variance =       0.299202196809


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913584884545        initial  <--
     4.0000e+29     4.0000e+30             0.0000e+00        -0.913584884545
     1.6000e+30     1.6000e+31             0.0000e+00        -0.913584884545
     6.4000e+30     6.4000e+31             0.0000e+00        -0.913584884545

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.2071
  </log>
  <optVariables href="H2O.s032.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1116e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s033 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s033 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=33  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6910e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -16.9288
    reference variance = 0.192809
====================================================
  Execution time = 4.2079e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s033
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9264e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0879e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292607698861
                                         uncertainty =       0.003883170468

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292607698861
                                         uncertainty =       0.003883170468

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382515799
  error estimate for blocks of size 2^( 2) =       0.000399092604
  error estimate for blocks of size 2^( 3) =       0.000416122946
  error estimate for blocks of size 2^( 4) =       0.000430752850
  error estimate for blocks of size 2^( 5) =       0.000441449093
  error estimate for blocks of size 2^( 6) =       0.000448490803
  error estimate for blocks of size 2^( 7) =       0.000450507486

      target function =      -0.924088903928
              le_mean =     -16.898547103535
             les_mean =     285.853530736809
             stat err =       0.000442800058
             autocorr =       1.340036361134
   target nu stat err =       0.000442800058
   target dn stat err =       0.004091765819
      target stat err =       0.006621678547
              std dev =       0.540959030548
             le_variance =       0.292636672731


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689854710354e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+30, overlap shift 4.0000e+31 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+31, overlap shift 1.6000e+32 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+31, overlap shift 6.4000e+32 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924135019657       residual = 1.51e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.437519 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2967e+01
  </log>
  <optVariables href="H2O.s033.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -16.8982
    reference variance = 0.175464
====================================================
  Execution time = 3.9812e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s033
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9497e-01
  Total weights = 2.0000e+06
  Execution time = 3.7127e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384040291
  error estimate for blocks of size 2^( 2) =       0.000400938061
  error estimate for blocks of size 2^( 3) =       0.000418618259
  error estimate for blocks of size 2^( 4) =       0.000433613532
  error estimate for blocks of size 2^( 5) =       0.000445401084
  error estimate for blocks of size 2^( 6) =       0.000451699500
  error estimate for blocks of size 2^( 7) =       0.000456861178

      target function =      -0.920390999948
              le_mean =     -16.898153697907
             les_mean =     285.842572140400
             stat err =       0.000446893824
             autocorr =       1.354113678554
   target nu stat err =       0.000446893824
   target dn stat err =       0.002554345550
      target stat err =       0.004142563584
              std dev =       0.543114987627
             le_variance =       0.294973889785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384040291
  error estimate for blocks of size 2^( 2) =       0.000400938061
  error estimate for blocks of size 2^( 3) =       0.000418618259
  error estimate for blocks of size 2^( 4) =       0.000433613532
  error estimate for blocks of size 2^( 5) =       0.000445401084
  error estimate for blocks of size 2^( 6) =       0.000451699500
  error estimate for blocks of size 2^( 7) =       0.000456861178

      target function =      -0.920390999948
              le_mean =     -16.898153697907
             les_mean =     285.842572140400
             stat err =       0.000446893824
             autocorr =       1.354113678554
   target nu stat err =       0.000446893824
   target dn stat err =       0.002554345550
      target stat err =       0.004142563584
              std dev =       0.543114987627
             le_variance =       0.294973889785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384040291
  error estimate for blocks of size 2^( 2) =       0.000400938061
  error estimate for blocks of size 2^( 3) =       0.000418618259
  error estimate for blocks of size 2^( 4) =       0.000433613532
  error estimate for blocks of size 2^( 5) =       0.000445401084
  error estimate for blocks of size 2^( 6) =       0.000451699500
  error estimate for blocks of size 2^( 7) =       0.000456861178

      target function =      -0.920390999948
              le_mean =     -16.898153697907
             les_mean =     285.842572140400
             stat err =       0.000446893824
             autocorr =       1.354113678554
   target nu stat err =       0.000446893824
   target dn stat err =       0.002554345550
      target stat err =       0.004142563584
              std dev =       0.543114987627
             le_variance =       0.294973889785

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294976582969
                                         uncertainty =       0.002476408707

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384040291
  error estimate for blocks of size 2^( 2) =       0.000400938061
  error estimate for blocks of size 2^( 3) =       0.000418618259
  error estimate for blocks of size 2^( 4) =       0.000433613532
  error estimate for blocks of size 2^( 5) =       0.000445401084
  error estimate for blocks of size 2^( 6) =       0.000451699500
  error estimate for blocks of size 2^( 7) =       0.000456861178

      target function =      -0.920390999948
              le_mean =     -16.898153697907
             les_mean =     285.842572140400
             stat err =       0.000446893824
             autocorr =       1.354113678554
   target nu stat err =       0.000446893824
   target dn stat err =       0.002554345550
      target stat err =       0.004142563584
              std dev =       0.543114987627
             le_variance =       0.294973889785


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.920390999948        initial  <--
     4.0000e+30     4.0000e+31             0.0000e+00        -0.920390999948
     1.6000e+31     1.6000e+32             0.0000e+00        -0.920390999948
     6.4000e+31     6.4000e+32             0.0000e+00        -0.920390999948

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5329
  </log>
  <optVariables href="H2O.s033.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1152e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s034 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s034 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=34  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6910e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -16.8488
    reference variance = 0.222196
====================================================
  Execution time = 4.0806e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s034
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9682e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0975e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296738820225
                                         uncertainty =       0.002939645868

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296738820225
                                         uncertainty =       0.002939645868

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385240892
  error estimate for blocks of size 2^( 2) =       0.000401838903
  error estimate for blocks of size 2^( 3) =       0.000419297437
  error estimate for blocks of size 2^( 4) =       0.000434499496
  error estimate for blocks of size 2^( 5) =       0.000446125676
  error estimate for blocks of size 2^( 6) =       0.000453195546
  error estimate for blocks of size 2^( 7) =       0.000457013145

      target function =      -0.917454478659
              le_mean =     -16.898040689597
             les_mean =     285.840600088601
             stat err =       0.000447708466
             autocorr =       1.350597225719
   target nu stat err =       0.000447708466
   target dn stat err =       0.003046343932
      target stat err =       0.004883128060
              std dev =       0.544812894256
             le_variance =       0.296821089748


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689804068960e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+31, overlap shift 4.0000e+32 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+32, overlap shift 1.6000e+33 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+32, overlap shift 6.4000e+33 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917479139985       residual = 8.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.439172 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1791e+01
  </log>
  <optVariables href="H2O.s034.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -16.879
    reference variance = 0.481314
====================================================
  Execution time = 4.1395e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s034
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9598e-01
  Total weights = 2.0000e+06
  Execution time = 3.7186e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384692918
  error estimate for blocks of size 2^( 2) =       0.000401580627
  error estimate for blocks of size 2^( 3) =       0.000418906481
  error estimate for blocks of size 2^( 4) =       0.000433942134
  error estimate for blocks of size 2^( 5) =       0.000444910178
  error estimate for blocks of size 2^( 6) =       0.000453497916
  error estimate for blocks of size 2^( 7) =       0.000455736096

      target function =      -0.918800355299
              le_mean =     -16.898029260617
             les_mean =     285.839370026873
             stat err =       0.000447021581
             autocorr =       1.350294808011
   target nu stat err =       0.000447021581
   target dn stat err =       0.002532949377
      target stat err =       0.004094221801
              std dev =       0.544037941867
             le_variance =       0.295977282191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384692918
  error estimate for blocks of size 2^( 2) =       0.000401580627
  error estimate for blocks of size 2^( 3) =       0.000418906481
  error estimate for blocks of size 2^( 4) =       0.000433942134
  error estimate for blocks of size 2^( 5) =       0.000444910178
  error estimate for blocks of size 2^( 6) =       0.000453497916
  error estimate for blocks of size 2^( 7) =       0.000455736096

      target function =      -0.918800355299
              le_mean =     -16.898029260617
             les_mean =     285.839370026873
             stat err =       0.000447021581
             autocorr =       1.350294808011
   target nu stat err =       0.000447021581
   target dn stat err =       0.002532949377
      target stat err =       0.004094221801
              std dev =       0.544037941867
             le_variance =       0.295977282191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384692918
  error estimate for blocks of size 2^( 2) =       0.000401580627
  error estimate for blocks of size 2^( 3) =       0.000418906481
  error estimate for blocks of size 2^( 4) =       0.000433942134
  error estimate for blocks of size 2^( 5) =       0.000444910178
  error estimate for blocks of size 2^( 6) =       0.000453497916
  error estimate for blocks of size 2^( 7) =       0.000455736096

      target function =      -0.918800355299
              le_mean =     -16.898029260617
             les_mean =     285.839370026873
             stat err =       0.000447021581
             autocorr =       1.350294808011
   target nu stat err =       0.000447021581
   target dn stat err =       0.002532949377
      target stat err =       0.004094221801
              std dev =       0.544037941867
             le_variance =       0.295977282191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296037811112
                                         uncertainty =       0.002582608883

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384692918
  error estimate for blocks of size 2^( 2) =       0.000401580627
  error estimate for blocks of size 2^( 3) =       0.000418906481
  error estimate for blocks of size 2^( 4) =       0.000433942134
  error estimate for blocks of size 2^( 5) =       0.000444910178
  error estimate for blocks of size 2^( 6) =       0.000453497916
  error estimate for blocks of size 2^( 7) =       0.000455736096

      target function =      -0.918800355299
              le_mean =     -16.898029260617
             les_mean =     285.839370026873
             stat err =       0.000447021581
             autocorr =       1.350294808011
   target nu stat err =       0.000447021581
   target dn stat err =       0.002532949377
      target stat err =       0.004094221801
              std dev =       0.544037941867
             le_variance =       0.295977282191


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918800355299        initial  <--
     4.0000e+31     4.0000e+32             0.0000e+00        -0.918800355299
     1.6000e+32     1.6000e+33             0.0000e+00        -0.918800355299
     6.4000e+32     6.4000e+33             0.0000e+00        -0.918800355299

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.1410
  </log>
  <optVariables href="H2O.s034.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1194e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s035 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s035 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=35  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -16.8947
    reference variance = 0.472081
====================================================
  Execution time = 4.0318e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s035
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9189e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0861e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291876580921
                                         uncertainty =       0.002738979027

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291876580921
                                         uncertainty =       0.002738979027

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382025584
  error estimate for blocks of size 2^( 2) =       0.000399045470
  error estimate for blocks of size 2^( 3) =       0.000416137028
  error estimate for blocks of size 2^( 4) =       0.000430595468
  error estimate for blocks of size 2^( 5) =       0.000441216833
  error estimate for blocks of size 2^( 6) =       0.000448538124
  error estimate for blocks of size 2^( 7) =       0.000453206568

      target function =      -0.925305845439
              le_mean =     -16.899137913571
             les_mean =     285.872749169073
             stat err =       0.000443389248
             autocorr =       1.347055282437
   target nu stat err =       0.000443389248
   target dn stat err =       0.002562513875
      target stat err =       0.004205738069
              std dev =       0.540265761573
             le_variance =       0.291887093129


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689913791357e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+32, overlap shift 4.0000e+33 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925323682876       residual = 4.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925323682876       residual = 6.37e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925323682876       residual = 2.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925323682876       residual = 1.21e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925323486328       residual = 2.56e+00           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+32 is 2.674483e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+33, overlap shift 1.6000e+34 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925323682876       residual = 4.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925323682876       residual = 6.37e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925323682876       residual = 2.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925323680043       residual = 5.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925323486328       residual = 1.55e+00           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+33 is 5.639497e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+33, overlap shift 6.4000e+34 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925323682876       residual = 4.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925323682876       residual = 6.37e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925323682876       residual = 2.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925323694944       residual = 5.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925323486328       residual = 6.19e+00           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+33 is 1.409874e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.441969 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1189e+01
  </log>
  <optVariables href="H2O.s035.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -16.9036
    reference variance = 0.25598
====================================================
  Execution time = 3.9717e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s035
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9569e-01
  Total weights = 2.0000e+06
  Execution time = 3.7159e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384503786
  error estimate for blocks of size 2^( 2) =       0.000401470966
  error estimate for blocks of size 2^( 3) =       0.000418717289
  error estimate for blocks of size 2^( 4) =       0.000434217078
  error estimate for blocks of size 2^( 5) =       0.000445764180
  error estimate for blocks of size 2^( 6) =       0.000452934065
  error estimate for blocks of size 2^( 7) =       0.000456298520

      target function =      -0.919253489650
              le_mean =     -16.898137797002
             les_mean =     285.842747181240
             stat err =       0.000447303461
             autocorr =       1.353328651329
   target nu stat err =       0.000447303461
   target dn stat err =       0.002837326854
      target stat err =       0.004575099788
              std dev =       0.543770468678
             le_variance =       0.295686322607

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384503786
  error estimate for blocks of size 2^( 2) =       0.000401470966
  error estimate for blocks of size 2^( 3) =       0.000418717289
  error estimate for blocks of size 2^( 4) =       0.000434217078
  error estimate for blocks of size 2^( 5) =       0.000445764180
  error estimate for blocks of size 2^( 6) =       0.000452934065
  error estimate for blocks of size 2^( 7) =       0.000456298520

      target function =      -0.919253489650
              le_mean =     -16.898137797002
             les_mean =     285.842747181240
             stat err =       0.000447303461
             autocorr =       1.353328651331
   target nu stat err =       0.000447303461
   target dn stat err =       0.002837326854
      target stat err =       0.004575099788
              std dev =       0.543770468678
             le_variance =       0.295686322607

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384503786
  error estimate for blocks of size 2^( 2) =       0.000401470966
  error estimate for blocks of size 2^( 3) =       0.000418717289
  error estimate for blocks of size 2^( 4) =       0.000434217078
  error estimate for blocks of size 2^( 5) =       0.000445764180
  error estimate for blocks of size 2^( 6) =       0.000452934065
  error estimate for blocks of size 2^( 7) =       0.000456298520

      target function =      -0.919253489650
              le_mean =     -16.898137797002
             les_mean =     285.842747181240
             stat err =       0.000447303461
             autocorr =       1.353328651331
   target nu stat err =       0.000447303461
   target dn stat err =       0.002837326854
      target stat err =       0.004575099788
              std dev =       0.543770468678
             le_variance =       0.295686322607

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295673243461
                                         uncertainty =       0.002536500037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384503786
  error estimate for blocks of size 2^( 2) =       0.000401470966
  error estimate for blocks of size 2^( 3) =       0.000418717289
  error estimate for blocks of size 2^( 4) =       0.000434217078
  error estimate for blocks of size 2^( 5) =       0.000445764180
  error estimate for blocks of size 2^( 6) =       0.000452934065
  error estimate for blocks of size 2^( 7) =       0.000456298520

      target function =      -0.919253489650
              le_mean =     -16.898137797002
             les_mean =     285.842747181240
             stat err =       0.000447303461
             autocorr =       1.353328651331
   target nu stat err =       0.000447303461
   target dn stat err =       0.002837326854
      target stat err =       0.004575099788
              std dev =       0.543770468678
             le_variance =       0.295686322607


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919253489650        initial  <--
     4.0000e+32     4.0000e+33             2.6745e-37        -0.919253489650
     1.6000e+33     1.6000e+34             5.6395e-38        -0.919253489650
     6.4000e+33     6.4000e+34             1.4099e-38        -0.919253489650

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.7283
  </log>
  <optVariables href="H2O.s035.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1392e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s036 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s036 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=36  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -16.8343
    reference variance = 0.196153
====================================================
  Execution time = 4.0603e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s036
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9519e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0829e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295209332310
                                         uncertainty =       0.003010988971

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295209332310
                                         uncertainty =       0.003010988971

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384183922
  error estimate for blocks of size 2^( 2) =       0.000400666310
  error estimate for blocks of size 2^( 3) =       0.000418062435
  error estimate for blocks of size 2^( 4) =       0.000433528820
  error estimate for blocks of size 2^( 5) =       0.000444791965
  error estimate for blocks of size 2^( 6) =       0.000453611055
  error estimate for blocks of size 2^( 7) =       0.000458173811

      target function =      -0.920002327016
              le_mean =     -16.898894836697
             les_mean =     285.867841125857
             stat err =       0.000447526413
             autocorr =       1.356934777252
   target nu stat err =       0.000447526413
   target dn stat err =       0.003084514737
      target stat err =       0.004977899003
              std dev =       0.543318112817
             le_variance =       0.295194571715


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689889483670e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+33, overlap shift 4.0000e+34 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+33 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+34, overlap shift 1.6000e+35 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+34, overlap shift 6.4000e+35 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920028034420       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.443531 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1443e+01
  </log>
  <optVariables href="H2O.s036.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -16.917
    reference variance = 0.47279
====================================================
  Execution time = 3.9451e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s036
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9293e-01
  Total weights = 2.0000e+06
  Execution time = 3.7126e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382709443
  error estimate for blocks of size 2^( 2) =       0.000399721641
  error estimate for blocks of size 2^( 3) =       0.000416657229
  error estimate for blocks of size 2^( 4) =       0.000431621548
  error estimate for blocks of size 2^( 5) =       0.000442766979
  error estimate for blocks of size 2^( 6) =       0.000450531623
  error estimate for blocks of size 2^( 7) =       0.000454293361

      target function =      -0.923626988595
              le_mean =     -16.898945964842
             les_mean =     285.867307611538
             stat err =       0.000444803378
             autocorr =       1.350820979202
   target nu stat err =       0.000444803378
   target dn stat err =       0.002661168121
      target stat err =       0.004345586026
              std dev =       0.541232884569
             le_variance =       0.292933035339

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382709443
  error estimate for blocks of size 2^( 2) =       0.000399721641
  error estimate for blocks of size 2^( 3) =       0.000416657229
  error estimate for blocks of size 2^( 4) =       0.000431621548
  error estimate for blocks of size 2^( 5) =       0.000442766979
  error estimate for blocks of size 2^( 6) =       0.000450531623
  error estimate for blocks of size 2^( 7) =       0.000454293361

      target function =      -0.923626988595
              le_mean =     -16.898945964842
             les_mean =     285.867307611538
             stat err =       0.000444803378
             autocorr =       1.350820979202
   target nu stat err =       0.000444803378
   target dn stat err =       0.002661168121
      target stat err =       0.004345586026
              std dev =       0.541232884569
             le_variance =       0.292933035339

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382709443
  error estimate for blocks of size 2^( 2) =       0.000399721641
  error estimate for blocks of size 2^( 3) =       0.000416657229
  error estimate for blocks of size 2^( 4) =       0.000431621548
  error estimate for blocks of size 2^( 5) =       0.000442766979
  error estimate for blocks of size 2^( 6) =       0.000450531623
  error estimate for blocks of size 2^( 7) =       0.000454293361

      target function =      -0.923626988595
              le_mean =     -16.898945964842
             les_mean =     285.867307611538
             stat err =       0.000444803378
             autocorr =       1.350820979202
   target nu stat err =       0.000444803378
   target dn stat err =       0.002661168121
      target stat err =       0.004345586026
              std dev =       0.541232884569
             le_variance =       0.292933035339

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292971849517
                                         uncertainty =       0.002579076839

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382709443
  error estimate for blocks of size 2^( 2) =       0.000399721641
  error estimate for blocks of size 2^( 3) =       0.000416657229
  error estimate for blocks of size 2^( 4) =       0.000431621548
  error estimate for blocks of size 2^( 5) =       0.000442766979
  error estimate for blocks of size 2^( 6) =       0.000450531623
  error estimate for blocks of size 2^( 7) =       0.000454293361

      target function =      -0.923626988595
              le_mean =     -16.898945964842
             les_mean =     285.867307611538
             stat err =       0.000444803378
             autocorr =       1.350820979202
   target nu stat err =       0.000444803378
   target dn stat err =       0.002661168121
      target stat err =       0.004345586026
              std dev =       0.541232884569
             le_variance =       0.292933035339


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923626988595        initial  <--
     4.0000e+33     4.0000e+34             0.0000e+00        -0.923626988595
     1.6000e+34     1.6000e+35             0.0000e+00        -0.923626988595
     6.4000e+34     6.4000e+35             0.0000e+00        -0.923626988595

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.1396
  </log>
  <optVariables href="H2O.s036.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0959e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s037 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s037 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=37  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -16.8954
    reference variance = 0.258151
====================================================
  Execution time = 4.0289e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s037
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9287e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0854e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292892435551
                                         uncertainty =       0.002711596436

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292892435551
                                         uncertainty =       0.002711596436

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382668474
  error estimate for blocks of size 2^( 2) =       0.000399658446
  error estimate for blocks of size 2^( 3) =       0.000417824687
  error estimate for blocks of size 2^( 4) =       0.000433326966
  error estimate for blocks of size 2^( 5) =       0.000445124755
  error estimate for blocks of size 2^( 6) =       0.000452516045
  error estimate for blocks of size 2^( 7) =       0.000456586288

      target function =      -0.923743495983
              le_mean =     -16.898345312279
             les_mean =     285.846944469055
             stat err =       0.000446888513
             autocorr =       1.363807310395
   target nu stat err =       0.000446888513
   target dn stat err =       0.002877906853
      target stat err =       0.004685183958
              std dev =       0.541174946267
             le_variance =       0.292870322467


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689834531228e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+34, overlap shift 4.0000e+35 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+34 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+35, overlap shift 1.6000e+36 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+35, overlap shift 6.4000e+36 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923765990684       residual = 4.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.445066 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1152e+01
  </log>
  <optVariables href="H2O.s037.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -16.906
    reference variance = 0.170298
====================================================
  Execution time = 3.9671e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s037
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9904e-01
  Total weights = 2.0000e+06
  Execution time = 3.7140e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386678407
  error estimate for blocks of size 2^( 2) =       0.000403438480
  error estimate for blocks of size 2^( 3) =       0.000421205795
  error estimate for blocks of size 2^( 4) =       0.000436551197
  error estimate for blocks of size 2^( 5) =       0.000447715337
  error estimate for blocks of size 2^( 6) =       0.000454902142
  error estimate for blocks of size 2^( 7) =       0.000458390242

      target function =      -0.913875862930
              le_mean =     -16.898517513147
             les_mean =     285.858934374218
             stat err =       0.000449389730
             autocorr =       1.350661258441
   target nu stat err =       0.000449389730
   target dn stat err =       0.005467297617
      target stat err =       0.008629015889
              std dev =       0.546845848111
             le_variance =       0.299040381597

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386678407
  error estimate for blocks of size 2^( 2) =       0.000403438480
  error estimate for blocks of size 2^( 3) =       0.000421205795
  error estimate for blocks of size 2^( 4) =       0.000436551197
  error estimate for blocks of size 2^( 5) =       0.000447715337
  error estimate for blocks of size 2^( 6) =       0.000454902142
  error estimate for blocks of size 2^( 7) =       0.000458390242

      target function =      -0.913875862930
              le_mean =     -16.898517513147
             les_mean =     285.858934374218
             stat err =       0.000449389730
             autocorr =       1.350661258441
   target nu stat err =       0.000449389730
   target dn stat err =       0.005467297617
      target stat err =       0.008629015889
              std dev =       0.546845848111
             le_variance =       0.299040381597

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386678407
  error estimate for blocks of size 2^( 2) =       0.000403438480
  error estimate for blocks of size 2^( 3) =       0.000421205795
  error estimate for blocks of size 2^( 4) =       0.000436551197
  error estimate for blocks of size 2^( 5) =       0.000447715337
  error estimate for blocks of size 2^( 6) =       0.000454902142
  error estimate for blocks of size 2^( 7) =       0.000458390242

      target function =      -0.913875862930
              le_mean =     -16.898517513147
             les_mean =     285.858934374218
             stat err =       0.000449389730
             autocorr =       1.350661258441
   target nu stat err =       0.000449389730
   target dn stat err =       0.005467297617
      target stat err =       0.008629015889
              std dev =       0.546845848111
             le_variance =       0.299040381597

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299046681419
                                         uncertainty =       0.005593977714

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386678407
  error estimate for blocks of size 2^( 2) =       0.000403438480
  error estimate for blocks of size 2^( 3) =       0.000421205795
  error estimate for blocks of size 2^( 4) =       0.000436551197
  error estimate for blocks of size 2^( 5) =       0.000447715337
  error estimate for blocks of size 2^( 6) =       0.000454902142
  error estimate for blocks of size 2^( 7) =       0.000458390242

      target function =      -0.913875862930
              le_mean =     -16.898517513147
             les_mean =     285.858934374218
             stat err =       0.000449389730
             autocorr =       1.350661258441
   target nu stat err =       0.000449389730
   target dn stat err =       0.005467297617
      target stat err =       0.008629015889
              std dev =       0.546845848111
             le_variance =       0.299040381597


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913875862930        initial  <--
     4.0000e+34     4.0000e+35             0.0000e+00        -0.913875862930
     1.6000e+35     1.6000e+36             0.0000e+00        -0.913875862930
     6.4000e+35     6.4000e+36             0.0000e+00        -0.913875862930

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.4111
  </log>
  <optVariables href="H2O.s037.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0957e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s038 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s038 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=38  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -16.9637
    reference variance = 0.321353
====================================================
  Execution time = 4.0345e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s038
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9476e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0818e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294833108240
                                         uncertainty =       0.002683498815

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294833108240
                                         uncertainty =       0.002683498815

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383901492
  error estimate for blocks of size 2^( 2) =       0.000400897719
  error estimate for blocks of size 2^( 3) =       0.000418424773
  error estimate for blocks of size 2^( 4) =       0.000433713469
  error estimate for blocks of size 2^( 5) =       0.000445209896
  error estimate for blocks of size 2^( 6) =       0.000453246057
  error estimate for blocks of size 2^( 7) =       0.000457983236

      target function =      -0.920697987243
              le_mean =     -16.898884184795
             les_mean =     285.867047254664
             stat err =       0.000447538165
             autocorr =       1.359003431668
   target nu stat err =       0.000447538165
   target dn stat err =       0.002900363439
      target stat err =       0.004695033047
              std dev =       0.542918696439
             le_variance =       0.294760710943


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689888418479e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+35, overlap shift 4.0000e+36 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920720617271       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920720617271       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920720617271       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920720577240       residual = 1.29e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.920720617271       residual = 2.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.921875000000       residual = 9.50e+06           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+35 is 3.939605e-40

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+36, overlap shift 1.6000e+37 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920720617271       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920720617271       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920720617271       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920721054077       residual = 1.29e-02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+36 is 7.372526e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+36, overlap shift 6.4000e+37 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920720617271       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920720617271       residual = 9.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.920720617271       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.920721054077       residual = 1.29e-02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+36 is 1.843131e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.447642 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1174e+01
  </log>
  <optVariables href="H2O.s038.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -16.8748
    reference variance = 0.370039
====================================================
  Execution time = 4.1866e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s038
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0673e-01
  Total weights = 2.0000e+06
  Execution time = 3.7018e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391621560
  error estimate for blocks of size 2^( 2) =       0.000408172279
  error estimate for blocks of size 2^( 3) =       0.000424849384
  error estimate for blocks of size 2^( 4) =       0.000439577937
  error estimate for blocks of size 2^( 5) =       0.000450455059
  error estimate for blocks of size 2^( 6) =       0.000458381453
  error estimate for blocks of size 2^( 7) =       0.000460320299

      target function =      -0.901522551025
              le_mean =     -16.898460362070
             les_mean =     285.864697347246
             stat err =       0.000452183687
             autocorr =       1.333203962681
   target nu stat err =       0.000452183687
   target dn stat err =       0.013927064002
      target stat err =       0.021326242139
              std dev =       0.553836521150
             le_variance =       0.306734892160

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391621560
  error estimate for blocks of size 2^( 2) =       0.000408172279
  error estimate for blocks of size 2^( 3) =       0.000424849384
  error estimate for blocks of size 2^( 4) =       0.000439577937
  error estimate for blocks of size 2^( 5) =       0.000450455059
  error estimate for blocks of size 2^( 6) =       0.000458381453
  error estimate for blocks of size 2^( 7) =       0.000460320299

      target function =      -0.901522551025
              le_mean =     -16.898460362070
             les_mean =     285.864697347246
             stat err =       0.000452183687
             autocorr =       1.333203962681
   target nu stat err =       0.000452183687
   target dn stat err =       0.013927064002
      target stat err =       0.021326242139
              std dev =       0.553836521150
             le_variance =       0.306734892160

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391621560
  error estimate for blocks of size 2^( 2) =       0.000408172279
  error estimate for blocks of size 2^( 3) =       0.000424849384
  error estimate for blocks of size 2^( 4) =       0.000439577937
  error estimate for blocks of size 2^( 5) =       0.000450455059
  error estimate for blocks of size 2^( 6) =       0.000458381453
  error estimate for blocks of size 2^( 7) =       0.000460320299

      target function =      -0.901522551025
              le_mean =     -16.898460362070
             les_mean =     285.864697347246
             stat err =       0.000452183687
             autocorr =       1.333203962681
   target nu stat err =       0.000452183687
   target dn stat err =       0.013927064002
      target stat err =       0.021326242139
              std dev =       0.553836521150
             le_variance =       0.306734892160

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306785137922
                                         uncertainty =       0.013790075914

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391621560
  error estimate for blocks of size 2^( 2) =       0.000408172279
  error estimate for blocks of size 2^( 3) =       0.000424849384
  error estimate for blocks of size 2^( 4) =       0.000439577937
  error estimate for blocks of size 2^( 5) =       0.000450455059
  error estimate for blocks of size 2^( 6) =       0.000458381453
  error estimate for blocks of size 2^( 7) =       0.000460320299

      target function =      -0.901522551025
              le_mean =     -16.898460362070
             les_mean =     285.864697347246
             stat err =       0.000452183687
             autocorr =       1.333203962681
   target nu stat err =       0.000452183687
   target dn stat err =       0.013927064002
      target stat err =       0.021326242139
              std dev =       0.553836521150
             le_variance =       0.306734892160


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.901522551025        initial  <--
     4.0000e+35     4.0000e+36             3.9396e-40        -0.901522551025
     1.6000e+36     1.6000e+37             7.3725e-41        -0.901522551025
     6.4000e+36     6.4000e+37             1.8431e-41        -0.901522551025

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.5637
  </log>
  <optVariables href="H2O.s038.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1176e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s039 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s039 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=39  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -16.92
    reference variance = 0.232838
====================================================
  Execution time = 4.0259e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s039
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0397e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0809e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304042472014
                                         uncertainty =       0.011411687213

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304042472014
                                         uncertainty =       0.011411687213

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389851753
  error estimate for blocks of size 2^( 2) =       0.000406028488
  error estimate for blocks of size 2^( 3) =       0.000422553334
  error estimate for blocks of size 2^( 4) =       0.000436874600
  error estimate for blocks of size 2^( 5) =       0.000448374700
  error estimate for blocks of size 2^( 6) =       0.000454759033
  error estimate for blocks of size 2^( 7) =       0.000459809799

      target function =      -0.905952684804
              le_mean =     -16.897844370911
             les_mean =     285.841113009642
             stat err =       0.000449954533
             autocorr =       1.332104455379
   target nu stat err =       0.000449954533
   target dn stat err =       0.011804847505
      target stat err =       0.018234997001
              std dev =       0.551333635924
             le_variance =       0.303968778101


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689784437091e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+36, overlap shift 4.0000e+37 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906315493189       residual = 9.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906315493189       residual = 8.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.906315493189       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+36 is 8.948676e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+37, overlap shift 1.6000e+38 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906315493189       residual = 9.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906315493189       residual = 8.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.906315493189       residual = 1.71e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+37 is 2.237169e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+37, overlap shift 6.4000e+38 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906315493189       residual = 9.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906315493189       residual = 8.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.906318664551       residual = 9.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+37 is 3.328537e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.449530 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1077e+01
  </log>
  <optVariables href="H2O.s039.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -16.9512
    reference variance = 0.461485
====================================================
  Execution time = 3.9849e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s039
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9752e-01
  Total weights = 2.0000e+06
  Execution time = 3.7161e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385696944
  error estimate for blocks of size 2^( 2) =       0.000402376113
  error estimate for blocks of size 2^( 3) =       0.000419935759
  error estimate for blocks of size 2^( 4) =       0.000435274713
  error estimate for blocks of size 2^( 5) =       0.000447665678
  error estimate for blocks of size 2^( 6) =       0.000456829377
  error estimate for blocks of size 2^( 7) =       0.000459906384

      target function =      -0.916336350852
              le_mean =     -16.897822543807
             les_mean =     285.833930838597
             stat err =       0.000449919038
             autocorr =       1.360743738364
   target nu stat err =       0.000449919038
   target dn stat err =       0.003903054207
      target stat err =       0.006208714458
              std dev =       0.545457849318
             le_variance =       0.297524265383

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385696944
  error estimate for blocks of size 2^( 2) =       0.000402376113
  error estimate for blocks of size 2^( 3) =       0.000419935759
  error estimate for blocks of size 2^( 4) =       0.000435274713
  error estimate for blocks of size 2^( 5) =       0.000447665678
  error estimate for blocks of size 2^( 6) =       0.000456829377
  error estimate for blocks of size 2^( 7) =       0.000459906384

      target function =      -0.916336350852
              le_mean =     -16.897822543807
             les_mean =     285.833930838597
             stat err =       0.000449919038
             autocorr =       1.360743738364
   target nu stat err =       0.000449919038
   target dn stat err =       0.003903054207
      target stat err =       0.006208714458
              std dev =       0.545457849318
             le_variance =       0.297524265383

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385696944
  error estimate for blocks of size 2^( 2) =       0.000402376113
  error estimate for blocks of size 2^( 3) =       0.000419935759
  error estimate for blocks of size 2^( 4) =       0.000435274713
  error estimate for blocks of size 2^( 5) =       0.000447665678
  error estimate for blocks of size 2^( 6) =       0.000456829377
  error estimate for blocks of size 2^( 7) =       0.000459906384

      target function =      -0.916336350852
              le_mean =     -16.897822543807
             les_mean =     285.833930838597
             stat err =       0.000449919038
             autocorr =       1.360743738364
   target nu stat err =       0.000449919038
   target dn stat err =       0.003903054207
      target stat err =       0.006208714458
              std dev =       0.545457849318
             le_variance =       0.297524265383

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297474253173
                                         uncertainty =       0.004556662796

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385696944
  error estimate for blocks of size 2^( 2) =       0.000402376113
  error estimate for blocks of size 2^( 3) =       0.000419935759
  error estimate for blocks of size 2^( 4) =       0.000435274713
  error estimate for blocks of size 2^( 5) =       0.000447665678
  error estimate for blocks of size 2^( 6) =       0.000456829377
  error estimate for blocks of size 2^( 7) =       0.000459906384

      target function =      -0.916336350852
              le_mean =     -16.897822543807
             les_mean =     285.833930838597
             stat err =       0.000449919038
             autocorr =       1.360743738364
   target nu stat err =       0.000449919038
   target dn stat err =       0.003903054207
      target stat err =       0.006208714458
              std dev =       0.545457849318
             le_variance =       0.297524265383


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916336350852        initial  <--
     4.0000e+36     4.0000e+37             8.9487e-41        -0.916336350852
     1.6000e+37     1.6000e+38             2.2372e-41        -0.916336350852
     6.4000e+37     6.4000e+38             3.3285e-42        -0.916336350852

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5849
  </log>
  <optVariables href="H2O.s039.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0969e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s040 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s040 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=40  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -16.9429
    reference variance = 0.188829
====================================================
  Execution time = 4.1941e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s040
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8792e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0999e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287939085798
                                         uncertainty =       0.002169694007

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287939085798
                                         uncertainty =       0.002169694007

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379418431
  error estimate for blocks of size 2^( 2) =       0.000396582868
  error estimate for blocks of size 2^( 3) =       0.000414312698
  error estimate for blocks of size 2^( 4) =       0.000430280678
  error estimate for blocks of size 2^( 5) =       0.000442727239
  error estimate for blocks of size 2^( 6) =       0.000452261768
  error estimate for blocks of size 2^( 7) =       0.000455560330

      target function =      -0.931772277960
              le_mean =     -16.898554092598
             les_mean =     285.849046968534
             stat err =       0.000445207504
             autocorr =       1.376854672072
   target nu stat err =       0.000445207504
   target dn stat err =       0.002132996832
      target stat err =       0.003571933568
              std dev =       0.536578691384
             le_variance =       0.287916692048


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689855409260e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+37, overlap shift 4.0000e+38 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+38, overlap shift 1.6000e+39 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+38, overlap shift 6.4000e+39 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931784550889       residual = 6.03e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.451198 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2950e+01
  </log>
  <optVariables href="H2O.s040.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -16.8069
    reference variance = 0.219174
====================================================
  Execution time = 3.9526e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s040
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9195e-01
  Total weights = 2.0000e+06
  Execution time = 3.7178e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382068133
  error estimate for blocks of size 2^( 2) =       0.000398910237
  error estimate for blocks of size 2^( 3) =       0.000415540344
  error estimate for blocks of size 2^( 4) =       0.000430406343
  error estimate for blocks of size 2^( 5) =       0.000440263481
  error estimate for blocks of size 2^( 6) =       0.000446252997
  error estimate for blocks of size 2^( 7) =       0.000447277806

      target function =      -0.925195196585
              le_mean =     -16.898800107421
             les_mean =     285.861397041372
             stat err =       0.000441050157
             autocorr =       1.332583184212
   target nu stat err =       0.000441050157
   target dn stat err =       0.003509515785
      target stat err =       0.005708962211
              std dev =       0.540325935698
             le_variance =       0.291952116788

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382068133
  error estimate for blocks of size 2^( 2) =       0.000398910237
  error estimate for blocks of size 2^( 3) =       0.000415540344
  error estimate for blocks of size 2^( 4) =       0.000430406343
  error estimate for blocks of size 2^( 5) =       0.000440263481
  error estimate for blocks of size 2^( 6) =       0.000446252997
  error estimate for blocks of size 2^( 7) =       0.000447277806

      target function =      -0.925195196585
              le_mean =     -16.898800107421
             les_mean =     285.861397041372
             stat err =       0.000441050157
             autocorr =       1.332583184212
   target nu stat err =       0.000441050157
   target dn stat err =       0.003509515785
      target stat err =       0.005708962211
              std dev =       0.540325935698
             le_variance =       0.291952116788

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382068133
  error estimate for blocks of size 2^( 2) =       0.000398910237
  error estimate for blocks of size 2^( 3) =       0.000415540344
  error estimate for blocks of size 2^( 4) =       0.000430406343
  error estimate for blocks of size 2^( 5) =       0.000440263481
  error estimate for blocks of size 2^( 6) =       0.000446252997
  error estimate for blocks of size 2^( 7) =       0.000447277806

      target function =      -0.925195196585
              le_mean =     -16.898800107421
             les_mean =     285.861397041372
             stat err =       0.000441050157
             autocorr =       1.332583184212
   target nu stat err =       0.000441050157
   target dn stat err =       0.003509515785
      target stat err =       0.005708962211
              std dev =       0.540325935698
             le_variance =       0.291952116788

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291847605208
                                         uncertainty =       0.003562300630

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382068133
  error estimate for blocks of size 2^( 2) =       0.000398910237
  error estimate for blocks of size 2^( 3) =       0.000415540344
  error estimate for blocks of size 2^( 4) =       0.000430406343
  error estimate for blocks of size 2^( 5) =       0.000440263481
  error estimate for blocks of size 2^( 6) =       0.000446252997
  error estimate for blocks of size 2^( 7) =       0.000447277806

      target function =      -0.925195196585
              le_mean =     -16.898800107421
             les_mean =     285.861397041372
             stat err =       0.000441050157
             autocorr =       1.332583184212
   target nu stat err =       0.000441050157
   target dn stat err =       0.003509515785
      target stat err =       0.005708962211
              std dev =       0.540325935698
             le_variance =       0.291952116788


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925195196585        initial  <--
     4.0000e+37     4.0000e+38             0.0000e+00        -0.925195196585
     1.6000e+38     1.6000e+39             0.0000e+00        -0.925195196585
     6.4000e+38     6.4000e+39             0.0000e+00        -0.925195196585

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.2727
  </log>
  <optVariables href="H2O.s040.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1123e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s041 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s041 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=41  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -16.8899
    reference variance = 0.352366
====================================================
  Execution time = 4.0229e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s041
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9995e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0928e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299986447330
                                         uncertainty =       0.005850760923

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299986447330
                                         uncertainty =       0.005850760923

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387264982
  error estimate for blocks of size 2^( 2) =       0.000403922710
  error estimate for blocks of size 2^( 3) =       0.000420437926
  error estimate for blocks of size 2^( 4) =       0.000434978465
  error estimate for blocks of size 2^( 5) =       0.000445166492
  error estimate for blocks of size 2^( 6) =       0.000452179163
  error estimate for blocks of size 2^( 7) =       0.000454039416

      target function =      -0.912442202885
              le_mean =     -16.898397575789
             les_mean =     285.855788811319
             stat err =       0.000446590884
             autocorr =       1.329851819198
   target nu stat err =       0.000446590884
   target dn stat err =       0.005958951577
      target stat err =       0.009367295917
              std dev =       0.547675389134
             le_variance =       0.299948331863


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689839757579e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+38, overlap shift 4.0000e+39 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+39, overlap shift 1.6000e+40 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+39, overlap shift 6.4000e+40 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912537668436       residual = 1.43e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.452889 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1169e+01
  </log>
  <optVariables href="H2O.s041.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -16.9192
    reference variance = 0.210896
====================================================
  Execution time = 3.9775e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s041
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0146e-01
  Total weights = 2.0000e+06
  Execution time = 3.7076e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388238133
  error estimate for blocks of size 2^( 2) =       0.000404982173
  error estimate for blocks of size 2^( 3) =       0.000422441662
  error estimate for blocks of size 2^( 4) =       0.000437433421
  error estimate for blocks of size 2^( 5) =       0.000447980799
  error estimate for blocks of size 2^( 6) =       0.000456461562
  error estimate for blocks of size 2^( 7) =       0.000461106095

      target function =      -0.910109200012
              le_mean =     -16.898175656536
             les_mean =     285.849798064139
             stat err =       0.000450745469
             autocorr =       1.347926961218
   target nu stat err =       0.000450745469
   target dn stat err =       0.005584959291
      target stat err =       0.008735623726
              std dev =       0.549051633016
             le_variance =       0.301457695717

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388238133
  error estimate for blocks of size 2^( 2) =       0.000404982173
  error estimate for blocks of size 2^( 3) =       0.000422441662
  error estimate for blocks of size 2^( 4) =       0.000437433421
  error estimate for blocks of size 2^( 5) =       0.000447980799
  error estimate for blocks of size 2^( 6) =       0.000456461562
  error estimate for blocks of size 2^( 7) =       0.000461106095

      target function =      -0.910109200012
              le_mean =     -16.898175656536
             les_mean =     285.849798064139
             stat err =       0.000450745469
             autocorr =       1.347926961218
   target nu stat err =       0.000450745469
   target dn stat err =       0.005584959291
      target stat err =       0.008735623726
              std dev =       0.549051633016
             le_variance =       0.301457695717

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388238133
  error estimate for blocks of size 2^( 2) =       0.000404982173
  error estimate for blocks of size 2^( 3) =       0.000422441662
  error estimate for blocks of size 2^( 4) =       0.000437433421
  error estimate for blocks of size 2^( 5) =       0.000447980799
  error estimate for blocks of size 2^( 6) =       0.000456461562
  error estimate for blocks of size 2^( 7) =       0.000461106095

      target function =      -0.910109200012
              le_mean =     -16.898175656536
             les_mean =     285.849798064139
             stat err =       0.000450745469
             autocorr =       1.347926961218
   target nu stat err =       0.000450745469
   target dn stat err =       0.005584959291
      target stat err =       0.008735623726
              std dev =       0.549051633016
             le_variance =       0.301457695717

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301534407894
                                         uncertainty =       0.005286746083

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388238133
  error estimate for blocks of size 2^( 2) =       0.000404982173
  error estimate for blocks of size 2^( 3) =       0.000422441662
  error estimate for blocks of size 2^( 4) =       0.000437433421
  error estimate for blocks of size 2^( 5) =       0.000447980799
  error estimate for blocks of size 2^( 6) =       0.000456461562
  error estimate for blocks of size 2^( 7) =       0.000461106095

      target function =      -0.910109200012
              le_mean =     -16.898175656536
             les_mean =     285.849798064139
             stat err =       0.000450745469
             autocorr =       1.347926961218
   target nu stat err =       0.000450745469
   target dn stat err =       0.005584959291
      target stat err =       0.008735623726
              std dev =       0.549051633016
             le_variance =       0.301457695717


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910109200012        initial  <--
     4.0000e+38     4.0000e+39             0.0000e+00        -0.910109200012
     1.6000e+39     1.6000e+40             0.0000e+00        -0.910109200012
     6.4000e+39     6.4000e+40             0.0000e+00        -0.910109200012

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.4609
  </log>
  <optVariables href="H2O.s041.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0964e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s042 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s042 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=42  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -16.9552
    reference variance = 0.190156
====================================================
  Execution time = 4.0261e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s042
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0048e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1250e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300571062686
                                         uncertainty =       0.008286701156

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300571062686
                                         uncertainty =       0.008286701156

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387605727
  error estimate for blocks of size 2^( 2) =       0.000404042752
  error estimate for blocks of size 2^( 3) =       0.000420558877
  error estimate for blocks of size 2^( 4) =       0.000434920148
  error estimate for blocks of size 2^( 5) =       0.000445450978
  error estimate for blocks of size 2^( 6) =       0.000451610732
  error estimate for blocks of size 2^( 7) =       0.000454029480

      target function =      -0.911505603711
              le_mean =     -16.898634382844
             les_mean =     285.864320254740
             stat err =       0.000446502835
             autocorr =       1.326991279927
   target nu stat err =       0.000446502835
   target dn stat err =       0.008525745796
      target stat err =       0.013359195058
              std dev =       0.548157276653
             le_variance =       0.300476399947


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689863438284e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+39, overlap shift 4.0000e+40 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+40, overlap shift 1.6000e+41 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+40, overlap shift 6.4000e+41 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911698354945       residual = 5.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.454390 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1520e+01
  </log>
  <optVariables href="H2O.s042.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -16.8684
    reference variance = 0.243101
====================================================
  Execution time = 3.9541e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s042
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9145e-01
  Total weights = 2.0000e+06
  Execution time = 3.7208e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381741758
  error estimate for blocks of size 2^( 2) =       0.000398511582
  error estimate for blocks of size 2^( 3) =       0.000415061777
  error estimate for blocks of size 2^( 4) =       0.000430039422
  error estimate for blocks of size 2^( 5) =       0.000441265666
  error estimate for blocks of size 2^( 6) =       0.000446521802
  error estimate for blocks of size 2^( 7) =       0.000450514393

      target function =      -0.926026974983
              le_mean =     -16.898606314191
             les_mean =     285.854348755490
             stat err =       0.000442085321
             autocorr =       1.341136094941
   target nu stat err =       0.000442085321
   target dn stat err =       0.002136802775
      target stat err =       0.003534218473
              std dev =       0.539864371129
             le_variance =       0.291453539215

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381741758
  error estimate for blocks of size 2^( 2) =       0.000398511582
  error estimate for blocks of size 2^( 3) =       0.000415061777
  error estimate for blocks of size 2^( 4) =       0.000430039422
  error estimate for blocks of size 2^( 5) =       0.000441265666
  error estimate for blocks of size 2^( 6) =       0.000446521802
  error estimate for blocks of size 2^( 7) =       0.000450514393

      target function =      -0.926026974983
              le_mean =     -16.898606314191
             les_mean =     285.854348755490
             stat err =       0.000442085321
             autocorr =       1.341136094941
   target nu stat err =       0.000442085321
   target dn stat err =       0.002136802775
      target stat err =       0.003534218473
              std dev =       0.539864371129
             le_variance =       0.291453539215

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381741758
  error estimate for blocks of size 2^( 2) =       0.000398511582
  error estimate for blocks of size 2^( 3) =       0.000415061777
  error estimate for blocks of size 2^( 4) =       0.000430039422
  error estimate for blocks of size 2^( 5) =       0.000441265666
  error estimate for blocks of size 2^( 6) =       0.000446521802
  error estimate for blocks of size 2^( 7) =       0.000450514393

      target function =      -0.926026974983
              le_mean =     -16.898606314191
             les_mean =     285.854348755490
             stat err =       0.000442085321
             autocorr =       1.341136094941
   target nu stat err =       0.000442085321
   target dn stat err =       0.002136802775
      target stat err =       0.003534218473
              std dev =       0.539864371129
             le_variance =       0.291453539215

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291462603898
                                         uncertainty =       0.001976032747

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381741758
  error estimate for blocks of size 2^( 2) =       0.000398511582
  error estimate for blocks of size 2^( 3) =       0.000415061777
  error estimate for blocks of size 2^( 4) =       0.000430039422
  error estimate for blocks of size 2^( 5) =       0.000441265666
  error estimate for blocks of size 2^( 6) =       0.000446521802
  error estimate for blocks of size 2^( 7) =       0.000450514393

      target function =      -0.926026974983
              le_mean =     -16.898606314191
             les_mean =     285.854348755490
             stat err =       0.000442085321
             autocorr =       1.341136094941
   target nu stat err =       0.000442085321
   target dn stat err =       0.002136802775
      target stat err =       0.003534218473
              std dev =       0.539864371129
             le_variance =       0.291453539215


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926026974983        initial  <--
     4.0000e+39     4.0000e+40             0.0000e+00        -0.926026974983
     1.6000e+40     1.6000e+41             0.0000e+00        -0.926026974983
     6.4000e+40     6.4000e+41             0.0000e+00        -0.926026974983

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.8506
  </log>
  <optVariables href="H2O.s042.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1038e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s043 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s043 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=43  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -16.903
    reference variance = 0.337673
====================================================
  Execution time = 4.0134e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s043
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9458e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1143e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294592211087
                                         uncertainty =       0.002918968724

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294592211087
                                         uncertainty =       0.002918968724

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383786252
  error estimate for blocks of size 2^( 2) =       0.000400627944
  error estimate for blocks of size 2^( 3) =       0.000417441818
  error estimate for blocks of size 2^( 4) =       0.000432063289
  error estimate for blocks of size 2^( 5) =       0.000442261243
  error estimate for blocks of size 2^( 6) =       0.000450411815
  error estimate for blocks of size 2^( 7) =       0.000454131587

      target function =      -0.920990012735
              le_mean =     -16.898610757499
             les_mean =     285.857629160316
             stat err =       0.000444716983
             autocorr =       1.342729727055
   target nu stat err =       0.000444716983
   target dn stat err =       0.002980104830
      target stat err =       0.004820391504
              std dev =       0.542755722358
             le_variance =       0.294583774153


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689861075750e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+40, overlap shift 4.0000e+41 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921013473637       residual = 9.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921013473637       residual = 8.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921013473637       residual = 7.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.921013473637       residual = 3.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.921013473637       residual = 3.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.921013448570       residual = 2.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+40 is 7.457256e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+41, overlap shift 1.6000e+42 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921013473637       residual = 9.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921013473637       residual = 8.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921013473637       residual = 7.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.921013473637       residual = 3.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+41 is 7.843822e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+41, overlap shift 6.4000e+42 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921013473637       residual = 9.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921013473637       residual = 8.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921013473637       residual = 7.86e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.921013473637       residual = 3.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.921013473636       residual = 3.08e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -1.000000000000       residual = 1.08e+05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =       0.000000000000       residual = 1.43e+11           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+41 is 2.763368e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.457754 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1288e+01
  </log>
  <optVariables href="H2O.s043.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -16.952
    reference variance = 0.231606
====================================================
  Execution time = 3.9581e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s043
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9487e-01
  Total weights = 2.0000e+06
  Execution time = 3.7217e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383973744
  error estimate for blocks of size 2^( 2) =       0.000400652289
  error estimate for blocks of size 2^( 3) =       0.000417736933
  error estimate for blocks of size 2^( 4) =       0.000432438363
  error estimate for blocks of size 2^( 5) =       0.000444870936
  error estimate for blocks of size 2^( 6) =       0.000451572300
  error estimate for blocks of size 2^( 7) =       0.000454550949

      target function =      -0.920511848601
              le_mean =     -16.898792683356
             les_mean =     285.864065679108
             stat err =       0.000445858137
             autocorr =       1.348311809446
   target nu stat err =       0.000445858137
   target dn stat err =       0.003589425300
      target stat err =       0.005779229310
              std dev =       0.543020875758
             le_variance =       0.294871671509

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383973744
  error estimate for blocks of size 2^( 2) =       0.000400652289
  error estimate for blocks of size 2^( 3) =       0.000417736933
  error estimate for blocks of size 2^( 4) =       0.000432438363
  error estimate for blocks of size 2^( 5) =       0.000444870936
  error estimate for blocks of size 2^( 6) =       0.000451572300
  error estimate for blocks of size 2^( 7) =       0.000454550949

      target function =      -0.920511848601
              le_mean =     -16.898792683356
             les_mean =     285.864065679108
             stat err =       0.000445858137
             autocorr =       1.348311809446
   target nu stat err =       0.000445858137
   target dn stat err =       0.003589425300
      target stat err =       0.005779229310
              std dev =       0.543020875758
             le_variance =       0.294871671509

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383973744
  error estimate for blocks of size 2^( 2) =       0.000400652289
  error estimate for blocks of size 2^( 3) =       0.000417736933
  error estimate for blocks of size 2^( 4) =       0.000432438363
  error estimate for blocks of size 2^( 5) =       0.000444870936
  error estimate for blocks of size 2^( 6) =       0.000451572300
  error estimate for blocks of size 2^( 7) =       0.000454550949

      target function =      -0.920511848601
              le_mean =     -16.898792683356
             les_mean =     285.864065679108
             stat err =       0.000445858137
             autocorr =       1.348311809446
   target nu stat err =       0.000445858137
   target dn stat err =       0.003589425300
      target stat err =       0.005779229310
              std dev =       0.543020875758
             le_variance =       0.294871671509

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294848473200
                                         uncertainty =       0.003631014432

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383973744
  error estimate for blocks of size 2^( 2) =       0.000400652289
  error estimate for blocks of size 2^( 3) =       0.000417736933
  error estimate for blocks of size 2^( 4) =       0.000432438363
  error estimate for blocks of size 2^( 5) =       0.000444870936
  error estimate for blocks of size 2^( 6) =       0.000451572300
  error estimate for blocks of size 2^( 7) =       0.000454550949

      target function =      -0.920511848601
              le_mean =     -16.898792683356
             les_mean =     285.864065679108
             stat err =       0.000445858137
             autocorr =       1.348311809446
   target nu stat err =       0.000445858137
   target dn stat err =       0.003589425300
      target stat err =       0.005779229310
              std dev =       0.543020875758
             le_variance =       0.294871671509


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.920511848601        initial  <--
     4.0000e+40     4.0000e+41             7.4573e-45        -0.920511848601
     1.6000e+41     1.6000e+42             7.8438e-46        -0.920511848601
     6.4000e+41     6.4000e+42             2.7634e-46        -0.920511848601

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3759
  </log>
  <optVariables href="H2O.s043.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0967e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s044 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s044 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=44  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -16.9736
    reference variance = 0.210454
====================================================
  Execution time = 4.2202e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s044
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9725e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0974e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297293194926
                                         uncertainty =       0.007113433799

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297293194926
                                         uncertainty =       0.007113433799

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385516271
  error estimate for blocks of size 2^( 2) =       0.000402262553
  error estimate for blocks of size 2^( 3) =       0.000419309678
  error estimate for blocks of size 2^( 4) =       0.000434231636
  error estimate for blocks of size 2^( 5) =       0.000445139435
  error estimate for blocks of size 2^( 6) =       0.000451804284
  error estimate for blocks of size 2^( 7) =       0.000456150439

      target function =      -0.916655253007
              le_mean =     -16.898237909642
             les_mean =     285.847689892818
             stat err =       0.000446831448
             autocorr =       1.343389772268
   target nu stat err =       0.000446831448
   target dn stat err =       0.007256514968
      target stat err =       0.011496979712
              std dev =       0.545202339105
             le_variance =       0.297245590565


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689823790964e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+41, overlap shift 4.0000e+42 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916799213616       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916799213616       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916799545288       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+41 is 2.234759e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+42, overlap shift 1.6000e+43 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916799213616       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916799213616       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916015625000       residual = 8.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+42 is 5.586897e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+42, overlap shift 6.4000e+43 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.916799213616       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.916799213616       residual = 2.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.916801452637       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+42 is 1.396724e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.459933 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3187e+01
  </log>
  <optVariables href="H2O.s044.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -16.8536
    reference variance = 0.295468
====================================================
  Execution time = 3.9828e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s044
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8929e-01
  Total weights = 2.0000e+06
  Execution time = 3.6998e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380323117
  error estimate for blocks of size 2^( 2) =       0.000397142806
  error estimate for blocks of size 2^( 3) =       0.000414131507
  error estimate for blocks of size 2^( 4) =       0.000429298411
  error estimate for blocks of size 2^( 5) =       0.000441221673
  error estimate for blocks of size 2^( 6) =       0.000449329728
  error estimate for blocks of size 2^( 7) =       0.000451817850

      target function =      -0.929534564734
              le_mean =     -16.898370823017
             les_mean =     285.844227673917
             stat err =       0.000442916915
             autocorr =       1.356247923452
   target nu stat err =       0.000442916915
   target dn stat err =       0.002196408532
      target stat err =       0.003653786528
              std dev =       0.537858109882
             le_variance =       0.289291346366

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380323117
  error estimate for blocks of size 2^( 2) =       0.000397142806
  error estimate for blocks of size 2^( 3) =       0.000414131507
  error estimate for blocks of size 2^( 4) =       0.000429298411
  error estimate for blocks of size 2^( 5) =       0.000441221673
  error estimate for blocks of size 2^( 6) =       0.000449329728
  error estimate for blocks of size 2^( 7) =       0.000451817850

      target function =      -0.929534564734
              le_mean =     -16.898370823017
             les_mean =     285.844227673917
             stat err =       0.000442916915
             autocorr =       1.356247923452
   target nu stat err =       0.000442916915
   target dn stat err =       0.002196408532
      target stat err =       0.003653786528
              std dev =       0.537858109882
             le_variance =       0.289291346366

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380323117
  error estimate for blocks of size 2^( 2) =       0.000397142806
  error estimate for blocks of size 2^( 3) =       0.000414131507
  error estimate for blocks of size 2^( 4) =       0.000429298411
  error estimate for blocks of size 2^( 5) =       0.000441221673
  error estimate for blocks of size 2^( 6) =       0.000449329728
  error estimate for blocks of size 2^( 7) =       0.000451817850

      target function =      -0.929534564734
              le_mean =     -16.898370823017
             les_mean =     285.844227673917
             stat err =       0.000442916915
             autocorr =       1.356247923452
   target nu stat err =       0.000442916915
   target dn stat err =       0.002196408532
      target stat err =       0.003653786528
              std dev =       0.537858109882
             le_variance =       0.289291346366

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289223334416
                                         uncertainty =       0.002132933505

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380323117
  error estimate for blocks of size 2^( 2) =       0.000397142806
  error estimate for blocks of size 2^( 3) =       0.000414131507
  error estimate for blocks of size 2^( 4) =       0.000429298411
  error estimate for blocks of size 2^( 5) =       0.000441221673
  error estimate for blocks of size 2^( 6) =       0.000449329728
  error estimate for blocks of size 2^( 7) =       0.000451817850

      target function =      -0.929534564734
              le_mean =     -16.898370823017
             les_mean =     285.844227673917
             stat err =       0.000442916915
             autocorr =       1.356247923452
   target nu stat err =       0.000442916915
   target dn stat err =       0.002196408532
      target stat err =       0.003653786528
              std dev =       0.537858109882
             le_variance =       0.289291346366


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.929534564734        initial  <--
     4.0000e+41     4.0000e+42             2.2348e-46        -0.929534564734
     1.6000e+42     1.6000e+43             5.5869e-47        -0.929534564734
     6.4000e+42     6.4000e+43             1.3967e-47        -0.929534564734

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.5126
  </log>
  <optVariables href="H2O.s044.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1171e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s045 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s045 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=45  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -16.9478
    reference variance = 0.185903
====================================================
  Execution time = 4.0137e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s045
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0405e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1367e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304050756403
                                         uncertainty =       0.009985852592

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304050756403
                                         uncertainty =       0.009985852592

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389901953
  error estimate for blocks of size 2^( 2) =       0.000406637550
  error estimate for blocks of size 2^( 3) =       0.000423371040
  error estimate for blocks of size 2^( 4) =       0.000437945678
  error estimate for blocks of size 2^( 5) =       0.000449043605
  error estimate for blocks of size 2^( 6) =       0.000456788177
  error estimate for blocks of size 2^( 7) =       0.000461736817

      target function =      -0.905880092582
              le_mean =     -16.898406035891
             les_mean =     285.860173468134
             stat err =       0.000451378569
             autocorr =       1.340204431290
   target nu stat err =       0.000451378569
   target dn stat err =       0.010289198111
      target stat err =       0.015911122497
              std dev =       0.551404630304
             le_variance =       0.304047066320


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689840603589e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+42, overlap shift 4.0000e+43 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+43, overlap shift 1.6000e+44 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+43, overlap shift 6.4000e+44 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906159879851       residual = 1.08e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.461622 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1513e+01
  </log>
  <optVariables href="H2O.s045.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -16.8871
    reference variance = 0.231875
====================================================
  Execution time = 4.1157e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s045
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9274e-01
  Total weights = 2.0000e+06
  Execution time = 3.7050e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382581804
  error estimate for blocks of size 2^( 2) =       0.000399265745
  error estimate for blocks of size 2^( 3) =       0.000416281446
  error estimate for blocks of size 2^( 4) =       0.000431733475
  error estimate for blocks of size 2^( 5) =       0.000442945146
  error estimate for blocks of size 2^( 6) =       0.000450724404
  error estimate for blocks of size 2^( 7) =       0.000454088896

      target function =      -0.923953140594
              le_mean =     -16.898635709326
             les_mean =     285.856626363335
             stat err =       0.000444872980
             autocorr =       1.352145534184
   target nu stat err =       0.000444872980
   target dn stat err =       0.002521610196
      target stat err =       0.004125578304
              std dev =       0.541052375653
             le_variance =       0.292737673200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382581804
  error estimate for blocks of size 2^( 2) =       0.000399265745
  error estimate for blocks of size 2^( 3) =       0.000416281446
  error estimate for blocks of size 2^( 4) =       0.000431733475
  error estimate for blocks of size 2^( 5) =       0.000442945146
  error estimate for blocks of size 2^( 6) =       0.000450724404
  error estimate for blocks of size 2^( 7) =       0.000454088896

      target function =      -0.923953140594
              le_mean =     -16.898635709326
             les_mean =     285.856626363335
             stat err =       0.000444872980
             autocorr =       1.352145534184
   target nu stat err =       0.000444872980
   target dn stat err =       0.002521610196
      target stat err =       0.004125578304
              std dev =       0.541052375653
             le_variance =       0.292737673200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382581804
  error estimate for blocks of size 2^( 2) =       0.000399265745
  error estimate for blocks of size 2^( 3) =       0.000416281446
  error estimate for blocks of size 2^( 4) =       0.000431733475
  error estimate for blocks of size 2^( 5) =       0.000442945146
  error estimate for blocks of size 2^( 6) =       0.000450724404
  error estimate for blocks of size 2^( 7) =       0.000454088896

      target function =      -0.923953140594
              le_mean =     -16.898635709326
             les_mean =     285.856626363335
             stat err =       0.000444872980
             autocorr =       1.352145534184
   target nu stat err =       0.000444872980
   target dn stat err =       0.002521610196
      target stat err =       0.004125578304
              std dev =       0.541052375653
             le_variance =       0.292737673200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292673730233
                                         uncertainty =       0.002565570302

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382581804
  error estimate for blocks of size 2^( 2) =       0.000399265745
  error estimate for blocks of size 2^( 3) =       0.000416281446
  error estimate for blocks of size 2^( 4) =       0.000431733475
  error estimate for blocks of size 2^( 5) =       0.000442945146
  error estimate for blocks of size 2^( 6) =       0.000450724404
  error estimate for blocks of size 2^( 7) =       0.000454088896

      target function =      -0.923953140594
              le_mean =     -16.898635709326
             les_mean =     285.856626363335
             stat err =       0.000444872980
             autocorr =       1.352145534184
   target nu stat err =       0.000444872980
   target dn stat err =       0.002521610196
      target stat err =       0.004125578304
              std dev =       0.541052375653
             le_variance =       0.292737673200


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923953140594        initial  <--
     4.0000e+42     4.0000e+43             0.0000e+00        -0.923953140594
     1.6000e+43     1.6000e+44             0.0000e+00        -0.923953140594
     6.4000e+43     6.4000e+44             0.0000e+00        -0.923953140594

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 59.8319
  </log>
  <optVariables href="H2O.s045.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1135e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s046 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s046 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=46  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -16.8798
    reference variance = 0.23299
====================================================
  Execution time = 4.0619e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s046
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 6.8675e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0888e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.687443472199
                                         uncertainty =       0.371493350665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.687443472199
                                         uncertainty =       0.371493350665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000585983678
  error estimate for blocks of size 2^( 2) =       0.000597086955
  error estimate for blocks of size 2^( 3) =       0.000608979597
  error estimate for blocks of size 2^( 4) =       0.000619421133
  error estimate for blocks of size 2^( 5) =       0.000627501605
  error estimate for blocks of size 2^( 6) =       0.000633680373
  error estimate for blocks of size 2^( 7) =       0.000634064656

      target function =      -0.477218762558
              le_mean =     -16.899198643663
             les_mean =     286.269668196209
             stat err =       0.000628666942
             autocorr =       1.150986445181
   target nu stat err =       0.000628666942
   target dn stat err =       0.372714390010
      target stat err =       0.183679969910
              std dev =       0.828706064661
             le_variance =       0.686753741606


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689919864366e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+43, overlap shift 4.0000e+44 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.548002422687       residual = 8.11e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.548002422687       residual = 2.83e-01           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.548002422687       residual = 6.82e-02           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.548002422687       residual = 5.46e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -1.000000000000       residual = 8.17e+03           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+43 is 6.543265e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+44, overlap shift 1.6000e+45 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.548002422687       residual = 8.11e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.548002422687       residual = 2.83e-01           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+44 is 1.462114e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+44, overlap shift 6.4000e+45 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.548002422687       residual = 8.11e-01           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.548002422687       residual = 2.83e-01           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.562500000000       residual = 8.78e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 1.74e+04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 2.55e+03           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+44 is 3.655284e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.463942 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1518e+01
  </log>
  <optVariables href="H2O.s046.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -16.9337
    reference variance = 0.159514
====================================================
  Execution time = 4.0022e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s046
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9201e-01
  Total weights = 2.0000e+06
  Execution time = 3.7059e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382103178
  error estimate for blocks of size 2^( 2) =       0.000398980703
  error estimate for blocks of size 2^( 3) =       0.000416420904
  error estimate for blocks of size 2^( 4) =       0.000431571712
  error estimate for blocks of size 2^( 5) =       0.000443598307
  error estimate for blocks of size 2^( 6) =       0.000451626720
  error estimate for blocks of size 2^( 7) =       0.000455443532

      target function =      -0.925110373318
              le_mean =     -16.898679277393
             les_mean =     285.857366851502
             stat err =       0.000445560068
             autocorr =       1.359725440285
   target nu stat err =       0.000445560068
   target dn stat err =       0.003646534834
      target stat err =       0.005926499996
              std dev =       0.540375496594
             le_variance =       0.292005677319

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382103178
  error estimate for blocks of size 2^( 2) =       0.000398980703
  error estimate for blocks of size 2^( 3) =       0.000416420904
  error estimate for blocks of size 2^( 4) =       0.000431571712
  error estimate for blocks of size 2^( 5) =       0.000443598307
  error estimate for blocks of size 2^( 6) =       0.000451626720
  error estimate for blocks of size 2^( 7) =       0.000455443532

      target function =      -0.925110373318
              le_mean =     -16.898679277393
             les_mean =     285.857366851502
             stat err =       0.000445560068
             autocorr =       1.359725440285
   target nu stat err =       0.000445560068
   target dn stat err =       0.003646534834
      target stat err =       0.005926499996
              std dev =       0.540375496594
             le_variance =       0.292005677319

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382103178
  error estimate for blocks of size 2^( 2) =       0.000398980703
  error estimate for blocks of size 2^( 3) =       0.000416420904
  error estimate for blocks of size 2^( 4) =       0.000431571712
  error estimate for blocks of size 2^( 5) =       0.000443598307
  error estimate for blocks of size 2^( 6) =       0.000451626720
  error estimate for blocks of size 2^( 7) =       0.000455443532

      target function =      -0.925110373318
              le_mean =     -16.898679277393
             les_mean =     285.857366851502
             stat err =       0.000445560068
             autocorr =       1.359725440285
   target nu stat err =       0.000445560068
   target dn stat err =       0.003646534834
      target stat err =       0.005926499996
              std dev =       0.540375496594
             le_variance =       0.292005677319

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292014376026
                                         uncertainty =       0.003404475639

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382103178
  error estimate for blocks of size 2^( 2) =       0.000398980703
  error estimate for blocks of size 2^( 3) =       0.000416420904
  error estimate for blocks of size 2^( 4) =       0.000431571712
  error estimate for blocks of size 2^( 5) =       0.000443598307
  error estimate for blocks of size 2^( 6) =       0.000451626720
  error estimate for blocks of size 2^( 7) =       0.000455443532

      target function =      -0.925110373318
              le_mean =     -16.898679277393
             les_mean =     285.857366851502
             stat err =       0.000445560068
             autocorr =       1.359725440285
   target nu stat err =       0.000445560068
   target dn stat err =       0.003646534834
      target stat err =       0.005926499996
              std dev =       0.540375496594
             le_variance =       0.292005677319


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925110373318        initial  <--
     4.0000e+43     4.0000e+44             6.5433e-47        -0.925110373318
     1.6000e+44     1.6000e+45             1.4621e-47        -0.925110373318
     6.4000e+44     6.4000e+45             3.6553e-48        -0.925110373318

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.7048
  </log>
  <optVariables href="H2O.s046.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1023e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s047 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s047 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=47  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -16.8913
    reference variance = 0.216097
====================================================
  Execution time = 4.0265e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s047
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8677e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0882e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.286675144113
                                         uncertainty =       0.001872187514

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.286675144113
                                         uncertainty =       0.001872187514

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000378663531
  error estimate for blocks of size 2^( 2) =       0.000395180324
  error estimate for blocks of size 2^( 3) =       0.000411954130
  error estimate for blocks of size 2^( 4) =       0.000427021995
  error estimate for blocks of size 2^( 5) =       0.000438793634
  error estimate for blocks of size 2^( 6) =       0.000446269206
  error estimate for blocks of size 2^( 7) =       0.000448976341

      target function =      -0.933652252225
              le_mean =     -16.898335255763
             les_mean =     285.840506411699
             stat err =       0.000440265294
             autocorr =       1.351829575565
   target nu stat err =       0.000440265294
   target dn stat err =       0.001884966229
      target stat err =       0.003186668043
              std dev =       0.535511100647
             le_variance =       0.286772138916


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689833525576e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+44, overlap shift 4.0000e+45 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+45, overlap shift 1.6000e+46 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+45, overlap shift 6.4000e+46 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.933661616695       residual = 5.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.465511 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1156e+01
  </log>
  <optVariables href="H2O.s047.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -16.9597
    reference variance = 0.316258
====================================================
  Execution time = 3.9634e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s047
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9400e-01
  Total weights = 2.0000e+06
  Execution time = 3.7062e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383402697
  error estimate for blocks of size 2^( 2) =       0.000399882643
  error estimate for blocks of size 2^( 3) =       0.000416788209
  error estimate for blocks of size 2^( 4) =       0.000430640006
  error estimate for blocks of size 2^( 5) =       0.000441032470
  error estimate for blocks of size 2^( 6) =       0.000447976839
  error estimate for blocks of size 2^( 7) =       0.000452113247

      target function =      -0.921903573183
              le_mean =     -16.899302757482
             les_mean =     285.880428798662
             stat err =       0.000442940640
             autocorr =       1.334690995318
   target nu stat err =       0.000442940640
   target dn stat err =       0.003041613753
      target stat err =       0.004932956802
              std dev =       0.542213294403
             le_variance =       0.293995256627

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383402697
  error estimate for blocks of size 2^( 2) =       0.000399882643
  error estimate for blocks of size 2^( 3) =       0.000416788209
  error estimate for blocks of size 2^( 4) =       0.000430640006
  error estimate for blocks of size 2^( 5) =       0.000441032470
  error estimate for blocks of size 2^( 6) =       0.000447976839
  error estimate for blocks of size 2^( 7) =       0.000452113247

      target function =      -0.921903573183
              le_mean =     -16.899302757482
             les_mean =     285.880428798662
             stat err =       0.000442940640
             autocorr =       1.334690995318
   target nu stat err =       0.000442940640
   target dn stat err =       0.003041613753
      target stat err =       0.004932956802
              std dev =       0.542213294403
             le_variance =       0.293995256627

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383402697
  error estimate for blocks of size 2^( 2) =       0.000399882643
  error estimate for blocks of size 2^( 3) =       0.000416788209
  error estimate for blocks of size 2^( 4) =       0.000430640006
  error estimate for blocks of size 2^( 5) =       0.000441032470
  error estimate for blocks of size 2^( 6) =       0.000447976839
  error estimate for blocks of size 2^( 7) =       0.000452113247

      target function =      -0.921903573183
              le_mean =     -16.899302757482
             les_mean =     285.880428798662
             stat err =       0.000442940640
             autocorr =       1.334690995318
   target nu stat err =       0.000442940640
   target dn stat err =       0.003041613753
      target stat err =       0.004932956802
              std dev =       0.542213294403
             le_variance =       0.293995256627

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294033118282
                                         uncertainty =       0.003017113676

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383402697
  error estimate for blocks of size 2^( 2) =       0.000399882643
  error estimate for blocks of size 2^( 3) =       0.000416788209
  error estimate for blocks of size 2^( 4) =       0.000430640006
  error estimate for blocks of size 2^( 5) =       0.000441032470
  error estimate for blocks of size 2^( 6) =       0.000447976839
  error estimate for blocks of size 2^( 7) =       0.000452113247

      target function =      -0.921903573183
              le_mean =     -16.899302757482
             les_mean =     285.880428798662
             stat err =       0.000442940640
             autocorr =       1.334690995318
   target nu stat err =       0.000442940640
   target dn stat err =       0.003041613753
      target stat err =       0.004932956802
              std dev =       0.542213294403
             le_variance =       0.293995256627


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.921903573183        initial  <--
     4.0000e+44     4.0000e+45             0.0000e+00        -0.921903573183
     1.6000e+45     1.6000e+46             0.0000e+00        -0.921903573183
     6.4000e+45     6.4000e+46             0.0000e+00        -0.921903573183

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3044
  </log>
  <optVariables href="H2O.s047.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0947e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s048 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s048 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=48  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -16.8417
    reference variance = 0.553507
====================================================
  Execution time = 4.2289e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s048
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9562e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0885e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295623594214
                                         uncertainty =       0.002756565480

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295623594214
                                         uncertainty =       0.002756565480

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384461948
  error estimate for blocks of size 2^( 2) =       0.000401247602
  error estimate for blocks of size 2^( 3) =       0.000418469731
  error estimate for blocks of size 2^( 4) =       0.000434162611
  error estimate for blocks of size 2^( 5) =       0.000445899135
  error estimate for blocks of size 2^( 6) =       0.000451817878
  error estimate for blocks of size 2^( 7) =       0.000459546681

      target function =      -0.919344355451
              le_mean =     -16.898297700536
             les_mean =     285.848087006887
             stat err =       0.000447856576
             autocorr =       1.356972941012
   target nu stat err =       0.000447856576
   target dn stat err =       0.003161059899
      target stat err =       0.005085635719
              std dev =       0.543711300930
             le_variance =       0.295621978759


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689829770054e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+45, overlap shift 4.0000e+46 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+46, overlap shift 1.6000e+47 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+46, overlap shift 6.4000e+47 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919371106030       residual = 6.78e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.467253 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.3184e+01
  </log>
  <optVariables href="H2O.s048.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -16.8451
    reference variance = 0.208241
====================================================
  Execution time = 4.0063e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s048
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9138e-01
  Total weights = 2.0000e+06
  Execution time = 3.7247e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381691429
  error estimate for blocks of size 2^( 2) =       0.000398485253
  error estimate for blocks of size 2^( 3) =       0.000415180268
  error estimate for blocks of size 2^( 4) =       0.000430955274
  error estimate for blocks of size 2^( 5) =       0.000441496045
  error estimate for blocks of size 2^( 6) =       0.000447602207
  error estimate for blocks of size 2^( 7) =       0.000451505361

      target function =      -0.926149435657
              le_mean =     -16.898652966255
             les_mean =     285.855848622564
             stat err =       0.000442889722
             autocorr =       1.346376080491
   target nu stat err =       0.000442889722
   target dn stat err =       0.002168148124
      target stat err =       0.003585158795
              std dev =       0.539793195897
             le_variance =       0.291376694336

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381691429
  error estimate for blocks of size 2^( 2) =       0.000398485253
  error estimate for blocks of size 2^( 3) =       0.000415180268
  error estimate for blocks of size 2^( 4) =       0.000430955274
  error estimate for blocks of size 2^( 5) =       0.000441496045
  error estimate for blocks of size 2^( 6) =       0.000447602207
  error estimate for blocks of size 2^( 7) =       0.000451505361

      target function =      -0.926149435657
              le_mean =     -16.898652966255
             les_mean =     285.855848622564
             stat err =       0.000442889722
             autocorr =       1.346376080491
   target nu stat err =       0.000442889722
   target dn stat err =       0.002168148124
      target stat err =       0.003585158795
              std dev =       0.539793195897
             le_variance =       0.291376694336

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381691429
  error estimate for blocks of size 2^( 2) =       0.000398485253
  error estimate for blocks of size 2^( 3) =       0.000415180268
  error estimate for blocks of size 2^( 4) =       0.000430955274
  error estimate for blocks of size 2^( 5) =       0.000441496045
  error estimate for blocks of size 2^( 6) =       0.000447602207
  error estimate for blocks of size 2^( 7) =       0.000451505361

      target function =      -0.926149435657
              le_mean =     -16.898652966255
             les_mean =     285.855848622564
             stat err =       0.000442889722
             autocorr =       1.346376080491
   target nu stat err =       0.000442889722
   target dn stat err =       0.002168148124
      target stat err =       0.003585158795
              std dev =       0.539793195897
             le_variance =       0.291376694336

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291415353481
                                         uncertainty =       0.001876536174

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381691429
  error estimate for blocks of size 2^( 2) =       0.000398485253
  error estimate for blocks of size 2^( 3) =       0.000415180268
  error estimate for blocks of size 2^( 4) =       0.000430955274
  error estimate for blocks of size 2^( 5) =       0.000441496045
  error estimate for blocks of size 2^( 6) =       0.000447602207
  error estimate for blocks of size 2^( 7) =       0.000451505361

      target function =      -0.926149435657
              le_mean =     -16.898652966255
             les_mean =     285.855848622564
             stat err =       0.000442889722
             autocorr =       1.346376080491
   target nu stat err =       0.000442889722
   target dn stat err =       0.002168148124
      target stat err =       0.003585158795
              std dev =       0.539793195897
             le_variance =       0.291376694336


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926149435657        initial  <--
     4.0000e+45     4.0000e+46             0.0000e+00        -0.926149435657
     1.6000e+46     1.6000e+47             0.0000e+00        -0.926149435657
     6.4000e+46     6.4000e+47             0.0000e+00        -0.926149435657

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.8418
  </log>
  <optVariables href="H2O.s048.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1204e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s049 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s049 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=49  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6907e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -17.0025
    reference variance = 0.223735
====================================================
  Execution time = 4.0171e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s049
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9139e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0813e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291460976005
                                         uncertainty =       0.002942915712

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291460976005
                                         uncertainty =       0.002942915712

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381700124
  error estimate for blocks of size 2^( 2) =       0.000398860255
  error estimate for blocks of size 2^( 3) =       0.000416402903
  error estimate for blocks of size 2^( 4) =       0.000431321632
  error estimate for blocks of size 2^( 5) =       0.000443662980
  error estimate for blocks of size 2^( 6) =       0.000450563169
  error estimate for blocks of size 2^( 7) =       0.000453327246

      target function =      -0.926116193914
              le_mean =     -16.898552706536
             les_mean =     285.852473399835
             stat err =       0.000444718756
             autocorr =       1.357457652990
   target nu stat err =       0.000444718756
   target dn stat err =       0.003152358735
      target stat err =       0.005147725794
              std dev =       0.539805492707
             le_variance =       0.291389969957


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689855270654e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+46, overlap shift 4.0000e+47 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926143157506       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926143157506       residual = 1.10e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+46 is 1.520370e-51

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+47, overlap shift 1.6000e+48 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926143157506       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926143157506       residual = 1.10e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+47 is 3.800925e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+47, overlap shift 6.4000e+48 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926143157506       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926143157506       residual = 1.10e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.926143157506       residual = 4.24e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+47 is 1.518226e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.468889 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.0993e+01
  </log>
  <optVariables href="H2O.s049.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -16.9369
    reference variance = 0.231847
====================================================
  Execution time = 4.2962e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s049
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9450e-01
  Total weights = 2.0000e+06
  Execution time = 3.7289e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383731903
  error estimate for blocks of size 2^( 2) =       0.000400473208
  error estimate for blocks of size 2^( 3) =       0.000417822151
  error estimate for blocks of size 2^( 4) =       0.000433268483
  error estimate for blocks of size 2^( 5) =       0.000445186666
  error estimate for blocks of size 2^( 6) =       0.000451610434
  error estimate for blocks of size 2^( 7) =       0.000456000267

      target function =      -0.921125824593
              le_mean =     -16.897882205020
             les_mean =     285.832923214912
             stat err =       0.000446516462
             autocorr =       1.354001467378
   target nu stat err =       0.000446516462
   target dn stat err =       0.004177426435
      target stat err =       0.006707806886
              std dev =       0.542678862147
             le_variance =       0.294500347421

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383731903
  error estimate for blocks of size 2^( 2) =       0.000400473208
  error estimate for blocks of size 2^( 3) =       0.000417822151
  error estimate for blocks of size 2^( 4) =       0.000433268483
  error estimate for blocks of size 2^( 5) =       0.000445186666
  error estimate for blocks of size 2^( 6) =       0.000451610434
  error estimate for blocks of size 2^( 7) =       0.000456000267

      target function =      -0.921125824593
              le_mean =     -16.897882205020
             les_mean =     285.832923214912
             stat err =       0.000446516462
             autocorr =       1.354001467378
   target nu stat err =       0.000446516462
   target dn stat err =       0.004177426435
      target stat err =       0.006707806886
              std dev =       0.542678862147
             le_variance =       0.294500347421

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383731903
  error estimate for blocks of size 2^( 2) =       0.000400473208
  error estimate for blocks of size 2^( 3) =       0.000417822151
  error estimate for blocks of size 2^( 4) =       0.000433268483
  error estimate for blocks of size 2^( 5) =       0.000445186666
  error estimate for blocks of size 2^( 6) =       0.000451610434
  error estimate for blocks of size 2^( 7) =       0.000456000267

      target function =      -0.921125824593
              le_mean =     -16.897882205020
             les_mean =     285.832923214912
             stat err =       0.000446516462
             autocorr =       1.354001467378
   target nu stat err =       0.000446516462
   target dn stat err =       0.004177426435
      target stat err =       0.006707806886
              std dev =       0.542678862147
             le_variance =       0.294500347421

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294540851725
                                         uncertainty =       0.004165704817

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383731903
  error estimate for blocks of size 2^( 2) =       0.000400473208
  error estimate for blocks of size 2^( 3) =       0.000417822151
  error estimate for blocks of size 2^( 4) =       0.000433268483
  error estimate for blocks of size 2^( 5) =       0.000445186666
  error estimate for blocks of size 2^( 6) =       0.000451610434
  error estimate for blocks of size 2^( 7) =       0.000456000267

      target function =      -0.921125824593
              le_mean =     -16.897882205020
             les_mean =     285.832923214912
             stat err =       0.000446516462
             autocorr =       1.354001467378
   target nu stat err =       0.000446516462
   target dn stat err =       0.004177426435
      target stat err =       0.006707806886
              std dev =       0.542678862147
             le_variance =       0.294500347421


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.921125824593        initial  <--
     4.0000e+46     4.0000e+47             1.5204e-51        -0.921125824593
     1.6000e+47     1.6000e+48             3.8009e-52        -0.921125824593
     6.4000e+47     6.4000e+48             1.5182e-52        -0.921125824593

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.7232
  </log>
  <optVariables href="H2O.s049.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1272e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s050 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s050 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=50  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -16.84
    reference variance = 0.277503
====================================================
  Execution time = 4.0212e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s050
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9274e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1134e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292753192404
                                         uncertainty =       0.002870494336

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292753192404
                                         uncertainty =       0.002870494336

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382585490
  error estimate for blocks of size 2^( 2) =       0.000399419967
  error estimate for blocks of size 2^( 3) =       0.000416575811
  error estimate for blocks of size 2^( 4) =       0.000431241632
  error estimate for blocks of size 2^( 5) =       0.000442122430
  error estimate for blocks of size 2^( 6) =       0.000448225416
  error estimate for blocks of size 2^( 7) =       0.000452156305

      target function =      -0.923932349591
              le_mean =     -16.898762604785
             les_mean =     285.860920740641
             stat err =       0.000443436446
             autocorr =       1.343401347022
   target nu stat err =       0.000443436446
   target dn stat err =       0.002989998662
      target stat err =       0.004867584191
              std dev =       0.541057588545
             le_variance =       0.292743314122


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689876260479e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+47, overlap shift 4.0000e+48 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923956748531       residual = 8.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923956748531       residual = 6.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924072265625       residual = 8.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.74e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+47 is 2.243727e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+48, overlap shift 1.6000e+49 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923956748531       residual = 8.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923956748531       residual = 6.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923956748531       residual = 3.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.45e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+48 is 5.201694e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+48, overlap shift 6.4000e+49 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923956748531       residual = 8.51e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923956748531       residual = 6.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923828125000       residual = 8.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+48 is 1.402329e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.471155 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1357e+01
  </log>
  <optVariables href="H2O.s050.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -16.9924
    reference variance = 0.501975
====================================================
  Execution time = 3.9413e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s050
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9916e-01
  Total weights = 2.0000e+06
  Execution time = 3.7028e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386757027
  error estimate for blocks of size 2^( 2) =       0.000403503319
  error estimate for blocks of size 2^( 3) =       0.000420692406
  error estimate for blocks of size 2^( 4) =       0.000435689227
  error estimate for blocks of size 2^( 5) =       0.000447060761
  error estimate for blocks of size 2^( 6) =       0.000455633879
  error estimate for blocks of size 2^( 7) =       0.000460239952

      target function =      -0.913753245096
              le_mean =     -16.898284506873
             les_mean =     285.851181121017
             stat err =       0.000449655955
             autocorr =       1.351712322166
   target nu stat err =       0.000449655955
   target dn stat err =       0.003018056730
      target stat err =       0.004803192122
              std dev =       0.546957032469
             le_variance =       0.299161995367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386757027
  error estimate for blocks of size 2^( 2) =       0.000403503319
  error estimate for blocks of size 2^( 3) =       0.000420692406
  error estimate for blocks of size 2^( 4) =       0.000435689227
  error estimate for blocks of size 2^( 5) =       0.000447060761
  error estimate for blocks of size 2^( 6) =       0.000455633879
  error estimate for blocks of size 2^( 7) =       0.000460239952

      target function =      -0.913753245096
              le_mean =     -16.898284506873
             les_mean =     285.851181121017
             stat err =       0.000449655955
             autocorr =       1.351712322166
   target nu stat err =       0.000449655955
   target dn stat err =       0.003018056730
      target stat err =       0.004803192122
              std dev =       0.546957032469
             le_variance =       0.299161995367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386757027
  error estimate for blocks of size 2^( 2) =       0.000403503319
  error estimate for blocks of size 2^( 3) =       0.000420692406
  error estimate for blocks of size 2^( 4) =       0.000435689227
  error estimate for blocks of size 2^( 5) =       0.000447060761
  error estimate for blocks of size 2^( 6) =       0.000455633879
  error estimate for blocks of size 2^( 7) =       0.000460239952

      target function =      -0.913753245096
              le_mean =     -16.898284506873
             les_mean =     285.851181121017
             stat err =       0.000449655955
             autocorr =       1.351712322166
   target nu stat err =       0.000449655955
   target dn stat err =       0.003018056730
      target stat err =       0.004803192122
              std dev =       0.546957032469
             le_variance =       0.299161995367

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299186657532
                                         uncertainty =       0.003086100767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386757027
  error estimate for blocks of size 2^( 2) =       0.000403503319
  error estimate for blocks of size 2^( 3) =       0.000420692406
  error estimate for blocks of size 2^( 4) =       0.000435689227
  error estimate for blocks of size 2^( 5) =       0.000447060761
  error estimate for blocks of size 2^( 6) =       0.000455633879
  error estimate for blocks of size 2^( 7) =       0.000460239952

      target function =      -0.913753245096
              le_mean =     -16.898284506873
             les_mean =     285.851181121017
             stat err =       0.000449655955
             autocorr =       1.351712322166
   target nu stat err =       0.000449655955
   target dn stat err =       0.003018056730
      target stat err =       0.004803192122
              std dev =       0.546957032469
             le_variance =       0.299161995367


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913753245096        initial  <--
     4.0000e+47     4.0000e+48             2.2437e-52        -0.913753245096
     1.6000e+48     1.6000e+49             5.2017e-53        -0.913753245096
     6.4000e+48     6.4000e+49             1.4023e-53        -0.913753245096

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 62.2256
  </log>
  <optVariables href="H2O.s050.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1360e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s051 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s051 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=51  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -16.8699
    reference variance = 0.262897
====================================================
  Execution time = 4.0140e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s051
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9295e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0820e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292999189793
                                         uncertainty =       0.002208615879

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292999189793
                                         uncertainty =       0.002208615879

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382718372
  error estimate for blocks of size 2^( 2) =       0.000399548029
  error estimate for blocks of size 2^( 3) =       0.000416952704
  error estimate for blocks of size 2^( 4) =       0.000431906889
  error estimate for blocks of size 2^( 5) =       0.000444157466
  error estimate for blocks of size 2^( 6) =       0.000450993901
  error estimate for blocks of size 2^( 7) =       0.000456642804

      target function =      -0.923638089801
              le_mean =     -16.898037698232
             les_mean =     285.836624609189
             stat err =       0.000445925265
             autocorr =       1.357580329324
   target nu stat err =       0.000445925265
   target dn stat err =       0.002397307145
      target stat err =       0.003922849406
              std dev =       0.541245512489
             le_variance =       0.292946704790


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689803769823e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+48, overlap shift 4.0000e+49 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923652916230       residual = 7.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923652916230       residual = 5.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -1.000000000000       residual = 4.44e-01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+48 is 2.256735e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+49, overlap shift 1.6000e+50 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923652916230       residual = 7.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923652916230       residual = 5.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.48e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+49 is 5.641837e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+49, overlap shift 6.4000e+50 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923652916230       residual = 7.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923652916230       residual = 5.81e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.48e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+49 is 1.410459e-54

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.473463 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.0971e+01
  </log>
  <optVariables href="H2O.s051.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -16.8648
    reference variance = 0.540379
====================================================
  Execution time = 3.9655e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s051
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9127e-01
  Total weights = 2.0000e+06
  Execution time = 3.6994e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381624792
  error estimate for blocks of size 2^( 2) =       0.000398456995
  error estimate for blocks of size 2^( 3) =       0.000415386361
  error estimate for blocks of size 2^( 4) =       0.000429804575
  error estimate for blocks of size 2^( 5) =       0.000441755580
  error estimate for blocks of size 2^( 6) =       0.000449263175
  error estimate for blocks of size 2^( 7) =       0.000454260509

      target function =      -0.926291559809
              le_mean =     -16.899249642154
             les_mean =     285.875913286051
             stat err =       0.000443770960
             autocorr =       1.352211408087
   target nu stat err =       0.000443770960
   target dn stat err =       0.002553696861
      target stat err =       0.004201545970
              std dev =       0.539698956678
             le_variance =       0.291274963839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381624792
  error estimate for blocks of size 2^( 2) =       0.000398456995
  error estimate for blocks of size 2^( 3) =       0.000415386361
  error estimate for blocks of size 2^( 4) =       0.000429804575
  error estimate for blocks of size 2^( 5) =       0.000441755580
  error estimate for blocks of size 2^( 6) =       0.000449263175
  error estimate for blocks of size 2^( 7) =       0.000454260509

      target function =      -0.926291559809
              le_mean =     -16.899249642154
             les_mean =     285.875913286051
             stat err =       0.000443770960
             autocorr =       1.352211408088
   target nu stat err =       0.000443770960
   target dn stat err =       0.002553696861
      target stat err =       0.004201545970
              std dev =       0.539698956678
             le_variance =       0.291274963839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381624792
  error estimate for blocks of size 2^( 2) =       0.000398456995
  error estimate for blocks of size 2^( 3) =       0.000415386361
  error estimate for blocks of size 2^( 4) =       0.000429804575
  error estimate for blocks of size 2^( 5) =       0.000441755580
  error estimate for blocks of size 2^( 6) =       0.000449263175
  error estimate for blocks of size 2^( 7) =       0.000454260509

      target function =      -0.926291559809
              le_mean =     -16.899249642154
             les_mean =     285.875913286051
             stat err =       0.000443770960
             autocorr =       1.352211408088
   target nu stat err =       0.000443770960
   target dn stat err =       0.002553696861
      target stat err =       0.004201545970
              std dev =       0.539698956678
             le_variance =       0.291274963839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291285917068
                                         uncertainty =       0.002307655278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381624792
  error estimate for blocks of size 2^( 2) =       0.000398456995
  error estimate for blocks of size 2^( 3) =       0.000415386361
  error estimate for blocks of size 2^( 4) =       0.000429804575
  error estimate for blocks of size 2^( 5) =       0.000441755580
  error estimate for blocks of size 2^( 6) =       0.000449263175
  error estimate for blocks of size 2^( 7) =       0.000454260509

      target function =      -0.926291559809
              le_mean =     -16.899249642154
             les_mean =     285.875913286051
             stat err =       0.000443770960
             autocorr =       1.352211408088
   target nu stat err =       0.000443770960
   target dn stat err =       0.002553696861
      target stat err =       0.004201545970
              std dev =       0.539698956678
             le_variance =       0.291274963839


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926291559809        initial  <--
     4.0000e+48     4.0000e+49             2.2567e-53        -0.926291559809
     1.6000e+49     1.6000e+50             5.6418e-54        -0.926291559809
     6.4000e+49     6.4000e+50             1.4105e-54        -0.926291559809

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.3503
  </log>
  <optVariables href="H2O.s051.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0933e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s052 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s052 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=52  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -16.9439
    reference variance = 0.287302
====================================================
  Execution time = 4.3067e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s052
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9427e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1000e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294368168154
                                         uncertainty =       0.003349851019

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294368168154
                                         uncertainty =       0.003349851019

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383579671
  error estimate for blocks of size 2^( 2) =       0.000400306937
  error estimate for blocks of size 2^( 3) =       0.000417615829
  error estimate for blocks of size 2^( 4) =       0.000433178617
  error estimate for blocks of size 2^( 5) =       0.000444832040
  error estimate for blocks of size 2^( 6) =       0.000452846144
  error estimate for blocks of size 2^( 7) =       0.000457558457

      target function =      -0.921474407696
              le_mean =     -16.898826676482
             les_mean =     285.864609622783
             stat err =       0.000447103815
             autocorr =       1.358643719835
   target nu stat err =       0.000447103815
   target dn stat err =       0.003740669232
      target stat err =       0.006031643830
              std dev =       0.542463573086
             le_variance =       0.294266728125


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689882667648e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+49, overlap shift 4.0000e+50 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+50, overlap shift 1.6000e+51 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+50, overlap shift 6.4000e+51 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921512091090       residual = 6.58e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.475080 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.4077e+01
  </log>
  <optVariables href="H2O.s052.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -16.9011
    reference variance = 0.140289
====================================================
  Execution time = 3.9497e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s052
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9184e-01
  Total weights = 2.0000e+06
  Execution time = 3.7022e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996652
  error estimate for blocks of size 2^( 2) =       0.000398706139
  error estimate for blocks of size 2^( 3) =       0.000416169646
  error estimate for blocks of size 2^( 4) =       0.000431452787
  error estimate for blocks of size 2^( 5) =       0.000443518824
  error estimate for blocks of size 2^( 6) =       0.000449311773
  error estimate for blocks of size 2^( 7) =       0.000454500211

      target function =      -0.925391794667
              le_mean =     -16.898546624997
             les_mean =     285.852720775032
             stat err =       0.000444695898
             autocorr =       1.355211677771
   target nu stat err =       0.000444695898
   target dn stat err =       0.002793285920
      target stat err =       0.004568357800
              std dev =       0.540224845564
             le_variance =       0.291842883764

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996652
  error estimate for blocks of size 2^( 2) =       0.000398706139
  error estimate for blocks of size 2^( 3) =       0.000416169646
  error estimate for blocks of size 2^( 4) =       0.000431452787
  error estimate for blocks of size 2^( 5) =       0.000443518824
  error estimate for blocks of size 2^( 6) =       0.000449311773
  error estimate for blocks of size 2^( 7) =       0.000454500211

      target function =      -0.925391794667
              le_mean =     -16.898546624997
             les_mean =     285.852720775032
             stat err =       0.000444695898
             autocorr =       1.355211677771
   target nu stat err =       0.000444695898
   target dn stat err =       0.002793285920
      target stat err =       0.004568357800
              std dev =       0.540224845564
             le_variance =       0.291842883764

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996652
  error estimate for blocks of size 2^( 2) =       0.000398706139
  error estimate for blocks of size 2^( 3) =       0.000416169646
  error estimate for blocks of size 2^( 4) =       0.000431452787
  error estimate for blocks of size 2^( 5) =       0.000443518824
  error estimate for blocks of size 2^( 6) =       0.000449311773
  error estimate for blocks of size 2^( 7) =       0.000454500211

      target function =      -0.925391794667
              le_mean =     -16.898546624997
             les_mean =     285.852720775032
             stat err =       0.000444695898
             autocorr =       1.355211677771
   target nu stat err =       0.000444695898
   target dn stat err =       0.002793285920
      target stat err =       0.004568357800
              std dev =       0.540224845564
             le_variance =       0.291842883764

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291829339953
                                         uncertainty =       0.002940943899

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996652
  error estimate for blocks of size 2^( 2) =       0.000398706139
  error estimate for blocks of size 2^( 3) =       0.000416169646
  error estimate for blocks of size 2^( 4) =       0.000431452787
  error estimate for blocks of size 2^( 5) =       0.000443518824
  error estimate for blocks of size 2^( 6) =       0.000449311773
  error estimate for blocks of size 2^( 7) =       0.000454500211

      target function =      -0.925391794667
              le_mean =     -16.898546624997
             les_mean =     285.852720775032
             stat err =       0.000444695898
             autocorr =       1.355211677771
   target nu stat err =       0.000444695898
   target dn stat err =       0.002793285920
      target stat err =       0.004568357800
              std dev =       0.540224845564
             le_variance =       0.291842883764


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925391794667        initial  <--
     4.0000e+49     4.0000e+50             0.0000e+00        -0.925391794667
     1.6000e+50     1.6000e+51             0.0000e+00        -0.925391794667
     6.4000e+50     6.4000e+51             0.0000e+00        -0.925391794667

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.1244
  </log>
  <optVariables href="H2O.s052.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1221e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s053 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s053 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=53  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -16.9182
    reference variance = 0.187996
====================================================
  Execution time = 4.0597e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s053
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.0486e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0859e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304963435614
                                         uncertainty =       0.006521240439

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.304963435614
                                         uncertainty =       0.006521240439

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000390424859
  error estimate for blocks of size 2^( 2) =       0.000407321495
  error estimate for blocks of size 2^( 3) =       0.000424077972
  error estimate for blocks of size 2^( 4) =       0.000439870837
  error estimate for blocks of size 2^( 5) =       0.000450669276
  error estimate for blocks of size 2^( 6) =       0.000457170033
  error estimate for blocks of size 2^( 7) =       0.000462059886

      target function =      -0.904788028236
              le_mean =     -16.898259673450
             les_mean =     285.856042980130
             stat err =       0.000452442508
             autocorr =       1.342925367538
   target nu stat err =       0.000452442508
   target dn stat err =       0.006882906692
      target stat err =       0.010628766656
              std dev =       0.552144130833
             le_variance =       0.304863141213


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689825967345e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+50, overlap shift 4.0000e+51 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904910227039       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904910227039       residual = 9.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904910227039       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+50 is 2.077870e-55

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+51, overlap shift 1.6000e+52 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904910227039       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904910227039       residual = 9.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904910227039       residual = 1.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+51 is 5.194674e-56

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+51, overlap shift 6.4000e+52 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.904910227039       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.904910227039       residual = 9.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.904910227039       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+51 is 1.298669e-56

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.477015 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1467e+01
  </log>
  <optVariables href="H2O.s053.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -16.9582
    reference variance = 0.13337
====================================================
  Execution time = 4.1526e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s053
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9144e-01
  Total weights = 2.0000e+06
  Execution time = 3.7093e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381732544
  error estimate for blocks of size 2^( 2) =       0.000398531692
  error estimate for blocks of size 2^( 3) =       0.000415549214
  error estimate for blocks of size 2^( 4) =       0.000429562763
  error estimate for blocks of size 2^( 5) =       0.000441196408
  error estimate for blocks of size 2^( 6) =       0.000447860167
  error estimate for blocks of size 2^( 7) =       0.000451325375

      target function =      -0.926022096886
              le_mean =     -16.899286504665
             les_mean =     285.877323690676
             stat err =       0.000442486178
             autocorr =       1.343634190056
   target nu stat err =       0.000442486178
   target dn stat err =       0.002700430458
      target stat err =       0.004432359324
              std dev =       0.539851340331
             le_variance =       0.291439469657

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381732544
  error estimate for blocks of size 2^( 2) =       0.000398531692
  error estimate for blocks of size 2^( 3) =       0.000415549214
  error estimate for blocks of size 2^( 4) =       0.000429562763
  error estimate for blocks of size 2^( 5) =       0.000441196408
  error estimate for blocks of size 2^( 6) =       0.000447860167
  error estimate for blocks of size 2^( 7) =       0.000451325375

      target function =      -0.926022096886
              le_mean =     -16.899286504665
             les_mean =     285.877323690676
             stat err =       0.000442486178
             autocorr =       1.343634190056
   target nu stat err =       0.000442486178
   target dn stat err =       0.002700430458
      target stat err =       0.004432359324
              std dev =       0.539851340331
             le_variance =       0.291439469657

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381732544
  error estimate for blocks of size 2^( 2) =       0.000398531692
  error estimate for blocks of size 2^( 3) =       0.000415549214
  error estimate for blocks of size 2^( 4) =       0.000429562763
  error estimate for blocks of size 2^( 5) =       0.000441196408
  error estimate for blocks of size 2^( 6) =       0.000447860167
  error estimate for blocks of size 2^( 7) =       0.000451325375

      target function =      -0.926022096886
              le_mean =     -16.899286504665
             les_mean =     285.877323690676
             stat err =       0.000442486178
             autocorr =       1.343634190056
   target nu stat err =       0.000442486178
   target dn stat err =       0.002700430458
      target stat err =       0.004432359324
              std dev =       0.539851340331
             le_variance =       0.291439469657

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291504529626
                                         uncertainty =       0.002796320305

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381732544
  error estimate for blocks of size 2^( 2) =       0.000398531692
  error estimate for blocks of size 2^( 3) =       0.000415549214
  error estimate for blocks of size 2^( 4) =       0.000429562763
  error estimate for blocks of size 2^( 5) =       0.000441196408
  error estimate for blocks of size 2^( 6) =       0.000447860167
  error estimate for blocks of size 2^( 7) =       0.000451325375

      target function =      -0.926022096886
              le_mean =     -16.899286504665
             les_mean =     285.877323690676
             stat err =       0.000442486178
             autocorr =       1.343634190056
   target nu stat err =       0.000442486178
   target dn stat err =       0.002700430458
      target stat err =       0.004432359324
              std dev =       0.539851340331
             le_variance =       0.291439469657


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926022096886        initial  <--
     4.0000e+50     4.0000e+51             2.0779e-55        -0.926022096886
     1.6000e+51     1.6000e+52             5.1947e-56        -0.926022096886
     6.4000e+51     6.4000e+52             1.2987e-56        -0.926022096886

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.1952
  </log>
  <optVariables href="H2O.s053.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1179e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s054 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s054 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=54  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -16.9816
    reference variance = 0.179977
====================================================
  Execution time = 4.0263e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s054
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0352e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0924e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303390681613
                                         uncertainty =       0.005535239801

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.303390681613
                                         uncertainty =       0.005535239801

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000389566051
  error estimate for blocks of size 2^( 2) =       0.000406029121
  error estimate for blocks of size 2^( 3) =       0.000423407538
  error estimate for blocks of size 2^( 4) =       0.000438031797
  error estimate for blocks of size 2^( 5) =       0.000449623111
  error estimate for blocks of size 2^( 6) =       0.000457255421
  error estimate for blocks of size 2^( 7) =       0.000462095280

      target function =      -0.906878656558
              le_mean =     -16.898515971941
             les_mean =     285.863365318100
             stat err =       0.000451751402
             autocorr =       1.344735322901
   target nu stat err =       0.000451751402
   target dn stat err =       0.005685745746
      target stat err =       0.008835100738
              std dev =       0.550929592533
             le_variance =       0.303523415928


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689851597194e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+51, overlap shift 4.0000e+52 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+52, overlap shift 1.6000e+53 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+52, overlap shift 6.4000e+53 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.906962903309       residual = 1.28e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.478604 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1197e+01
  </log>
  <optVariables href="H2O.s054.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -16.8563
    reference variance = 0.277164
====================================================
  Execution time = 3.9856e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s054
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9652e-01
  Total weights = 2.0000e+06
  Execution time = 3.7141e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385042580
  error estimate for blocks of size 2^( 2) =       0.000401745384
  error estimate for blocks of size 2^( 3) =       0.000419138361
  error estimate for blocks of size 2^( 4) =       0.000434239764
  error estimate for blocks of size 2^( 5) =       0.000447034932
  error estimate for blocks of size 2^( 6) =       0.000456735997
  error estimate for blocks of size 2^( 7) =       0.000463372685

      target function =      -0.917881798223
              le_mean =     -16.898419313786
             les_mean =     285.853090732795
             stat err =       0.000450345844
             autocorr =       1.367964422126
   target nu stat err =       0.000450345844
   target dn stat err =       0.004947281508
      target stat err =       0.007882107265
              std dev =       0.544532438446
             le_variance =       0.296515576519

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385042580
  error estimate for blocks of size 2^( 2) =       0.000401745384
  error estimate for blocks of size 2^( 3) =       0.000419138361
  error estimate for blocks of size 2^( 4) =       0.000434239764
  error estimate for blocks of size 2^( 5) =       0.000447034932
  error estimate for blocks of size 2^( 6) =       0.000456735997
  error estimate for blocks of size 2^( 7) =       0.000463372685

      target function =      -0.917881798223
              le_mean =     -16.898419313786
             les_mean =     285.853090732795
             stat err =       0.000450345844
             autocorr =       1.367964422126
   target nu stat err =       0.000450345844
   target dn stat err =       0.004947281508
      target stat err =       0.007882107265
              std dev =       0.544532438446
             le_variance =       0.296515576519

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385042580
  error estimate for blocks of size 2^( 2) =       0.000401745384
  error estimate for blocks of size 2^( 3) =       0.000419138361
  error estimate for blocks of size 2^( 4) =       0.000434239764
  error estimate for blocks of size 2^( 5) =       0.000447034932
  error estimate for blocks of size 2^( 6) =       0.000456735997
  error estimate for blocks of size 2^( 7) =       0.000463372685

      target function =      -0.917881798223
              le_mean =     -16.898419313786
             les_mean =     285.853090732795
             stat err =       0.000450345844
             autocorr =       1.367964422126
   target nu stat err =       0.000450345844
   target dn stat err =       0.004947281508
      target stat err =       0.007882107265
              std dev =       0.544532438446
             le_variance =       0.296515576519

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296429258315
                                         uncertainty =       0.005063937442

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385042580
  error estimate for blocks of size 2^( 2) =       0.000401745384
  error estimate for blocks of size 2^( 3) =       0.000419138361
  error estimate for blocks of size 2^( 4) =       0.000434239764
  error estimate for blocks of size 2^( 5) =       0.000447034932
  error estimate for blocks of size 2^( 6) =       0.000456735997
  error estimate for blocks of size 2^( 7) =       0.000463372685

      target function =      -0.917881798223
              le_mean =     -16.898419313786
             les_mean =     285.853090732795
             stat err =       0.000450345844
             autocorr =       1.367964422126
   target nu stat err =       0.000450345844
   target dn stat err =       0.004947281508
      target stat err =       0.007882107265
              std dev =       0.544532438446
             le_variance =       0.296515576519


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917881798223        initial  <--
     4.0000e+51     4.0000e+52             0.0000e+00        -0.917881798223
     1.6000e+52     1.6000e+53             0.0000e+00        -0.917881798223
     6.4000e+52     6.4000e+53             0.0000e+00        -0.917881798223

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 61.9183
  </log>
  <optVariables href="H2O.s054.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1312e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s055 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s055 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=55  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -16.8592
    reference variance = 0.140787
====================================================
  Execution time = 4.0587e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s055
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9431e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0985e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294422232464
                                         uncertainty =       0.003078669197

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294422232464
                                         uncertainty =       0.003078669197

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383606880
  error estimate for blocks of size 2^( 2) =       0.000400333105
  error estimate for blocks of size 2^( 3) =       0.000417282374
  error estimate for blocks of size 2^( 4) =       0.000432691614
  error estimate for blocks of size 2^( 5) =       0.000443917945
  error estimate for blocks of size 2^( 6) =       0.000453003847
  error estimate for blocks of size 2^( 7) =       0.000457954131

      target function =      -0.921431415680
              le_mean =     -16.898567914698
             les_mean =     285.855905897459
             stat err =       0.000446891884
             autocorr =       1.357163465956
   target nu stat err =       0.000446891884
   target dn stat err =       0.002972549120
      target stat err =       0.004813251420
              std dev =       0.542502052495
             le_variance =       0.294308476962


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689856791470e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+52, overlap shift 4.0000e+53 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+53, overlap shift 1.6000e+54 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+53, overlap shift 6.4000e+54 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921454816335       residual = 7.13e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.480194 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1584e+01
  </log>
  <optVariables href="H2O.s055.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -16.9139
    reference variance = 0.242246
====================================================
  Execution time = 3.9420e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s055
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9533e-01
  Total weights = 2.0000e+06
  Execution time = 3.7062e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384273276
  error estimate for blocks of size 2^( 2) =       0.000400908201
  error estimate for blocks of size 2^( 3) =       0.000417813348
  error estimate for blocks of size 2^( 4) =       0.000433121337
  error estimate for blocks of size 2^( 5) =       0.000444781686
  error estimate for blocks of size 2^( 6) =       0.000452410119
  error estimate for blocks of size 2^( 7) =       0.000455878149

      target function =      -0.919738186695
              le_mean =     -16.899189708264
             les_mean =     285.877944548816
             stat err =       0.000446547823
             autocorr =       1.350378727940
   target nu stat err =       0.000446547823
   target dn stat err =       0.004667583143
      target stat err =       0.007481026874
              std dev =       0.543444477930
             le_variance =       0.295331900593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384273276
  error estimate for blocks of size 2^( 2) =       0.000400908201
  error estimate for blocks of size 2^( 3) =       0.000417813348
  error estimate for blocks of size 2^( 4) =       0.000433121337
  error estimate for blocks of size 2^( 5) =       0.000444781686
  error estimate for blocks of size 2^( 6) =       0.000452410119
  error estimate for blocks of size 2^( 7) =       0.000455878149

      target function =      -0.919738186695
              le_mean =     -16.899189708264
             les_mean =     285.877944548816
             stat err =       0.000446547823
             autocorr =       1.350378727940
   target nu stat err =       0.000446547823
   target dn stat err =       0.004667583143
      target stat err =       0.007481026874
              std dev =       0.543444477930
             le_variance =       0.295331900593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384273276
  error estimate for blocks of size 2^( 2) =       0.000400908201
  error estimate for blocks of size 2^( 3) =       0.000417813348
  error estimate for blocks of size 2^( 4) =       0.000433121337
  error estimate for blocks of size 2^( 5) =       0.000444781686
  error estimate for blocks of size 2^( 6) =       0.000452410119
  error estimate for blocks of size 2^( 7) =       0.000455878149

      target function =      -0.919738186695
              le_mean =     -16.899189708264
             les_mean =     285.877944548816
             stat err =       0.000446547823
             autocorr =       1.350378727940
   target nu stat err =       0.000446547823
   target dn stat err =       0.004667583143
      target stat err =       0.007481026874
              std dev =       0.543444477930
             le_variance =       0.295331900593

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295387912495
                                         uncertainty =       0.004758866402

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384273276
  error estimate for blocks of size 2^( 2) =       0.000400908201
  error estimate for blocks of size 2^( 3) =       0.000417813348
  error estimate for blocks of size 2^( 4) =       0.000433121337
  error estimate for blocks of size 2^( 5) =       0.000444781686
  error estimate for blocks of size 2^( 6) =       0.000452410119
  error estimate for blocks of size 2^( 7) =       0.000455878149

      target function =      -0.919738186695
              le_mean =     -16.899189708264
             les_mean =     285.877944548816
             stat err =       0.000446547823
             autocorr =       1.350378727940
   target nu stat err =       0.000446547823
   target dn stat err =       0.004667583143
      target stat err =       0.007481026874
              std dev =       0.543444477930
             le_variance =       0.295331900593


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919738186695        initial  <--
     4.0000e+52     4.0000e+53             0.0000e+00        -0.919738186695
     1.6000e+53     1.6000e+54             0.0000e+00        -0.919738186695
     6.4000e+53     6.4000e+54             0.0000e+00        -0.919738186695

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.0487
  </log>
  <optVariables href="H2O.s055.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0964e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s056 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s056 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=56  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -16.9122
    reference variance = 0.201061
====================================================
  Execution time = 4.1876e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s056
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9291e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0951e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292964974575
                                         uncertainty =       0.004135915755

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292964974575
                                         uncertainty =       0.004135915755

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382695165
  error estimate for blocks of size 2^( 2) =       0.000399461583
  error estimate for blocks of size 2^( 3) =       0.000417271884
  error estimate for blocks of size 2^( 4) =       0.000432518638
  error estimate for blocks of size 2^( 5) =       0.000443928070
  error estimate for blocks of size 2^( 6) =       0.000451331312
  error estimate for blocks of size 2^( 7) =       0.000456058062

      target function =      -0.923652841982
              le_mean =     -16.898339659069
             les_mean =     285.846794266153
             stat err =       0.000445959021
             autocorr =       1.357950546978
   target nu stat err =       0.000445959021
   target dn stat err =       0.004189874031
      target stat err =       0.006769964273
              std dev =       0.541212693260
             le_variance =       0.292911179345


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689833965907e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+53, overlap shift 4.0000e+54 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923700577336       residual = 5.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923700577336       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+53 is 1.872144e-58

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+54, overlap shift 1.6000e+55 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923700577336       residual = 5.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923700577336       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =       0.000000000000       residual = 6.47e+01           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+54 is 4.680361e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+54, overlap shift 6.4000e+55 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923700577336       residual = 5.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923700577336       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923700577336       residual = 6.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923700577336       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 1.44e+02           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+54 is 2.034371e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.482761 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2837e+01
  </log>
  <optVariables href="H2O.s056.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -16.9987
    reference variance = 0.600516
====================================================
  Execution time = 3.9586e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s056
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9025e-01
  Total weights = 2.0000e+06
  Execution time = 3.7046e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380952351
  error estimate for blocks of size 2^( 2) =       0.000397943557
  error estimate for blocks of size 2^( 3) =       0.000415618187
  error estimate for blocks of size 2^( 4) =       0.000431021594
  error estimate for blocks of size 2^( 5) =       0.000443893841
  error estimate for blocks of size 2^( 6) =       0.000450984441
  error estimate for blocks of size 2^( 7) =       0.000454573674

      target function =      -0.927960461472
              le_mean =     -16.899077998626
             les_mean =     285.869086445917
             stat err =       0.000445118387
             autocorr =       1.365242355872
   target nu stat err =       0.000445118387
   target dn stat err =       0.002322230363
      target stat err =       0.003847053427
              std dev =       0.538747981350
             le_variance =       0.290249387408

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380952351
  error estimate for blocks of size 2^( 2) =       0.000397943557
  error estimate for blocks of size 2^( 3) =       0.000415618187
  error estimate for blocks of size 2^( 4) =       0.000431021594
  error estimate for blocks of size 2^( 5) =       0.000443893841
  error estimate for blocks of size 2^( 6) =       0.000450984441
  error estimate for blocks of size 2^( 7) =       0.000454573674

      target function =      -0.927960461472
              le_mean =     -16.899077998626
             les_mean =     285.869086445917
             stat err =       0.000445118387
             autocorr =       1.365242355872
   target nu stat err =       0.000445118387
   target dn stat err =       0.002322230363
      target stat err =       0.003847053427
              std dev =       0.538747981350
             le_variance =       0.290249387408

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380952351
  error estimate for blocks of size 2^( 2) =       0.000397943557
  error estimate for blocks of size 2^( 3) =       0.000415618187
  error estimate for blocks of size 2^( 4) =       0.000431021594
  error estimate for blocks of size 2^( 5) =       0.000443893841
  error estimate for blocks of size 2^( 6) =       0.000450984441
  error estimate for blocks of size 2^( 7) =       0.000454573674

      target function =      -0.927960461472
              le_mean =     -16.899077998626
             les_mean =     285.869086445917
             stat err =       0.000445118387
             autocorr =       1.365242355872
   target nu stat err =       0.000445118387
   target dn stat err =       0.002322230363
      target stat err =       0.003847053427
              std dev =       0.538747981350
             le_variance =       0.290249387408

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290180965542
                                         uncertainty =       0.002195881999

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380952351
  error estimate for blocks of size 2^( 2) =       0.000397943557
  error estimate for blocks of size 2^( 3) =       0.000415618187
  error estimate for blocks of size 2^( 4) =       0.000431021594
  error estimate for blocks of size 2^( 5) =       0.000443893841
  error estimate for blocks of size 2^( 6) =       0.000450984441
  error estimate for blocks of size 2^( 7) =       0.000454573674

      target function =      -0.927960461472
              le_mean =     -16.899077998626
             les_mean =     285.869086445917
             stat err =       0.000445118387
             autocorr =       1.365242355872
   target nu stat err =       0.000445118387
   target dn stat err =       0.002322230363
      target stat err =       0.003847053427
              std dev =       0.538747981350
             le_variance =       0.290249387408


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.927960461472        initial  <--
     4.0000e+53     4.0000e+54             1.8721e-58        -0.927960461472
     1.6000e+54     1.6000e+55             4.6804e-59        -0.927960461472
     6.4000e+54     6.4000e+55             2.0344e-59        -0.927960461472

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.2014
  </log>
  <optVariables href="H2O.s056.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1104e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s057 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s057 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=57  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -16.9208
    reference variance = 0.248991
====================================================
  Execution time = 4.0228e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s057
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9790e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.1073e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297933392583
                                         uncertainty =       0.004260450945

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297933392583
                                         uncertainty =       0.004260450945

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385937519
  error estimate for blocks of size 2^( 2) =       0.000402795219
  error estimate for blocks of size 2^( 3) =       0.000419801520
  error estimate for blocks of size 2^( 4) =       0.000434580407
  error estimate for blocks of size 2^( 5) =       0.000445148256
  error estimate for blocks of size 2^( 6) =       0.000449282609
  error estimate for blocks of size 2^( 7) =       0.000452955843

      target function =      -0.915707731270
              le_mean =     -16.898688921986
             les_mean =     285.863582670858
             stat err =       0.000445491779
             autocorr =       1.332433015757
   target nu stat err =       0.000445491779
   target dn stat err =       0.004054784356
      target stat err =       0.006447220575
              std dev =       0.545798074142
             le_variance =       0.297895537737


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689868892199e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+54, overlap shift 4.0000e+55 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+55, overlap shift 1.6000e+56 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+55, overlap shift 6.4000e+56 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915751983044       residual = 7.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.484489 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1311e+01
  </log>
  <optVariables href="H2O.s057.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -16.8219
    reference variance = 0.20524
====================================================
  Execution time = 4.1291e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s057
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9248e-01
  Total weights = 2.0000e+06
  Execution time = 3.7531e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382412868
  error estimate for blocks of size 2^( 2) =       0.000399598489
  error estimate for blocks of size 2^( 3) =       0.000416498011
  error estimate for blocks of size 2^( 4) =       0.000432234044
  error estimate for blocks of size 2^( 5) =       0.000443179306
  error estimate for blocks of size 2^( 6) =       0.000449340838
  error estimate for blocks of size 2^( 7) =       0.000451225086

      target function =      -0.924382831349
              le_mean =     -16.898062727613
             les_mean =     285.837003003549
             stat err =       0.000443994818
             autocorr =       1.348002840849
   target nu stat err =       0.000443994818
   target dn stat err =       0.002725550217
      target stat err =       0.004446958256
              std dev =       0.540813464571
             le_variance =       0.292479203461

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382412868
  error estimate for blocks of size 2^( 2) =       0.000399598489
  error estimate for blocks of size 2^( 3) =       0.000416498011
  error estimate for blocks of size 2^( 4) =       0.000432234044
  error estimate for blocks of size 2^( 5) =       0.000443179306
  error estimate for blocks of size 2^( 6) =       0.000449340838
  error estimate for blocks of size 2^( 7) =       0.000451225086

      target function =      -0.924382831349
              le_mean =     -16.898062727613
             les_mean =     285.837003003549
             stat err =       0.000443994818
             autocorr =       1.348002840849
   target nu stat err =       0.000443994818
   target dn stat err =       0.002725550217
      target stat err =       0.004446958256
              std dev =       0.540813464571
             le_variance =       0.292479203461

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382412868
  error estimate for blocks of size 2^( 2) =       0.000399598489
  error estimate for blocks of size 2^( 3) =       0.000416498011
  error estimate for blocks of size 2^( 4) =       0.000432234044
  error estimate for blocks of size 2^( 5) =       0.000443179306
  error estimate for blocks of size 2^( 6) =       0.000449340838
  error estimate for blocks of size 2^( 7) =       0.000451225086

      target function =      -0.924382831349
              le_mean =     -16.898062727613
             les_mean =     285.837003003549
             stat err =       0.000443994818
             autocorr =       1.348002840849
   target nu stat err =       0.000443994818
   target dn stat err =       0.002725550217
      target stat err =       0.004446958256
              std dev =       0.540813464571
             le_variance =       0.292479203461

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527629762
                                         uncertainty =       0.002426490043

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382412868
  error estimate for blocks of size 2^( 2) =       0.000399598489
  error estimate for blocks of size 2^( 3) =       0.000416498011
  error estimate for blocks of size 2^( 4) =       0.000432234044
  error estimate for blocks of size 2^( 5) =       0.000443179306
  error estimate for blocks of size 2^( 6) =       0.000449340838
  error estimate for blocks of size 2^( 7) =       0.000451225086

      target function =      -0.924382831349
              le_mean =     -16.898062727613
             les_mean =     285.837003003549
             stat err =       0.000443994818
             autocorr =       1.348002840849
   target nu stat err =       0.000443994818
   target dn stat err =       0.002725550217
      target stat err =       0.004446958256
              std dev =       0.540813464571
             le_variance =       0.292479203461


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924382831349        initial  <--
     4.0000e+54     4.0000e+55             0.0000e+00        -0.924382831349
     1.6000e+55     1.6000e+56             0.0000e+00        -0.924382831349
     6.4000e+55     6.4000e+56             0.0000e+00        -0.924382831349

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 60.0464
  </log>
  <optVariables href="H2O.s057.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1136e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s058 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s058 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=58  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -16.9299
    reference variance = 0.158667
====================================================
  Execution time = 4.0807e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s058
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9598e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0672e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296073109294
                                         uncertainty =       0.003178348750

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296073109294
                                         uncertainty =       0.003178348750

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384696834
  error estimate for blocks of size 2^( 2) =       0.000401569317
  error estimate for blocks of size 2^( 3) =       0.000418538837
  error estimate for blocks of size 2^( 4) =       0.000433190144
  error estimate for blocks of size 2^( 5) =       0.000444435882
  error estimate for blocks of size 2^( 6) =       0.000451008604
  error estimate for blocks of size 2^( 7) =       0.000457360537

      target function =      -0.918744897924
              le_mean =     -16.898894082930
             les_mean =     285.868604386817
             stat err =       0.000446498792
             autocorr =       1.347110901876
   target nu stat err =       0.000446498792
   target dn stat err =       0.003195215453
      target stat err =       0.005138110001
              std dev =       0.544043480540
             le_variance =       0.295983308718


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689889408293e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+55, overlap shift 4.0000e+56 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+56, overlap shift 1.6000e+57 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+56, overlap shift 6.4000e+57 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918772394732       residual = 5.92e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.486241 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.1488e+01
  </log>
  <optVariables href="H2O.s058.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -16.9058
    reference variance = 0.356579
====================================================
  Execution time = 3.9529e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s058
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9075e-01
  Total weights = 2.0000e+06
  Execution time = 3.7011e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381280713
  error estimate for blocks of size 2^( 2) =       0.000398109937
  error estimate for blocks of size 2^( 3) =       0.000414933576
  error estimate for blocks of size 2^( 4) =       0.000430384266
  error estimate for blocks of size 2^( 5) =       0.000441011391
  error estimate for blocks of size 2^( 6) =       0.000449506518
  error estimate for blocks of size 2^( 7) =       0.000451705806

      target function =      -0.927144439477
              le_mean =     -16.898722887635
             les_mean =     285.857585051864
             stat err =       0.000443151995
             autocorr =       1.350876802432
   target nu stat err =       0.000443151995
   target dn stat err =       0.003220948889
      target stat err =       0.005270067119
              std dev =       0.539212355347
             le_variance =       0.290749964158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381280713
  error estimate for blocks of size 2^( 2) =       0.000398109937
  error estimate for blocks of size 2^( 3) =       0.000414933576
  error estimate for blocks of size 2^( 4) =       0.000430384266
  error estimate for blocks of size 2^( 5) =       0.000441011391
  error estimate for blocks of size 2^( 6) =       0.000449506518
  error estimate for blocks of size 2^( 7) =       0.000451705806

      target function =      -0.927144439477
              le_mean =     -16.898722887635
             les_mean =     285.857585051864
             stat err =       0.000443151995
             autocorr =       1.350876802432
   target nu stat err =       0.000443151995
   target dn stat err =       0.003220948889
      target stat err =       0.005270067119
              std dev =       0.539212355347
             le_variance =       0.290749964158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381280713
  error estimate for blocks of size 2^( 2) =       0.000398109937
  error estimate for blocks of size 2^( 3) =       0.000414933576
  error estimate for blocks of size 2^( 4) =       0.000430384266
  error estimate for blocks of size 2^( 5) =       0.000441011391
  error estimate for blocks of size 2^( 6) =       0.000449506518
  error estimate for blocks of size 2^( 7) =       0.000451705806

      target function =      -0.927144439477
              le_mean =     -16.898722887635
             les_mean =     285.857585051864
             stat err =       0.000443151995
             autocorr =       1.350876802432
   target nu stat err =       0.000443151995
   target dn stat err =       0.003220948889
      target stat err =       0.005270067119
              std dev =       0.539212355347
             le_variance =       0.290749964158

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290707235014
                                         uncertainty =       0.003476199022

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381280713
  error estimate for blocks of size 2^( 2) =       0.000398109937
  error estimate for blocks of size 2^( 3) =       0.000414933576
  error estimate for blocks of size 2^( 4) =       0.000430384266
  error estimate for blocks of size 2^( 5) =       0.000441011391
  error estimate for blocks of size 2^( 6) =       0.000449506518
  error estimate for blocks of size 2^( 7) =       0.000451705806

      target function =      -0.927144439477
              le_mean =     -16.898722887635
             les_mean =     285.857585051864
             stat err =       0.000443151995
             autocorr =       1.350876802432
   target nu stat err =       0.000443151995
   target dn stat err =       0.003220948889
      target stat err =       0.005270067119
              std dev =       0.539212355347
             le_variance =       0.290749964158


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.927144439477        initial  <--
     4.0000e+55     4.0000e+56             0.0000e+00        -0.927144439477
     1.6000e+56     1.6000e+57             0.0000e+00        -0.927144439477
     6.4000e+56     6.4000e+57             0.0000e+00        -0.927144439477

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.1729
  </log>
  <optVariables href="H2O.s058.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.0967e+02 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s059 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s059 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=59  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -16.8953
    reference variance = 0.19207
====================================================
  Execution time = 4.1969e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s059
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9417e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 1.0645e+01
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294271707459
                                         uncertainty =       0.004784164691

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294271707459
                                         uncertainty =       0.004784164691

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383517130
  error estimate for blocks of size 2^( 2) =       0.000399931990
  error estimate for blocks of size 2^( 3) =       0.000416533499
  error estimate for blocks of size 2^( 4) =       0.000430793682
  error estimate for blocks of size 2^( 5) =       0.000442175608
  error estimate for blocks of size 2^( 6) =       0.000449146447
  error estimate for blocks of size 2^( 7) =       0.000451691661

      target function =      -0.921616764628
              le_mean =     -16.898551410232
             les_mean =     285.855210394835
             stat err =       0.000443451850
             autocorr =       1.336975375206
   target nu stat err =       0.000443451850
   target dn stat err =       0.004654266965
      target stat err =       0.007480698537
              std dev =       0.542375126340
             le_variance =       0.294170777673


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689855141023e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 4.0000e+56, overlap shift 4.0000e+57 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921675522682       residual = 9.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921675522682       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.45e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+56 is 2.210436e-61

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+57, overlap shift 1.6000e+58 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921675522682       residual = 9.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921675522682       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.45e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+57 is 5.526091e-62

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 6.4000e+57, overlap shift 6.4000e+58 and omega -1.7430e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921675522682       residual = 9.85e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921675522682       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.45e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 6.4000e+57 is 1.381523e-62

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               1.488112 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 5.2623e+01
  </log>
  <optVariables href="H2O.s059.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -16.9367
    reference variance = 0.361605
====================================================
  Execution time = 3.9728e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s059
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9538e-01
  Total weights = 2.0000e+06
  Execution time = 3.7172e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384306486
  error estimate for blocks of size 2^( 2) =       0.000401450807
  error estimate for blocks of size 2^( 3) =       0.000418377207
  error estimate for blocks of size 2^( 4) =       0.000434338837
  error estimate for blocks of size 2^( 5) =       0.000446514489
  error estimate for blocks of size 2^( 6) =       0.000451867089
  error estimate for blocks of size 2^( 7) =       0.000456237644

      target function =      -0.919703802541
              le_mean =     -16.898152829995
             les_mean =     285.842951868723
             stat err =       0.000447239515
             autocorr =       1.354331272223
   target nu stat err =       0.000447239515
   target dn stat err =       0.004416915321
      target stat err =       0.007069433257
              std dev =       0.543491444787
             le_variance =       0.295382950557

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384306486
  error estimate for blocks of size 2^( 2) =       0.000401450807
  error estimate for blocks of size 2^( 3) =       0.000418377207
  error estimate for blocks of size 2^( 4) =       0.000434338837
  error estimate for blocks of size 2^( 5) =       0.000446514489
  error estimate for blocks of size 2^( 6) =       0.000451867089
  error estimate for blocks of size 2^( 7) =       0.000456237644

      target function =      -0.919703802541
              le_mean =     -16.898152829995
             les_mean =     285.842951868723
             stat err =       0.000447239515
             autocorr =       1.354331272226
   target nu stat err =       0.000447239515
   target dn stat err =       0.004416915321
      target stat err =       0.007069433257
              std dev =       0.543491444787
             le_variance =       0.295382950557

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384306486
  error estimate for blocks of size 2^( 2) =       0.000401450807
  error estimate for blocks of size 2^( 3) =       0.000418377207
  error estimate for blocks of size 2^( 4) =       0.000434338837
  error estimate for blocks of size 2^( 5) =       0.000446514489
  error estimate for blocks of size 2^( 6) =       0.000451867089
  error estimate for blocks of size 2^( 7) =       0.000456237644

      target function =      -0.919703802541
              le_mean =     -16.898152829995
             les_mean =     285.842951868723
             stat err =       0.000447239515
             autocorr =       1.354331272226
   target nu stat err =       0.000447239515
   target dn stat err =       0.004416915321
      target stat err =       0.007069433257
              std dev =       0.543491444787
             le_variance =       0.295382950557

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295359230538
                                         uncertainty =       0.004306077280

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384306486
  error estimate for blocks of size 2^( 2) =       0.000401450807
  error estimate for blocks of size 2^( 3) =       0.000418377207
  error estimate for blocks of size 2^( 4) =       0.000434338837
  error estimate for blocks of size 2^( 5) =       0.000446514489
  error estimate for blocks of size 2^( 6) =       0.000451867089
  error estimate for blocks of size 2^( 7) =       0.000456237644

      target function =      -0.919703802541
              le_mean =     -16.898152829995
             les_mean =     285.842951868723
             stat err =       0.000447239515
             autocorr =       1.354331272226
   target nu stat err =       0.000447239515
   target dn stat err =       0.004416915321
      target stat err =       0.007069433257
              std dev =       0.543491444787
             le_variance =       0.295382950557


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919703802541        initial  <--
     4.0000e+56     4.0000e+57             2.2104e-61        -0.919703802541
     1.6000e+57     1.6000e+58             5.5261e-62        -0.919703802541
     6.4000e+57     6.4000e+58             1.3815e-62        -0.919703802541

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 58.4214
  </log>
  <optVariables href="H2O.s059.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 1.1105e+02 secs
  Total Execution time = 6.6932e+03 secs

=========================================================
  A new xml input file : H2O.s059.cont.xml
