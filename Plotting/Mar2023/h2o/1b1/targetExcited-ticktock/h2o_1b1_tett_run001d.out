Rank =    0  Free Memory = 78681 MB
Rank =    1  Free Memory = 78681 MB
Rank =    2  Free Memory = 78681 MB
Rank =    3  Free Memory = 78681 MB
Rank =    4  Free Memory = 78681 MB
Rank =    5  Free Memory = 78681 MB
Rank =    6  Free Memory = 78680 MB
Rank =    7  Free Memory = 78680 MB
Rank =    8  Free Memory = 78680 MB
Rank =    9  Free Memory = 78679 MB
Rank =   10  Free Memory = 78679 MB
Rank =   11  Free Memory = 78679 MB
Rank =   12  Free Memory = 78679 MB
Rank =   13  Free Memory = 78679 MB
Rank =   14  Free Memory = 78679 MB
Rank =   15  Free Memory = 78665 MB
Rank =   16  Free Memory = 78665 MB
Rank =   17  Free Memory = 78664 MB
Rank =   18  Free Memory = 78664 MB
Rank =   19  Free Memory = 78664 MB
Rank =   20  Free Memory = 78664 MB
Rank =   21  Free Memory = 78664 MB
Rank =   22  Free Memory = 78664 MB
Rank =   23  Free Memory = 78664 MB
Rank =   24  Free Memory = 78664 MB
Rank =   25  Free Memory = 78664 MB
Rank =   26  Free Memory = 78664 MB
Rank =   27  Free Memory = 78664 MB
Rank =   28  Free Memory = 78664 MB
Rank =   29  Free Memory = 78664 MB
Rank =   30  Free Memory = 78664 MB
Rank =   31  Free Memory = 78664 MB
Rank =   32  Free Memory = 74079 MB
Rank =   33  Free Memory = 74079 MB
Rank =   34  Free Memory = 74079 MB
Rank =   35  Free Memory = 74079 MB
Rank =   36  Free Memory = 74079 MB
Rank =   37  Free Memory = 74079 MB
Rank =   38  Free Memory = 74079 MB
Rank =   39  Free Memory = 74079 MB
Rank =   40  Free Memory = 74079 MB
Rank =   41  Free Memory = 74079 MB
Rank =   42  Free Memory = 74079 MB
Rank =   43  Free Memory = 74079 MB
Rank =   44  Free Memory = 74079 MB
Rank =   45  Free Memory = 74079 MB
Rank =   46  Free Memory = 74079 MB
Rank =   47  Free Memory = 74079 MB
Rank =   48  Free Memory = 74079 MB
Rank =   49  Free Memory = 74079 MB
Rank =   50  Free Memory = 74079 MB
Rank =   51  Free Memory = 74079 MB
Rank =   52  Free Memory = 74079 MB
Rank =   53  Free Memory = 74079 MB
Rank =   54  Free Memory = 74079 MB
Rank =   55  Free Memory = 74079 MB
Rank =   56  Free Memory = 74079 MB
Rank =   57  Free Memory = 74079 MB
Rank =   58  Free Memory = 74079 MB
Rank =   59  Free Memory = 74079 MB
Rank =   60  Free Memory = 74079 MB
Rank =   61  Free Memory = 74079 MB
Rank =   62  Free Memory = 74079 MB
Rank =   63  Free Memory = 74079 MB
Rank =   64  Free Memory = 86272 MB
Rank =   65  Free Memory = 86272 MB
Rank =   66  Free Memory = 86272 MB
Rank =   67  Free Memory = 86272 MB
Rank =   68  Free Memory = 86272 MB
Rank =   69  Free Memory = 86272 MB
Rank =   70  Free Memory = 86272 MB
Rank =   71  Free Memory = 86272 MB
Rank =   72  Free Memory = 86272 MB
Rank =   73  Free Memory = 86272 MB
Rank =   74  Free Memory = 86272 MB
Rank =   75  Free Memory = 86272 MB
Rank =   76  Free Memory = 86272 MB
Rank =   77  Free Memory = 86272 MB
Rank =   78  Free Memory = 86272 MB
Rank =   79  Free Memory = 86272 MB
Rank =   80  Free Memory = 86272 MB
Rank =   81  Free Memory = 86272 MB
Rank =   82  Free Memory = 86272 MB
Rank =   83  Free Memory = 86272 MB
Rank =   84  Free Memory = 86272 MB
Rank =   85  Free Memory = 86272 MB
Rank =   86  Free Memory = 86272 MB
Rank =   87  Free Memory = 86272 MB
Rank =   88  Free Memory = 86272 MB
Rank =   89  Free Memory = 86272 MB
Rank =   90  Free Memory = 86272 MB
Rank =   91  Free Memory = 86272 MB
Rank =   92  Free Memory = 86272 MB
Rank =   93  Free Memory = 86272 MB
Rank =   94  Free Memory = 86272 MB
Rank =   95  Free Memory = 86272 MB
Rank =   96  Free Memory = 90597 MB
Rank =   97  Free Memory = 90597 MB
Rank =   98  Free Memory = 90597 MB
Rank =   99  Free Memory = 90597 MB
Rank =  100  Free Memory = 90597 MB
Rank =  101  Free Memory = 90597 MB
Rank =  102  Free Memory = 90597 MB
Rank =  103  Free Memory = 90597 MB
Rank =  104  Free Memory = 90597 MB
Rank =  105  Free Memory = 90597 MB
Rank =  106  Free Memory = 90597 MB
Rank =  107  Free Memory = 90597 MB
Rank =  108  Free Memory = 90597 MB
Rank =  109  Free Memory = 90597 MB
Rank =  110  Free Memory = 90597 MB
Rank =  111  Free Memory = 90597 MB
Rank =  112  Free Memory = 90597 MB
Rank =  113  Free Memory = 90597 MB
Rank =  114  Free Memory = 90597 MB
Rank =  115  Free Memory = 90597 MB
Rank =  116  Free Memory = 90597 MB
Rank =  117  Free Memory = 90597 MB
Rank =  118  Free Memory = 90597 MB
Rank =  119  Free Memory = 90597 MB
Rank =  120  Free Memory = 90597 MB
Rank =  121  Free Memory = 90596 MB
Rank =  122  Free Memory = 90596 MB
Rank =  123  Free Memory = 90596 MB
Rank =  124  Free Memory = 90596 MB
Rank =  125  Free Memory = 90596 MB
Rank =  126  Free Memory = 90596 MB
Rank =  127  Free Memory = 90596 MB
  Input file(s): opt_h2o_1b1_tett_run001d.xml 

=====================================================
                    QMCPACK 3.7.9

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: gvp
  Last git commit: a1d851bbe8d902a0d3168a885b757a378aeaab54-dirty
  Last git commit date: Mon Feb 13 11:52:39 2023 -0800
  Last git commit subject: Print param update magnitude and largest update
=====================================================
  Global options 

  Total number of MPI ranks = 128
  Number of MPI groups      = 1
  MPI group ID              = 0
  Number of ranks in group  = 128
  MPI ranks per node        = 32
  OMP 1st level threads     = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Structure-of-arrays (SoA) optimization enabled

  Input XML = opt_h2o_1b1_tett_run001d.xml

  Project = H2O
  date    = 2023-03-06 23:08:45 PST
  host    = n0026.savio3

 Random Number
 -------------
  Offset for the random number seeds based on time: 765

  Range of prime numbers to use as seeds over processors and threads = 5843-6967


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 8

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 3

 Wavefunction setup: 
 ------------------- 
  Name: psi0

   Jastrow
   -------
    Name: J2   Type: Two-Body   Function: Bspline

    Radial function for species: u - u
     Number of parameters: 10
     Cusp: -0.25
     Cutoff radius: 10

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     uu_0                 2.517233e-01    1         1  ON     0
     uu_1                 1.009440e-01    1         1  ON     1
     uu_2                 1.617079e-02    1         1  ON     2
     uu_3                -3.223684e-02    1         1  ON     3
     uu_4                -6.387117e-02    1         1  ON     4
     uu_5                -8.576607e-02    1         1  ON     5
     uu_6                -1.001312e-01    1         1  ON     6
     uu_7                -1.065673e-01    1         1  ON     7
     uu_8                -9.668739e-02    1         1  ON     8
     uu_9                -6.389513e-02    1         1  ON     9

    Radial function for species: u - d
     Number of parameters: 10
     Cusp: -5.000000e-01
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     ud_0                 3.492134e-01    1         1  ON     0
     ud_1                 1.235409e-01    1         1  ON     1
     ud_2                 2.392782e-02    1         1  ON     2
     ud_3                -3.019578e-02    1         1  ON     3
     ud_4                -6.975615e-02    1         1  ON     4
     ud_5                -9.484122e-02    1         1  ON     5
     ud_6                -1.085598e-01    1         1  ON     6
     ud_7                -1.109505e-01    1         1  ON     7
     ud_8                -9.792103e-02    1         1  ON     8
     ud_9                -6.281979e-02    1         1  ON     9


   Jastrow
   -------
    Name: J1   Type: One-Body   Function: Bspline

    Radial function for element: O
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

     Name                        Value Type Recompute Use Index
     ---- ---------------------------- ---- --------- --- -----
     eO_0                -5.692885e-01    1         1  ON     0
     eO_1                -3.060844e-01    1         1  ON     1
     eO_2                 4.730127e-02    1         1  ON     2
     eO_3                 2.840620e-01    1         1  ON     3
     eO_4                 3.913445e-01    1         1  ON     4
     eO_5                 3.212389e-01    1         1  ON     5
     eO_6                 1.205694e-01    1         1  ON     6
     eO_7                -7.888705e-02    1         1  ON     7
     eO_8                -1.549102e-01    1         1  ON     8
     eO_9                -6.122098e-02    1         1  ON     9

    Radial function for element: H1
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH1_0                -2.277697e-01    1         1  ON     0
     eH1_1                -1.106400e-01    1         1  ON     1
     eH1_2                -6.162952e-02    1         1  ON     2
     eH1_3                -2.530653e-02    1         1  ON     3
     eH1_4                 4.247832e-03    1         1  ON     4
     eH1_5                 2.367079e-02    1         1  ON     5
     eH1_6                 6.569443e-02    1         1  ON     6
     eH1_7                 1.154361e-01    1         1  ON     7
     eH1_8                 1.435221e-01    1         1  ON     8
     eH1_9                 7.467419e-02    1         1  ON     9

    Radial function for element: H2
     Number of parameters: 10
     Cusp: 0.000000e+00
     Cutoff radius: 1.000000e+01

      Name                        Value Type Recompute Use Index
     ----- ---------------------------- ---- --------- --- -----
     eH2_0                -2.307043e-01    1         1  ON     0
     eH2_1                -1.139386e-01    1         1  ON     1
     eH2_2                -6.444539e-02    1         1  ON     2
     eH2_3                -2.722663e-02    1         1  ON     3
     eH2_4                 1.073593e-03    1         1  ON     4
     eH2_5                 2.532957e-02    1         1  ON     5
     eH2_6                 7.564477e-02    1         1  ON     6
     eH2_7                 1.260027e-01    1         1  ON     7
     eH2_8                 1.609124e-01    1         1  ON     8
     eH2_9                 6.417217e-02    1         1  ON     9

  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  LCAO: SoaAtomicBasisSet<MultiQuintic,0>
  AO BasisSet for O
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
   R(n,l,m,s) 3 1 0 0
   R(n,l,m,s) 4 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
Adding 3 cartesian gaussian orbitals for l= 1
Adding 6 cartesian gaussian orbitals for l= 2
  Setting cutoff radius 1.018591e+01

   Maximum Angular Momentum  = 2
   Number of Radial functors = 5
   Basis size                = 14

  AO BasisSet for H1
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

  AO BasisSet for H2
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1.000000e-06 rf = 1.000000e+02 npts = 1001
   R(n,l,m,s) 0 0 0 0
   R(n,l,m,s) 1 0 0 0
   R(n,l,m,s) 2 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
Adding 1 cartesian gaussian orbitals for l= 0
Adding 3 cartesian gaussian orbitals for l= 1
  Setting cutoff radius 1.270574e+01

   Maximum Angular Momentum  = 1
   Number of Radial functors = 3
   Basis size                = 5

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with '' basis set.
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with '' basis set.
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 75 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 9.917803e-01
Norm of qchem ci vector (sum of qchem_ci^2): 0.000000e+00
Found 30 unique up determinants.
Found 30 unique down determinants.
Number of terms in pairs array: 20
Number of terms in pairs array: 20
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec

  ECPotential builder for pseudopotential 

  Adding pseudopotential for O
   Linear grid  ri=0.000000e+00 rf=1.000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.075000e+00
  Using global grid with delta = 1.000000e-03
   Making L=1 a local potential with a radial cutoff of 9.999000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.075000e+00
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0750000000e+00

  Adding pseudopotential for H1
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03

  Adding pseudopotential for H2
   Linear grid  ri=0.0000000000e+00 rf=1.0000000000e+01 npts = 10001
    ECPComponentBuilder::buildSemiLocalAndLocal 
    Assuming Hartree unit
   Number of angular momentum channels 2
   Maximum angular momentum channel 1
   Creating a Linear Grid Rmax=1.0000000000e-10
  Using global grid with delta = 1.0000000000e-03
   Making L=1 a local potential with a radial cutoff of 9.9990000000e+00
    Non-local pseudopotential parameters
    Maximum angular mementum = 0
    Number of non-local channels = 1
       l(0)=0
    Cutoff radius = 1.0000000000e-03
    Spherical grids and weights: 
         1.0000000000e+00  0.0000000000e+00  0.0000000000e+00    8.3333333333e-02
        -1.0000000000e+00  1.2246467991e-16  0.0000000000e+00    8.3333333333e-02
         4.4721359550e-01  8.9442719100e-01  0.0000000000e+00    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01  8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01  5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -8.9442719100e-01  1.0953573965e-16    8.3333333333e-02
         4.4721359550e-01 -7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
        -4.4721359550e-01 -2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
         4.4721359550e-01  2.7639320225e-01 -8.5065080835e-01    8.3333333333e-02
        -4.4721359550e-01  7.2360679775e-01 -5.2573111212e-01    8.3333333333e-02
    Maximum cutoff radius 1.0000000000e-03
  QMCHamiltonian::addOperator LocalECP to H, physical Hamiltonian 

  Using NonLocalECP potential 
    Maximum grid on a sphere for NonLocalECPotential: 12
  QMCHamiltonian::addOperator NonLocalECP to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type pseudo named NonLocalECP
  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    5 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 10
ParticleSetPool::randomize 
  Initialization Execution time = 2.1915e-01 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet 'e' contains 8 particles :  u(4) d(4)

    u  6.1002844054e-01  1.3250453608e-01 -4.2267217978e-01
    u -4.3494847795e-01 -2.3203549626e-01  1.0876787134e-01
    u -1.5984350305e-01  8.1842956548e-01  5.1837161342e-02
    u  1.1948334779e+00  1.4453040952e+00  1.6346730752e+00
    d -9.5054657961e-01  2.3768909128e-01 -6.0876959125e-01
    d -2.0429807517e-01  1.5546410594e+00 -1.0292769217e-01
    d  4.7451519973e-01  3.4811618685e-02  3.5425821429e-01
    d -8.6403568621e-02 -1.8286319639e+00  9.9844026831e-01

  Distance table for similar particles (A-A):
    source/target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  ParticleSet 'ion0' contains 3 particles :  O(1) H1(1) H2(1)

    O  0.0000000000e+00  0.0000000000e+00 -1.3209751581e-01
    H1  0.0000000000e+00  1.4315279079e+00  9.7970009311e-01
    H2  0.0000000000e+00 -1.4315279079e+00  9.7970009311e-01

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.


  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  LocalECP        LocalECPotential: ion0
  NonLocalECP     NonLocalECPotential: ion0
  IonIon          CoulombAA source/target ion0


Loop execution max-interations = 60
Inside LM engine constructor, num_params is: 0 and _total_num_params is: 0

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s000 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02

=========================================================
  Start VMC
  File Root H2O.s000 append = no 
=========================================================
Resetting walkers
  Using the current 1 walkers.
  Total number of walkers: 1.2800000000e+02
  Total weight: 1.2800000000e+02
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000000000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000000000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000000000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000000000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000000000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000000000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: 0 and ratio_threshold_: 0.0000000000e+00
Allocating full size _hmat_temp and _smat_temp
Inside LM engine's get_param, num_params is: 50
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -16.9113
    reference variance = 0.257157
====================================================
  Execution time = 2.2327e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s000
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9195e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4874e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291987984610
                                         uncertainty =       0.002230170235

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291987984610
                                         uncertainty =       0.002230170235

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382067752
  error estimate for blocks of size 2^( 2) =       0.000398413880
  error estimate for blocks of size 2^( 3) =       0.000415375278
  error estimate for blocks of size 2^( 4) =       0.000429648765
  error estimate for blocks of size 2^( 5) =       0.000440116246
  error estimate for blocks of size 2^( 6) =       0.000448558765
  error estimate for blocks of size 2^( 7) =       0.000453195981

      target function =      -0.925169623601
              le_mean =     -16.899341903719
             les_mean =     285.879708166807
             stat err =       0.000442879940
             autocorr =       1.343665766912
   target nu stat err =       0.000442879940
   target dn stat err =       0.002380169132
      target stat err =       0.003923451474
              std dev =       0.540325396406
             le_variance =       0.291951534001


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy-1.689934190372e+01 
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e-01, overlap shift 2.5000e+00 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925184786216       residual = 4.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925227095045       residual = 8.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925241565791       residual = 3.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925246815508       residual = 1.68e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925252969018       residual = 1.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925257611141       residual = 8.22e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925261001579       residual = 6.23e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925261271084       residual = 4.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925263577418       residual = 3.32e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925264946366       residual = 2.03e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925265648241       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925267535048       residual = 2.27e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925268098601       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925268589843       residual = 4.69e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925268978440       residual = 4.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925269759944       residual = 3.70e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925270763358       residual = 2.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925271134011       residual = 1.15e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925271325373       residual = 1.09e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925271508294       residual = 8.61e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925272072553       residual = 3.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925271898864       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925271851237       residual = 6.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925271787526       residual = 6.82e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925271832895       residual = 1.96e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925271872198       residual = 6.71e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e-01 is 1.761596e-03

solving harmonic davidson linear method for identity shift 1.0000e+00, overlap shift 1.0000e+01 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925184786216       residual = 4.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925197368772       residual = 8.32e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925201702933       residual = 3.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925203232595       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925205049949       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925206388415       residual = 7.66e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925207304190       residual = 4.03e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925207442939       residual = 5.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925208057893       residual = 2.84e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925208394625       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925208562136       residual = 1.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925209011221       residual = 2.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925209168551       residual = 8.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925209292328       residual = 3.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925209400902       residual = 3.40e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925209581894       residual = 2.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925209818505       residual = 1.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925209894028       residual = 7.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925209955313       residual = 7.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925209987585       residual = 4.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925210100447       residual = 2.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925210039306       residual = 8.21e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925210032814       residual = 3.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925210019964       residual = 3.63e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925210030225       residual = 1.16e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925210038633       residual = 3.28e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+00 is 4.502033e-04

solving harmonic davidson linear method for identity shift 4.0000e+00, overlap shift 4.0000e+01 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925184786216       residual = 4.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925188088362       residual = 8.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925189229304       residual = 3.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925189628465       residual = 1.65e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925190104150       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925190451995       residual = 7.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925190683819       residual = 3.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925190736049       residual = 6.20e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925190883107       residual = 2.76e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925190964705       residual = 1.77e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925191005976       residual = 1.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925191116160       residual = 2.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925191157049       residual = 7.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925191187779       residual = 3.59e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925191215561       residual = 3.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925191259316       residual = 2.51e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925191317066       residual = 1.61e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925191334901       residual = 6.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925191351455       residual = 6.53e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925191358234       residual = 4.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925191383922       residual = 1.68e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925191368001       residual = 6.53e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925191367137       residual = 2.68e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925191364075       residual = 2.95e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925191366463       residual = 1.01e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925191368462       residual = 2.74e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+00 is 1.140908e-04

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.025967 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.7851e+01
  </log>
  <optVariables href="H2O.s000.opt.xml">
uu_0  2.517825e-01                 1 1 ON  0
uu_1  1.008994e-01                 1 1 ON  1
uu_2  1.612483e-02                 1 1 ON  2
uu_3  -3.229321e-02                1 1 ON  3
uu_4  -6.387663e-02                1 1 ON  4
uu_5  -8.566203e-02                1 1 ON  5
uu_6  -1.001601e-01                1 1 ON  6
uu_7  -1.065264e-01                1 1 ON  7
uu_8  -9.679071e-02                1 1 ON  8
uu_9  -6.394020e-02                1 1 ON  9
ud_0  3.492931e-01                 1 1 ON  10
ud_1  1.235232e-01                 1 1 ON  11
ud_2  2.385517e-02                 1 1 ON  12
ud_3  -3.030175e-02                1 1 ON  13
ud_4  -6.983629e-02                1 1 ON  14
ud_5  -9.486039e-02                1 1 ON  15
ud_6  -1.085376e-01                1 1 ON  16
ud_7  -1.108748e-01                1 1 ON  17
ud_8  -9.804375e-02                1 1 ON  18
ud_9  -6.273084e-02                1 1 ON  19
eO_0  -5.688976e-01                1 1 ON  20
eO_1  -3.056386e-01                1 1 ON  21
eO_2  4.758581e-02                 1 1 ON  22
eO_3  2.841803e-01                 1 1 ON  23
eO_4  3.912113e-01                 1 1 ON  24
eO_5  3.207898e-01                 1 1 ON  25
eO_6  1.201192e-01                 1 1 ON  26
eO_7  -7.919145e-02                1 1 ON  27
eO_8  -1.548396e-01                1 1 ON  28
eO_9  -6.118899e-02                1 1 ON  29
eH1_0 -2.281320e-01                1 1 ON  30
eH1_1 -1.107713e-01                1 1 ON  31
eH1_2 -6.165547e-02                1 1 ON  32
eH1_3 -2.536469e-02                1 1 ON  33
eH1_4 4.177141e-03                 1 1 ON  34
eH1_5 2.385380e-02                 1 1 ON  35
eH1_6 6.608424e-02                 1 1 ON  36
eH1_7 1.155578e-01                 1 1 ON  37
eH1_8 1.434325e-01                 1 1 ON  38
eH1_9 7.469387e-02                 1 1 ON  39
eH2_0 -2.308499e-01                1 1 ON  40
eH2_1 -1.138802e-01                1 1 ON  41
eH2_2 -6.431683e-02                1 1 ON  42
eH2_3 -2.715622e-02                1 1 ON  43
eH2_4 1.148143e-03                 1 1 ON  44
eH2_5 2.505137e-02                 1 1 ON  45
eH2_6 7.548193e-02                 1 1 ON  46
eH2_7 1.260732e-01                 1 1 ON  47
eH2_8 1.609571e-01                 1 1 ON  48
eH2_9 6.428396e-02                 1 1 ON  49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -16.854
    reference variance = 0.284393
====================================================
  Execution time = 2.0386e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s000
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9645e-01
  Total weights = 2.0000e+06
  Execution time = 1.9097e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296393603958
                                         uncertainty =       0.004011933976

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296393603958
                                         uncertainty =       0.004011933976

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384975674
  error estimate for blocks of size 2^( 2) =       0.000401704252
  error estimate for blocks of size 2^( 3) =       0.000418995328
  error estimate for blocks of size 2^( 4) =       0.000433624407
  error estimate for blocks of size 2^( 5) =       0.000444288139
  error estimate for blocks of size 2^( 6) =       0.000451590911
  error estimate for blocks of size 2^( 7) =       0.000456122119

      target function =      -0.918019488047
              le_mean =     -16.898742142889
             les_mean =     285.863898403473
             stat err =       0.000446406394
             autocorr =       1.344603494405
   target nu stat err =       0.000446406394
   target dn stat err =       0.003827959782
      target stat err =       0.006133024615
              std dev =       0.544437819993
             le_variance =       0.296412539839

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296537502189
                                         uncertainty =       0.004016224120

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296537502189
                                         uncertainty =       0.004016224120

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385069220
  error estimate for blocks of size 2^( 2) =       0.000401804762
  error estimate for blocks of size 2^( 3) =       0.000419122332
  error estimate for blocks of size 2^( 4) =       0.000433784464
  error estimate for blocks of size 2^( 5) =       0.000444480211
  error estimate for blocks of size 2^( 6) =       0.000451799547
  error estimate for blocks of size 2^( 7) =       0.000456327755

      target function =      -0.917790177655
              le_mean =     -16.898749057378
             les_mean =     285.864276164395
             stat err =       0.000446597994
             autocorr =       1.345104192168
   target nu stat err =       0.000446597994
   target dn stat err =       0.003831953673
      target stat err =       0.006136401777
              std dev =       0.544570113427
             le_variance =       0.296556608438

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296479521799
                                         uncertainty =       0.004014680249

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296479521799
                                         uncertainty =       0.004014680249

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385031523
  error estimate for blocks of size 2^( 2) =       0.000401762537
  error estimate for blocks of size 2^( 3) =       0.000419067298
  error estimate for blocks of size 2^( 4) =       0.000433714035
  error estimate for blocks of size 2^( 5) =       0.000444395131
  error estimate for blocks of size 2^( 6) =       0.000451706870
  error estimate for blocks of size 2^( 7) =       0.000456236000

      target function =      -0.917882610563
              le_mean =     -16.898745495532
             les_mean =     285.864097722089
             stat err =       0.000446513009
             autocorr =       1.344855605653
   target nu stat err =       0.000446513009
   target dn stat err =       0.003830519244
      target stat err =       0.006135307092
              std dev =       0.544516801928
             le_variance =       0.296498547581

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296404609251
                                         uncertainty =       0.004012301443

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296404609251
                                         uncertainty =       0.004012301443

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384982828
  error estimate for blocks of size 2^( 2) =       0.000401711619
  error estimate for blocks of size 2^( 3) =       0.000419004372
  error estimate for blocks of size 2^( 4) =       0.000433635660
  error estimate for blocks of size 2^( 5) =       0.000444301590
  error estimate for blocks of size 2^( 6) =       0.000451605495
  error estimate for blocks of size 2^( 7) =       0.000456136409

      target function =      -0.918001958000
              le_mean =     -16.898742464656
             les_mean =     285.863920295028
             stat err =       0.000446419789
             autocorr =       1.344634213039
   target nu stat err =       0.000446419789
   target dn stat err =       0.003828302255
      target stat err =       0.006133338898
              std dev =       0.544447937342
             le_variance =       0.296423556476


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918019488047        initial  <--
     2.5000e-01     2.5000e+00             1.7616e-03        -0.917790177655
     1.0000e+00     1.0000e+01             4.5020e-04        -0.917882610563
     4.0000e+00     4.0000e+01             1.1409e-04        -0.918001958000

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.0623
  </log>
  <optVariables href="H2O.s000.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7920e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s001 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s001 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=1  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6883e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -16.8728
    reference variance = 0.14535
====================================================
  Execution time = 2.0452e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s001
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9355e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5667e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293600469270
                                         uncertainty =       0.004382130364

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293600469270
                                         uncertainty =       0.004382130364

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383109113
  error estimate for blocks of size 2^( 2) =       0.000400270887
  error estimate for blocks of size 2^( 3) =       0.000417522761
  error estimate for blocks of size 2^( 4) =       0.000432657478
  error estimate for blocks of size 2^( 5) =       0.000443908127
  error estimate for blocks of size 2^( 6) =       0.000450959029
  error estimate for blocks of size 2^( 7) =       0.000454586929

      target function =      -0.922615563710
              le_mean =     -16.898576090919
             les_mean =     285.855418938818
             stat err =       0.000445527891
             autocorr =       1.352398960330
   target nu stat err =       0.000445527891
   target dn stat err =       0.003328113111
      target stat err =       0.005396977082
              std dev =       0.541798103548
             le_variance =       0.293545185008


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689857609092e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+00, overlap shift 2.5000e+01 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922645730272       residual = 3.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922649142306       residual = 6.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922650478994       residual = 4.18e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922651569062       residual = 2.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922652123957       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922652437340       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922652957843       residual = 1.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922653224972       residual = 4.69e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922653702217       residual = 2.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922653974518       residual = 2.63e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922654207268       residual = 2.62e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922654307692       residual = 1.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922654383992       residual = 6.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922654469096       residual = 5.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922654473209       residual = 3.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922654526146       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922654515136       residual = 1.00e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922654573395       residual = 9.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922654589197       residual = 5.37e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922654635413       residual = 2.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922654646044       residual = 3.48e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922654624062       residual = 1.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922654630559       residual = 1.35e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922654640509       residual = 2.49e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922654646649       residual = 1.14e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922654645212       residual = 1.05e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922654646486       residual = 4.03e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+00 is 1.595952e-04

solving harmonic davidson linear method for identity shift 1.0000e+01, overlap shift 1.0000e+02 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922645730272       residual = 3.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922646600044       residual = 6.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922646941221       residual = 4.15e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922647218766       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922647359101       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922647437566       residual = 1.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922647568029       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922647636386       residual = 4.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922647757126       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922647826044       residual = 2.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922647884863       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922647908949       residual = 1.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922647926808       residual = 6.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922647948524       residual = 5.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922647948918       residual = 3.34e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922647962022       residual = 2.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922647959290       residual = 9.56e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922647973740       residual = 9.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922647977639       residual = 5.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922647988942       residual = 2.75e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922647991593       residual = 3.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922647986129       residual = 9.35e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922647987787       residual = 1.26e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922647990125       residual = 2.32e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922647991601       residual = 1.09e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922647991238       residual = 9.46e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+01 is 4.005671e-05

solving harmonic davidson linear method for identity shift 4.0000e+01, overlap shift 4.0000e+02 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922645730272       residual = 3.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922645948788       residual = 6.40e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922646034533       residual = 4.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922646104241       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922646139425       residual = 1.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.922646159048       residual = 1.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.922646191684       residual = 1.58e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922646208875       residual = 4.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.922646239149       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.922646256432       residual = 2.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.922646271176       residual = 2.42e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.922646277133       residual = 1.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922646281520       residual = 6.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.922646286975       residual = 5.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.922646287037       residual = 3.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922646290303       residual = 2.49e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.922646289620       residual = 9.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.922646293225       residual = 9.02e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922646294197       residual = 5.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.922646297007       residual = 2.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922646297669       residual = 3.22e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922646296305       residual = 9.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.922646296722       residual = 1.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.922646297297       residual = 2.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922646297662       residual = 1.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922646297571       residual = 9.21e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+01 is 1.003027e-05

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.049038 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6051e+01
  </log>
  <optVariables href="H2O.s001.opt.xml">
 uu_0                 2.516947e-01 1 1  ON 0
 uu_1                 1.009178e-01 1 1  ON 1
 uu_2                 1.614633e-02 1 1  ON 2
 uu_3                -3.226275e-02 1 1  ON 3
 uu_4                -6.389332e-02 1 1  ON 4
 uu_5                -8.578034e-02 1 1  ON 5
 uu_6                -1.001218e-01 1 1  ON 6
 uu_7                -1.065337e-01 1 1  ON 7
 uu_8                -9.664733e-02 1 1  ON 8
 uu_9                -6.385736e-02 1 1  ON 9
 ud_0                 3.492158e-01 1 1  ON 10
 ud_1                 1.235378e-01 1 1  ON 11
 ud_2                 2.392198e-02 1 1  ON 12
 ud_3                -3.020384e-02 1 1  ON 13
 ud_4                -6.976360e-02 1 1  ON 14
 ud_5                -9.485533e-02 1 1  ON 15
 ud_6                -1.085672e-01 1 1  ON 16
 ud_7                -1.109587e-01 1 1  ON 17
 ud_8                -9.791846e-02 1 1  ON 18
 ud_9                -6.279831e-02 1 1  ON 19
 eO_0                -5.692524e-01 1 1  ON 20
 eO_1                -3.060464e-01 1 1  ON 21
 eO_2                 4.730756e-02 1 1  ON 22
 eO_3                 2.840535e-01 1 1  ON 23
 eO_4                 3.913118e-01 1 1  ON 24
 eO_5                 3.212152e-01 1 1  ON 25
 eO_6                 1.205607e-01 1 1  ON 26
 eO_7                -7.889715e-02 1 1  ON 27
 eO_8                -1.549125e-01 1 1  ON 28
 eO_9                -6.121672e-02 1 1  ON 29
eH1_0                -2.278086e-01 1 1  ON 30
eH1_1                -1.106617e-01 1 1  ON 31
eH1_2                -6.163732e-02 1 1  ON 32
eH1_3                -2.531465e-02 1 1  ON 33
eH1_4                 4.237136e-03 1 1  ON 34
eH1_5                 2.367935e-02 1 1  ON 35
eH1_6                 6.573023e-02 1 1  ON 36
eH1_7                 1.154459e-01 1 1  ON 37
eH1_8                 1.435381e-01 1 1  ON 38
eH1_9                 7.468693e-02 1 1  ON 39
eH2_0                -2.307273e-01 1 1  ON 40
eH2_1                -1.139490e-01 1 1  ON 41
eH2_2                -6.443810e-02 1 1  ON 42
eH2_3                -2.721920e-02 1 1  ON 43
eH2_4                 1.092327e-03 1 1  ON 44
eH2_5                 2.533611e-02 1 1  ON 45
eH2_6                 7.564208e-02 1 1  ON 46
eH2_7                 1.259774e-01 1 1  ON 47
eH2_8                 1.609109e-01 1 1  ON 48
eH2_9                 6.419232e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 1
    time step          = 0.05
    reference energy   = -16.9831
    reference variance = 0.326159
====================================================
  Execution time = 2.0134e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s001
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9671e-01
  Total weights = 2.0000e+06
  Execution time = 1.9006e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296732350619
                                         uncertainty =       0.002512740907

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296732350619
                                         uncertainty =       0.002512740907

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385166716
  error estimate for blocks of size 2^( 2) =       0.000401876055
  error estimate for blocks of size 2^( 3) =       0.000419574728
  error estimate for blocks of size 2^( 4) =       0.000434890337
  error estimate for blocks of size 2^( 5) =       0.000447387232
  error estimate for blocks of size 2^( 6) =       0.000455714340
  error estimate for blocks of size 2^( 7) =       0.000459446280

      target function =      -0.917590568133
              le_mean =     -16.898282681236
             les_mean =     285.848664224559
             stat err =       0.000449359547
             autocorr =       1.361101289695
   target nu stat err =       0.000449359547
   target dn stat err =       0.002898044535
      target stat err =       0.004662938055
              std dev =       0.544707993302
             le_variance =       0.296706797967

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296744230162
                                         uncertainty =       0.002512810628

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296744230162
                                         uncertainty =       0.002512810628

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385174441
  error estimate for blocks of size 2^( 2) =       0.000401888712
  error estimate for blocks of size 2^( 3) =       0.000419594815
  error estimate for blocks of size 2^( 4) =       0.000434918647
  error estimate for blocks of size 2^( 5) =       0.000447421631
  error estimate for blocks of size 2^( 6) =       0.000455753326
  error estimate for blocks of size 2^( 7) =       0.000459488848

      target function =      -0.917571676113
              le_mean =     -16.898282860007
             les_mean =     285.848682168360
             stat err =       0.000449395613
             autocorr =       1.361265178337
   target nu stat err =       0.000449395613
   target dn stat err =       0.002898217822
      target stat err =       0.004663031750
              std dev =       0.544718918255
             le_variance =       0.296718699905

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296738354708
                                         uncertainty =       0.002512776297

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296738354708
                                         uncertainty =       0.002512776297

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385170620
  error estimate for blocks of size 2^( 2) =       0.000401882447
  error estimate for blocks of size 2^( 3) =       0.000419584869
  error estimate for blocks of size 2^( 4) =       0.000434904626
  error estimate for blocks of size 2^( 5) =       0.000447404593
  error estimate for blocks of size 2^( 6) =       0.000455734014
  error estimate for blocks of size 2^( 7) =       0.000459467769

      target function =      -0.917581020190
              le_mean =     -16.898282758529
             les_mean =     285.848672852312
             stat err =       0.000449377750
             autocorr =       1.361183969275
   target nu stat err =       0.000449377750
   target dn stat err =       0.002898132615
      target stat err =       0.004662986073
              std dev =       0.544713515033
             le_variance =       0.296712813459

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296733100338
                                         uncertainty =       0.002512745367

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296733100338
                                         uncertainty =       0.002512745367

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385167203
  error estimate for blocks of size 2^( 2) =       0.000401876853
  error estimate for blocks of size 2^( 3) =       0.000419575995
  error estimate for blocks of size 2^( 4) =       0.000434892123
  error estimate for blocks of size 2^( 5) =       0.000447389403
  error estimate for blocks of size 2^( 6) =       0.000455716800
  error estimate for blocks of size 2^( 7) =       0.000459448968

      target function =      -0.917589375941
              le_mean =     -16.898282689450
             les_mean =     285.848665253331
             stat err =       0.000449361824
             autocorr =       1.361111634972
   target nu stat err =       0.000449361824
   target dn stat err =       0.002898055610
      target stat err =       0.004662944159
              std dev =       0.544708682800
             le_variance =       0.296707549117


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917590568133        initial  <--
     2.5000e+00     2.5000e+01             1.5960e-04        -0.917571676113
     1.0000e+01     1.0000e+02             4.0057e-05        -0.917581020190
     4.0000e+01     4.0000e+02             1.0030e-05        -0.917589375941

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7708
  </log>
  <optVariables href="H2O.s001.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5829e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s002 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s002 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=2  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6905e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -16.9459
    reference variance = 0.800662
====================================================
  Execution time = 2.0645e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s002
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9948e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5203e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299477605900
                                         uncertainty =       0.005826446638

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299477605900
                                         uncertainty =       0.005826446638

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386963706
  error estimate for blocks of size 2^( 2) =       0.000403579579
  error estimate for blocks of size 2^( 3) =       0.000420192235
  error estimate for blocks of size 2^( 4) =       0.000434647199
  error estimate for blocks of size 2^( 5) =       0.000446237490
  error estimate for blocks of size 2^( 6) =       0.000452066857
  error estimate for blocks of size 2^( 7) =       0.000454714839

      target function =      -0.913133905620
              le_mean =     -16.898244732872
             les_mean =     285.850156721270
             stat err =       0.000446916596
             autocorr =       1.333866909417
   target nu stat err =       0.000446916596
   target dn stat err =       0.006114253404
      target stat err =       0.009637134516
              std dev =       0.547249320685
             le_variance =       0.299481818990


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689824473287e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+01, overlap shift 2.5000e+02 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913233143772       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913233764641       residual = 9.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913234061600       residual = 7.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913234161243       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913234260603       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913234359241       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913234395678       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913234458450       residual = 4.89e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913234482961       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913234509225       residual = 1.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913234534629       residual = 2.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913234556191       residual = 1.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913234581165       residual = 1.79e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913234592032       residual = 4.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913234603037       residual = 3.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913234605621       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913234613489       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913234618108       residual = 9.09e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913234622416       residual = 4.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913234623331       residual = 2.60e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913234622418       residual = 2.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913234622238       residual = 7.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913234621630       residual = 5.61e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913234622252       residual = 2.76e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913234622438       residual = 1.25e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913234622274       residual = 6.21e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+01 is 2.393181e-05

solving harmonic davidson linear method for identity shift 1.0000e+02, overlap shift 1.0000e+03 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913233143772       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913233299318       residual = 9.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913233373728       residual = 7.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913233398672       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913233423555       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913233448225       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913233457367       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913233473101       residual = 4.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913233479243       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913233485803       residual = 1.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913233492164       residual = 2.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913233497552       residual = 1.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913233503793       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913233506508       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913233509259       residual = 3.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913233509900       residual = 1.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913233511866       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913233513020       residual = 9.06e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913233514094       residual = 4.01e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913233514322       residual = 2.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913233514092       residual = 2.14e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913233514047       residual = 7.22e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913233513896       residual = 5.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913233514051       residual = 2.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913233514097       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913233514057       residual = 6.16e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+02 is 5.989022e-06

solving harmonic davidson linear method for identity shift 4.0000e+02, overlap shift 4.0000e+03 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913233143772       residual = 5.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913233182679       residual = 9.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913233201292       residual = 7.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913233207530       residual = 3.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913233213754       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913233219921       residual = 2.11e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913233222210       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913233226146       residual = 4.85e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913233227682       residual = 2.65e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913233229320       residual = 1.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913233230911       residual = 2.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913233232258       residual = 1.93e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913233233818       residual = 1.78e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913233234499       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913233235185       residual = 3.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913233235345       residual = 1.62e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913233235837       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913233236127       residual = 9.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913233236393       residual = 4.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913233236450       residual = 2.58e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913233236393       residual = 2.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913233236382       residual = 7.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913233236345       residual = 5.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913233236384       residual = 2.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913233236393       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913233236384       residual = 6.15e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+02 is 1.497636e-06

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.071341 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6198e+01
  </log>
  <optVariables href="H2O.s002.opt.xml">
 uu_0                 2.517213e-01 1 1  ON 0
 uu_1                 1.009415e-01 1 1  ON 1
 uu_2                 1.616842e-02 1 1  ON 2
 uu_3                -3.223860e-02 1 1  ON 3
 uu_4                -6.387093e-02 1 1  ON 4
 uu_5                -8.576558e-02 1 1  ON 5
 uu_6                -1.001309e-01 1 1  ON 6
 uu_7                -1.065647e-01 1 1  ON 7
 uu_8                -9.668663e-02 1 1  ON 8
 uu_9                -6.389360e-02 1 1  ON 9
 ud_0                 3.492137e-01 1 1  ON 10
 ud_1                 1.235412e-01 1 1  ON 11
 ud_2                 2.392758e-02 1 1  ON 12
 ud_3                -3.019658e-02 1 1  ON 13
 ud_4                -6.975551e-02 1 1  ON 14
 ud_5                -9.484077e-02 1 1  ON 15
 ud_6                -1.085595e-01 1 1  ON 16
 ud_7                -1.109515e-01 1 1  ON 17
 ud_8                -9.792274e-02 1 1  ON 18
 ud_9                -6.281975e-02 1 1  ON 19
 eO_0                -5.692826e-01 1 1  ON 20
 eO_1                -3.060794e-01 1 1  ON 21
 eO_2                 4.730278e-02 1 1  ON 22
 eO_3                 2.840617e-01 1 1  ON 23
 eO_4                 3.913417e-01 1 1  ON 24
 eO_5                 3.212329e-01 1 1  ON 25
 eO_6                 1.205661e-01 1 1  ON 26
 eO_7                -7.888654e-02 1 1  ON 27
 eO_8                -1.549108e-01 1 1  ON 28
 eO_9                -6.122111e-02 1 1  ON 29
eH1_0                -2.277730e-01 1 1  ON 30
eH1_1                -1.106403e-01 1 1  ON 31
eH1_2                -6.162849e-02 1 1  ON 32
eH1_3                -2.530508e-02 1 1  ON 33
eH1_4                 4.248955e-03 1 1  ON 34
eH1_5                 2.366815e-02 1 1  ON 35
eH1_6                 6.569431e-02 1 1  ON 36
eH1_7                 1.154379e-01 1 1  ON 37
eH1_8                 1.435223e-01 1 1  ON 38
eH1_9                 7.467476e-02 1 1  ON 39
eH2_0                -2.307061e-01 1 1  ON 40
eH2_1                -1.139396e-01 1 1  ON 41
eH2_2                -6.444362e-02 1 1  ON 42
eH2_3                -2.722355e-02 1 1  ON 43
eH2_4                 1.075161e-03 1 1  ON 44
eH2_5                 2.532690e-02 1 1  ON 45
eH2_6                 7.564289e-02 1 1  ON 46
eH2_7                 1.260021e-01 1 1  ON 47
eH2_8                 1.609122e-01 1 1  ON 48
eH2_9                 6.417379e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 2
    time step          = 0.05
    reference energy   = -16.8878
    reference variance = 0.211246
====================================================
  Execution time = 2.2098e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s002
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9175e-01
  Total weights = 2.0000e+06
  Execution time = 1.9070e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796687713
                                         uncertainty =       0.002849400112

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796687713
                                         uncertainty =       0.002849400112

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381933039
  error estimate for blocks of size 2^( 2) =       0.000398971668
  error estimate for blocks of size 2^( 3) =       0.000416478948
  error estimate for blocks of size 2^( 4) =       0.000431795389
  error estimate for blocks of size 2^( 5) =       0.000443292979
  error estimate for blocks of size 2^( 6) =       0.000452307146
  error estimate for blocks of size 2^( 7) =       0.000457181880

      target function =      -0.925504892940
              le_mean =     -16.899074613600
             les_mean =     285.870468342439
             stat err =       0.000446144348
             autocorr =       1.364508781058
   target nu stat err =       0.000446144348
   target dn stat err =       0.002834249206
      target stat err =       0.004647068940
              std dev =       0.540134883422
             le_variance =       0.291745692289

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796811972
                                         uncertainty =       0.002849377545

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796811972
                                         uncertainty =       0.002849377545

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381933118
  error estimate for blocks of size 2^( 2) =       0.000398972207
  error estimate for blocks of size 2^( 3) =       0.000416480095
  error estimate for blocks of size 2^( 4) =       0.000431797095
  error estimate for blocks of size 2^( 5) =       0.000443295285
  error estimate for blocks of size 2^( 6) =       0.000452309705
  error estimate for blocks of size 2^( 7) =       0.000457184806

      target function =      -0.925504697875
              le_mean =     -16.899074575294
             les_mean =     285.870467169402
             stat err =       0.000446146723
             autocorr =       1.364522737449
   target nu stat err =       0.000446146723
   target dn stat err =       0.002834231593
      target stat err =       0.004647039299
              std dev =       0.540134996028
             le_variance =       0.291745813935

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796749684
                                         uncertainty =       0.002849388806

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796749684
                                         uncertainty =       0.002849388806

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381933079
  error estimate for blocks of size 2^( 2) =       0.000398971938
  error estimate for blocks of size 2^( 3) =       0.000416479522
  error estimate for blocks of size 2^( 4) =       0.000431796243
  error estimate for blocks of size 2^( 5) =       0.000443294133
  error estimate for blocks of size 2^( 6) =       0.000452308426
  error estimate for blocks of size 2^( 7) =       0.000457183344

      target function =      -0.925504795672
              le_mean =     -16.899074594275
             les_mean =     285.870467749935
             stat err =       0.000446145537
             autocorr =       1.364515765968
   target nu stat err =       0.000446145537
   target dn stat err =       0.002834240382
      target stat err =       0.004647054093
              std dev =       0.540134939577
             le_variance =       0.291745752952

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796695410
                                         uncertainty =       0.002849398698

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291796695410
                                         uncertainty =       0.002849398698

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381933044
  error estimate for blocks of size 2^( 2) =       0.000398971702
  error estimate for blocks of size 2^( 3) =       0.000416479020
  error estimate for blocks of size 2^( 4) =       0.000431795495
  error estimate for blocks of size 2^( 5) =       0.000443293123
  error estimate for blocks of size 2^( 6) =       0.000452307306
  error estimate for blocks of size 2^( 7) =       0.000457182063

      target function =      -0.925504880863
              le_mean =     -16.899074611167
             les_mean =     285.870468267739
             stat err =       0.000446144497
             autocorr =       1.364509654310
   target nu stat err =       0.000446144497
   target dn stat err =       0.002834248103
      target stat err =       0.004647067084
              std dev =       0.540134890395
             le_variance =       0.291745699822


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925504892940        initial  <--
     2.5000e+01     2.5000e+02             2.3932e-05        -0.925504697875
     1.0000e+02     1.0000e+03             5.9890e-06        -0.925504795672
     4.0000e+02     4.0000e+03             1.4976e-06        -0.925504880863

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 31.7374
  </log>
  <optVariables href="H2O.s002.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7941e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s003 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s003 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=3  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -16.9127
    reference variance = 0.220582
====================================================
  Execution time = 2.0600e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s003
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9679e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.6106e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296866168809
                                         uncertainty =       0.002408311736

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296866168809
                                         uncertainty =       0.002408311736

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385222623
  error estimate for blocks of size 2^( 2) =       0.000401775942
  error estimate for blocks of size 2^( 3) =       0.000418779063
  error estimate for blocks of size 2^( 4) =       0.000433981443
  error estimate for blocks of size 2^( 5) =       0.000446355865
  error estimate for blocks of size 2^( 6) =       0.000454393199
  error estimate for blocks of size 2^( 7) =       0.000459447903

      target function =      -0.917451100584
              le_mean =     -16.898452770263
             les_mean =     285.854498818879
             stat err =       0.000448544603
             autocorr =       1.355775252027
   target nu stat err =       0.000448544603
   target dn stat err =       0.002566515072
      target stat err =       0.004145049120
              std dev =       0.544787057922
             le_variance =       0.296792938479


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689845277026e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+02, overlap shift 2.5000e+03 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917468424953       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917468507671       residual = 7.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917468523611       residual = 5.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917468529777       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917468539063       residual = 8.97e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917468547075       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917468553827       residual = 3.44e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917468555747       residual = 3.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917468557435       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917468559611       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917468560581       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917468561097       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917468561174       residual = 7.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917468561923       residual = 5.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917468562687       residual = 2.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917468562809       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917468563386       residual = 1.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917468563812       residual = 6.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917468563804       residual = 3.84e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917468563945       residual = 2.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917468563976       residual = 2.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917468564202       residual = 1.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917468564183       residual = 5.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917468564304       residual = 2.44e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917468564373       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917468564343       residual = 3.96e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+02 is 1.440491e-06

solving harmonic davidson linear method for identity shift 1.0000e+03, overlap shift 1.0000e+04 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917468424953       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917468445636       residual = 7.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917468449622       residual = 5.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917468451164       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917468453486       residual = 8.97e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917468455490       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917468457177       residual = 3.44e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917468457657       residual = 3.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917468458080       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917468458621       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917468458863       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917468458994       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917468459011       residual = 7.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917468459199       residual = 5.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917468459392       residual = 2.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917468459424       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917468459568       residual = 1.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917468459673       residual = 6.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917468459674       residual = 3.84e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917468459705       residual = 2.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917468459718       residual = 2.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917468459774       residual = 1.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917468459765       residual = 5.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917468459796       residual = 2.44e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917468459814       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917468459803       residual = 3.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+03 is 3.601629e-07

solving harmonic davidson linear method for identity shift 4.0000e+03, overlap shift 4.0000e+04 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917468424953       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917468430124       residual = 7.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917468431120       residual = 5.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917468431506       residual = 1.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917468432093       residual = 8.97e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917468432585       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.917468433013       residual = 3.44e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917468433129       residual = 3.58e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.917468433236       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.917468433367       residual = 1.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.917468433422       residual = 1.71e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917468433458       residual = 1.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917468433457       residual = 7.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917468433511       residual = 5.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.917468433548       residual = 2.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917468433561       residual = 1.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.917468433607       residual = 1.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917468433632       residual = 6.66e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917468433633       residual = 3.84e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917468433641       residual = 2.39e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.917468433627       residual = 2.13e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.917468433670       residual = 1.64e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.917468433650       residual = 5.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917468433664       residual = 2.43e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917468433663       residual = 1.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.917468433679       residual = 3.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+03 is 9.004322e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.093667 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6243e+01
  </log>
  <optVariables href="H2O.s003.opt.xml">
 uu_0                 2.517232e-01 1 1  ON 0
 uu_1                 1.009439e-01 1 1  ON 1
 uu_2                 1.617072e-02 1 1  ON 2
 uu_3                -3.223690e-02 1 1  ON 3
 uu_4                -6.387121e-02 1 1  ON 4
 uu_5                -8.576602e-02 1 1  ON 5
 uu_6                -1.001313e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668738e-02 1 1  ON 8
 uu_9                -6.389482e-02 1 1  ON 9
 ud_0                 3.492135e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392772e-02 1 1  ON 12
 ud_3                -3.019594e-02 1 1  ON 13
 ud_4                -6.975629e-02 1 1  ON 14
 ud_5                -9.484135e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792099e-02 1 1  ON 18
 ud_9                -6.281960e-02 1 1  ON 19
 eO_0                -5.692882e-01 1 1  ON 20
 eO_1                -3.060840e-01 1 1  ON 21
 eO_2                 4.730138e-02 1 1  ON 22
 eO_3                 2.840618e-01 1 1  ON 23
 eO_4                 3.913442e-01 1 1  ON 24
 eO_5                 3.212386e-01 1 1  ON 25
 eO_6                 1.205692e-01 1 1  ON 26
 eO_7                -7.888715e-02 1 1  ON 27
 eO_8                -1.549101e-01 1 1  ON 28
 eO_9                -6.122095e-02 1 1  ON 29
eH1_0                -2.277701e-01 1 1  ON 30
eH1_1                -1.106402e-01 1 1  ON 31
eH1_2                -6.162955e-02 1 1  ON 32
eH1_3                -2.530647e-02 1 1  ON 33
eH1_4                 4.247732e-03 1 1  ON 34
eH1_5                 2.367067e-02 1 1  ON 35
eH1_6                 6.569462e-02 1 1  ON 36
eH1_7                 1.154362e-01 1 1  ON 37
eH1_8                 1.435223e-01 1 1  ON 38
eH1_9                 7.467450e-02 1 1  ON 39
eH2_0                -2.307046e-01 1 1  ON 40
eH2_1                -1.139387e-01 1 1  ON 41
eH2_2                -6.444535e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073910e-03 1 1  ON 44
eH2_5                 2.532975e-02 1 1  ON 45
eH2_6                 7.564461e-02 1 1  ON 46
eH2_7                 1.260028e-01 1 1  ON 47
eH2_8                 1.609122e-01 1 1  ON 48
eH2_9                 6.417222e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 3
    time step          = 0.05
    reference energy   = -16.8995
    reference variance = 0.319666
====================================================
  Execution time = 2.0572e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s003
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8785e-01
  Total weights = 2.0000e+06
  Execution time = 1.8985e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287888982766
                                         uncertainty =       0.001906474332

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287888982766
                                         uncertainty =       0.001906474332

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379371824
  error estimate for blocks of size 2^( 2) =       0.000396350619
  error estimate for blocks of size 2^( 3) =       0.000413466123
  error estimate for blocks of size 2^( 4) =       0.000428897561
  error estimate for blocks of size 2^( 5) =       0.000441515789
  error estimate for blocks of size 2^( 6) =       0.000449055007
  error estimate for blocks of size 2^( 7) =       0.000454802214

      target function =      -0.931872479221
              le_mean =     -16.898648659900
             les_mean =     285.852172348571
             stat err =       0.000443567643
             autocorr =       1.367066278073
   target nu stat err =       0.000443567643
   target dn stat err =       0.001942855663
      target stat err =       0.003275277361
              std dev =       0.536512778736
             le_variance =       0.287845961747

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287889124415
                                         uncertainty =       0.001906477496

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287889124415
                                         uncertainty =       0.001906477496

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379371917
  error estimate for blocks of size 2^( 2) =       0.000396350718
  error estimate for blocks of size 2^( 3) =       0.000413466251
  error estimate for blocks of size 2^( 4) =       0.000428897747
  error estimate for blocks of size 2^( 5) =       0.000441516029
  error estimate for blocks of size 2^( 6) =       0.000449055282
  error estimate for blocks of size 2^( 7) =       0.000454802521

      target function =      -0.931872247852
              le_mean =     -16.898648654676
             les_mean =     285.852172313367
             stat err =       0.000443567895
             autocorr =       1.367067160910
   target nu stat err =       0.000443567895
   target dn stat err =       0.001942858068
      target stat err =       0.003275279680
              std dev =       0.536512910471
             le_variance =       0.287846103103

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287889053598
                                         uncertainty =       0.001906475914

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287889053598
                                         uncertainty =       0.001906475914

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379371871
  error estimate for blocks of size 2^( 2) =       0.000396350668
  error estimate for blocks of size 2^( 3) =       0.000413466187
  error estimate for blocks of size 2^( 4) =       0.000428897654
  error estimate for blocks of size 2^( 5) =       0.000441515909
  error estimate for blocks of size 2^( 6) =       0.000449055144
  error estimate for blocks of size 2^( 7) =       0.000454802368

      target function =      -0.931872363524
              le_mean =     -16.898648657286
             les_mean =     285.852172330907
             stat err =       0.000443567769
             autocorr =       1.367066719486
   target nu stat err =       0.000443567769
   target dn stat err =       0.001942856866
      target stat err =       0.003275278521
              std dev =       0.536512844611
             le_variance =       0.287846032432

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287888991620
                                         uncertainty =       0.001906474530

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.287888991620
                                         uncertainty =       0.001906474530

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379371830
  error estimate for blocks of size 2^( 2) =       0.000396350625
  error estimate for blocks of size 2^( 3) =       0.000413466131
  error estimate for blocks of size 2^( 4) =       0.000428897573
  error estimate for blocks of size 2^( 5) =       0.000441515804
  error estimate for blocks of size 2^( 6) =       0.000449055024
  error estimate for blocks of size 2^( 7) =       0.000454802233

      target function =      -0.931872464759
              le_mean =     -16.898648659573
             les_mean =     285.852172346356
             stat err =       0.000443567659
             autocorr =       1.367066333249
   target nu stat err =       0.000443567659
   target dn stat err =       0.001942855813
      target stat err =       0.003275277506
              std dev =       0.536512786970
             le_variance =       0.287845970583


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.931872479221        initial  <--
     2.5000e+02     2.5000e+03             1.4405e-06        -0.931872247852
     1.0000e+03     1.0000e+04             3.6016e-07        -0.931872363524
     4.0000e+03     4.0000e+04             9.0043e-08        -0.931872464759

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.1774
  </log>
  <optVariables href="H2O.s003.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6426e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s004 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s004 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=4  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -16.9502
    reference variance = 0.232096
====================================================
  Execution time = 2.0440e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s004
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9273e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5859e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292734111149
                                         uncertainty =       0.003460132725

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292734111149
                                         uncertainty =       0.003460132725

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382577191
  error estimate for blocks of size 2^( 2) =       0.000399692608
  error estimate for blocks of size 2^( 3) =       0.000416888116
  error estimate for blocks of size 2^( 4) =       0.000431861772
  error estimate for blocks of size 2^( 5) =       0.000443424354
  error estimate for blocks of size 2^( 6) =       0.000451184779
  error estimate for blocks of size 2^( 7) =       0.000453274409

      target function =      -0.923904267426
              le_mean =     -16.898934742605
             les_mean =     285.866725902870
             stat err =       0.000444936328
             autocorr =       1.352563254872
   target nu stat err =       0.000444936328
   target dn stat err =       0.003696474927
      target stat err =       0.006003171041
              std dev =       0.541045852407
             le_variance =       0.292730614407


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689893474261e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+03, overlap shift 2.5000e+04 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923942278695       residual = 7.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923942286432       residual = 6.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923942288392       residual = 8.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923942289428       residual = 2.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923942290821       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923942291652       residual = 2.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923942292180       residual = 7.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923942292475       residual = 4.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923942292790       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923942292898       residual = 9.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923942293049       residual = 8.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923942293145       residual = 9.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923942293234       residual = 5.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923942293363       residual = 3.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923942293385       residual = 3.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923942293389       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923942293425       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923942293433       residual = 6.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923942293452       residual = 2.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923942293473       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923942293472       residual = 1.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923942293482       residual = 8.38e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923942293494       residual = 9.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923942293502       residual = 3.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923942293501       residual = 1.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923942293492       residual = 4.33e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+03 is 1.887380e-07

solving harmonic davidson linear method for identity shift 1.0000e+04, overlap shift 1.0000e+05 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923942278695       residual = 7.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923942280629       residual = 6.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923942281119       residual = 8.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923942281379       residual = 2.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923942281728       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923942281944       residual = 2.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923942282080       residual = 7.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923942282150       residual = 4.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923942282222       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923942282219       residual = 9.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923942282313       residual = 8.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923942282314       residual = 9.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923942282290       residual = 5.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923942282364       residual = 3.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923942282354       residual = 3.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923942282376       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923942282407       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923942282380       residual = 6.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923942282389       residual = 2.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923942282379       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923942282369       residual = 1.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923942282394       residual = 8.38e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923942282395       residual = 9.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923942282377       residual = 3.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923942282381       residual = 1.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923942282345       residual = 4.33e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+04 is 4.718526e-08

solving harmonic davidson linear method for identity shift 4.0000e+04, overlap shift 4.0000e+05 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923942278695       residual = 7.59e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923942279179       residual = 6.90e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923942279301       residual = 8.00e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923942279366       residual = 2.66e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923942279484       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923942279505       residual = 2.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923942279490       residual = 7.50e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923942279557       residual = 4.05e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923942279576       residual = 2.71e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923942279575       residual = 9.53e-06           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923942279700       residual = 8.32e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923942279625       residual = 9.11e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923942279611       residual = 5.73e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923942279621       residual = 3.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923942279594       residual = 3.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923942279560       residual = 1.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923942279535       residual = 1.52e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923942279615       residual = 6.27e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923942279516       residual = 2.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923942279656       residual = 2.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923942279534       residual = 1.40e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923942279633       residual = 8.38e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923942279676       residual = 9.28e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923942279636       residual = 3.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923942279602       residual = 1.19e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923942279724       residual = 4.33e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+04 is 1.179636e-08

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.116071 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6058e+01
  </log>
  <optVariables href="H2O.s004.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617077e-02 1 1  ON 2
 uu_3                -3.223686e-02 1 1  ON 3
 uu_4                -6.387118e-02 1 1  ON 4
 uu_5                -8.576608e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065672e-01 1 1  ON 7
 uu_8                -9.668738e-02 1 1  ON 8
 uu_9                -6.389509e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392781e-02 1 1  ON 12
 ud_3                -3.019579e-02 1 1  ON 13
 ud_4                -6.975617e-02 1 1  ON 14
 ud_5                -9.484124e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792102e-02 1 1  ON 18
 ud_9                -6.281976e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060843e-01 1 1  ON 21
 eO_2                 4.730128e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888707e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122097e-02 1 1  ON 29
eH1_0                -2.277698e-01 1 1  ON 30
eH1_1                -1.106401e-01 1 1  ON 31
eH1_2                -6.162951e-02 1 1  ON 32
eH1_3                -2.530651e-02 1 1  ON 33
eH1_4                 4.247841e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467421e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444537e-02 1 1  ON 42
eH2_3                -2.722661e-02 1 1  ON 43
eH2_4                 1.073619e-03 1 1  ON 44
eH2_5                 2.532956e-02 1 1  ON 45
eH2_6                 7.564474e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417219e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 4
    time step          = 0.05
    reference energy   = -16.8762
    reference variance = 0.289036
====================================================
  Execution time = 2.0179e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s004
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9528e-01
  Total weights = 2.0000e+06
  Execution time = 1.9033e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262297332
                                         uncertainty =       0.004100380991

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262297332
                                         uncertainty =       0.004100380991

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384241785
  error estimate for blocks of size 2^( 2) =       0.000401135366
  error estimate for blocks of size 2^( 3) =       0.000418017011
  error estimate for blocks of size 2^( 4) =       0.000432995440
  error estimate for blocks of size 2^( 5) =       0.000444847102
  error estimate for blocks of size 2^( 6) =       0.000451541288
  error estimate for blocks of size 2^( 7) =       0.000454516723

      target function =      -0.919805725878
              le_mean =     -16.898744640802
             les_mean =     285.862853785383
             stat err =       0.000445975138
             autocorr =       1.347138091708
   target nu stat err =       0.000445975138
   target dn stat err =       0.004279895009
      target stat err =       0.006872732304
              std dev =       0.543399942939
             le_variance =       0.295283497986

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262316890
                                         uncertainty =       0.004100381975

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262316890
                                         uncertainty =       0.004100381975

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384241797
  error estimate for blocks of size 2^( 2) =       0.000401135381
  error estimate for blocks of size 2^( 3) =       0.000418017032
  error estimate for blocks of size 2^( 4) =       0.000432995466
  error estimate for blocks of size 2^( 5) =       0.000444847134
  error estimate for blocks of size 2^( 6) =       0.000451541321
  error estimate for blocks of size 2^( 7) =       0.000454516756

      target function =      -0.919805694721
              le_mean =     -16.898744640446
             les_mean =     285.862853792870
             stat err =       0.000445975169
             autocorr =       1.347138188695
   target nu stat err =       0.000445975169
   target dn stat err =       0.004279895962
      target stat err =       0.006872733355
              std dev =       0.543399960904
             le_variance =       0.295283517511

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262307111
                                         uncertainty =       0.004100381483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262307111
                                         uncertainty =       0.004100381483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384241791
  error estimate for blocks of size 2^( 2) =       0.000401135374
  error estimate for blocks of size 2^( 3) =       0.000418017022
  error estimate for blocks of size 2^( 4) =       0.000432995453
  error estimate for blocks of size 2^( 5) =       0.000444847118
  error estimate for blocks of size 2^( 6) =       0.000451541304
  error estimate for blocks of size 2^( 7) =       0.000454516739

      target function =      -0.919805710299
              le_mean =     -16.898744640624
             les_mean =     285.862853789126
             stat err =       0.000445975154
             autocorr =       1.347138140208
   target nu stat err =       0.000445975154
   target dn stat err =       0.004279895485
      target stat err =       0.006872732830
              std dev =       0.543399951922
             le_variance =       0.295283507748

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262298555
                                         uncertainty =       0.004100381052

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295262298555
                                         uncertainty =       0.004100381052

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384241785
  error estimate for blocks of size 2^( 2) =       0.000401135367
  error estimate for blocks of size 2^( 3) =       0.000418017013
  error estimate for blocks of size 2^( 4) =       0.000432995442
  error estimate for blocks of size 2^( 5) =       0.000444847104
  error estimate for blocks of size 2^( 6) =       0.000451541290
  error estimate for blocks of size 2^( 7) =       0.000454516725

      target function =      -0.919805723931
              le_mean =     -16.898744640780
             les_mean =     285.862853785851
             stat err =       0.000445975140
             autocorr =       1.347138097772
   target nu stat err =       0.000445975140
   target dn stat err =       0.004279895068
      target stat err =       0.006872732370
              std dev =       0.543399944062
             le_variance =       0.295283499207


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919805725878        initial  <--
     2.5000e+03     2.5000e+04             1.8874e-07        -0.919805694721
     1.0000e+04     1.0000e+05             4.7185e-08        -0.919805710299
     4.0000e+04     4.0000e+05             1.1796e-08        -0.919805723931

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8077
  </log>
  <optVariables href="H2O.s004.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5872e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s005 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s005 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=5  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6909e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -16.8255
    reference variance = 0.437833
====================================================
  Execution time = 2.0678e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s005
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9902e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5015e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298953017720
                                         uncertainty =       0.004274239154

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298953017720
                                         uncertainty =       0.004274239154

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386664591
  error estimate for blocks of size 2^( 2) =       0.000403628680
  error estimate for blocks of size 2^( 3) =       0.000420607592
  error estimate for blocks of size 2^( 4) =       0.000435565834
  error estimate for blocks of size 2^( 5) =       0.000447718567
  error estimate for blocks of size 2^( 6) =       0.000454407022
  error estimate for blocks of size 2^( 7) =       0.000458359929

      target function =      -0.913861533654
              le_mean =     -16.899137600396
             les_mean =     285.879870500177
             stat err =       0.000449012838
             autocorr =       1.348493038541
   target nu stat err =       0.000449012838
   target dn stat err =       0.004437660395
      target stat err =       0.007037494447
              std dev =       0.546826309313
             le_variance =       0.299019012557


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689913760040e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+04, overlap shift 2.5000e+05 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913913773073       residual = 2.03e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913913774676       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913913774835       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913913774975       residual = 2.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913913775072       residual = 1.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913913775219       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913913775274       residual = 1.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913913775299       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913913775329       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913913775338       residual = 4.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913913775396       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913913775419       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913913775466       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913913775443       residual = 5.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913913775447       residual = 6.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913913775455       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913913775464       residual = 1.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913913775493       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913913775417       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913913775391       residual = 5.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913913775473       residual = 1.85e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913913775420       residual = 1.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913913775454       residual = 9.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913913775369       residual = 2.85e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913913775490       residual = 2.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913913775555       residual = 8.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+04 is 3.483569e-08

solving harmonic davidson linear method for identity shift 1.0000e+05, overlap shift 1.0000e+06 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913913773073       residual = 2.03e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913913773473       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913913773513       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913913773548       residual = 2.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913913773577       residual = 1.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913913773366       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913913773623       residual = 1.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913913773629       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913913773637       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913913773906       residual = 4.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913913773579       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913913773659       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913913773745       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913913773605       residual = 5.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913913773666       residual = 6.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913913773453       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913913773790       residual = 1.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913913773518       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913913773443       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913913774444       residual = 5.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913913773504       residual = 1.85e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913913773286       residual = 1.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913913773300       residual = 9.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913913773902       residual = 2.85e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913913773862       residual = 2.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913913773144       residual = 8.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+05 is 8.708931e-09

solving harmonic davidson linear method for identity shift 4.0000e+05, overlap shift 4.0000e+06 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913913773073       residual = 2.03e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913913773173       residual = 6.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913913773183       residual = 5.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913913773192       residual = 2.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913913773199       residual = 1.91e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913913773446       residual = 1.63e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913913773210       residual = 1.97e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913913772464       residual = 5.62e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913913772783       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913913773946       residual = 4.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913913773183       residual = 4.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913913774227       residual = 1.61e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913913772477       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913913773074       residual = 5.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913913773549       residual = 6.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913913773279       residual = 2.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913913773475       residual = 1.96e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913913772153       residual = 1.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913913773039       residual = 3.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913913773454       residual = 5.18e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913913772282       residual = 1.85e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913913773835       residual = 1.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913913773167       residual = 9.30e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913913772618       residual = 2.85e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913913774930       residual = 2.24e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913913773173       residual = 8.95e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+05 is 2.177233e-09

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.138429 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6211e+01
  </log>
  <optVariables href="H2O.s005.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392781e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730128e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106401e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247833e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073592e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564478e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 5
    time step          = 0.05
    reference energy   = -16.9286
    reference variance = 0.384201
====================================================
  Execution time = 2.2100e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s005
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8983e-01
  Total weights = 2.0000e+06
  Execution time = 1.8913e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784517435
                                         uncertainty =       0.001837727285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784517435
                                         uncertainty =       0.001837727285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380677281
  error estimate for blocks of size 2^( 2) =       0.000397751096
  error estimate for blocks of size 2^( 3) =       0.000414778196
  error estimate for blocks of size 2^( 4) =       0.000429114235
  error estimate for blocks of size 2^( 5) =       0.000440387560
  error estimate for blocks of size 2^( 6) =       0.000447700885
  error estimate for blocks of size 2^( 7) =       0.000452562597

      target function =      -0.928644827445
              le_mean =     -16.898197941778
             les_mean =     285.838923919163
             stat err =       0.000442441319
             autocorr =       1.350819869393
   target nu stat err =       0.000442441319
   target dn stat err =       0.002047454519
      target stat err =       0.003415330177
              std dev =       0.538358973715
             le_variance =       0.289830384579

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784518674
                                         uncertainty =       0.001837727274

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784518674
                                         uncertainty =       0.001837727274

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380677282
  error estimate for blocks of size 2^( 2) =       0.000397751097
  error estimate for blocks of size 2^( 3) =       0.000414778198
  error estimate for blocks of size 2^( 4) =       0.000429114238
  error estimate for blocks of size 2^( 5) =       0.000440387564
  error estimate for blocks of size 2^( 6) =       0.000447700889
  error estimate for blocks of size 2^( 7) =       0.000452562602

      target function =      -0.928644825438
              le_mean =     -16.898197941751
             les_mean =     285.838923919511
             stat err =       0.000442441323
             autocorr =       1.350819887931
   target nu stat err =       0.000442441323
   target dn stat err =       0.002047454502
      target stat err =       0.003415330137
              std dev =       0.538358974863
             le_variance =       0.289830385815

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784518055
                                         uncertainty =       0.001837727280

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784518055
                                         uncertainty =       0.001837727280

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380677281
  error estimate for blocks of size 2^( 2) =       0.000397751097
  error estimate for blocks of size 2^( 3) =       0.000414778197
  error estimate for blocks of size 2^( 4) =       0.000429114237
  error estimate for blocks of size 2^( 5) =       0.000440387562
  error estimate for blocks of size 2^( 6) =       0.000447700887
  error estimate for blocks of size 2^( 7) =       0.000452562600

      target function =      -0.928644826441
              le_mean =     -16.898197941765
             les_mean =     285.838923919337
             stat err =       0.000442441321
             autocorr =       1.350819878665
   target nu stat err =       0.000442441321
   target dn stat err =       0.002047454510
      target stat err =       0.003415330157
              std dev =       0.538358974289
             le_variance =       0.289830385197

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784517513
                                         uncertainty =       0.001837727285

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289784517513
                                         uncertainty =       0.001837727285

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380677281
  error estimate for blocks of size 2^( 2) =       0.000397751096
  error estimate for blocks of size 2^( 3) =       0.000414778196
  error estimate for blocks of size 2^( 4) =       0.000429114236
  error estimate for blocks of size 2^( 5) =       0.000440387560
  error estimate for blocks of size 2^( 6) =       0.000447700885
  error estimate for blocks of size 2^( 7) =       0.000452562598

      target function =      -0.928644827319
              le_mean =     -16.898197941776
             les_mean =     285.838923919185
             stat err =       0.000442441320
             autocorr =       1.350819870553
   target nu stat err =       0.000442441320
   target dn stat err =       0.002047454518
      target stat err =       0.003415330174
              std dev =       0.538358973786
             le_variance =       0.289830384656


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.928644827445        initial  <--
     2.5000e+04     2.5000e+05             3.4836e-08        -0.928644825438
     1.0000e+05     1.0000e+06             8.7089e-09        -0.928644826441
     4.0000e+05     4.0000e+06             2.1772e-09        -0.928644827319

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 31.6611
  </log>
  <optVariables href="H2O.s005.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7879e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s006 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s006 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=6  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6904e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -16.839
    reference variance = 0.284465
====================================================
  Execution time = 2.0973e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s006
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9165e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5526e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291672654757
                                         uncertainty =       0.002267127819

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291672654757
                                         uncertainty =       0.002267127819

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381871274
  error estimate for blocks of size 2^( 2) =       0.000398945469
  error estimate for blocks of size 2^( 3) =       0.000415991778
  error estimate for blocks of size 2^( 4) =       0.000431339679
  error estimate for blocks of size 2^( 5) =       0.000442309862
  error estimate for blocks of size 2^( 6) =       0.000451035943
  error estimate for blocks of size 2^( 7) =       0.000453536938

      target function =      -0.925675842460
              le_mean =     -16.898727728848
             les_mean =     285.858650048005
             stat err =       0.000444555606
             autocorr =       1.355246208592
   target nu stat err =       0.000444555606
   target dn stat err =       0.002330186717
      target stat err =       0.003844549264
              std dev =       0.540047535030
             le_variance =       0.291651340092


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689872772885e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+05, overlap shift 2.5000e+06 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925690376391       residual = 4.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925690376438       residual = 5.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925690376450       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925690376454       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925690376462       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925690376425       residual = 8.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925690376470       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925690376473       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925690376424       residual = 1.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925690376139       residual = 3.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925690375851       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925690376015       residual = 1.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925690376833       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925690376802       residual = 5.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925690376454       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925690375842       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925690376469       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925690376270       residual = 7.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925690376595       residual = 5.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925690376796       residual = 2.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925690375856       residual = 1.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925690377404       residual = 9.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925690377209       residual = 1.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925690376186       residual = 3.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925690376580       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925690375984       residual = 4.44e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+05 is 2.038789e-09

solving harmonic davidson linear method for identity shift 1.0000e+06, overlap shift 1.0000e+07 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925690376391       residual = 4.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925690376402       residual = 5.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925690376405       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925690376406       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925690376993       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925690376633       residual = 8.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925690377295       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925690379804       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925690376071       residual = 1.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925690376320       residual = 3.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925690374165       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925690376987       residual = 1.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925690376413       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925690375968       residual = 5.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925690375732       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925690375569       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925690374672       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925690377583       residual = 7.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925690382313       residual = 5.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925690371683       residual = 2.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925690375313       residual = 1.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925690377854       residual = 9.59e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925690375792       residual = 1.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925690377346       residual = 3.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925690378391       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925690381646       residual = 4.44e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+06 is 5.096972e-10

solving harmonic davidson linear method for identity shift 4.0000e+06, overlap shift 4.0000e+07 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925690376391       residual = 4.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925690376393       residual = 5.64e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925690376394       residual = 3.52e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925690376395       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925690376395       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925690376395       residual = 8.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925690372372       residual = 1.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925690385468       residual = 3.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925690385355       residual = 1.96e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925690376396       residual = 3.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925690381156       residual = 1.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925690376790       residual = 1.44e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925690389661       residual = 1.41e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925690379339       residual = 5.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925690364653       residual = 4.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925690382292       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925690371150       residual = 1.79e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925690383915       residual = 7.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925690368173       residual = 5.62e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925690382256       residual = 2.24e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925690364193       residual = 1.83e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925690380089       residual = 9.58e-08           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925690370487       residual = 1.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925690379778       residual = 3.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925690390838       residual = 1.42e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925690362365       residual = 4.44e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+06 is 1.274245e-10

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.160817 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6559e+01
  </log>
  <optVariables href="H2O.s006.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 6
    time step          = 0.05
    reference energy   = -16.8632
    reference variance = 0.374563
====================================================
  Execution time = 2.0664e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s006
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9328e-01
  Total weights = 2.0000e+06
  Execution time = 1.9018e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895751
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895751
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382938988
  error estimate for blocks of size 2^( 2) =       0.000399551211
  error estimate for blocks of size 2^( 3) =       0.000416683419
  error estimate for blocks of size 2^( 4) =       0.000432210168
  error estimate for blocks of size 2^( 5) =       0.000444443909
  error estimate for blocks of size 2^( 6) =       0.000449619853
  error estimate for blocks of size 2^( 7) =       0.000451761678

      target function =      -0.923021933535
              le_mean =     -16.898504381202
             les_mean =     285.852734711938
             stat err =       0.000444508902
             autocorr =       1.347416171177
   target nu stat err =       0.000444508902
   target dn stat err =       0.004069690413
      target stat err =       0.006581729268
              std dev =       0.541557510391
             le_variance =       0.293284537061

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895877
                                         uncertainty =       0.003976699253

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895877
                                         uncertainty =       0.003976699253

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382938988
  error estimate for blocks of size 2^( 2) =       0.000399551212
  error estimate for blocks of size 2^( 3) =       0.000416683419
  error estimate for blocks of size 2^( 4) =       0.000432210169
  error estimate for blocks of size 2^( 5) =       0.000444443909
  error estimate for blocks of size 2^( 6) =       0.000449619854
  error estimate for blocks of size 2^( 7) =       0.000451761678

      target function =      -0.923021933333
              le_mean =     -16.898504381202
             les_mean =     285.852734712058
             stat err =       0.000444508902
             autocorr =       1.347416172130
   target nu stat err =       0.000444508902
   target dn stat err =       0.004069690412
      target stat err =       0.006581729264
              std dev =       0.541557510508
             le_variance =       0.293284537188

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895814
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895814
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382938988
  error estimate for blocks of size 2^( 2) =       0.000399551212
  error estimate for blocks of size 2^( 3) =       0.000416683419
  error estimate for blocks of size 2^( 4) =       0.000432210168
  error estimate for blocks of size 2^( 5) =       0.000444443909
  error estimate for blocks of size 2^( 6) =       0.000449619854
  error estimate for blocks of size 2^( 7) =       0.000451761678

      target function =      -0.923021933434
              le_mean =     -16.898504381202
             les_mean =     285.852734711998
             stat err =       0.000444508902
             autocorr =       1.347416171653
   target nu stat err =       0.000444508902
   target dn stat err =       0.004069690412
      target stat err =       0.006581729266
              std dev =       0.541557510450
             le_variance =       0.293284537125

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895759
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293226895759
                                         uncertainty =       0.003976699254

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382938988
  error estimate for blocks of size 2^( 2) =       0.000399551211
  error estimate for blocks of size 2^( 3) =       0.000416683419
  error estimate for blocks of size 2^( 4) =       0.000432210168
  error estimate for blocks of size 2^( 5) =       0.000444443909
  error estimate for blocks of size 2^( 6) =       0.000449619853
  error estimate for blocks of size 2^( 7) =       0.000451761678

      target function =      -0.923021933523
              le_mean =     -16.898504381202
             les_mean =     285.852734711946
             stat err =       0.000444508902
             autocorr =       1.347416171243
   target nu stat err =       0.000444508902
   target dn stat err =       0.004069690413
      target stat err =       0.006581729268
              std dev =       0.541557510399
             le_variance =       0.293284537070


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923021933535        initial  <--
     2.5000e+05     2.5000e+06             2.0388e-09        -0.923021933333
     1.0000e+06     1.0000e+07             5.0970e-10        -0.923021933434
     4.0000e+06     4.0000e+07             1.2742e-10        -0.923021933523

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.2982
  </log>
  <optVariables href="H2O.s006.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6863e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s007 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s007 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=7  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -16.9078
    reference variance = 0.350978
====================================================
  Execution time = 2.0706e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s007
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6900e+01
  VMC Evar = 2.9958e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5323e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299603988050
                                         uncertainty =       0.003609665436

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299603988050
                                         uncertainty =       0.003609665436

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387024825
  error estimate for blocks of size 2^( 2) =       0.000403536562
  error estimate for blocks of size 2^( 3) =       0.000420359884
  error estimate for blocks of size 2^( 4) =       0.000434859168
  error estimate for blocks of size 2^( 5) =       0.000446087499
  error estimate for blocks of size 2^( 6) =       0.000453033146
  error estimate for blocks of size 2^( 7) =       0.000455891368

      target function =      -0.912971054770
              le_mean =     -16.899696566178
             les_mean =     285.899320309233
             stat err =       0.000447467795
             autocorr =       1.336736857258
   target nu stat err =       0.000447467795
   target dn stat err =       0.003541738993
      target stat err =       0.005630623002
              std dev =       0.547335756312
             le_variance =       0.299576430137


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689969656618e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+06, overlap shift 2.5000e+07 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913004196867       residual = 3.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913004196870       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913004196872       residual = 3.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913004196872       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913004197940       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913004198040       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913004203654       residual = 7.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913004192156       residual = 6.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913004193006       residual = 4.20e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913004197186       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913004201738       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913004200249       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913004200768       residual = 6.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913004199657       residual = 7.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913004199693       residual = 4.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913004196915       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913004206035       residual = 1.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913004192668       residual = 9.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913004198553       residual = 2.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913004195267       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913004200561       residual = 2.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913004185925       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913004201309       residual = 1.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913004192356       residual = 3.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913004207175       residual = 1.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913004197011       residual = 4.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+06 is 1.995055e-10

solving harmonic davidson linear method for identity shift 1.0000e+07, overlap shift 1.0000e+08 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913004196867       residual = 3.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913004196867       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913004196868       residual = 3.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913004196868       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913004196868       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913004196868       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913004196869       residual = 7.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913004196869       residual = 6.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913004196869       residual = 4.20e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913004196869       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913004190311       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913004200497       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913004214211       residual = 6.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913004198103       residual = 7.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913004188338       residual = 4.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913004197719       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913004182438       residual = 1.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913004219557       residual = 9.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913004224073       residual = 2.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913004190421       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913004200455       residual = 2.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913004232682       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913004228808       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913004239578       residual = 3.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913004227259       residual = 1.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913004171928       residual = 4.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+07 is 4.987760e-11

solving harmonic davidson linear method for identity shift 4.0000e+07, overlap shift 4.0000e+08 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.913004196867       residual = 3.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.913004196867       residual = 6.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.913004196867       residual = 3.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.913004196867       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.913004196867       residual = 1.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.913004196867       residual = 1.45e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.913004196867       residual = 7.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.913004116863       residual = 6.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.913004196867       residual = 4.20e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.913004196867       residual = 2.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.913004219494       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.913004152226       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.913004151646       residual = 6.10e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.913004138722       residual = 7.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.913004332659       residual = 4.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913004120500       residual = 2.67e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.913004079013       residual = 1.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.913004276328       residual = 9.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.913004186129       residual = 2.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.913004205637       residual = 1.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.913004077528       residual = 2.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913004000072       residual = 1.43e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.913004266698       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.913004331991       residual = 3.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.913004218661       residual = 1.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913004210156       residual = 4.19e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+07 is 1.246897e-11

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.183175 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6270e+01
  </log>
  <optVariables href="H2O.s007.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 7
    time step          = 0.05
    reference energy   = -16.9093
    reference variance = 0.259252
====================================================
  Execution time = 2.2489e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s007
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9717e-01
  Total weights = 2.0000e+06
  Execution time = 1.8911e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102190
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102190
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385465282
  error estimate for blocks of size 2^( 2) =       0.000402291155
  error estimate for blocks of size 2^( 3) =       0.000419425893
  error estimate for blocks of size 2^( 4) =       0.000434057911
  error estimate for blocks of size 2^( 5) =       0.000446539648
  error estimate for blocks of size 2^( 6) =       0.000455315391
  error estimate for blocks of size 2^( 7) =       0.000459708738

      target function =      -0.916858008550
              le_mean =     -16.898179285936
             les_mean =     285.845629998865
             stat err =       0.000448905422
             autocorr =       1.356248168593
   target nu stat err =       0.000448905422
   target dn stat err =       0.003351198199
      target stat err =       0.005363554504
              std dev =       0.545130230155
             le_variance =       0.297166967829

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102199
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102199
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385465282
  error estimate for blocks of size 2^( 2) =       0.000402291155
  error estimate for blocks of size 2^( 3) =       0.000419425893
  error estimate for blocks of size 2^( 4) =       0.000434057911
  error estimate for blocks of size 2^( 5) =       0.000446539648
  error estimate for blocks of size 2^( 6) =       0.000455315391
  error estimate for blocks of size 2^( 7) =       0.000459708738

      target function =      -0.916858008535
              le_mean =     -16.898179285936
             les_mean =     285.845629998894
             stat err =       0.000448905422
             autocorr =       1.356248168753
   target nu stat err =       0.000448905422
   target dn stat err =       0.003351198199
      target stat err =       0.005363554503
              std dev =       0.545130230164
             le_variance =       0.297166967838

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102194
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102194
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385465282
  error estimate for blocks of size 2^( 2) =       0.000402291155
  error estimate for blocks of size 2^( 3) =       0.000419425893
  error estimate for blocks of size 2^( 4) =       0.000434057911
  error estimate for blocks of size 2^( 5) =       0.000446539648
  error estimate for blocks of size 2^( 6) =       0.000455315391
  error estimate for blocks of size 2^( 7) =       0.000459708738

      target function =      -0.916858008542
              le_mean =     -16.898179285936
             les_mean =     285.845629998880
             stat err =       0.000448905422
             autocorr =       1.356248168671
   target nu stat err =       0.000448905422
   target dn stat err =       0.003351198199
      target stat err =       0.005363554504
              std dev =       0.545130230159
             le_variance =       0.297166967834

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102190
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297169102190
                                         uncertainty =       0.003160086765

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385465282
  error estimate for blocks of size 2^( 2) =       0.000402291155
  error estimate for blocks of size 2^( 3) =       0.000419425893
  error estimate for blocks of size 2^( 4) =       0.000434057911
  error estimate for blocks of size 2^( 5) =       0.000446539648
  error estimate for blocks of size 2^( 6) =       0.000455315391
  error estimate for blocks of size 2^( 7) =       0.000459708738

      target function =      -0.916858008549
              le_mean =     -16.898179285936
             les_mean =     285.845629998867
             stat err =       0.000448905422
             autocorr =       1.356248168607
   target nu stat err =       0.000448905422
   target dn stat err =       0.003351198199
      target stat err =       0.005363554504
              std dev =       0.545130230156
             le_variance =       0.297166967830


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916858008550        initial  <--
     2.5000e+06     2.5000e+07             1.9951e-10        -0.916858008535
     1.0000e+07     1.0000e+08             4.9878e-11        -0.916858008542
     4.0000e+07     4.0000e+08             1.2469e-11        -0.916858008549

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 32.0712
  </log>
  <optVariables href="H2O.s007.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8347e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s008 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s008 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=8  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -16.9164
    reference variance = 0.192144
====================================================
  Execution time = 2.0627e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s008
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9061e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4956e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290609512266
                                         uncertainty =       0.002223509547

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290609512266
                                         uncertainty =       0.002223509547

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381185774
  error estimate for blocks of size 2^( 2) =       0.000398388903
  error estimate for blocks of size 2^( 3) =       0.000415074907
  error estimate for blocks of size 2^( 4) =       0.000430306604
  error estimate for blocks of size 2^( 5) =       0.000441013892
  error estimate for blocks of size 2^( 6) =       0.000447262113
  error estimate for blocks of size 2^( 7) =       0.000448725349

      target function =      -0.927384146212
              le_mean =     -16.898141977340
             les_mean =     285.837807329213
             stat err =       0.000441826990
             autocorr =       1.343479722552
   target nu stat err =       0.000441826990
   target dn stat err =       0.002443755904
      target stat err =       0.004033688085
              std dev =       0.539078090986
             le_variance =       0.290605188182


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689814197734e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+07, overlap shift 2.5000e+08 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927400286622       residual = 2.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927400286623       residual = 8.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927400286623       residual = 3.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927400286622       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927400286619       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927400311526       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927400288749       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927400265414       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927400221515       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927400277420       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927400260599       residual = 9.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927400188272       residual = 6.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927400226351       residual = 4.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927400303884       residual = 3.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927400284011       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927400303807       residual = 1.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927400310416       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927400308379       residual = 4.78e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927400244663       residual = 2.92e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927400258607       residual = 2.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927400270367       residual = 1.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927400328375       residual = 1.08e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927400232722       residual = 4.87e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927400225673       residual = 2.08e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927400206254       residual = 9.04e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+07 is 1.513146e-11

solving harmonic davidson linear method for identity shift 1.0000e+08, overlap shift 1.0000e+09 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927400286622       residual = 2.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927400286622       residual = 8.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927400286622       residual = 3.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927400281410       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927400286618       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927400124257       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927399947387       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927400295937       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927400163751       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927400469211       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927400173728       residual = 9.24e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927400122280       residual = 6.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927400485919       residual = 4.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927400435366       residual = 3.75e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927400343352       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927400073107       residual = 1.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927400266365       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927400304938       residual = 4.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927399830918       residual = 2.93e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927399966652       residual = 2.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927400229414       residual = 1.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927400335087       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927400453907       residual = 4.89e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927399909413       residual = 2.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927400333609       residual = 9.10e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+08 is 3.783162e-12

solving harmonic davidson linear method for identity shift 4.0000e+08, overlap shift 4.0000e+09 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927400286622       residual = 2.98e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927400286622       residual = 8.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.927400286622       residual = 3.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.927400286622       residual = 2.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.927400347771       residual = 1.39e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.927400275306       residual = 1.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.927400736033       residual = 1.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.927400287888       residual = 1.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.927399386190       residual = 1.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.927400065996       residual = 1.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.927400469245       residual = 9.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.927399112750       residual = 6.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927399413764       residual = 4.29e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.927399913911       residual = 3.74e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.927400512322       residual = 2.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.927400538184       residual = 1.25e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.927400482147       residual = 1.60e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.927401703571       residual = 4.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.927400474715       residual = 2.90e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.927400185269       residual = 2.48e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.927400551335       residual = 9.93e-08           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.927400780399       residual = 1.03e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.927402693580       residual = 5.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.927399360387       residual = 2.07e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.927400132755       residual = 9.28e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         24 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+08 is 9.452204e-13

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.203598 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6153e+01
  </log>
  <optVariables href="H2O.s008.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 8
    time step          = 0.05
    reference energy   = -16.923
    reference variance = 0.381703
====================================================
  Execution time = 2.0182e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s008
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8963e-01
  Total weights = 2.0000e+06
  Execution time = 1.8842e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146950
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146950
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380547870
  error estimate for blocks of size 2^( 2) =       0.000397642224
  error estimate for blocks of size 2^( 3) =       0.000415066058
  error estimate for blocks of size 2^( 4) =       0.000430418833
  error estimate for blocks of size 2^( 5) =       0.000442181785
  error estimate for blocks of size 2^( 6) =       0.000451479760
  error estimate for blocks of size 2^( 7) =       0.000457549997

      target function =      -0.928965165545
              le_mean =     -16.898060067213
             les_mean =     285.834067252878
             stat err =       0.000445407594
             autocorr =       1.369924532934
   target nu stat err =       0.000445407594
   target dn stat err =       0.002291714167
      target stat err =       0.003805564659
              std dev =       0.538175958738
             le_variance =       0.289633362564

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146952
                                         uncertainty =       0.002470284455

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146952
                                         uncertainty =       0.002470284455

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380547870
  error estimate for blocks of size 2^( 2) =       0.000397642224
  error estimate for blocks of size 2^( 3) =       0.000415066058
  error estimate for blocks of size 2^( 4) =       0.000430418833
  error estimate for blocks of size 2^( 5) =       0.000442181785
  error estimate for blocks of size 2^( 6) =       0.000451479760
  error estimate for blocks of size 2^( 7) =       0.000457549997

      target function =      -0.928965165542
              le_mean =     -16.898060067213
             les_mean =     285.834067252881
             stat err =       0.000445407594
             autocorr =       1.369924532928
   target nu stat err =       0.000445407594
   target dn stat err =       0.002291714167
      target stat err =       0.003805564659
              std dev =       0.538175958740
             le_variance =       0.289633362565

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146951
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146951
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380547870
  error estimate for blocks of size 2^( 2) =       0.000397642224
  error estimate for blocks of size 2^( 3) =       0.000415066058
  error estimate for blocks of size 2^( 4) =       0.000430418833
  error estimate for blocks of size 2^( 5) =       0.000442181785
  error estimate for blocks of size 2^( 6) =       0.000451479760
  error estimate for blocks of size 2^( 7) =       0.000457549997

      target function =      -0.928965165543
              le_mean =     -16.898060067213
             les_mean =     285.834067252880
             stat err =       0.000445407594
             autocorr =       1.369924532926
   target nu stat err =       0.000445407594
   target dn stat err =       0.002291714167
      target stat err =       0.003805564659
              std dev =       0.538175958739
             le_variance =       0.289633362564

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146950
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289647146950
                                         uncertainty =       0.002470284454

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380547870
  error estimate for blocks of size 2^( 2) =       0.000397642224
  error estimate for blocks of size 2^( 3) =       0.000415066058
  error estimate for blocks of size 2^( 4) =       0.000430418833
  error estimate for blocks of size 2^( 5) =       0.000442181785
  error estimate for blocks of size 2^( 6) =       0.000451479760
  error estimate for blocks of size 2^( 7) =       0.000457549997

      target function =      -0.928965165544
              le_mean =     -16.898060067213
             les_mean =     285.834067252879
             stat err =       0.000445407594
             autocorr =       1.369924532912
   target nu stat err =       0.000445407594
   target dn stat err =       0.002291714167
      target stat err =       0.003805564659
              std dev =       0.538175958738
             le_variance =       0.289633362564


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.928965165545        initial  <--
     2.5000e+07     2.5000e+08             1.5131e-11        -0.928965165542
     1.0000e+08     1.0000e+09             3.7832e-12        -0.928965165543
     4.0000e+08     4.0000e+09             9.4522e-13        -0.928965165544

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7246
  </log>
  <optVariables href="H2O.s008.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5884e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s009 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s009 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=9  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -16.9984
    reference variance = 0.611348
====================================================
  Execution time = 2.0658e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s009
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9331e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.6062e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293211739408
                                         uncertainty =       0.003083901331

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293211739408
                                         uncertainty =       0.003083901331

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382952605
  error estimate for blocks of size 2^( 2) =       0.000399490981
  error estimate for blocks of size 2^( 3) =       0.000416260708
  error estimate for blocks of size 2^( 4) =       0.000431371673
  error estimate for blocks of size 2^( 5) =       0.000442926520
  error estimate for blocks of size 2^( 6) =       0.000450871170
  error estimate for blocks of size 2^( 7) =       0.000455576035

      target function =      -0.923017384833
              le_mean =     -16.898174442160
             les_mean =     285.841604726798
             stat err =       0.000445186349
             autocorr =       1.351430206052
   target nu stat err =       0.000445186349
   target dn stat err =       0.003229475801
      target stat err =       0.005240815855
              std dev =       0.541576768143
             le_variance =       0.293305395792


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689817444216e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+08, overlap shift 2.5000e+09 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923044989055       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923044989055       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923044989055       residual = 7.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923044989055       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923044989022       residual = 4.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923045113720       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923044521996       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923045100767       residual = 1.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923044359499       residual = 9.37e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923044877702       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923044815740       residual = 4.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923044844542       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923044786257       residual = 1.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923045347189       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923045328851       residual = 1.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923044975261       residual = 4.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923045944473       residual = 4.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923045297215       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923044842360       residual = 7.34e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923044909066       residual = 5.15e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923044996734       residual = 5.25e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923044554724       residual = 1.45e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923044987981       residual = 9.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923044431551       residual = 1.54e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923045358442       residual = 1.11e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923044857913       residual = 5.96e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+08 is 5.358926e-12

solving harmonic davidson linear method for identity shift 1.0000e+09, overlap shift 1.0000e+10 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923044989055       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923044989055       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923044989055       residual = 7.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923044989056       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923044989055       residual = 4.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923045028311       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923044109184       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923046304840       residual = 1.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923044539316       residual = 9.38e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923043514257       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923044888173       residual = 4.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923043637088       residual = 1.57e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923044916894       residual = 1.56e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923045318880       residual = 1.83e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923046988878       residual = 1.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923044096708       residual = 4.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923043464927       residual = 4.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923043991501       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923042588194       residual = 7.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923045863155       residual = 5.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923047253402       residual = 4.80e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923043550682       residual = 1.52e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923042746672       residual = 1.07e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923042914518       residual = 1.46e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923045576105       residual = 1.17e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923041512564       residual = 6.88e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         25 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+09 is 1.339232e-12

solving harmonic davidson linear method for identity shift 4.0000e+09, overlap shift 4.0000e+10 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923044989055       residual = 8.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923044989055       residual = 1.08e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923044989055       residual = 7.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923044989055       residual = 7.02e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923044989055       residual = 4.19e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923044989049       residual = 3.93e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923040866964       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923047719291       residual = 1.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923049955811       residual = 9.39e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923041514667       residual = 1.16e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923039380101       residual = 4.96e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923048199063       residual = 1.58e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923043624992       residual = 1.55e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923051559605       residual = 1.85e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923046327512       residual = 1.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923046966883       residual = 4.41e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923047465301       residual = 4.48e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923046160401       residual = 1.43e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923062137535       residual = 7.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923019577079       residual = 5.97e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923054504887       residual = 7.10e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923052467637       residual = 1.19e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923023043424       residual = 6.56e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923027645767       residual = 3.98e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923048721213       residual = 1.74e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923040137653       residual = 1.41e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.923033067459       residual = 2.27e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.923032944129       residual = 1.50e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.923039399936       residual = 8.51e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         28 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+09 is 3.343378e-13

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.228004 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6301e+01
  </log>
  <optVariables href="H2O.s009.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 9
    time step          = 0.05
    reference energy   = -16.9639
    reference variance = 0.25203
====================================================
  Execution time = 2.0475e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s009
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0126e-01
  Total weights = 2.0000e+06
  Execution time = 1.8904e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388111147
  error estimate for blocks of size 2^( 2) =       0.000404684556
  error estimate for blocks of size 2^( 3) =       0.000421560070
  error estimate for blocks of size 2^( 4) =       0.000436786342
  error estimate for blocks of size 2^( 5) =       0.000448816562
  error estimate for blocks of size 2^( 6) =       0.000456799897
  error estimate for blocks of size 2^( 7) =       0.000461507832

      target function =      -0.910352106729
              le_mean =     -16.899126250272
             les_mean =     285.881728396247
             stat err =       0.000450977658
             autocorr =       1.350199124624
   target nu stat err =       0.000450977658
   target dn stat err =       0.004005915641
      target stat err =       0.006313350300
              std dev =       0.548872047231
             le_variance =       0.301260524232

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388111147
  error estimate for blocks of size 2^( 2) =       0.000404684556
  error estimate for blocks of size 2^( 3) =       0.000421560070
  error estimate for blocks of size 2^( 4) =       0.000436786342
  error estimate for blocks of size 2^( 5) =       0.000448816562
  error estimate for blocks of size 2^( 6) =       0.000456799897
  error estimate for blocks of size 2^( 7) =       0.000461507832

      target function =      -0.910352106728
              le_mean =     -16.899126250272
             les_mean =     285.881728396248
             stat err =       0.000450977658
             autocorr =       1.350199124625
   target nu stat err =       0.000450977658
   target dn stat err =       0.004005915641
      target stat err =       0.006313350300
              std dev =       0.548872047231
             le_variance =       0.301260524232

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388111147
  error estimate for blocks of size 2^( 2) =       0.000404684556
  error estimate for blocks of size 2^( 3) =       0.000421560070
  error estimate for blocks of size 2^( 4) =       0.000436786342
  error estimate for blocks of size 2^( 5) =       0.000448816562
  error estimate for blocks of size 2^( 6) =       0.000456799897
  error estimate for blocks of size 2^( 7) =       0.000461507832

      target function =      -0.910352106729
              le_mean =     -16.899126250272
             les_mean =     285.881728396247
             stat err =       0.000450977658
             autocorr =       1.350199124624
   target nu stat err =       0.000450977658
   target dn stat err =       0.004005915641
      target stat err =       0.006313350300
              std dev =       0.548872047231
             le_variance =       0.301260524232

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301222257800
                                         uncertainty =       0.003981751733

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388111147
  error estimate for blocks of size 2^( 2) =       0.000404684556
  error estimate for blocks of size 2^( 3) =       0.000421560070
  error estimate for blocks of size 2^( 4) =       0.000436786342
  error estimate for blocks of size 2^( 5) =       0.000448816562
  error estimate for blocks of size 2^( 6) =       0.000456799897
  error estimate for blocks of size 2^( 7) =       0.000461507832

      target function =      -0.910352106729
              le_mean =     -16.899126250272
             les_mean =     285.881728396247
             stat err =       0.000450977658
             autocorr =       1.350199124630
   target nu stat err =       0.000450977658
   target dn stat err =       0.004005915641
      target stat err =       0.006313350300
              std dev =       0.548872047231
             le_variance =       0.301260524232


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910352106729        initial  <--
     2.5000e+08     2.5000e+09             5.3589e-12        -0.910352106728
     1.0000e+09     1.0000e+10             1.3392e-12        -0.910352106729
     4.0000e+09     4.0000e+10             3.3434e-13        -0.910352106729

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.0543
  </log>
  <optVariables href="H2O.s009.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6361e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s010 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s010 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=10  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6908e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -16.8368
    reference variance = 0.258639
====================================================
  Execution time = 2.0584e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s010
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9306e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5204e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293111287895
                                         uncertainty =       0.002502540809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293111287895
                                         uncertainty =       0.002502540809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382789819
  error estimate for blocks of size 2^( 2) =       0.000399468447
  error estimate for blocks of size 2^( 3) =       0.000416256314
  error estimate for blocks of size 2^( 4) =       0.000431160717
  error estimate for blocks of size 2^( 5) =       0.000441969441
  error estimate for blocks of size 2^( 6) =       0.000449837183
  error estimate for blocks of size 2^( 7) =       0.000453696652

      target function =      -0.923402365756
              le_mean =     -16.898887823115
             les_mean =     285.865465602120
             stat err =       0.000444165998
             autocorr =       1.346386853558
   target nu stat err =       0.000444165998
   target dn stat err =       0.002581219657
      target stat err =       0.004223339247
              std dev =       0.541346552987
             le_variance =       0.293056090431


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689888782311e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+09, overlap shift 2.5000e+10 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923420118946       residual = 5.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923420118946       residual = 6.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923420118946       residual = 6.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923420118946       residual = 3.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923420118946       residual = 1.77e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923420118946       residual = 9.79e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923420118946       residual = 5.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923419287857       residual = 5.84e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923419357268       residual = 2.69e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923414584980       residual = 1.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923416544428       residual = 1.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923421241328       residual = 4.97e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923416406460       residual = 5.86e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923430720733       residual = 4.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923415939105       residual = 1.90e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923423414863       residual = 2.37e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923425498057       residual = 1.21e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923425065234       residual = 1.13e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923419539724       residual = 3.60e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923424612708       residual = 3.70e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923421754819       residual = 1.77e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923420248245       residual = 1.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923421640474       residual = 1.00e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923421500021       residual = 2.33e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923413522888       residual = 2.10e-08           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923425753000       residual = 1.03e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.923415670184       residual = 6.44e-09           smallest_sin_value = 1.00e+00
davidson solver converged in         26 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+09 is 1.872443e-13

solving harmonic davidson linear method for identity shift 1.0000e+10, overlap shift 1.0000e+11 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923420118946       residual = 5.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923420118946       residual = 6.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923420118946       residual = 6.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923420118946       residual = 3.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923420118946       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923420118946       residual = 9.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923427289746       residual = 5.41e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923414661528       residual = 5.84e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923405058132       residual = 2.72e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923422662256       residual = 1.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923400565451       residual = 1.68e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923413423667       residual = 5.23e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923395964692       residual = 6.18e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923434181029       residual = 3.98e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923439109514       residual = 1.91e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923450373842       residual = 2.46e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923414107289       residual = 1.35e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923417646362       residual = 9.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923444546152       residual = 4.23e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923452742046       residual = 2.72e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923400264054       residual = 3.12e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923478732789       residual = 4.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923416495395       residual = 8.57e-08           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923407240624       residual = 7.36e-08           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923458663503       residual = 1.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923416759254       residual = 2.20e-08           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.923421367560       residual = 4.00e-08           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.923412251485       residual = 2.69e-08           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.923448491365       residual = 1.05e-07           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.923413109485       residual = 1.16e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.923333337362       residual = 6.31e-07           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.923399574968       residual = 1.30e-07           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.923385740230       residual = 4.94e-07           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.923279735359       residual = 2.17e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.923343285245       residual = 9.46e-07           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.923516213068       residual = 7.54e-07           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.923161815969       residual = 5.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.923627464998       residual = 4.82e-06           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.923271972856       residual = 3.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.923317960736       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.923271129497       residual = 3.71e-06           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.923440265981       residual = 3.85e-06           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.923443682877       residual = 1.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.923379040902       residual = 1.19e-05           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.923437603312       residual = 3.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.923151440199       residual = 1.22e-05           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.932027623559       residual = 7.90e-03           smallest_sin_value = 9.96e-01
davidson iteration   47 stopping due to small subspace S singular value of 7.67e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+10 is 4.666394e-14

solving harmonic davidson linear method for identity shift 4.0000e+10, overlap shift 4.0000e+11 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923420118946       residual = 5.56e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923420118946       residual = 6.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923420118946       residual = 5.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923420118946       residual = 3.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923420118946       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923420118946       residual = 9.67e-05           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923418637882       residual = 5.36e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923487176899       residual = 5.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923562547178       residual = 3.06e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923461405401       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923382598467       residual = 1.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923420872129       residual = 6.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923402598590       residual = 6.66e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923437547127       residual = 4.47e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.923370036149       residual = 3.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923373151264       residual = 3.27e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.923425958285       residual = 1.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.923495946485       residual = 2.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923556040059       residual = 1.77e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923483071518       residual = 1.01e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.923549507937       residual = 1.68e-06           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923282413479       residual = 2.63e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.923413975173       residual = 9.86e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923279719129       residual = 2.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923393816551       residual = 5.63e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.923578097197       residual = 2.64e-06           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.923384920378       residual = 9.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.923512900326       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.923548448661       residual = 2.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.922354360401       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.923578676927       residual = 7.39e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.924249079851       residual = 5.01e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.924425650365       residual = 8.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.923206352658       residual = 7.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.924496666116       residual = 9.98e-05           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.922659009796       residual = 4.12e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.923366128672       residual = 1.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.924416144534       residual = 7.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.923493967564       residual = 2.65e-06           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.921265990298       residual = 3.53e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.922752632111       residual = 6.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.927542875473       residual = 1.83e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.923209298066       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.923818740580       residual = 5.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.925778126142       residual = 1.37e-03           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.918831809603       residual = 1.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.951904993701       residual = 6.21e-02           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 8.40e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+10 is 1.135069e-14

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.315871 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6202e+01
  </log>
  <optVariables href="H2O.s010.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 10
    time step          = 0.05
    reference energy   = -16.8035
    reference variance = 0.146133
====================================================
  Execution time = 2.2172e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s010
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9096e-01
  Total weights = 2.0000e+06
  Execution time = 1.8900e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381419812
  error estimate for blocks of size 2^( 2) =       0.000398373989
  error estimate for blocks of size 2^( 3) =       0.000415119647
  error estimate for blocks of size 2^( 4) =       0.000430420515
  error estimate for blocks of size 2^( 5) =       0.000442081601
  error estimate for blocks of size 2^( 6) =       0.000449905581
  error estimate for blocks of size 2^( 7) =       0.000455418948

      target function =      -0.926783360598
              le_mean =     -16.898816562349
             les_mean =     285.860963209111
             stat err =       0.000444456661
             autocorr =       1.357851705835
   target nu stat err =       0.000444456661
   target dn stat err =       0.002670459407
      target stat err =       0.004395553237
              std dev =       0.539409071734
             le_variance =       0.290962146669

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381419812
  error estimate for blocks of size 2^( 2) =       0.000398373989
  error estimate for blocks of size 2^( 3) =       0.000415119647
  error estimate for blocks of size 2^( 4) =       0.000430420515
  error estimate for blocks of size 2^( 5) =       0.000442081601
  error estimate for blocks of size 2^( 6) =       0.000449905581
  error estimate for blocks of size 2^( 7) =       0.000455418948

      target function =      -0.926783360598
              le_mean =     -16.898816562349
             les_mean =     285.860963209111
             stat err =       0.000444456661
             autocorr =       1.357851705842
   target nu stat err =       0.000444456661
   target dn stat err =       0.002670459407
      target stat err =       0.004395553237
              std dev =       0.539409071734
             le_variance =       0.290962146669

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381419812
  error estimate for blocks of size 2^( 2) =       0.000398373989
  error estimate for blocks of size 2^( 3) =       0.000415119647
  error estimate for blocks of size 2^( 4) =       0.000430420515
  error estimate for blocks of size 2^( 5) =       0.000442081601
  error estimate for blocks of size 2^( 6) =       0.000449905581
  error estimate for blocks of size 2^( 7) =       0.000455418948

      target function =      -0.926783360598
              le_mean =     -16.898816562349
             les_mean =     285.860963209111
             stat err =       0.000444456661
             autocorr =       1.357851705833
   target nu stat err =       0.000444456661
   target dn stat err =       0.002670459407
      target stat err =       0.004395553237
              std dev =       0.539409071734
             le_variance =       0.290962146669

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291017357779
                                         uncertainty =       0.002367858506

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381419812
  error estimate for blocks of size 2^( 2) =       0.000398373989
  error estimate for blocks of size 2^( 3) =       0.000415119647
  error estimate for blocks of size 2^( 4) =       0.000430420515
  error estimate for blocks of size 2^( 5) =       0.000442081601
  error estimate for blocks of size 2^( 6) =       0.000449905581
  error estimate for blocks of size 2^( 7) =       0.000455418948

      target function =      -0.926783360598
              le_mean =     -16.898816562349
             les_mean =     285.860963209111
             stat err =       0.000444456661
             autocorr =       1.357851705834
   target nu stat err =       0.000444456661
   target dn stat err =       0.002670459407
      target stat err =       0.004395553237
              std dev =       0.539409071734
             le_variance =       0.290962146669


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926783360598        initial  <--
     2.5000e+09     2.5000e+10             1.8724e-13        -0.926783360598
     1.0000e+10     1.0000e+11             4.6664e-14        -0.926783360598
     4.0000e+10     4.0000e+11             1.1351e-14        -0.926783360598

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 31.7450
  </log>
  <optVariables href="H2O.s010.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7961e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s011 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s011 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=11  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -16.8901
    reference variance = 0.226474
====================================================
  Execution time = 2.0451e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s011
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9179e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5436e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291810523827
                                         uncertainty =       0.004012034343

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291810523827
                                         uncertainty =       0.004012034343

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381962917
  error estimate for blocks of size 2^( 2) =       0.000398785311
  error estimate for blocks of size 2^( 3) =       0.000415638377
  error estimate for blocks of size 2^( 4) =       0.000429939146
  error estimate for blocks of size 2^( 5) =       0.000440955578
  error estimate for blocks of size 2^( 6) =       0.000447328760
  error estimate for blocks of size 2^( 7) =       0.000452261152

      target function =      -0.925437343395
              le_mean =     -16.898452067289
             les_mean =     285.849473464685
             stat err =       0.000442621159
             autocorr =       1.342832793989
   target nu stat err =       0.000442621159
   target dn stat err =       0.003610667920
      target stat err =       0.005879583596
              std dev =       0.540177137720
             le_variance =       0.291791340116


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689845206729e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+10, overlap shift 2.5000e+11 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925472969061       residual = 6.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925472969061       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925472969061       residual = 4.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925472969063       residual = 2.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925472969061       residual = 1.71e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925472966911       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925470961222       residual = 1.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925498007294       residual = 2.92e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925462655071       residual = 4.34e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925407304702       residual = 1.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925492827257       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925515174346       residual = 1.51e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925454992635       residual = 4.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925473412217       residual = 5.02e-06           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925437553907       residual = 4.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925415330640       residual = 3.14e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925490940878       residual = 2.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925466257347       residual = 1.45e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925477382788       residual = 4.47e-07           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925447116370       residual = 3.87e-07           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925506814927       residual = 3.32e-07           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925492326405       residual = 6.21e-07           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925543877840       residual = 7.57e-07           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925465556326       residual = 1.29e-07           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925539753178       residual = 4.67e-07           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925502574036       residual = 1.76e-07           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.925403400406       residual = 4.55e-07           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.925443017569       residual = 4.42e-07           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.925773679064       residual = 6.89e-06           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.925492036515       residual = 1.44e-07           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.925684453911       residual = 6.12e-06           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.925363705512       residual = 2.07e-06           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.925056435980       residual = 2.39e-05           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.925159273045       residual = 9.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.925330381632       residual = 5.03e-06           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.924854877322       residual = 7.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.925899539768       residual = 4.37e-05           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.925881038267       residual = 1.50e-05           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.925548695206       residual = 3.47e-05           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.926988646228       residual = 1.93e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.926308994224       residual = 8.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.923823123477       residual = 3.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.926207074574       residual = 1.88e-04           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.924779619529       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.926294995883       residual = 1.40e-04           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.931016592810       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.900343561939       residual = 4.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   47:   krylov dim =  48   tar_fn =      -0.920351283424       residual = 3.19e-03           smallest_sin_value = 9.90e-01
davidson iteration   48 stopping due to small subspace S singular value of 6.43e-01
davidson solver did not converge after         48 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+10 is 1.881118e-14

solving harmonic davidson linear method for identity shift 1.0000e+11, overlap shift 1.0000e+12 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925472969061       residual = 6.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925472969061       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925472969061       residual = 3.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925472969061       residual = 2.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925467686729       residual = 1.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925359846045       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925456809907       residual = 1.47e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925364046686       residual = 3.90e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925591930087       residual = 4.70e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925424981480       residual = 1.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925514582946       residual = 2.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925379637800       residual = 1.75e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925399501575       residual = 8.36e-06           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.925779499005       residual = 1.52e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925572502882       residual = 9.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925327825374       residual = 8.31e-06           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925187363414       residual = 8.95e-06           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925375270396       residual = 4.44e-06           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.925678911201       residual = 6.04e-06           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.925265813355       residual = 7.19e-06           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.925216760331       residual = 1.09e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.925426306754       residual = 2.92e-06           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.925583608038       residual = 1.42e-06           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.925675677154       residual = 4.95e-06           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.925648831306       residual = 5.88e-06           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.925969064555       residual = 2.46e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.926423870192       residual = 8.36e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.925205961624       residual = 9.94e-06           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.924920711469       residual = 5.02e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.925274134708       residual = 5.99e-06           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.927332281445       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.927169496885       residual = 2.60e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.922246968972       residual = 7.15e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.924469999066       residual = 1.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.927640524824       residual = 5.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.930482939870       residual = 2.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.929752297737       residual = 1.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.925297214582       residual = 8.80e-06           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.926982576568       residual = 1.13e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.924510041976       residual = 7.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.928925910625       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.924447865711       residual = 3.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.921307129441       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.931983356803       residual = 1.25e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.925369311721       residual = 6.35e-04           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.923415371001       residual = 3.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.908446448652       residual = 2.54e-02           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 9.70e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+11 is 4.387775e-15

solving harmonic davidson linear method for identity shift 4.0000e+11, overlap shift 4.0000e+12 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925472969061       residual = 6.93e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925472969061       residual = 1.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.925472969061       residual = 4.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.925472969061       residual = 2.31e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.925700358462       residual = 1.54e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.925472969061       residual = 1.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925472969061       residual = 1.69e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.925924059979       residual = 1.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.924728761975       residual = 2.23e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.925586365418       residual = 1.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.925819814277       residual = 1.11e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.925979126895       residual = 1.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.925436888156       residual = 4.89e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.926320829028       residual = 7.17e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925636937341       residual = 5.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.925683979099       residual = 2.28e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.925175867756       residual = 3.07e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.925017266191       residual = 8.21e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.926614547236       residual = 1.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.924335036357       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.924452699237       residual = 1.59e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.923955589390       residual = 1.91e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.926182436866       residual = 3.26e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923277861502       residual = 4.09e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.926377457410       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.922630671021       residual = 8.27e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.922925342693       residual = 5.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.926998585920       residual = 2.78e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.920372245874       residual = 2.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.925577293977       residual = 1.83e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.908303415664       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.941900045255       residual = 2.46e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.928263593681       residual = 5.91e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.928761336570       residual = 1.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.923132068112       residual = 2.98e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.931806673655       residual = 3.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.920592099327       residual = 3.68e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.917654945942       residual = 1.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.933059433047       residual = 5.15e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.927579482134       residual = 9.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.937110395631       residual = 1.03e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.919811521768       residual = 1.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.910703672735       residual = 3.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.897663345000       residual = 6.45e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.907103284342       residual = 7.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -1.128319408828       residual = 3.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.682224580963       residual = 6.34e+00           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 8.37e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+11 is 9.900237e-16

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.433487 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6123e+01
  </log>
  <optVariables href="H2O.s011.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 11
    time step          = 0.05
    reference energy   = -16.8714
    reference variance = 0.257047
====================================================
  Execution time = 2.0117e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s011
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9903e-01
  Total weights = 2.0000e+06
  Execution time = 1.8893e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386674934
  error estimate for blocks of size 2^( 2) =       0.000403485520
  error estimate for blocks of size 2^( 3) =       0.000421105613
  error estimate for blocks of size 2^( 4) =       0.000437238912
  error estimate for blocks of size 2^( 5) =       0.000449612726
  error estimate for blocks of size 2^( 6) =       0.000456223347
  error estimate for blocks of size 2^( 7) =       0.000462283019

      target function =      -0.913931868602
              le_mean =     -16.897710991204
             les_mean =     285.831671602512
             stat err =       0.000451339501
             autocorr =       1.362431410111
   target nu stat err =       0.000451339501
   target dn stat err =       0.003408359801
      target stat err =       0.005414572027
              std dev =       0.546840936439
             le_variance =       0.299035009766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386674934
  error estimate for blocks of size 2^( 2) =       0.000403485520
  error estimate for blocks of size 2^( 3) =       0.000421105613
  error estimate for blocks of size 2^( 4) =       0.000437238912
  error estimate for blocks of size 2^( 5) =       0.000449612726
  error estimate for blocks of size 2^( 6) =       0.000456223347
  error estimate for blocks of size 2^( 7) =       0.000462283019

      target function =      -0.913931868602
              le_mean =     -16.897710991204
             les_mean =     285.831671602512
             stat err =       0.000451339501
             autocorr =       1.362431410116
   target nu stat err =       0.000451339501
   target dn stat err =       0.003408359801
      target stat err =       0.005414572027
              std dev =       0.546840936439
             le_variance =       0.299035009766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386674934
  error estimate for blocks of size 2^( 2) =       0.000403485520
  error estimate for blocks of size 2^( 3) =       0.000421105613
  error estimate for blocks of size 2^( 4) =       0.000437238912
  error estimate for blocks of size 2^( 5) =       0.000449612726
  error estimate for blocks of size 2^( 6) =       0.000456223347
  error estimate for blocks of size 2^( 7) =       0.000462283019

      target function =      -0.913931868602
              le_mean =     -16.897710991204
             les_mean =     285.831671602512
             stat err =       0.000451339501
             autocorr =       1.362431410111
   target nu stat err =       0.000451339501
   target dn stat err =       0.003408359801
      target stat err =       0.005414572027
              std dev =       0.546840936439
             le_variance =       0.299035009766

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299051783219
                                         uncertainty =       0.003059806014

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386674934
  error estimate for blocks of size 2^( 2) =       0.000403485520
  error estimate for blocks of size 2^( 3) =       0.000421105613
  error estimate for blocks of size 2^( 4) =       0.000437238912
  error estimate for blocks of size 2^( 5) =       0.000449612726
  error estimate for blocks of size 2^( 6) =       0.000456223347
  error estimate for blocks of size 2^( 7) =       0.000462283019

      target function =      -0.913931868602
              le_mean =     -16.897710991204
             les_mean =     285.831671602512
             stat err =       0.000451339501
             autocorr =       1.362431410114
   target nu stat err =       0.000451339501
   target dn stat err =       0.003408359801
      target stat err =       0.005414572027
              std dev =       0.546840936439
             le_variance =       0.299035009766


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913931868602        initial  <--
     2.5000e+10     2.5000e+11             1.8811e-14        -0.913931868602
     1.0000e+11     1.0000e+12             4.3878e-15        -0.913931868602
     4.0000e+11     4.0000e+12             9.9002e-16        -0.913931868602

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6948
  </log>
  <optVariables href="H2O.s011.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5824e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s012 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s012 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=12  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -16.9054
    reference variance = 0.336653
====================================================
  Execution time = 2.0836e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s012
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9273e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5358e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292705204144
                                         uncertainty =       0.003481630567

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292705204144
                                         uncertainty =       0.003481630567

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382579002
  error estimate for blocks of size 2^( 2) =       0.000398997987
  error estimate for blocks of size 2^( 3) =       0.000416186548
  error estimate for blocks of size 2^( 4) =       0.000431068792
  error estimate for blocks of size 2^( 5) =       0.000442153683
  error estimate for blocks of size 2^( 6) =       0.000451330271
  error estimate for blocks of size 2^( 7) =       0.000452333206

      target function =      -0.923914253099
              le_mean =     -16.898622017388
             les_mean =     285.856159325551
             stat err =       0.000444221488
             autocorr =       1.348207892447
   target nu stat err =       0.000444221488
   target dn stat err =       0.003550326151
      target stat err =       0.005766395968
              std dev =       0.541048413136
             le_variance =       0.292733385357


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689862201739e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923948824724       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923948824724       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923948824724       residual = 6.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923948824724       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923948824724       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923996319615       residual = 1.53e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923948824724       residual = 7.81e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.923948824724       residual = 5.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923948824724       residual = 3.44e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.924417389763       residual = 4.16e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.923948824724       residual = 1.69e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923948824724       residual = 1.59e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.923438763067       residual = 5.18e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923512598315       residual = 4.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.924174581103       residual = 3.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.923985736936       residual = 2.13e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.924329549211       residual = 3.60e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924966833633       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.923745594487       residual = 2.32e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.924018953488       residual = 2.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.924233058776       residual = 2.94e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.922876957477       residual = 1.23e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.924728504021       residual = 5.38e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.921328452379       residual = 5.72e-04           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.922502562483       residual = 1.41e-04           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.921850081311       residual = 4.43e-04           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.923789778989       residual = 6.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.923275906955       residual = 6.14e-05           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.921558032170       residual = 4.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.924099370095       residual = 2.14e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.917931045334       residual = 2.84e-03           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.926625318617       residual = 8.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.921332753279       residual = 5.22e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.924880643348       residual = 2.52e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.928689106632       residual = 2.73e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.919032905281       residual = 2.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.926954875286       residual = 7.55e-04           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.918634162070       residual = 4.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.917205822688       residual = 7.46e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.930656272619       residual = 4.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.927317882148       residual = 9.85e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.924568400633       residual = 2.51e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.913859362010       residual = 8.45e-03           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.929050873514       residual = 2.79e-03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.940266908859       residual = 3.05e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -1.070217163114       residual = 2.18e+00           smallest_sin_value = 9.99e-01
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.935756886669       residual = 4.20e-01           smallest_sin_value = 9.96e-01
davidson iteration   47 stopping due to small subspace S singular value of 6.50e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+11 is 1.238774e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923948824724       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923948824724       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923948824724       residual = 6.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923948824724       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923948824724       residual = 8.59e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.923948824724       residual = 1.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923948824724       residual = 7.84e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924294446649       residual = 9.08e-05           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923948824724       residual = 3.64e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.923948824724       residual = 3.40e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.924771628475       residual = 3.00e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.923836378376       residual = 3.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.922888209902       residual = 3.84e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.923090001803       residual = 1.60e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.925135189941       residual = 4.90e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.917767536320       residual = 3.45e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.921272090516       residual = 8.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.921767819342       residual = 4.49e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.924169421709       residual = 3.97e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.921291321521       residual = 1.34e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.929282774020       residual = 2.82e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.924462685679       residual = 2.62e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.929656644771       residual = 3.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.916371800695       residual = 4.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.919770209160       residual = 2.04e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.920104919550       residual = 1.63e-03           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.926580026865       residual = 8.30e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.915714086290       residual = 1.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.912628002774       residual = 1.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.913990552114       residual = 9.67e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.916663206322       residual = 2.32e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.919564850085       residual = 2.42e-03           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.944870539970       residual = 5.42e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.942603743098       residual = 5.71e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.922652921536       residual = 2.00e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.940991603864       residual = 3.19e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.907542335729       residual = 1.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.940789342552       residual = 5.63e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.912417020638       residual = 2.65e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.955972183044       residual = 1.38e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -1.010531674607       residual = 1.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.926590284185       residual = 4.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.052845191932       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.996894804180       residual = 6.15e-01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.692266594940       residual = 4.80e+00           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.754114690767       residual = 5.27e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -0.959619431174       residual = 1.06e+01           smallest_sin_value = 9.99e-01
davidson iteration   47 stopping due to small subspace S singular value of 9.32e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 3.196102e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923948824724       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923948824724       residual = 1.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.923948824724       residual = 4.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.923948824724       residual = 4.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.923507341746       residual = 1.82e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924842542579       residual = 6.89e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.923948824724       residual = 9.84e-05           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.922733457031       residual = 3.50e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.923841433626       residual = 4.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.907715150471       residual = 3.16e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.926661416622       residual = 1.46e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.928765110570       residual = 2.36e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.927692124133       residual = 1.64e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.929213055028       residual = 7.11e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.888426112953       residual = 9.70e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.913927460598       residual = 9.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.915957396316       residual = 8.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.926446325262       residual = 1.52e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.969358561762       residual = 1.49e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.916828317512       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.945717836584       residual = 3.82e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.907007933766       residual = 2.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.961308356918       residual = 9.64e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.823338000742       residual = 7.55e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.888689890058       residual = 9.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.896153146246       residual = 6.66e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.983824269491       residual = 2.92e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.951471602327       residual = 8.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.882883659965       residual = 1.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.932040350593       residual = 1.55e-02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.934395775099       residual = 2.38e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.930924754379       residual = 4.82e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.900673941477       residual = 6.44e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.973603096730       residual = 2.65e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.864224563712       residual = 4.53e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.734337297599       residual = 2.67e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.996669864181       residual = 8.62e-01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.637280332370       residual = 6.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.923415966594       residual = 6.98e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.855216660383       residual = 8.19e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.973071898857       residual = 5.87e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.017250365718       residual = 1.73e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.890319456781       residual = 1.60e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -1.100313238411       residual = 2.86e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.536248983995       residual = 6.63e+01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =       0.733371267554       residual = 2.10e+02           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -2.325509000361       residual = 1.40e+02           smallest_sin_value = 9.95e-01
davidson iteration   47 stopping due to small subspace S singular value of 7.77e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 5.359668e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.551841 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6500e+01
  </log>
  <optVariables href="H2O.s012.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 12
    time step          = 0.05
    reference energy   = -16.9367
    reference variance = 0.210037
====================================================
  Execution time = 2.0196e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s012
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9609e-01
  Total weights = 2.0000e+06
  Execution time = 1.8947e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384763544
  error estimate for blocks of size 2^( 2) =       0.000401495892
  error estimate for blocks of size 2^( 3) =       0.000418492254
  error estimate for blocks of size 2^( 4) =       0.000433242147
  error estimate for blocks of size 2^( 5) =       0.000443652685
  error estimate for blocks of size 2^( 6) =       0.000449164786
  error estimate for blocks of size 2^( 7) =       0.000454329461

      target function =      -0.918556189663
              le_mean =     -16.898306715356
             les_mean =     285.848855667423
             stat err =       0.000445097270
             autocorr =       1.338203091002
   target nu stat err =       0.000445097270
   target dn stat err =       0.003911743245
      target stat err =       0.006267009225
              std dev =       0.544137821892
             le_variance =       0.296085969213

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384763544
  error estimate for blocks of size 2^( 2) =       0.000401495892
  error estimate for blocks of size 2^( 3) =       0.000418492254
  error estimate for blocks of size 2^( 4) =       0.000433242147
  error estimate for blocks of size 2^( 5) =       0.000443652685
  error estimate for blocks of size 2^( 6) =       0.000449164786
  error estimate for blocks of size 2^( 7) =       0.000454329461

      target function =      -0.918556189663
              le_mean =     -16.898306715356
             les_mean =     285.848855667423
             stat err =       0.000445097270
             autocorr =       1.338203090994
   target nu stat err =       0.000445097270
   target dn stat err =       0.003911743245
      target stat err =       0.006267009225
              std dev =       0.544137821892
             le_variance =       0.296085969213

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384763544
  error estimate for blocks of size 2^( 2) =       0.000401495892
  error estimate for blocks of size 2^( 3) =       0.000418492254
  error estimate for blocks of size 2^( 4) =       0.000433242147
  error estimate for blocks of size 2^( 5) =       0.000443652685
  error estimate for blocks of size 2^( 6) =       0.000449164786
  error estimate for blocks of size 2^( 7) =       0.000454329461

      target function =      -0.918556189663
              le_mean =     -16.898306715356
             les_mean =     285.848855667423
             stat err =       0.000445097270
             autocorr =       1.338203090994
   target nu stat err =       0.000445097270
   target dn stat err =       0.003911743245
      target stat err =       0.006267009225
              std dev =       0.544137821892
             le_variance =       0.296085969213

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295949651006
                                         uncertainty =       0.003735266636

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384763544
  error estimate for blocks of size 2^( 2) =       0.000401495892
  error estimate for blocks of size 2^( 3) =       0.000418492254
  error estimate for blocks of size 2^( 4) =       0.000433242147
  error estimate for blocks of size 2^( 5) =       0.000443652685
  error estimate for blocks of size 2^( 6) =       0.000449164786
  error estimate for blocks of size 2^( 7) =       0.000454329461

      target function =      -0.918556189663
              le_mean =     -16.898306715356
             les_mean =     285.848855667423
             stat err =       0.000445097270
             autocorr =       1.338203090994
   target nu stat err =       0.000445097270
   target dn stat err =       0.003911743245
      target stat err =       0.006267009225
              std dev =       0.544137821892
             le_variance =       0.296085969213


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918556189663        initial
     2.5000e+11     2.5000e+12             1.2388e-15        -0.918556189663
     1.0000e+12     1.0000e+13             3.1961e-16        -0.918556189663  <--
     4.0000e+12     4.0000e+13             5.3597e-17        -0.918556189663

*****************************************************************************
Applying the update for shift_i =   1.0000e+12     and shift_s =   1.0000e+13
*****************************************************************************

  Execution time = 2.9791e+01
  </log>
  <optVariables href="H2O.s012.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6297e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s013 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s013 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=13  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -16.8443
    reference variance = 0.175504
====================================================
  Execution time = 2.2922e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s013
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9623e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5005e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296271888990
                                         uncertainty =       0.004036339952

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296271888990
                                         uncertainty =       0.004036339952

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384858115
  error estimate for blocks of size 2^( 2) =       0.000401793795
  error estimate for blocks of size 2^( 3) =       0.000419161545
  error estimate for blocks of size 2^( 4) =       0.000433696797
  error estimate for blocks of size 2^( 5) =       0.000445368039
  error estimate for blocks of size 2^( 6) =       0.000452611939
  error estimate for blocks of size 2^( 7) =       0.000455085299

      target function =      -0.918299607760
              le_mean =     -16.898914487032
             les_mean =     285.869542229030
             stat err =       0.000446690518
             autocorr =       1.347138262870
   target nu stat err =       0.000446690518
   target dn stat err =       0.003800769184
      target stat err =       0.006095884811
              std dev =       0.544271565608
             le_variance =       0.296231537129


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689891448703e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 2.5000e+11, overlap shift 2.5000e+12 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918339226493       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918339226493       residual = 1.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918339226493       residual = 9.99e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918344812759       residual = 3.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918300799965       residual = 2.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918486587511       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918243689469       residual = 1.70e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.917488640098       residual = 1.92e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.918613623938       residual = 4.45e-05           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.918775174610       residual = 5.88e-05           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.918205958345       residual = 3.74e-05           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.918442598149       residual = 2.48e-05           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.917945966531       residual = 3.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.918605946500       residual = 6.10e-05           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.918562948022       residual = 8.33e-06           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.918040277228       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.918408349146       residual = 1.81e-05           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.918654299616       residual = 1.91e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.918103026865       residual = 1.97e-05           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.919351358440       residual = 8.33e-05           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.918378653534       residual = 1.11e-05           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.918406650123       residual = 2.04e-05           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.918781964775       residual = 2.73e-05           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.918391334069       residual = 1.29e-05           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.917875233185       residual = 4.66e-05           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.918439132095       residual = 2.49e-05           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.919320897480       residual = 2.46e-04           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.917547730269       residual = 2.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.918819125516       residual = 3.90e-05           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.917886570399       residual = 1.50e-04           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.920690146430       residual = 4.59e-04           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.918524275625       residual = 5.67e-05           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.918601227030       residual = 1.36e-04           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.921387892251       residual = 8.58e-04           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.922466785381       residual = 1.62e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.911702121466       residual = 4.85e-03           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.926493889411       residual = 6.02e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.917559407339       residual = 8.91e-03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.918703151746       residual = 5.99e-04           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.915552827410       residual = 4.38e-03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.923809667431       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.916600742584       residual = 4.05e-03           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.904755809147       residual = 1.66e-02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.904369026612       residual = 1.98e-02           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.930384718272       residual = 2.72e-02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.921788784384       residual = 5.10e-02           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.89e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 2.5000e+11 is 1.489239e-15

solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918339226493       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918339226493       residual = 1.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918339226493       residual = 1.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918339226493       residual = 3.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918339226440       residual = 2.25e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918305378943       residual = 2.10e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918333738747       residual = 1.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.919183757180       residual = 9.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.918418371400       residual = 1.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916484418701       residual = 3.75e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.920093807113       residual = 3.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.917359878684       residual = 2.87e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.915030252716       residual = 8.68e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.917498266378       residual = 1.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.915083286412       residual = 9.04e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.922482216009       residual = 1.90e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.919963341544       residual = 7.20e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.917537670370       residual = 2.24e-04           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.917788755889       residual = 5.61e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.923273711074       residual = 4.00e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922376611559       residual = 1.72e-03           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.924198154152       residual = 3.14e-03           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.916150151644       residual = 8.37e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.917633856958       residual = 1.49e-03           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.923703250930       residual = 3.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.933004894049       residual = 2.45e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.893386199087       residual = 5.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.938221345445       residual = 6.25e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.912082877805       residual = 8.79e-03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.922395497979       residual = 4.58e-03           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.896121655021       residual = 4.29e-02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.948893606858       residual = 7.67e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.915160266708       residual = 2.35e-03           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.911593150317       residual = 1.18e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.926768633989       residual = 2.49e-02           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.920083406149       residual = 1.75e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.915955905345       residual = 7.77e-03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.951390204549       residual = 1.33e-01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.912790688875       residual = 1.11e-02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.954384296603       residual = 1.13e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.888852774950       residual = 1.26e-01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.803828161602       residual = 1.29e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.882070927671       residual = 1.66e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -1.240319186910       residual = 8.37e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.732743560904       residual = 2.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.724964760809       residual = 3.17e+00           smallest_sin_value = 9.99e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.67e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 3.370804e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918339226493       residual = 8.02e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918339226493       residual = 1.61e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918339226493       residual = 9.79e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918464866751       residual = 6.50e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.922846969310       residual = 3.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917916397835       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.918336227776       residual = 1.73e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.915798074930       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.925660342954       residual = 1.12e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.916999175341       residual = 3.64e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.911969538243       residual = 1.26e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.919605398530       residual = 7.74e-03           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.921178696458       residual = 2.12e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.926326048209       residual = 7.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.907970538885       residual = 1.24e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.918383991043       residual = 1.12e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.908340699121       residual = 1.46e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.918231779007       residual = 2.19e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.922707346775       residual = 1.34e-02           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.918252524968       residual = 1.45e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.922459684137       residual = 4.17e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.907711328486       residual = 1.31e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.920059835392       residual = 9.03e-03           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.923338390378       residual = 1.24e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.921838998096       residual = 1.37e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.918744238382       residual = 1.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.912131922568       residual = 4.76e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.918087828301       residual = 1.94e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.827821058931       residual = 8.34e-01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.812194562240       residual = 9.36e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.834771861157       residual = 1.65e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.933378529096       residual = 2.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.923785705087       residual = 1.12e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.980198909337       residual = 3.87e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.876581219812       residual = 4.27e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -1.042386926990       residual = 2.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.095127194127       residual = 5.41e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.176630112523       residual = 7.37e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -1.005967202604       residual = 8.75e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.797889379077       residual = 2.88e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.672228672157       residual = 5.79e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.956318177522       residual = 1.33e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.001431828037       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.638208518838       residual = 1.41e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.916368822327       residual = 3.76e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.777969764381       residual = 7.42e+01           smallest_sin_value = 9.98e-01
davidson iteration   46 stopping due to small subspace S singular value of 9.47e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 4.213626e-17

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.663460 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8544e+01
  </log>
  <optVariables href="H2O.s013.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 13
    time step          = 0.05
    reference energy   = -16.9669
    reference variance = 0.623754
====================================================
  Execution time = 1.9865e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s013
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9395e-01
  Total weights = 2.0000e+06
  Execution time = 2.0370e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383372075
  error estimate for blocks of size 2^( 2) =       0.000400129179
  error estimate for blocks of size 2^( 3) =       0.000417418953
  error estimate for blocks of size 2^( 4) =       0.000431593994
  error estimate for blocks of size 2^( 5) =       0.000442906154
  error estimate for blocks of size 2^( 6) =       0.000450403700
  error estimate for blocks of size 2^( 7) =       0.000455052625

      target function =      -0.921988231884
              le_mean =     -16.898413730360
             les_mean =     285.850334751429
             stat err =       0.000444989118
             autocorr =       1.347279899969
   target nu stat err =       0.000444989118
   target dn stat err =       0.002537256421
      target stat err =       0.004137913376
              std dev =       0.542169988075
             le_variance =       0.293948295970

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383372075
  error estimate for blocks of size 2^( 2) =       0.000400129179
  error estimate for blocks of size 2^( 3) =       0.000417418953
  error estimate for blocks of size 2^( 4) =       0.000431593994
  error estimate for blocks of size 2^( 5) =       0.000442906154
  error estimate for blocks of size 2^( 6) =       0.000450403700
  error estimate for blocks of size 2^( 7) =       0.000455052625

      target function =      -0.921988231884
              le_mean =     -16.898413730360
             les_mean =     285.850334751429
             stat err =       0.000444989118
             autocorr =       1.347279899969
   target nu stat err =       0.000444989118
   target dn stat err =       0.002537256421
      target stat err =       0.004137913376
              std dev =       0.542169988075
             le_variance =       0.293948295970

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383372075
  error estimate for blocks of size 2^( 2) =       0.000400129179
  error estimate for blocks of size 2^( 3) =       0.000417418953
  error estimate for blocks of size 2^( 4) =       0.000431593994
  error estimate for blocks of size 2^( 5) =       0.000442906154
  error estimate for blocks of size 2^( 6) =       0.000450403700
  error estimate for blocks of size 2^( 7) =       0.000455052625

      target function =      -0.921988231884
              le_mean =     -16.898413730360
             les_mean =     285.850334751429
             stat err =       0.000444989118
             autocorr =       1.347279899969
   target nu stat err =       0.000444989118
   target dn stat err =       0.002537256421
      target stat err =       0.004137913376
              std dev =       0.542169988075
             le_variance =       0.293948295970

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293946605029
                                         uncertainty =       0.002453403618

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383372075
  error estimate for blocks of size 2^( 2) =       0.000400129179
  error estimate for blocks of size 2^( 3) =       0.000417418953
  error estimate for blocks of size 2^( 4) =       0.000431593994
  error estimate for blocks of size 2^( 5) =       0.000442906154
  error estimate for blocks of size 2^( 6) =       0.000450403700
  error estimate for blocks of size 2^( 7) =       0.000455052625

      target function =      -0.921988231884
              le_mean =     -16.898413730360
             les_mean =     285.850334751429
             stat err =       0.000444989118
             autocorr =       1.347279899966
   target nu stat err =       0.000444989118
   target dn stat err =       0.002537256421
      target stat err =       0.004137913376
              std dev =       0.542169988075
             le_variance =       0.293948295970


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.921988231884        initial
     2.5000e+11     2.5000e+12             1.4892e-15        -0.921988231884
     1.0000e+12     1.0000e+13             3.3708e-16        -0.921988231884
     4.0000e+12     4.0000e+13             4.2136e-17        -0.921988231884  <--

*****************************************************************************
Applying the update for shift_i =   4.0000e+12     and shift_s =   4.0000e+13
*****************************************************************************

  Execution time = 2.9583e+01
  </log>
  <optVariables href="H2O.s013.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8133e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s014 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s014 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=14  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6901e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -16.8926
    reference variance = 0.226914
====================================================
  Execution time = 2.0542e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s014
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0710e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5896e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307122195385
                                         uncertainty =       0.009764602855

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307122195385
                                         uncertainty =       0.009764602855

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391853051
  error estimate for blocks of size 2^( 2) =       0.000408250759
  error estimate for blocks of size 2^( 3) =       0.000424935076
  error estimate for blocks of size 2^( 4) =       0.000439680298
  error estimate for blocks of size 2^( 5) =       0.000451625723
  error estimate for blocks of size 2^( 6) =       0.000458918634
  error estimate for blocks of size 2^( 7) =       0.000462483985

      target function =      -0.901119239200
              le_mean =     -16.898856229925
             les_mean =     285.878439353707
             stat err =       0.000453177160
             autocorr =       1.337486975610
   target nu stat err =       0.000453177160
   target dn stat err =       0.009912776777
      target stat err =       0.015207002361
              std dev =       0.554163899568
             le_variance =       0.307097627584


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689885622992e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+12, overlap shift 1.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.901375642977       residual = 1.30e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.901375642977       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.901375642977       residual = 1.68e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.901375642977       residual = 3.41e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.901375642978       residual = 2.76e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.901547640867       residual = 2.84e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.900414390437       residual = 3.06e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.901730485211       residual = 2.30e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.902883299502       residual = 6.61e-04           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.898530153256       residual = 9.18e-04           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.897814417735       residual = 1.55e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.901507478187       residual = 3.47e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.899298778163       residual = 6.80e-04           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.898056808574       residual = 1.27e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.900474946652       residual = 4.12e-04           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.906637423378       residual = 2.62e-03           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.900722669445       residual = 1.06e-04           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.901007700268       residual = 9.23e-05           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.900899079360       residual = 5.13e-04           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.907251662117       residual = 2.87e-03           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.901869814883       residual = 5.89e-04           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.898783815038       residual = 9.08e-04           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.897955954342       residual = 9.99e-04           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.885317626200       residual = 1.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.894653303971       residual = 4.02e-03           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.882480047740       residual = 2.87e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.896975831442       residual = 2.94e-03           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.921002082062       residual = 3.49e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.921703937751       residual = 3.97e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.851763329674       residual = 2.11e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.865875519157       residual = 1.28e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.897007009982       residual = 1.81e-02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.897896834357       residual = 2.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.867061044451       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.897754120569       residual = 5.35e-03           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.888793438587       residual = 2.38e-02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.884921358287       residual = 3.48e-02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.932961802759       residual = 9.06e-02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.904840521905       residual = 5.93e-03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.864069107830       residual = 1.85e-01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.912173784875       residual = 3.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.871123725911       residual = 2.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.912098827882       residual = 2.27e-01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.838419834179       residual = 2.69e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.878129280431       residual = 9.02e-01           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.825743182116       residual = 1.71e+00           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =       1.741962985597       residual = 5.58e+02           smallest_sin_value = 9.94e-01
davidson iteration   47 stopping due to small subspace S singular value of 6.42e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+12 is 6.987569e-16

solving harmonic davidson linear method for identity shift 4.0000e+12, overlap shift 4.0000e+13 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.901375642977       residual = 1.30e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.901375642977       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.901375642977       residual = 1.91e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.901375642976       residual = 5.28e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.901375642977       residual = 2.74e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.901375642977       residual = 2.56e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.901385209669       residual = 8.94e-04           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.899813649035       residual = 7.43e-04           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.905091137961       residual = 7.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.898802568869       residual = 4.44e-03           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.907740811634       residual = 5.81e-03           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.904026327936       residual = 7.71e-04           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.896106610859       residual = 3.87e-03           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.900108168891       residual = 6.82e-03           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.902445867534       residual = 1.53e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.911579497557       residual = 1.26e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.909856153748       residual = 7.10e-03           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.901616574366       residual = 2.76e-03           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.902280729835       residual = 4.20e-03           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.917233008273       residual = 2.93e-02           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.906707014624       residual = 1.41e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.910124541688       residual = 8.26e-02           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.883233431215       residual = 6.59e-02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.916319798523       residual = 2.92e-02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.914372450746       residual = 1.99e-02           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.913318143267       residual = 2.71e-02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.893660691099       residual = 1.20e-02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.913034422869       residual = 3.10e-02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.889453915280       residual = 2.75e-02           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.868972749959       residual = 2.96e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.886402463157       residual = 1.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.869436564838       residual = 2.12e-01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.896060948573       residual = 3.22e-01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.911050208678       residual = 5.47e-02           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.896729892932       residual = 1.25e-01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.880292940576       residual = 2.35e-01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -1.001105879642       residual = 1.08e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.814227701203       residual = 1.29e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.887867040581       residual = 3.31e-01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.863752460914       residual = 1.31e+00           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.987462969174       residual = 1.18e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.625990032339       residual = 6.05e+00           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.015239924402       residual = 4.88e+00           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.873745174121       residual = 5.71e+00           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.961499752044       residual = 9.46e+00           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -0.257442038206       residual = 7.07e+01           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =       0.384347103273       residual = 4.73e+02           smallest_sin_value = 9.97e-01
davidson iteration   47 stopping due to small subspace S singular value of 8.48e-01
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+12 is 9.164110e-17

solving harmonic davidson linear method for identity shift 1.6000e+13, overlap shift 1.6000e+14 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.901375642977       residual = 1.30e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.901375642977       residual = 1.65e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.901375642977       residual = 4.88e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.897787821840       residual = 2.89e-02           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.901375642997       residual = 1.17e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.901375639219       residual = 1.88e-02           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.907471203763       residual = 3.26e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.892669556682       residual = 5.64e-02           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.885267949287       residual = 4.94e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.892651548122       residual = 4.96e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.697770968878       residual = 3.32e+00           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -1.024040860765       residual = 1.20e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.886852898846       residual = 7.73e-02           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.811311933199       residual = 7.09e-01           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.887706920513       residual = 3.35e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -1.024508249237       residual = 1.36e+00           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.894426490292       residual = 5.21e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.924245045623       residual = 2.94e-01           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.826322150332       residual = 1.40e+00           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.849484170484       residual = 3.73e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.939776991925       residual = 1.66e-01           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.946655966904       residual = 4.42e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.898052903483       residual = 2.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.761218306158       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -1.042182988469       residual = 2.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.741722676377       residual = 2.09e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.931853324888       residual = 1.08e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.764553272075       residual = 3.01e+00           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -1.073014606127       residual = 2.80e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.717778685332       residual = 4.50e+00           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -0.833843219601       residual = 2.97e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.397107640045       residual = 2.37e+01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =       0.059243947121       residual = 9.15e+01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.925214561089       residual = 1.63e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.941763397627       residual = 2.39e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.975252621977       residual = 2.51e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.225019919084       residual = 4.25e+01           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -1.297926323982       residual = 3.77e+01           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.452418660692       residual = 1.92e+01           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.490502016469       residual = 2.81e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.687904735211       residual = 3.51e+01           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.799982164687       residual = 9.86e+01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.229574887209       residual = 3.72e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.436517440881       residual = 9.80e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -2.293918175136       residual = 2.29e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -4.002210833086       residual = 1.06e+04           smallest_sin_value = 1.00e+00
davidson iteration   46:   krylov dim =  47   tar_fn =      -3.657599281270       residual = 9.15e+03           smallest_sin_value = 9.98e-01
davidson iteration   47 stopping due to too large eigenvalue change
davidson solver did not converge after         47 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+13 is 2.460285e-17

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.780216 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6258e+01
  </log>
  <optVariables href="H2O.s014.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 14
    time step          = 0.05
    reference energy   = -16.8661
    reference variance = 0.162328
====================================================
  Execution time = 2.0295e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s014
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9567e-01
  Total weights = 2.0000e+06
  Execution time = 1.8936e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384492338
  error estimate for blocks of size 2^( 2) =       0.000401383563
  error estimate for blocks of size 2^( 3) =       0.000418266335
  error estimate for blocks of size 2^( 4) =       0.000433356437
  error estimate for blocks of size 2^( 5) =       0.000444628364
  error estimate for blocks of size 2^( 6) =       0.000453710093
  error estimate for blocks of size 2^( 7) =       0.000459061852

      target function =      -0.919150657417
              le_mean =     -16.899152223588
             les_mean =     285.877014444167
             stat err =       0.000447689187
             autocorr =       1.355744432690
   target nu stat err =       0.000447689187
   target dn stat err =       0.005232411880
      target stat err =       0.008379700794
              std dev =       0.543754279073
             le_variance =       0.295668716010

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384492338
  error estimate for blocks of size 2^( 2) =       0.000401383563
  error estimate for blocks of size 2^( 3) =       0.000418266335
  error estimate for blocks of size 2^( 4) =       0.000433356437
  error estimate for blocks of size 2^( 5) =       0.000444628364
  error estimate for blocks of size 2^( 6) =       0.000453710093
  error estimate for blocks of size 2^( 7) =       0.000459061852

      target function =      -0.919150657417
              le_mean =     -16.899152223588
             les_mean =     285.877014444167
             stat err =       0.000447689187
             autocorr =       1.355744432693
   target nu stat err =       0.000447689187
   target dn stat err =       0.005232411880
      target stat err =       0.008379700794
              std dev =       0.543754279073
             le_variance =       0.295668716010

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384492338
  error estimate for blocks of size 2^( 2) =       0.000401383563
  error estimate for blocks of size 2^( 3) =       0.000418266335
  error estimate for blocks of size 2^( 4) =       0.000433356437
  error estimate for blocks of size 2^( 5) =       0.000444628364
  error estimate for blocks of size 2^( 6) =       0.000453710093
  error estimate for blocks of size 2^( 7) =       0.000459061852

      target function =      -0.919150657417
              le_mean =     -16.899152223588
             les_mean =     285.877014444167
             stat err =       0.000447689187
             autocorr =       1.355744432690
   target nu stat err =       0.000447689187
   target dn stat err =       0.005232411880
      target stat err =       0.008379700794
              std dev =       0.543754279073
             le_variance =       0.295668716010

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295563810624
                                         uncertainty =       0.005338325855

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384492338
  error estimate for blocks of size 2^( 2) =       0.000401383563
  error estimate for blocks of size 2^( 3) =       0.000418266335
  error estimate for blocks of size 2^( 4) =       0.000433356437
  error estimate for blocks of size 2^( 5) =       0.000444628364
  error estimate for blocks of size 2^( 6) =       0.000453710093
  error estimate for blocks of size 2^( 7) =       0.000459061852

      target function =      -0.919150657417
              le_mean =     -16.899152223588
             les_mean =     285.877014444167
             stat err =       0.000447689187
             autocorr =       1.355744432690
   target nu stat err =       0.000447689187
   target dn stat err =       0.005232411880
      target stat err =       0.008379700794
              std dev =       0.543754279073
             le_variance =       0.295668716010


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919150657417        initial  <--
     1.0000e+12     1.0000e+13             6.9876e-16        -0.919150657417
     4.0000e+12     4.0000e+13             9.1641e-17        -0.919150657417
     1.6000e+13     1.6000e+14             2.4603e-17        -0.919150657417

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8872
  </log>
  <optVariables href="H2O.s014.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6151e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s015 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s015 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=15  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -16.913
    reference variance = 0.297876
====================================================
  Execution time = 2.0479e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s015
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9247e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5766e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527510586
                                         uncertainty =       0.002582665773

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292527510586
                                         uncertainty =       0.002582665773

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382409938
  error estimate for blocks of size 2^( 2) =       0.000398991050
  error estimate for blocks of size 2^( 3) =       0.000416211710
  error estimate for blocks of size 2^( 4) =       0.000431506319
  error estimate for blocks of size 2^( 5) =       0.000442344839
  error estimate for blocks of size 2^( 6) =       0.000448395460
  error estimate for blocks of size 2^( 7) =       0.000452291370

      target function =      -0.924351199218
              le_mean =     -16.898509711749
             les_mean =     285.852105053066
             stat err =       0.000443634497
             autocorr =       1.345836427895
   target nu stat err =       0.000443634497
   target dn stat err =       0.002588572170
      target stat err =       0.004240335691
              std dev =       0.540809320572
             le_variance =       0.292474721218


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689850971175e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+13, overlap shift 1.0000e+14 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924369135619       residual = 6.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924369135619       residual = 7.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924369135619       residual = 4.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924369135619       residual = 2.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924369135388       residual = 7.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924419951528       residual = 3.33e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.925451693720       residual = 2.46e-03           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.924993162517       residual = 1.54e-03           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.932956060800       residual = 3.77e-02           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.930515230712       residual = 1.39e-02           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.931661751542       residual = 9.94e-02           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.918195002649       residual = 2.70e-02           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -1.043575230172       residual = 1.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.939194456991       residual = 4.68e-02           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.909599144571       residual = 4.04e-02           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.903017292444       residual = 7.54e-02           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.924983709014       residual = 2.08e-02           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -0.928086422972       residual = 2.61e-02           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.885818010559       residual = 4.06e-01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.959294980151       residual = 1.47e-01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.899742475420       residual = 6.50e-02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.990698173334       residual = 4.04e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.871008361291       residual = 2.97e-01           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -0.944604876433       residual = 1.01e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -1.043324707055       residual = 1.61e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.956333725809       residual = 3.81e-01           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -0.831111587764       residual = 8.29e-01           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -0.881763232532       residual = 5.27e-01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -0.803070502539       residual = 1.55e+00           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -0.855515101773       residual = 7.64e-01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -1.050723899558       residual = 1.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.709032814629       residual = 4.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -0.859175434089       residual = 1.58e+00           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.761244417712       residual = 7.92e+00           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -1.009755345616       residual = 8.39e+00           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.825295410132       residual = 7.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =      -0.828259215894       residual = 8.61e+00           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -0.830105685705       residual = 5.16e+00           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.659299617577       residual = 9.36e+00           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -1.183637893517       residual = 1.16e+01           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =      -0.654228202560       residual = 9.28e+00           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.430210534422       residual = 5.11e+01           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -1.544222251411       residual = 3.02e+01           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =      -0.718489636368       residual = 2.82e+01           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =      -0.283330179779       residual = 1.09e+02           smallest_sin_value = 1.00e+00
davidson iteration   45:   krylov dim =  46   tar_fn =      -1.014422970125       residual = 3.06e+01           smallest_sin_value = 1.00e+00
davidson iteration   46 stopping due to small subspace S singular value of 9.81e-01
davidson solver did not converge after         46 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+13 is 1.278257e-17

solving harmonic davidson linear method for identity shift 4.0000e+13, overlap shift 4.0000e+14 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924369135619       residual = 6.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924369135619       residual = 7.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924369135619       residual = 4.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924369135619       residual = 2.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924346317892       residual = 5.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924366468075       residual = 3.82e-02           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.926038308245       residual = 5.60e-02           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.973062204613       residual = 6.95e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.960395172701       residual = 3.22e-01           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.911887634476       residual = 1.39e-01           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.896574955809       residual = 1.04e-01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.928964562696       residual = 2.67e-01           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.942543805338       residual = 1.46e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -0.829102896877       residual = 1.29e+00           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.945499834094       residual = 2.95e-01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.985882910307       residual = 1.04e+00           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -0.872141871541       residual = 1.72e+00           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -1.031139179609       residual = 2.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.783252653135       residual = 2.44e+00           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -0.769372530030       residual = 1.70e+00           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -0.976630689090       residual = 1.26e+00           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -0.913857495593       residual = 3.85e-01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.961732137546       residual = 1.52e+00           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -1.002059096595       residual = 9.20e-01           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -0.992969232028       residual = 2.06e+00           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -0.761692815689       residual = 5.74e+00           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -1.080615215348       residual = 3.61e+00           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -1.217917930912       residual = 1.20e+01           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =      -1.208173650791       residual = 5.88e+01           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =       0.844757674594       residual = 2.93e+02           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =      -1.587238708984       residual = 8.91e+01           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =      -0.955825847442       residual = 1.15e+01           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -1.256355844947       residual = 1.19e+01           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =      -0.219418099888       residual = 4.36e+01           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -0.893536048281       residual = 3.52e+01           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -0.491808924845       residual = 2.52e+01           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =       0.129731742871       residual = 1.08e+02           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =      -2.654873598488       residual = 3.30e+02           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =      -0.018065736659       residual = 1.94e+02           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =      -0.791430156076       residual = 1.21e+02           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =       1.810369018273       residual = 6.97e+02           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -0.455010265892       residual = 1.47e+02           smallest_sin_value = 1.00e+00
davidson iteration   42:   krylov dim =  43   tar_fn =      -0.711981563328       residual = 3.74e+02           smallest_sin_value = 1.00e+00
davidson iteration   43:   krylov dim =  44   tar_fn =       2.477694965462       residual = 1.05e+03           smallest_sin_value = 1.00e+00
davidson iteration   44:   krylov dim =  45   tar_fn =     -10.618129712707       residual = 1.07e+04           smallest_sin_value = 1.00e+00
davidson iteration   45 stopping due to too large eigenvalue change
davidson solver did not converge after         45 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+13 is 3.195643e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+14, overlap shift 1.6000e+15 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924369135619       residual = 6.69e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924369135619       residual = 7.12e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924369135619       residual = 4.75e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924369135619       residual = 2.05e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.924369135619       residual = 1.60e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.924369156043       residual = 3.86e-03           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -0.909285180617       residual = 1.76e+00           smallest_sin_value = 1.00e+00
davidson iteration    7:   krylov dim =   8   tar_fn =      -0.948966771948       residual = 1.03e-01           smallest_sin_value = 1.00e+00
davidson iteration    8:   krylov dim =   9   tar_fn =      -0.904212184648       residual = 1.83e-01           smallest_sin_value = 1.00e+00
davidson iteration    9:   krylov dim =  10   tar_fn =      -0.794645430256       residual = 1.31e+00           smallest_sin_value = 1.00e+00
davidson iteration   10:   krylov dim =  11   tar_fn =      -0.964364495451       residual = 2.85e+01           smallest_sin_value = 1.00e+00
davidson iteration   11:   krylov dim =  12   tar_fn =      -0.629072365078       residual = 7.65e+00           smallest_sin_value = 1.00e+00
davidson iteration   12:   krylov dim =  13   tar_fn =      -0.900509926191       residual = 4.41e+00           smallest_sin_value = 1.00e+00
davidson iteration   13:   krylov dim =  14   tar_fn =      -1.078061959895       residual = 9.79e+00           smallest_sin_value = 1.00e+00
davidson iteration   14:   krylov dim =  15   tar_fn =      -0.444102623730       residual = 1.46e+01           smallest_sin_value = 1.00e+00
davidson iteration   15:   krylov dim =  16   tar_fn =      -0.480915143657       residual = 2.67e+01           smallest_sin_value = 1.00e+00
davidson iteration   16:   krylov dim =  17   tar_fn =      -1.073598832807       residual = 7.47e+00           smallest_sin_value = 1.00e+00
davidson iteration   17:   krylov dim =  18   tar_fn =      -1.104953993649       residual = 8.76e+00           smallest_sin_value = 1.00e+00
davidson iteration   18:   krylov dim =  19   tar_fn =      -0.520548037479       residual = 4.25e+01           smallest_sin_value = 1.00e+00
davidson iteration   19:   krylov dim =  20   tar_fn =      -1.281200973087       residual = 5.11e+01           smallest_sin_value = 1.00e+00
davidson iteration   20:   krylov dim =  21   tar_fn =      -2.335384691427       residual = 1.63e+02           smallest_sin_value = 1.00e+00
davidson iteration   21:   krylov dim =  22   tar_fn =      -1.827190016467       residual = 8.80e+01           smallest_sin_value = 1.00e+00
davidson iteration   22:   krylov dim =  23   tar_fn =      -0.289142001079       residual = 1.15e+02           smallest_sin_value = 1.00e+00
davidson iteration   23:   krylov dim =  24   tar_fn =      -2.769588089808       residual = 2.83e+02           smallest_sin_value = 1.00e+00
davidson iteration   24:   krylov dim =  25   tar_fn =      -1.053228799986       residual = 3.60e+01           smallest_sin_value = 1.00e+00
davidson iteration   25:   krylov dim =  26   tar_fn =      -2.426926910512       residual = 2.39e+02           smallest_sin_value = 1.00e+00
davidson iteration   26:   krylov dim =  27   tar_fn =      -3.480504689255       residual = 5.68e+02           smallest_sin_value = 1.00e+00
davidson iteration   27:   krylov dim =  28   tar_fn =      -3.333321780667       residual = 5.02e+02           smallest_sin_value = 1.00e+00
davidson iteration   28:   krylov dim =  29   tar_fn =       2.976932787970       residual = 1.34e+03           smallest_sin_value = 1.00e+00
davidson iteration   29:   krylov dim =  30   tar_fn =      -1.517674400135       residual = 5.83e+01           smallest_sin_value = 1.00e+00
davidson iteration   30:   krylov dim =  31   tar_fn =       0.209851610755       residual = 1.28e+02           smallest_sin_value = 1.00e+00
davidson iteration   31:   krylov dim =  32   tar_fn =       0.860668732397       residual = 3.07e+02           smallest_sin_value = 1.00e+00
davidson iteration   32:   krylov dim =  33   tar_fn =      -3.391564635053       residual = 8.96e+02           smallest_sin_value = 1.00e+00
davidson iteration   33:   krylov dim =  34   tar_fn =       0.785363341918       residual = 1.01e+03           smallest_sin_value = 1.00e+00
davidson iteration   34:   krylov dim =  35   tar_fn =      -4.285324270632       residual = 1.25e+04           smallest_sin_value = 1.00e+00
davidson iteration   35:   krylov dim =  36   tar_fn =      -2.279121388879       residual = 7.93e+02           smallest_sin_value = 1.00e+00
davidson iteration   36:   krylov dim =  37   tar_fn =       2.261677291685       residual = 2.35e+03           smallest_sin_value = 1.00e+00
davidson iteration   37:   krylov dim =  38   tar_fn =       3.232864939719       residual = 2.11e+03           smallest_sin_value = 1.00e+00
davidson iteration   38:   krylov dim =  39   tar_fn =       1.797872352519       residual = 2.37e+03           smallest_sin_value = 1.00e+00
davidson iteration   39:   krylov dim =  40   tar_fn =       1.359643954012       residual = 1.43e+03           smallest_sin_value = 1.00e+00
davidson iteration   40:   krylov dim =  41   tar_fn =       6.337170800928       residual = 5.66e+03           smallest_sin_value = 1.00e+00
davidson iteration   41:   krylov dim =  42   tar_fn =      -1.762743890466       residual = 4.74e+03           smallest_sin_value = 1.00e+00
davidson iteration   42 stopping due to too large eigenvalue change
davidson solver did not converge after         42 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+14 is 1.026734e-18

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.881377 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6167e+01
  </log>
  <optVariables href="H2O.s015.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 15
    time step          = 0.05
    reference energy   = -16.9228
    reference variance = 0.192099
====================================================
  Execution time = 2.0028e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s015
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9556e-01
  Total weights = 2.0000e+06
  Execution time = 1.8892e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384422700
  error estimate for blocks of size 2^( 2) =       0.000401219798
  error estimate for blocks of size 2^( 3) =       0.000417801720
  error estimate for blocks of size 2^( 4) =       0.000432233131
  error estimate for blocks of size 2^( 5) =       0.000443141794
  error estimate for blocks of size 2^( 6) =       0.000449093300
  error estimate for blocks of size 2^( 7) =       0.000453179102

      target function =      -0.919412453144
              le_mean =     -16.898290408269
             les_mean =     285.847780198610
             stat err =       0.000444411832
             autocorr =       1.336451420537
   target nu stat err =       0.000444411832
   target dn stat err =       0.002771565075
      target stat err =       0.004481264542
              std dev =       0.543655795701
             le_variance =       0.295561624200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384422700
  error estimate for blocks of size 2^( 2) =       0.000401219798
  error estimate for blocks of size 2^( 3) =       0.000417801720
  error estimate for blocks of size 2^( 4) =       0.000432233131
  error estimate for blocks of size 2^( 5) =       0.000443141794
  error estimate for blocks of size 2^( 6) =       0.000449093300
  error estimate for blocks of size 2^( 7) =       0.000453179102

      target function =      -0.919412453144
              le_mean =     -16.898290408269
             les_mean =     285.847780198610
             stat err =       0.000444411832
             autocorr =       1.336451420537
   target nu stat err =       0.000444411832
   target dn stat err =       0.002771565075
      target stat err =       0.004481264542
              std dev =       0.543655795701
             le_variance =       0.295561624200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384422700
  error estimate for blocks of size 2^( 2) =       0.000401219798
  error estimate for blocks of size 2^( 3) =       0.000417801720
  error estimate for blocks of size 2^( 4) =       0.000432233131
  error estimate for blocks of size 2^( 5) =       0.000443141794
  error estimate for blocks of size 2^( 6) =       0.000449093300
  error estimate for blocks of size 2^( 7) =       0.000453179102

      target function =      -0.919412453144
              le_mean =     -16.898290408269
             les_mean =     285.847780198610
             stat err =       0.000444411832
             autocorr =       1.336451420543
   target nu stat err =       0.000444411832
   target dn stat err =       0.002771565075
      target stat err =       0.004481264542
              std dev =       0.543655795701
             le_variance =       0.295561624200

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295595545052
                                         uncertainty =       0.002660681423

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384422700
  error estimate for blocks of size 2^( 2) =       0.000401219798
  error estimate for blocks of size 2^( 3) =       0.000417801720
  error estimate for blocks of size 2^( 4) =       0.000432233131
  error estimate for blocks of size 2^( 5) =       0.000443141794
  error estimate for blocks of size 2^( 6) =       0.000449093300
  error estimate for blocks of size 2^( 7) =       0.000453179102

      target function =      -0.919412453144
              le_mean =     -16.898290408269
             les_mean =     285.847780198610
             stat err =       0.000444411832
             autocorr =       1.336451420537
   target nu stat err =       0.000444411832
   target dn stat err =       0.002771565075
      target stat err =       0.004481264542
              std dev =       0.543655795701
             le_variance =       0.295561624200


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919412453144        initial  <--
     1.0000e+13     1.0000e+14             1.2783e-17        -0.919412453144
     4.0000e+13     4.0000e+14             3.1956e-18        -0.919412453144
     1.6000e+14     1.6000e+15             1.0267e-18        -0.919412453144

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.5969
  </log>
  <optVariables href="H2O.s015.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5770e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s016 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s016 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=16  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6901e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -16.884
    reference variance = 0.233369
====================================================
  Execution time = 2.2727e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s016
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8829e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.6112e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288350158957
                                         uncertainty =       0.002146586663

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288350158957
                                         uncertainty =       0.002146586663

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379661299
  error estimate for blocks of size 2^( 2) =       0.000396118127
  error estimate for blocks of size 2^( 3) =       0.000413359010
  error estimate for blocks of size 2^( 4) =       0.000428122789
  error estimate for blocks of size 2^( 5) =       0.000440490891
  error estimate for blocks of size 2^( 6) =       0.000446697700
  error estimate for blocks of size 2^( 7) =       0.000450259920

      target function =      -0.931155276497
              le_mean =     -16.898386122418
             les_mean =     285.843738801497
             stat err =       0.000441392825
             autocorr =       1.351630180685
   target nu stat err =       0.000441392825
   target dn stat err =       0.002241995609
      target stat err =       0.003744543868
              std dev =       0.536922157576
             le_variance =       0.288285403296


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689838612242e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+14, overlap shift 1.0000e+15 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 7.44e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 4.0000e+14, overlap shift 4.0000e+15 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 7.44e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+14 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+15, overlap shift 1.6000e+16 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.931168990422       residual = 3.23e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 7.44e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+15 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.882488 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8349e+01
  </log>
  <optVariables href="H2O.s016.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 16
    time step          = 0.05
    reference energy   = -16.8733
    reference variance = 0.198242
====================================================
  Execution time = 1.9899e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s016
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9679e-01
  Total weights = 2.0000e+06
  Execution time = 1.8923e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385220164
  error estimate for blocks of size 2^( 2) =       0.000402097045
  error estimate for blocks of size 2^( 3) =       0.000419563577
  error estimate for blocks of size 2^( 4) =       0.000434869718
  error estimate for blocks of size 2^( 5) =       0.000445761309
  error estimate for blocks of size 2^( 6) =       0.000452117104
  error estimate for blocks of size 2^( 7) =       0.000456629227

      target function =      -0.917378151215
              le_mean =     -16.899020820776
             les_mean =     285.873693702731
             stat err =       0.000447344340
             autocorr =       1.348546320674
   target nu stat err =       0.000447344340
   target dn stat err =       0.005080827374
      target stat err =       0.008105730766
              std dev =       0.544783580991
             le_variance =       0.296789150117

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385220164
  error estimate for blocks of size 2^( 2) =       0.000402097045
  error estimate for blocks of size 2^( 3) =       0.000419563577
  error estimate for blocks of size 2^( 4) =       0.000434869718
  error estimate for blocks of size 2^( 5) =       0.000445761309
  error estimate for blocks of size 2^( 6) =       0.000452117104
  error estimate for blocks of size 2^( 7) =       0.000456629227

      target function =      -0.917378151215
              le_mean =     -16.899020820776
             les_mean =     285.873693702731
             stat err =       0.000447344340
             autocorr =       1.348546320675
   target nu stat err =       0.000447344340
   target dn stat err =       0.005080827374
      target stat err =       0.008105730766
              std dev =       0.544783580991
             le_variance =       0.296789150117

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385220164
  error estimate for blocks of size 2^( 2) =       0.000402097045
  error estimate for blocks of size 2^( 3) =       0.000419563577
  error estimate for blocks of size 2^( 4) =       0.000434869718
  error estimate for blocks of size 2^( 5) =       0.000445761309
  error estimate for blocks of size 2^( 6) =       0.000452117104
  error estimate for blocks of size 2^( 7) =       0.000456629227

      target function =      -0.917378151215
              le_mean =     -16.899020820776
             les_mean =     285.873693702731
             stat err =       0.000447344340
             autocorr =       1.348546320675
   target nu stat err =       0.000447344340
   target dn stat err =       0.005080827374
      target stat err =       0.008105730766
              std dev =       0.544783580991
             le_variance =       0.296789150117

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296752116755
                                         uncertainty =       0.004691112865

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385220164
  error estimate for blocks of size 2^( 2) =       0.000402097045
  error estimate for blocks of size 2^( 3) =       0.000419563577
  error estimate for blocks of size 2^( 4) =       0.000434869718
  error estimate for blocks of size 2^( 5) =       0.000445761309
  error estimate for blocks of size 2^( 6) =       0.000452117104
  error estimate for blocks of size 2^( 7) =       0.000456629227

      target function =      -0.917378151215
              le_mean =     -16.899020820776
             les_mean =     285.873693702731
             stat err =       0.000447344340
             autocorr =       1.348546320675
   target nu stat err =       0.000447344340
   target dn stat err =       0.005080827374
      target stat err =       0.008105730766
              std dev =       0.544783580991
             le_variance =       0.296789150117


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917378151215        initial  <--
     1.0000e+14     1.0000e+15             0.0000e+00        -0.917378151215
     4.0000e+14     4.0000e+15             0.0000e+00        -0.917378151215
     1.6000e+15     1.6000e+16             0.0000e+00        -0.917378151215

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.4835
  </log>
  <optVariables href="H2O.s016.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7839e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s017 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s017 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=17  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -16.9786
    reference variance = 0.198383
====================================================
  Execution time = 2.0437e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s017
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9088e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4636e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290938617072
                                         uncertainty =       0.002156310547

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290938617072
                                         uncertainty =       0.002156310547

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381368572
  error estimate for blocks of size 2^( 2) =       0.000397963235
  error estimate for blocks of size 2^( 3) =       0.000414785931
  error estimate for blocks of size 2^( 4) =       0.000428938913
  error estimate for blocks of size 2^( 5) =       0.000440559297
  error estimate for blocks of size 2^( 6) =       0.000448366235
  error estimate for blocks of size 2^( 7) =       0.000451268345

      target function =      -0.926918650357
              le_mean =     -16.898763461498
             les_mean =     285.859090357022
             stat err =       0.000442283197
             autocorr =       1.344965303900
   target nu stat err =       0.000442283197
   target dn stat err =       0.002159272248
      target stat err =       0.003583236227
              std dev =       0.539336606210
             le_variance =       0.290883974799


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689876346150e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+15, overlap shift 1.0000e+16 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.19e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 4.0000e+15, overlap shift 4.0000e+16 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.19e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+15 is 0.000000e+00

solving harmonic davidson linear method for identity shift 1.6000e+16, overlap shift 1.6000e+17 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926931004820       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+16 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.883544 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5912e+01
  </log>
  <optVariables href="H2O.s017.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 17
    time step          = 0.05
    reference energy   = -16.8833
    reference variance = 0.239393
====================================================
  Execution time = 2.0126e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s017
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9311e-01
  Total weights = 2.0000e+06
  Execution time = 1.8906e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382825321
  error estimate for blocks of size 2^( 2) =       0.000399733431
  error estimate for blocks of size 2^( 3) =       0.000417102509
  error estimate for blocks of size 2^( 4) =       0.000432481109
  error estimate for blocks of size 2^( 5) =       0.000444611831
  error estimate for blocks of size 2^( 6) =       0.000451457513
  error estimate for blocks of size 2^( 7) =       0.000453614151

      target function =      -0.923331364752
              le_mean =     -16.898343039097
             les_mean =     285.847107773875
             stat err =       0.000445541151
             autocorr =       1.354485416919
   target nu stat err =       0.000445541151
   target dn stat err =       0.002794937004
      target stat err =       0.004556766059
              std dev =       0.541396761573
             le_variance =       0.293110453442

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382825321
  error estimate for blocks of size 2^( 2) =       0.000399733431
  error estimate for blocks of size 2^( 3) =       0.000417102509
  error estimate for blocks of size 2^( 4) =       0.000432481109
  error estimate for blocks of size 2^( 5) =       0.000444611831
  error estimate for blocks of size 2^( 6) =       0.000451457513
  error estimate for blocks of size 2^( 7) =       0.000453614151

      target function =      -0.923331364752
              le_mean =     -16.898343039097
             les_mean =     285.847107773875
             stat err =       0.000445541151
             autocorr =       1.354485416919
   target nu stat err =       0.000445541151
   target dn stat err =       0.002794937004
      target stat err =       0.004556766059
              std dev =       0.541396761573
             le_variance =       0.293110453442

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382825321
  error estimate for blocks of size 2^( 2) =       0.000399733431
  error estimate for blocks of size 2^( 3) =       0.000417102509
  error estimate for blocks of size 2^( 4) =       0.000432481109
  error estimate for blocks of size 2^( 5) =       0.000444611831
  error estimate for blocks of size 2^( 6) =       0.000451457513
  error estimate for blocks of size 2^( 7) =       0.000453614151

      target function =      -0.923331364752
              le_mean =     -16.898343039097
             les_mean =     285.847107773875
             stat err =       0.000445541151
             autocorr =       1.354485416919
   target nu stat err =       0.000445541151
   target dn stat err =       0.002794937004
      target stat err =       0.004556766059
              std dev =       0.541396761573
             le_variance =       0.293110453442

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293144691362
                                         uncertainty =       0.002741077042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382825321
  error estimate for blocks of size 2^( 2) =       0.000399733431
  error estimate for blocks of size 2^( 3) =       0.000417102509
  error estimate for blocks of size 2^( 4) =       0.000432481109
  error estimate for blocks of size 2^( 5) =       0.000444611831
  error estimate for blocks of size 2^( 6) =       0.000451457513
  error estimate for blocks of size 2^( 7) =       0.000453614151

      target function =      -0.923331364752
              le_mean =     -16.898343039097
             les_mean =     285.847107773875
             stat err =       0.000445541151
             autocorr =       1.354485416919
   target nu stat err =       0.000445541151
   target dn stat err =       0.002794937004
      target stat err =       0.004556766059
              std dev =       0.541396761573
             le_variance =       0.293110453442


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923331364752        initial  <--
     1.0000e+15     1.0000e+16             0.0000e+00        -0.923331364752
     4.0000e+15     4.0000e+16             0.0000e+00        -0.923331364752
     1.6000e+16     1.6000e+17             0.0000e+00        -0.923331364752

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6961
  </log>
  <optVariables href="H2O.s017.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5614e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s018 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s018 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=18  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6901e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -16.9407
    reference variance = 0.392917
====================================================
  Execution time = 2.3260e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s018
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8926e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5947e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289137942528
                                         uncertainty =       0.003174499634

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289137942528
                                         uncertainty =       0.003174499634

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380300006
  error estimate for blocks of size 2^( 2) =       0.000397011401
  error estimate for blocks of size 2^( 3) =       0.000414087187
  error estimate for blocks of size 2^( 4) =       0.000428832250
  error estimate for blocks of size 2^( 5) =       0.000438879201
  error estimate for blocks of size 2^( 6) =       0.000445954788
  error estimate for blocks of size 2^( 7) =       0.000450236378

      target function =      -0.929553977549
              le_mean =     -16.898667131329
             les_mean =     285.854206860407
             stat err =       0.000440975654
             autocorr =       1.344548774549
   target nu stat err =       0.000440975654
   target dn stat err =       0.002967664739
      target stat err =       0.004896681831
              std dev =       0.537825426667
             le_variance =       0.289256189569


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689866713133e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+16, overlap shift 1.0000e+17 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+16 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+16, overlap shift 4.0000e+17 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929578569885       residual = 6.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+16 is 1.803351e-21

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+17, overlap shift 1.6000e+18 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.929578569885       residual = 5.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to small subspace S singular value of 6.20e-01
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+17 is 0.000000e+00

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.884699 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8865e+01
  </log>
  <optVariables href="H2O.s018.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 18
    time step          = 0.05
    reference energy   = -16.9527
    reference variance = 0.262339
====================================================
  Execution time = 2.0219e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s018
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9284e-01
  Total weights = 2.0000e+06
  Execution time = 1.8948e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382647897
  error estimate for blocks of size 2^( 2) =       0.000399397291
  error estimate for blocks of size 2^( 3) =       0.000416174217
  error estimate for blocks of size 2^( 4) =       0.000430443686
  error estimate for blocks of size 2^( 5) =       0.000442438041
  error estimate for blocks of size 2^( 6) =       0.000450217487
  error estimate for blocks of size 2^( 7) =       0.000455323775

      target function =      -0.923769210249
              le_mean =     -16.898410156764
             les_mean =     285.849104506370
             stat err =       0.000444605747
             autocorr =       1.350055064920
   target nu stat err =       0.000444605747
   target dn stat err =       0.002539835310
      target stat err =       0.004157558683
              std dev =       0.541145845919
             le_variance =       0.292838826555

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382647897
  error estimate for blocks of size 2^( 2) =       0.000399397291
  error estimate for blocks of size 2^( 3) =       0.000416174217
  error estimate for blocks of size 2^( 4) =       0.000430443686
  error estimate for blocks of size 2^( 5) =       0.000442438041
  error estimate for blocks of size 2^( 6) =       0.000450217487
  error estimate for blocks of size 2^( 7) =       0.000455323775

      target function =      -0.923769210249
              le_mean =     -16.898410156764
             les_mean =     285.849104506370
             stat err =       0.000444605747
             autocorr =       1.350055064920
   target nu stat err =       0.000444605747
   target dn stat err =       0.002539835310
      target stat err =       0.004157558683
              std dev =       0.541145845919
             le_variance =       0.292838826555

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382647897
  error estimate for blocks of size 2^( 2) =       0.000399397291
  error estimate for blocks of size 2^( 3) =       0.000416174217
  error estimate for blocks of size 2^( 4) =       0.000430443686
  error estimate for blocks of size 2^( 5) =       0.000442438041
  error estimate for blocks of size 2^( 6) =       0.000450217487
  error estimate for blocks of size 2^( 7) =       0.000455323775

      target function =      -0.923769210249
              le_mean =     -16.898410156764
             les_mean =     285.849104506370
             stat err =       0.000444605747
             autocorr =       1.350055064920
   target nu stat err =       0.000444605747
   target dn stat err =       0.002539835310
      target stat err =       0.004157558683
              std dev =       0.541145845919
             le_variance =       0.292838826555

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292877075360
                                         uncertainty =       0.002361218409

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382647897
  error estimate for blocks of size 2^( 2) =       0.000399397291
  error estimate for blocks of size 2^( 3) =       0.000416174217
  error estimate for blocks of size 2^( 4) =       0.000430443686
  error estimate for blocks of size 2^( 5) =       0.000442438041
  error estimate for blocks of size 2^( 6) =       0.000450217487
  error estimate for blocks of size 2^( 7) =       0.000455323775

      target function =      -0.923769210249
              le_mean =     -16.898410156764
             les_mean =     285.849104506370
             stat err =       0.000444605747
             autocorr =       1.350055064920
   target nu stat err =       0.000444605747
   target dn stat err =       0.002539835310
      target stat err =       0.004157558683
              std dev =       0.541145845919
             le_variance =       0.292838826555


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923769210249        initial  <--
     1.0000e+16     1.0000e+17             0.0000e+00        -0.923769210249
     4.0000e+16     4.0000e+17             1.8034e-21        -0.923769210249
     1.6000e+17     1.6000e+18             0.0000e+00        -0.923769210249

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8249
  </log>
  <optVariables href="H2O.s018.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8696e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s019 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s019 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=19  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6903e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -16.8914
    reference variance = 0.222804
====================================================
  Execution time = 2.0590e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s019
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6900e+01
  VMC Evar = 2.9565e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5362e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295606151245
                                         uncertainty =       0.003334973016

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295606151245
                                         uncertainty =       0.003334973016

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384478367
  error estimate for blocks of size 2^( 2) =       0.000401034591
  error estimate for blocks of size 2^( 3) =       0.000418573107
  error estimate for blocks of size 2^( 4) =       0.000434281597
  error estimate for blocks of size 2^( 5) =       0.000445553713
  error estimate for blocks of size 2^( 6) =       0.000452213136
  error estimate for blocks of size 2^( 7) =       0.000457392218

      target function =      -0.919196903481
              le_mean =     -16.899714005682
             les_mean =     285.895980555818
             stat err =       0.000447360166
             autocorr =       1.353850791690
   target nu stat err =       0.000447360166
   target dn stat err =       0.003687582988
      target stat err =       0.005937878747
              std dev =       0.543734521424
             le_variance =       0.295647229788


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689971400568e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+17, overlap shift 1.0000e+18 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+17 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+17, overlap shift 4.0000e+18 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+17 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+18, overlap shift 1.6000e+19 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919233470844       residual = 4.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.885779 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6137e+01
  </log>
  <optVariables href="H2O.s019.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 19
    time step          = 0.05
    reference energy   = -16.881
    reference variance = 0.230481
====================================================
  Execution time = 2.0221e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s019
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9308e-01
  Total weights = 2.0000e+06
  Execution time = 1.8908e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382803256
  error estimate for blocks of size 2^( 2) =       0.000399685220
  error estimate for blocks of size 2^( 3) =       0.000416660541
  error estimate for blocks of size 2^( 4) =       0.000432185009
  error estimate for blocks of size 2^( 5) =       0.000444489553
  error estimate for blocks of size 2^( 6) =       0.000451793183
  error estimate for blocks of size 2^( 7) =       0.000455847478

      target function =      -0.923385074789
              le_mean =     -16.898225221896
             les_mean =     285.843092168636
             stat err =       0.000446078805
             autocorr =       1.357912957381
   target nu stat err =       0.000446078805
   target dn stat err =       0.003084201942
      target stat err =       0.005014979332
              std dev =       0.541365556040
             le_variance =       0.293076665267

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382803256
  error estimate for blocks of size 2^( 2) =       0.000399685220
  error estimate for blocks of size 2^( 3) =       0.000416660541
  error estimate for blocks of size 2^( 4) =       0.000432185009
  error estimate for blocks of size 2^( 5) =       0.000444489553
  error estimate for blocks of size 2^( 6) =       0.000451793183
  error estimate for blocks of size 2^( 7) =       0.000455847478

      target function =      -0.923385074789
              le_mean =     -16.898225221896
             les_mean =     285.843092168636
             stat err =       0.000446078805
             autocorr =       1.357912957381
   target nu stat err =       0.000446078805
   target dn stat err =       0.003084201942
      target stat err =       0.005014979332
              std dev =       0.541365556040
             le_variance =       0.293076665267

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382803256
  error estimate for blocks of size 2^( 2) =       0.000399685220
  error estimate for blocks of size 2^( 3) =       0.000416660541
  error estimate for blocks of size 2^( 4) =       0.000432185009
  error estimate for blocks of size 2^( 5) =       0.000444489553
  error estimate for blocks of size 2^( 6) =       0.000451793183
  error estimate for blocks of size 2^( 7) =       0.000455847478

      target function =      -0.923385074789
              le_mean =     -16.898225221896
             les_mean =     285.843092168636
             stat err =       0.000446078805
             autocorr =       1.357912957381
   target nu stat err =       0.000446078805
   target dn stat err =       0.003084201942
      target stat err =       0.005014979332
              std dev =       0.541365556040
             le_variance =       0.293076665267

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293126508716
                                         uncertainty =       0.003271049862

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382803256
  error estimate for blocks of size 2^( 2) =       0.000399685220
  error estimate for blocks of size 2^( 3) =       0.000416660541
  error estimate for blocks of size 2^( 4) =       0.000432185009
  error estimate for blocks of size 2^( 5) =       0.000444489553
  error estimate for blocks of size 2^( 6) =       0.000451793183
  error estimate for blocks of size 2^( 7) =       0.000455847478

      target function =      -0.923385074789
              le_mean =     -16.898225221896
             les_mean =     285.843092168636
             stat err =       0.000446078805
             autocorr =       1.357912957381
   target nu stat err =       0.000446078805
   target dn stat err =       0.003084201942
      target stat err =       0.005014979332
              std dev =       0.541365556040
             le_variance =       0.293076665267


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923385074789        initial  <--
     1.0000e+17     1.0000e+18             0.0000e+00        -0.923385074789
     4.0000e+17     4.0000e+18             0.0000e+00        -0.923385074789
     1.6000e+18     1.6000e+19             0.0000e+00        -0.923385074789

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7934
  </log>
  <optVariables href="H2O.s019.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5936e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s020 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s020 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=20  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6903e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -16.8981
    reference variance = 0.215934
====================================================
  Execution time = 2.0241e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s020
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9179e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5575e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291841641127
                                         uncertainty =       0.002269565937

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291841641127
                                         uncertainty =       0.002269565937

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381958983
  error estimate for blocks of size 2^( 2) =       0.000398942964
  error estimate for blocks of size 2^( 3) =       0.000416289208
  error estimate for blocks of size 2^( 4) =       0.000431270211
  error estimate for blocks of size 2^( 5) =       0.000442610668
  error estimate for blocks of size 2^( 6) =       0.000449064284
  error estimate for blocks of size 2^( 7) =       0.000452714167

      target function =      -0.925467321904
              le_mean =     -16.898533051379
             les_mean =     285.852204472619
             stat err =       0.000443914833
             autocorr =       1.350721633103
   target nu stat err =       0.000443914833
   target dn stat err =       0.002197932378
      target stat err =       0.003632312006
              std dev =       0.540171574573
             le_variance =       0.291785329977


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689853305138e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+18, overlap shift 1.0000e+19 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+18, overlap shift 4.0000e+19 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+18 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+19, overlap shift 1.6000e+20 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.925480122810       residual = 7.07e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.886815 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5809e+01
  </log>
  <optVariables href="H2O.s020.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 20
    time step          = 0.05
    reference energy   = -16.8955
    reference variance = 0.245557
====================================================
  Execution time = 2.0142e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s020
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9639e-01
  Total weights = 2.0000e+06
  Execution time = 1.8983e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384962891
  error estimate for blocks of size 2^( 2) =       0.000402130175
  error estimate for blocks of size 2^( 3) =       0.000419068418
  error estimate for blocks of size 2^( 4) =       0.000434544077
  error estimate for blocks of size 2^( 5) =       0.000447111152
  error estimate for blocks of size 2^( 6) =       0.000454942222
  error estimate for blocks of size 2^( 7) =       0.000458249877

      target function =      -0.918072758013
              le_mean =     -16.898758469917
             les_mean =     285.864430531902
             stat err =       0.000448711832
             autocorr =       1.358617824187
   target nu stat err =       0.000448711832
   target dn stat err =       0.002555644254
      target stat err =       0.004136041973
              std dev =       0.544419742018
             le_variance =       0.296392855499

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384962891
  error estimate for blocks of size 2^( 2) =       0.000402130175
  error estimate for blocks of size 2^( 3) =       0.000419068418
  error estimate for blocks of size 2^( 4) =       0.000434544077
  error estimate for blocks of size 2^( 5) =       0.000447111152
  error estimate for blocks of size 2^( 6) =       0.000454942222
  error estimate for blocks of size 2^( 7) =       0.000458249877

      target function =      -0.918072758013
              le_mean =     -16.898758469917
             les_mean =     285.864430531902
             stat err =       0.000448711832
             autocorr =       1.358617824187
   target nu stat err =       0.000448711832
   target dn stat err =       0.002555644254
      target stat err =       0.004136041973
              std dev =       0.544419742018
             le_variance =       0.296392855499

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384962891
  error estimate for blocks of size 2^( 2) =       0.000402130175
  error estimate for blocks of size 2^( 3) =       0.000419068418
  error estimate for blocks of size 2^( 4) =       0.000434544077
  error estimate for blocks of size 2^( 5) =       0.000447111152
  error estimate for blocks of size 2^( 6) =       0.000454942222
  error estimate for blocks of size 2^( 7) =       0.000458249877

      target function =      -0.918072758013
              le_mean =     -16.898758469917
             les_mean =     285.864430531902
             stat err =       0.000448711832
             autocorr =       1.358617824187
   target nu stat err =       0.000448711832
   target dn stat err =       0.002555644254
      target stat err =       0.004136041973
              std dev =       0.544419742018
             le_variance =       0.296392855499

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296219371173
                                         uncertainty =       0.002262654671

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384962891
  error estimate for blocks of size 2^( 2) =       0.000402130175
  error estimate for blocks of size 2^( 3) =       0.000419068418
  error estimate for blocks of size 2^( 4) =       0.000434544077
  error estimate for blocks of size 2^( 5) =       0.000447111152
  error estimate for blocks of size 2^( 6) =       0.000454942222
  error estimate for blocks of size 2^( 7) =       0.000458249877

      target function =      -0.918072758013
              le_mean =     -16.898758469917
             les_mean =     285.864430531902
             stat err =       0.000448711832
             autocorr =       1.358617824187
   target nu stat err =       0.000448711832
   target dn stat err =       0.002555644254
      target stat err =       0.004136041973
              std dev =       0.544419742018
             le_variance =       0.296392855499


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.918072758013        initial  <--
     1.0000e+18     1.0000e+19             0.0000e+00        -0.918072758013
     4.0000e+18     4.0000e+19             0.0000e+00        -0.918072758013
     1.6000e+19     1.6000e+20             0.0000e+00        -0.918072758013

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7487
  </log>
  <optVariables href="H2O.s020.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5564e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s021 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s021 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=21  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6902e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -16.8978
    reference variance = 0.517353
====================================================
  Execution time = 2.2515e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s021
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9879e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5829e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298763306723
                                         uncertainty =       0.006401172968

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298763306723
                                         uncertainty =       0.006401172968

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386515563
  error estimate for blocks of size 2^( 2) =       0.000402910751
  error estimate for blocks of size 2^( 3) =       0.000420280729
  error estimate for blocks of size 2^( 4) =       0.000436026054
  error estimate for blocks of size 2^( 5) =       0.000448337709
  error estimate for blocks of size 2^( 6) =       0.000455704940
  error estimate for blocks of size 2^( 7) =       0.000461249204

      target function =      -0.914200510216
              le_mean =     -16.898588391830
             les_mean =     285.861078047942
             stat err =       0.000450329477
             autocorr =       1.357459180678
   target nu stat err =       0.000450329477
   target dn stat err =       0.006234949407
      target stat err =       0.009855981833
              std dev =       0.546615551231
             le_variance =       0.298788560848


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689858839183e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+19, overlap shift 1.0000e+20 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+19, overlap shift 4.0000e+20 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+19 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+20, overlap shift 1.6000e+21 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914306157480       residual = 7.37e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.887908 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8108e+01
  </log>
  <optVariables href="H2O.s021.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 21
    time step          = 0.05
    reference energy   = -16.859
    reference variance = 0.197081
====================================================
  Execution time = 2.0254e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s021
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9568e-01
  Total weights = 2.0000e+06
  Execution time = 1.8952e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384500437
  error estimate for blocks of size 2^( 2) =       0.000400886204
  error estimate for blocks of size 2^( 3) =       0.000417440540
  error estimate for blocks of size 2^( 4) =       0.000432479738
  error estimate for blocks of size 2^( 5) =       0.000443224155
  error estimate for blocks of size 2^( 6) =       0.000448969853
  error estimate for blocks of size 2^( 7) =       0.000450793758

      target function =      -0.919216976885
              le_mean =     -16.898363469268
             les_mean =     285.850368963100
             stat err =       0.000443866876
             autocorr =       1.332636790288
   target nu stat err =       0.000443866876
   target dn stat err =       0.002911298625
      target stat err =       0.004699213109
              std dev =       0.543765732129
             le_variance =       0.295681171438

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384500437
  error estimate for blocks of size 2^( 2) =       0.000400886204
  error estimate for blocks of size 2^( 3) =       0.000417440540
  error estimate for blocks of size 2^( 4) =       0.000432479738
  error estimate for blocks of size 2^( 5) =       0.000443224155
  error estimate for blocks of size 2^( 6) =       0.000448969853
  error estimate for blocks of size 2^( 7) =       0.000450793758

      target function =      -0.919216976885
              le_mean =     -16.898363469268
             les_mean =     285.850368963100
             stat err =       0.000443866876
             autocorr =       1.332636790288
   target nu stat err =       0.000443866876
   target dn stat err =       0.002911298625
      target stat err =       0.004699213109
              std dev =       0.543765732129
             le_variance =       0.295681171438

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384500437
  error estimate for blocks of size 2^( 2) =       0.000400886204
  error estimate for blocks of size 2^( 3) =       0.000417440540
  error estimate for blocks of size 2^( 4) =       0.000432479738
  error estimate for blocks of size 2^( 5) =       0.000443224155
  error estimate for blocks of size 2^( 6) =       0.000448969853
  error estimate for blocks of size 2^( 7) =       0.000450793758

      target function =      -0.919216976885
              le_mean =     -16.898363469268
             les_mean =     285.850368963100
             stat err =       0.000443866876
             autocorr =       1.332636790288
   target nu stat err =       0.000443866876
   target dn stat err =       0.002911298625
      target stat err =       0.004699213109
              std dev =       0.543765732129
             le_variance =       0.295681171438

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295730116979
                                         uncertainty =       0.002684583109

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384500437
  error estimate for blocks of size 2^( 2) =       0.000400886204
  error estimate for blocks of size 2^( 3) =       0.000417440540
  error estimate for blocks of size 2^( 4) =       0.000432479738
  error estimate for blocks of size 2^( 5) =       0.000443224155
  error estimate for blocks of size 2^( 6) =       0.000448969853
  error estimate for blocks of size 2^( 7) =       0.000450793758

      target function =      -0.919216976885
              le_mean =     -16.898363469268
             les_mean =     285.850368963100
             stat err =       0.000443866876
             autocorr =       1.332636790288
   target nu stat err =       0.000443866876
   target dn stat err =       0.002911298625
      target stat err =       0.004699213109
              std dev =       0.543765732129
             le_variance =       0.295681171438


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919216976885        initial  <--
     1.0000e+19     1.0000e+20             0.0000e+00        -0.919216976885
     4.0000e+19     4.0000e+20             0.0000e+00        -0.919216976885
     1.6000e+20     1.6000e+21             0.0000e+00        -0.919216976885

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8641
  </log>
  <optVariables href="H2O.s021.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7978e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s022 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s022 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=22  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6901e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -16.9523
    reference variance = 0.14476
====================================================
  Execution time = 2.0466e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s022
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9646e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5376e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296460171154
                                         uncertainty =       0.004732311938

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296460171154
                                         uncertainty =       0.004732311938

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385004665
  error estimate for blocks of size 2^( 2) =       0.000402072318
  error estimate for blocks of size 2^( 3) =       0.000419310540
  error estimate for blocks of size 2^( 4) =       0.000434157806
  error estimate for blocks of size 2^( 5) =       0.000445659846
  error estimate for blocks of size 2^( 6) =       0.000451840401
  error estimate for blocks of size 2^( 7) =       0.000454371164

      target function =      -0.917917994797
              le_mean =     -16.898885090614
             les_mean =     285.868774341866
             stat err =       0.000446507304
             autocorr =       1.345008880087
   target nu stat err =       0.000446507304
   target dn stat err =       0.004822398601
      target stat err =       0.007704154078
              std dev =       0.544478818972
             le_variance =       0.296457184309


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689888509061e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+20, overlap shift 1.0000e+21 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+20, overlap shift 4.0000e+21 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+20 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+21, overlap shift 1.6000e+22 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917981735313       residual = 9.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.888993 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6015e+01
  </log>
  <optVariables href="H2O.s022.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 22
    time step          = 0.05
    reference energy   = -16.8112
    reference variance = 0.301663
====================================================
  Execution time = 2.0131e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s022
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8938e-01
  Total weights = 2.0000e+06
  Execution time = 1.8870e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380382523
  error estimate for blocks of size 2^( 2) =       0.000397349114
  error estimate for blocks of size 2^( 3) =       0.000414497633
  error estimate for blocks of size 2^( 4) =       0.000429305176
  error estimate for blocks of size 2^( 5) =       0.000440402442
  error estimate for blocks of size 2^( 6) =       0.000446188674
  error estimate for blocks of size 2^( 7) =       0.000452358221

      target function =      -0.929348633589
              le_mean =     -16.899133875059
             les_mean =     285.870107310692
             stat err =       0.000442063628
             autocorr =       1.350605324753
   target nu stat err =       0.000442063628
   target dn stat err =       0.002191094504
      target stat err =       0.003654722513
              std dev =       0.537942123483
             le_variance =       0.289381728217

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380382523
  error estimate for blocks of size 2^( 2) =       0.000397349114
  error estimate for blocks of size 2^( 3) =       0.000414497633
  error estimate for blocks of size 2^( 4) =       0.000429305176
  error estimate for blocks of size 2^( 5) =       0.000440402442
  error estimate for blocks of size 2^( 6) =       0.000446188674
  error estimate for blocks of size 2^( 7) =       0.000452358221

      target function =      -0.929348633589
              le_mean =     -16.899133875059
             les_mean =     285.870107310692
             stat err =       0.000442063628
             autocorr =       1.350605324753
   target nu stat err =       0.000442063628
   target dn stat err =       0.002191094504
      target stat err =       0.003654722513
              std dev =       0.537942123483
             le_variance =       0.289381728217

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380382523
  error estimate for blocks of size 2^( 2) =       0.000397349114
  error estimate for blocks of size 2^( 3) =       0.000414497633
  error estimate for blocks of size 2^( 4) =       0.000429305176
  error estimate for blocks of size 2^( 5) =       0.000440402442
  error estimate for blocks of size 2^( 6) =       0.000446188674
  error estimate for blocks of size 2^( 7) =       0.000452358221

      target function =      -0.929348633589
              le_mean =     -16.899133875059
             les_mean =     285.870107310692
             stat err =       0.000442063628
             autocorr =       1.350605324753
   target nu stat err =       0.000442063628
   target dn stat err =       0.002191094504
      target stat err =       0.003654722513
              std dev =       0.537942123483
             le_variance =       0.289381728217

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289404514775
                                         uncertainty =       0.002092043299

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380382523
  error estimate for blocks of size 2^( 2) =       0.000397349114
  error estimate for blocks of size 2^( 3) =       0.000414497633
  error estimate for blocks of size 2^( 4) =       0.000429305176
  error estimate for blocks of size 2^( 5) =       0.000440402442
  error estimate for blocks of size 2^( 6) =       0.000446188674
  error estimate for blocks of size 2^( 7) =       0.000452358221

      target function =      -0.929348633589
              le_mean =     -16.899133875059
             les_mean =     285.870107310692
             stat err =       0.000442063628
             autocorr =       1.350605324753
   target nu stat err =       0.000442063628
   target dn stat err =       0.002191094504
      target stat err =       0.003654722513
              std dev =       0.537942123483
             le_variance =       0.289381728217


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.929348633589        initial  <--
     1.0000e+20     1.0000e+21             0.0000e+00        -0.929348633589
     4.0000e+20     4.0000e+21             0.0000e+00        -0.929348633589
     1.6000e+21     1.6000e+22             0.0000e+00        -0.929348633589

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6976
  </log>
  <optVariables href="H2O.s022.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5718e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s023 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s023 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=23  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6900e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -16.806
    reference variance = 0.359824
====================================================
  Execution time = 2.0552e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s023
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9648e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5629e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296396169582
                                         uncertainty =       0.004200566483

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296396169582
                                         uncertainty =       0.004200566483

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385021929
  error estimate for blocks of size 2^( 2) =       0.000401828261
  error estimate for blocks of size 2^( 3) =       0.000418451108
  error estimate for blocks of size 2^( 4) =       0.000433531034
  error estimate for blocks of size 2^( 5) =       0.000444250936
  error estimate for blocks of size 2^( 6) =       0.000449370408
  error estimate for blocks of size 2^( 7) =       0.000455420543

      target function =      -0.917916278820
              le_mean =     -16.898331370403
             les_mean =     285.850086727779
             stat err =       0.000445643230
             autocorr =       1.339688087156
   target nu stat err =       0.000445643230
   target dn stat err =       0.004228960150
      target stat err =       0.006758932580
              std dev =       0.544503234220
             le_variance =       0.296483772076


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689833137040e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+21, overlap shift 1.0000e+22 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+21, overlap shift 4.0000e+22 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+21 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+22, overlap shift 1.6000e+23 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917964621535       residual = 5.48e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.890073 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6126e+01
  </log>
  <optVariables href="H2O.s023.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 23
    time step          = 0.05
    reference energy   = -16.8773
    reference variance = 0.360464
====================================================
  Execution time = 2.1961e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s023
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9656e-01
  Total weights = 2.0000e+06
  Execution time = 1.8959e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385068439
  error estimate for blocks of size 2^( 2) =       0.000401803382
  error estimate for blocks of size 2^( 3) =       0.000419290066
  error estimate for blocks of size 2^( 4) =       0.000435073130
  error estimate for blocks of size 2^( 5) =       0.000447303528
  error estimate for blocks of size 2^( 6) =       0.000455866192
  error estimate for blocks of size 2^( 7) =       0.000461609724

      target function =      -0.917824578854
              le_mean =     -16.898334648979
             les_mean =     285.850269166441
             stat err =       0.000449963143
             autocorr =       1.365457019977
   target nu stat err =       0.000449963143
   target dn stat err =       0.003133948157
      target stat err =       0.005035566761
              std dev =       0.544569009234
             le_variance =       0.296555405818

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385068439
  error estimate for blocks of size 2^( 2) =       0.000401803382
  error estimate for blocks of size 2^( 3) =       0.000419290066
  error estimate for blocks of size 2^( 4) =       0.000435073130
  error estimate for blocks of size 2^( 5) =       0.000447303528
  error estimate for blocks of size 2^( 6) =       0.000455866192
  error estimate for blocks of size 2^( 7) =       0.000461609724

      target function =      -0.917824578854
              le_mean =     -16.898334648979
             les_mean =     285.850269166441
             stat err =       0.000449963143
             autocorr =       1.365457019977
   target nu stat err =       0.000449963143
   target dn stat err =       0.003133948157
      target stat err =       0.005035566761
              std dev =       0.544569009234
             le_variance =       0.296555405818

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385068439
  error estimate for blocks of size 2^( 2) =       0.000401803382
  error estimate for blocks of size 2^( 3) =       0.000419290066
  error estimate for blocks of size 2^( 4) =       0.000435073130
  error estimate for blocks of size 2^( 5) =       0.000447303528
  error estimate for blocks of size 2^( 6) =       0.000455866192
  error estimate for blocks of size 2^( 7) =       0.000461609724

      target function =      -0.917824578854
              le_mean =     -16.898334648979
             les_mean =     285.850269166441
             stat err =       0.000449963143
             autocorr =       1.365457019977
   target nu stat err =       0.000449963143
   target dn stat err =       0.003133948157
      target stat err =       0.005035566761
              std dev =       0.544569009234
             le_variance =       0.296555405818

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296573943362
                                         uncertainty =       0.003253690257

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385068439
  error estimate for blocks of size 2^( 2) =       0.000401803382
  error estimate for blocks of size 2^( 3) =       0.000419290066
  error estimate for blocks of size 2^( 4) =       0.000435073130
  error estimate for blocks of size 2^( 5) =       0.000447303528
  error estimate for blocks of size 2^( 6) =       0.000455866192
  error estimate for blocks of size 2^( 7) =       0.000461609724

      target function =      -0.917824578854
              le_mean =     -16.898334648979
             les_mean =     285.850269166441
             stat err =       0.000449963143
             autocorr =       1.365457019977
   target nu stat err =       0.000449963143
   target dn stat err =       0.003133948157
      target stat err =       0.005035566761
              std dev =       0.544569009234
             le_variance =       0.296555405818


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917824578854        initial  <--
     1.0000e+21     1.0000e+22             0.0000e+00        -0.917824578854
     4.0000e+21     4.0000e+22             0.0000e+00        -0.917824578854
     1.6000e+22     1.6000e+23             0.0000e+00        -0.917824578854

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 31.5568
  </log>
  <optVariables href="H2O.s023.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7689e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s024 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s024 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=24  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -16.8795
    reference variance = 0.241781
====================================================
  Execution time = 2.0581e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s024
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9499e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4356e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295044472479
                                         uncertainty =       0.003188482586

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295044472479
                                         uncertainty =       0.003188482586

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384049022
  error estimate for blocks of size 2^( 2) =       0.000400790615
  error estimate for blocks of size 2^( 3) =       0.000417807356
  error estimate for blocks of size 2^( 4) =       0.000432693584
  error estimate for blocks of size 2^( 5) =       0.000444170698
  error estimate for blocks of size 2^( 6) =       0.000454829173
  error estimate for blocks of size 2^( 7) =       0.000459012003

      target function =      -0.920314349818
              le_mean =     -16.898478415681
             les_mean =     285.853559920123
             stat err =       0.000447676365
             autocorr =       1.358798333794
   target nu stat err =       0.000447676365
   target dn stat err =       0.003163065181
      target stat err =       0.005109302852
              std dev =       0.543127335338
             le_variance =       0.294987302391


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689847841568e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+22, overlap shift 1.0000e+23 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+22, overlap shift 4.0000e+23 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+22 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+23, overlap shift 1.6000e+24 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920341088313       residual = 4.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.891165 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6027e+01
  </log>
  <optVariables href="H2O.s024.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 24
    time step          = 0.05
    reference energy   = -16.8369
    reference variance = 0.167011
====================================================
  Execution time = 2.0159e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s024
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9684e-01
  Total weights = 2.0000e+06
  Execution time = 1.8910e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385254210
  error estimate for blocks of size 2^( 2) =       0.000402143864
  error estimate for blocks of size 2^( 3) =       0.000419570192
  error estimate for blocks of size 2^( 4) =       0.000434605921
  error estimate for blocks of size 2^( 5) =       0.000446551187
  error estimate for blocks of size 2^( 6) =       0.000455160883
  error estimate for blocks of size 2^( 7) =       0.000459803629

      target function =      -0.917273993371
              le_mean =     -16.898879695243
             les_mean =     285.868976418928
             stat err =       0.000449030405
             autocorr =       1.358490830617
   target nu stat err =       0.000449030405
   target dn stat err =       0.005945780960
      target stat err =       0.009469812099
              std dev =       0.544831729111
             le_variance =       0.296841613046

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385254210
  error estimate for blocks of size 2^( 2) =       0.000402143864
  error estimate for blocks of size 2^( 3) =       0.000419570192
  error estimate for blocks of size 2^( 4) =       0.000434605921
  error estimate for blocks of size 2^( 5) =       0.000446551187
  error estimate for blocks of size 2^( 6) =       0.000455160883
  error estimate for blocks of size 2^( 7) =       0.000459803629

      target function =      -0.917273993371
              le_mean =     -16.898879695243
             les_mean =     285.868976418928
             stat err =       0.000449030405
             autocorr =       1.358490830617
   target nu stat err =       0.000449030405
   target dn stat err =       0.005945780960
      target stat err =       0.009469812099
              std dev =       0.544831729111
             le_variance =       0.296841613046

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385254210
  error estimate for blocks of size 2^( 2) =       0.000402143864
  error estimate for blocks of size 2^( 3) =       0.000419570192
  error estimate for blocks of size 2^( 4) =       0.000434605921
  error estimate for blocks of size 2^( 5) =       0.000446551187
  error estimate for blocks of size 2^( 6) =       0.000455160883
  error estimate for blocks of size 2^( 7) =       0.000459803629

      target function =      -0.917273993371
              le_mean =     -16.898879695243
             les_mean =     285.868976418928
             stat err =       0.000449030405
             autocorr =       1.358490830617
   target nu stat err =       0.000449030405
   target dn stat err =       0.005945780960
      target stat err =       0.009469812099
              std dev =       0.544831729111
             le_variance =       0.296841613046

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296835295077
                                         uncertainty =       0.005733260213

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385254210
  error estimate for blocks of size 2^( 2) =       0.000402143864
  error estimate for blocks of size 2^( 3) =       0.000419570192
  error estimate for blocks of size 2^( 4) =       0.000434605921
  error estimate for blocks of size 2^( 5) =       0.000446551187
  error estimate for blocks of size 2^( 6) =       0.000455160883
  error estimate for blocks of size 2^( 7) =       0.000459803629

      target function =      -0.917273993371
              le_mean =     -16.898879695243
             les_mean =     285.868976418928
             stat err =       0.000449030405
             autocorr =       1.358490830617
   target nu stat err =       0.000449030405
   target dn stat err =       0.005945780960
      target stat err =       0.009469812099
              std dev =       0.544831729111
             le_variance =       0.296841613046


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917273993371        initial  <--
     1.0000e+22     1.0000e+23             0.0000e+00        -0.917273993371
     4.0000e+22     4.0000e+23             0.0000e+00        -0.917273993371
     1.6000e+23     1.6000e+24             0.0000e+00        -0.917273993371

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7474
  </log>
  <optVariables href="H2O.s024.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5787e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s025 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s025 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=25  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -16.8793
    reference variance = 0.341797
====================================================
  Execution time = 2.0728e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s025
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9414e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4836e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294181964638
                                         uncertainty =       0.002988184635

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294181964638
                                         uncertainty =       0.002988184635

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383498081
  error estimate for blocks of size 2^( 2) =       0.000400369973
  error estimate for blocks of size 2^( 3) =       0.000417460752
  error estimate for blocks of size 2^( 4) =       0.000433121285
  error estimate for blocks of size 2^( 5) =       0.000444471652
  error estimate for blocks of size 2^( 6) =       0.000452788776
  error estimate for blocks of size 2^( 7) =       0.000457112956

      target function =      -0.921678279800
              le_mean =     -16.898273640449
             les_mean =     285.845793436799
             stat err =       0.000446873667
             autocorr =       1.357822927617
   target nu stat err =       0.000446873667
   target dn stat err =       0.002917268231
      target stat err =       0.004733557278
              std dev =       0.542348187413
             le_variance =       0.294141556391


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689827364045e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+23, overlap shift 1.0000e+24 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+23, overlap shift 4.0000e+24 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+23 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+24, overlap shift 1.6000e+25 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921701141393       residual = 8.33e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.895355 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6229e+01
  </log>
  <optVariables href="H2O.s025.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 25
    time step          = 0.05
    reference energy   = -16.9044
    reference variance = 0.196659
====================================================
  Execution time = 1.9934e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s025
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9306e-01
  Total weights = 2.0000e+06
  Execution time = 1.9015e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382794699
  error estimate for blocks of size 2^( 2) =       0.000399459167
  error estimate for blocks of size 2^( 3) =       0.000416230158
  error estimate for blocks of size 2^( 4) =       0.000431472817
  error estimate for blocks of size 2^( 5) =       0.000441953971
  error estimate for blocks of size 2^( 6) =       0.000447728644
  error estimate for blocks of size 2^( 7) =       0.000451165491

      target function =      -0.923386277686
              le_mean =     -16.898817149965
             les_mean =     285.863084483995
             stat err =       0.000443080231
             autocorr =       1.339778232169
   target nu stat err =       0.000443080231
   target dn stat err =       0.002986672054
      target stat err =       0.004864853715
              std dev =       0.541353454396
             le_variance =       0.293063562587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382794699
  error estimate for blocks of size 2^( 2) =       0.000399459167
  error estimate for blocks of size 2^( 3) =       0.000416230158
  error estimate for blocks of size 2^( 4) =       0.000431472817
  error estimate for blocks of size 2^( 5) =       0.000441953971
  error estimate for blocks of size 2^( 6) =       0.000447728644
  error estimate for blocks of size 2^( 7) =       0.000451165491

      target function =      -0.923386277686
              le_mean =     -16.898817149965
             les_mean =     285.863084483995
             stat err =       0.000443080231
             autocorr =       1.339778232169
   target nu stat err =       0.000443080231
   target dn stat err =       0.002986672054
      target stat err =       0.004864853715
              std dev =       0.541353454396
             le_variance =       0.293063562587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382794699
  error estimate for blocks of size 2^( 2) =       0.000399459167
  error estimate for blocks of size 2^( 3) =       0.000416230158
  error estimate for blocks of size 2^( 4) =       0.000431472817
  error estimate for blocks of size 2^( 5) =       0.000441953971
  error estimate for blocks of size 2^( 6) =       0.000447728644
  error estimate for blocks of size 2^( 7) =       0.000451165491

      target function =      -0.923386277686
              le_mean =     -16.898817149965
             les_mean =     285.863084483995
             stat err =       0.000443080231
             autocorr =       1.339778232169
   target nu stat err =       0.000443080231
   target dn stat err =       0.002986672054
      target stat err =       0.004864853715
              std dev =       0.541353454396
             le_variance =       0.293063562587

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293110603745
                                         uncertainty =       0.002939934479

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382794699
  error estimate for blocks of size 2^( 2) =       0.000399459167
  error estimate for blocks of size 2^( 3) =       0.000416230158
  error estimate for blocks of size 2^( 4) =       0.000431472817
  error estimate for blocks of size 2^( 5) =       0.000441953971
  error estimate for blocks of size 2^( 6) =       0.000447728644
  error estimate for blocks of size 2^( 7) =       0.000451165491

      target function =      -0.923386277686
              le_mean =     -16.898817149965
             les_mean =     285.863084483995
             stat err =       0.000443080231
             autocorr =       1.339778232169
   target nu stat err =       0.000443080231
   target dn stat err =       0.002986672054
      target stat err =       0.004864853715
              std dev =       0.541353454396
             le_variance =       0.293063562587


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923386277686        initial  <--
     1.0000e+23     1.0000e+24             0.0000e+00        -0.923386277686
     4.0000e+23     4.0000e+24             0.0000e+00        -0.923386277686
     1.6000e+24     1.6000e+25             0.0000e+00        -0.923386277686

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.5651
  </log>
  <optVariables href="H2O.s025.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5809e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s026 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s026 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=26  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -16.9189
    reference variance = 0.182158
====================================================
  Execution time = 2.0620e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s026
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9107e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4909e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291071454656
                                         uncertainty =       0.002743313971

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291071454656
                                         uncertainty =       0.002743313971

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381487912
  error estimate for blocks of size 2^( 2) =       0.000398196800
  error estimate for blocks of size 2^( 3) =       0.000415039708
  error estimate for blocks of size 2^( 4) =       0.000430034702
  error estimate for blocks of size 2^( 5) =       0.000442197430
  error estimate for blocks of size 2^( 6) =       0.000449255363
  error estimate for blocks of size 2^( 7) =       0.000454045227

      target function =      -0.926607916111
              le_mean =     -16.899005618331
             les_mean =     285.867456797217
             stat err =       0.000443883180
             autocorr =       1.353866415419
   target nu stat err =       0.000443883180
   target dn stat err =       0.002739515443
      target stat err =       0.004505470893
              std dev =       0.539505379371
             le_variance =       0.291066054370


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689900561833e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+24, overlap shift 1.0000e+25 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926628630636       residual = 8.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926628630636       residual = 8.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+24 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+24, overlap shift 4.0000e+25 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926628630636       residual = 8.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926628630636       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.926628630636       residual = 5.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.926628630637       residual = 5.26e-03           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.926630020142       residual = 6.27e+08           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.878074878181       residual = 1.22e+07           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+24 is 3.287973e-29

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+25, overlap shift 1.6000e+26 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926628630636       residual = 8.01e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926628630636       residual = 1.05e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.926628630636       residual = 5.88e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.926628630636       residual = 1.77e-02           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+25 is 8.219933e-30

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.900599 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6129e+01
  </log>
  <optVariables href="H2O.s026.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 26
    time step          = 0.05
    reference energy   = -16.9021
    reference variance = 0.289188
====================================================
  Execution time = 2.1940e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s026
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 3.1186e-01
  Total weights = 2.0000e+06
  Execution time = 1.8888e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394882181
  error estimate for blocks of size 2^( 2) =       0.000411354310
  error estimate for blocks of size 2^( 3) =       0.000428008134
  error estimate for blocks of size 2^( 4) =       0.000443444896
  error estimate for blocks of size 2^( 5) =       0.000454791143
  error estimate for blocks of size 2^( 6) =       0.000462324620
  error estimate for blocks of size 2^( 7) =       0.000464364841

      target function =      -0.893633695154
              le_mean =     -16.898137342021
             les_mean =     285.858909348389
             stat err =       0.000456231375
             autocorr =       1.334858470788
   target nu stat err =       0.000456231375
   target dn stat err =       0.014806562527
      target stat err =       0.022300576008
              std dev =       0.558447736598
             le_variance =       0.311863874511

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394882181
  error estimate for blocks of size 2^( 2) =       0.000411354310
  error estimate for blocks of size 2^( 3) =       0.000428008134
  error estimate for blocks of size 2^( 4) =       0.000443444896
  error estimate for blocks of size 2^( 5) =       0.000454791143
  error estimate for blocks of size 2^( 6) =       0.000462324620
  error estimate for blocks of size 2^( 7) =       0.000464364841

      target function =      -0.893633695154
              le_mean =     -16.898137342021
             les_mean =     285.858909348389
             stat err =       0.000456231375
             autocorr =       1.334858470782
   target nu stat err =       0.000456231375
   target dn stat err =       0.014806562527
      target stat err =       0.022300576008
              std dev =       0.558447736598
             le_variance =       0.311863874511

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394882181
  error estimate for blocks of size 2^( 2) =       0.000411354310
  error estimate for blocks of size 2^( 3) =       0.000428008134
  error estimate for blocks of size 2^( 4) =       0.000443444896
  error estimate for blocks of size 2^( 5) =       0.000454791143
  error estimate for blocks of size 2^( 6) =       0.000462324620
  error estimate for blocks of size 2^( 7) =       0.000464364841

      target function =      -0.893633695154
              le_mean =     -16.898137342021
             les_mean =     285.858909348389
             stat err =       0.000456231375
             autocorr =       1.334858470782
   target nu stat err =       0.000456231375
   target dn stat err =       0.014806562527
      target stat err =       0.022300576008
              std dev =       0.558447736598
             le_variance =       0.311863874511

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311731864821
                                         uncertainty =       0.014963815659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394882181
  error estimate for blocks of size 2^( 2) =       0.000411354310
  error estimate for blocks of size 2^( 3) =       0.000428008134
  error estimate for blocks of size 2^( 4) =       0.000443444896
  error estimate for blocks of size 2^( 5) =       0.000454791143
  error estimate for blocks of size 2^( 6) =       0.000462324620
  error estimate for blocks of size 2^( 7) =       0.000464364841

      target function =      -0.893633695154
              le_mean =     -16.898137342021
             les_mean =     285.858909348389
             stat err =       0.000456231375
             autocorr =       1.334858470782
   target nu stat err =       0.000456231375
   target dn stat err =       0.014806562527
      target stat err =       0.022300576008
              std dev =       0.558447736598
             le_variance =       0.311863874511


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.893633695154        initial  <--
     1.0000e+24     1.0000e+25             0.0000e+00        -0.893633695154
     4.0000e+24     4.0000e+25             3.2880e-29        -0.893633695154
     1.6000e+25     1.6000e+26             8.2199e-30        -0.893633695154

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 31.4999
  </log>
  <optVariables href="H2O.s026.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7640e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s027 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s027 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=27  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6897e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -16.8675
    reference variance = 0.201182
====================================================
  Execution time = 2.0578e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s027
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0003e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5012e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299940039514
                                         uncertainty =       0.004425231132

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299940039514
                                         uncertainty =       0.004425231132

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387320103
  error estimate for blocks of size 2^( 2) =       0.000403924836
  error estimate for blocks of size 2^( 3) =       0.000420743232
  error estimate for blocks of size 2^( 4) =       0.000435381324
  error estimate for blocks of size 2^( 5) =       0.000446283986
  error estimate for blocks of size 2^( 6) =       0.000454505000
  error estimate for blocks of size 2^( 7) =       0.000458218062

      target function =      -0.912275298716
              le_mean =     -16.899018378868
             les_mean =     285.876855744080
             stat err =       0.000448597093
             autocorr =       1.341444879590
   target nu stat err =       0.000448597093
   target dn stat err =       0.004244331867
      target stat err =       0.006709876004
              std dev =       0.547753343001
             le_variance =       0.300033724768


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689901837887e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+25, overlap shift 1.0000e+26 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+25, overlap shift 4.0000e+26 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+25 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+26, overlap shift 1.6000e+27 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.912323849507       residual = 8.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+26 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.901682 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6091e+01
  </log>
  <optVariables href="H2O.s027.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 27
    time step          = 0.05
    reference energy   = -16.9854
    reference variance = 0.223562
====================================================
  Execution time = 2.0181e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s027
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9221e-01
  Total weights = 2.0000e+06
  Execution time = 1.8987e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382237927
  error estimate for blocks of size 2^( 2) =       0.000398928732
  error estimate for blocks of size 2^( 3) =       0.000416119618
  error estimate for blocks of size 2^( 4) =       0.000430992347
  error estimate for blocks of size 2^( 5) =       0.000443166748
  error estimate for blocks of size 2^( 6) =       0.000449420642
  error estimate for blocks of size 2^( 7) =       0.000452870317

      target function =      -0.924787191044
              le_mean =     -16.898233716851
             les_mean =     285.842514268374
             stat err =       0.000444112513
             autocorr =       1.349952435652
   target nu stat err =       0.000444112513
   target dn stat err =       0.002372578967
      target stat err =       0.003900521139
              std dev =       0.540566059951
             le_variance =       0.292211665171

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382237927
  error estimate for blocks of size 2^( 2) =       0.000398928732
  error estimate for blocks of size 2^( 3) =       0.000416119618
  error estimate for blocks of size 2^( 4) =       0.000430992347
  error estimate for blocks of size 2^( 5) =       0.000443166748
  error estimate for blocks of size 2^( 6) =       0.000449420642
  error estimate for blocks of size 2^( 7) =       0.000452870317

      target function =      -0.924787191044
              le_mean =     -16.898233716851
             les_mean =     285.842514268374
             stat err =       0.000444112513
             autocorr =       1.349952435652
   target nu stat err =       0.000444112513
   target dn stat err =       0.002372578967
      target stat err =       0.003900521139
              std dev =       0.540566059951
             le_variance =       0.292211665171

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382237927
  error estimate for blocks of size 2^( 2) =       0.000398928732
  error estimate for blocks of size 2^( 3) =       0.000416119618
  error estimate for blocks of size 2^( 4) =       0.000430992347
  error estimate for blocks of size 2^( 5) =       0.000443166748
  error estimate for blocks of size 2^( 6) =       0.000449420642
  error estimate for blocks of size 2^( 7) =       0.000452870317

      target function =      -0.924787191044
              le_mean =     -16.898233716851
             les_mean =     285.842514268374
             stat err =       0.000444112513
             autocorr =       1.349952435652
   target nu stat err =       0.000444112513
   target dn stat err =       0.002372578967
      target stat err =       0.003900521139
              std dev =       0.540566059951
             le_variance =       0.292211665171

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292207594759
                                         uncertainty =       0.002326744091

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382237927
  error estimate for blocks of size 2^( 2) =       0.000398928732
  error estimate for blocks of size 2^( 3) =       0.000416119618
  error estimate for blocks of size 2^( 4) =       0.000430992347
  error estimate for blocks of size 2^( 5) =       0.000443166748
  error estimate for blocks of size 2^( 6) =       0.000449420642
  error estimate for blocks of size 2^( 7) =       0.000452870317

      target function =      -0.924787191044
              le_mean =     -16.898233716851
             les_mean =     285.842514268374
             stat err =       0.000444112513
             autocorr =       1.349952435652
   target nu stat err =       0.000444112513
   target dn stat err =       0.002372578967
      target stat err =       0.003900521139
              std dev =       0.540566059951
             le_variance =       0.292211665171


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924787191044        initial  <--
     1.0000e+25     1.0000e+26             0.0000e+00        -0.924787191044
     4.0000e+25     4.0000e+26             0.0000e+00        -0.924787191044
     1.6000e+26     1.6000e+27             0.0000e+00        -0.924787191044

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8094
  </log>
  <optVariables href="H2O.s027.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5906e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s028 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s028 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=28  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -16.8799
    reference variance = 0.249839
====================================================
  Execution time = 2.0986e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s028
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9773e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4953e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297535616644
                                         uncertainty =       0.004515406444

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297535616644
                                         uncertainty =       0.004515406444

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385830681
  error estimate for blocks of size 2^( 2) =       0.000402505651
  error estimate for blocks of size 2^( 3) =       0.000420074585
  error estimate for blocks of size 2^( 4) =       0.000434725629
  error estimate for blocks of size 2^( 5) =       0.000445180868
  error estimate for blocks of size 2^( 6) =       0.000453360509
  error estimate for blocks of size 2^( 7) =       0.000457601975

      target function =      -0.915900618959
              le_mean =     -16.899084952212
             les_mean =     285.876802701323
             stat err =       0.000447717246
             autocorr =       1.346524093042
   target nu stat err =       0.000447717246
   target dn stat err =       0.004342679196
      target stat err =       0.006918346106
              std dev =       0.545646981232
             le_variance =       0.297730628127


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689908495221e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+26, overlap shift 1.0000e+27 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915951861749       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915951861749       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.915951861749       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+26 is 8.511314e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+26, overlap shift 4.0000e+27 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915951861749       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915951861749       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.915951861745       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+26 is 2.127828e-31

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+27, overlap shift 1.6000e+28 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.915951861749       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.915951861749       residual = 1.06e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.915951861753       residual = 5.74e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+27 is 5.319571e-32

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.903002 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6492e+01
  </log>
  <optVariables href="H2O.s028.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 28
    time step          = 0.05
    reference energy   = -16.9768
    reference variance = 0.235721
====================================================
  Execution time = 2.0017e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s028
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9928e-01
  Total weights = 2.0000e+06
  Execution time = 1.8938e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386836595
  error estimate for blocks of size 2^( 2) =       0.000403743046
  error estimate for blocks of size 2^( 3) =       0.000420981515
  error estimate for blocks of size 2^( 4) =       0.000435911237
  error estimate for blocks of size 2^( 5) =       0.000448293283
  error estimate for blocks of size 2^( 6) =       0.000455136489
  error estimate for blocks of size 2^( 7) =       0.000458489507

      target function =      -0.913486015296
              le_mean =     -16.898368986474
             les_mean =     285.854159356456
             stat err =       0.000449457629
             autocorr =       1.349964686113
   target nu stat err =       0.000449457629
   target dn stat err =       0.004332136923
      target stat err =       0.006856711968
              std dev =       0.547069559625
             le_variance =       0.299285103068

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386836595
  error estimate for blocks of size 2^( 2) =       0.000403743046
  error estimate for blocks of size 2^( 3) =       0.000420981515
  error estimate for blocks of size 2^( 4) =       0.000435911237
  error estimate for blocks of size 2^( 5) =       0.000448293283
  error estimate for blocks of size 2^( 6) =       0.000455136489
  error estimate for blocks of size 2^( 7) =       0.000458489507

      target function =      -0.913486015296
              le_mean =     -16.898368986474
             les_mean =     285.854159356456
             stat err =       0.000449457629
             autocorr =       1.349964686113
   target nu stat err =       0.000449457629
   target dn stat err =       0.004332136923
      target stat err =       0.006856711968
              std dev =       0.547069559625
             le_variance =       0.299285103068

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386836595
  error estimate for blocks of size 2^( 2) =       0.000403743046
  error estimate for blocks of size 2^( 3) =       0.000420981515
  error estimate for blocks of size 2^( 4) =       0.000435911237
  error estimate for blocks of size 2^( 5) =       0.000448293283
  error estimate for blocks of size 2^( 6) =       0.000455136489
  error estimate for blocks of size 2^( 7) =       0.000458489507

      target function =      -0.913486015296
              le_mean =     -16.898368986474
             les_mean =     285.854159356456
             stat err =       0.000449457629
             autocorr =       1.349964686113
   target nu stat err =       0.000449457629
   target dn stat err =       0.004332136923
      target stat err =       0.006856711968
              std dev =       0.547069559625
             le_variance =       0.299285103068

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299260770560
                                         uncertainty =       0.004078325767

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386836595
  error estimate for blocks of size 2^( 2) =       0.000403743046
  error estimate for blocks of size 2^( 3) =       0.000420981515
  error estimate for blocks of size 2^( 4) =       0.000435911237
  error estimate for blocks of size 2^( 5) =       0.000448293283
  error estimate for blocks of size 2^( 6) =       0.000455136489
  error estimate for blocks of size 2^( 7) =       0.000458489507

      target function =      -0.913486015296
              le_mean =     -16.898368986474
             les_mean =     285.854159356456
             stat err =       0.000449457629
             autocorr =       1.349964686113
   target nu stat err =       0.000449457629
   target dn stat err =       0.004332136923
      target stat err =       0.006856711968
              std dev =       0.547069559625
             le_variance =       0.299285103068


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913486015296        initial  <--
     1.0000e+26     1.0000e+27             8.5113e-31        -0.913486015296
     4.0000e+26     4.0000e+27             2.1278e-31        -0.913486015296
     1.6000e+27     1.6000e+28             5.3196e-32        -0.913486015296

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 32.6981
  </log>
  <optVariables href="H2O.s028.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.9196e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s029 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s029 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=29  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -16.9097
    reference variance = 0.149241
====================================================
  Execution time = 2.0571e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s029
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9337e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5115e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293318662521
                                         uncertainty =       0.003342089278

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293318662521
                                         uncertainty =       0.003342089278

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382993218
  error estimate for blocks of size 2^( 2) =       0.000399845394
  error estimate for blocks of size 2^( 3) =       0.000417151920
  error estimate for blocks of size 2^( 4) =       0.000433272904
  error estimate for blocks of size 2^( 5) =       0.000445350355
  error estimate for blocks of size 2^( 6) =       0.000450969133
  error estimate for blocks of size 2^( 7) =       0.000455531111

      target function =      -0.922884541918
              le_mean =     -16.899052719462
             les_mean =     285.871350277857
             stat err =       0.000446280876
             autocorr =       1.357795568417
   target nu stat err =       0.000446280876
   target dn stat err =       0.003219360306
      target stat err =       0.005232216188
              std dev =       0.541634202554
             le_variance =       0.293367609377


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689905271946e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+27, overlap shift 1.0000e+28 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+27, overlap shift 4.0000e+28 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+27 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+28, overlap shift 1.6000e+29 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922913091238       residual = 6.21e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+28 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.904085 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6093e+01
  </log>
  <optVariables href="H2O.s029.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 29
    time step          = 0.05
    reference energy   = -16.9289
    reference variance = 0.284629
====================================================
  Execution time = 2.0274e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s029
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9699e-01
  Total weights = 2.0000e+06
  Execution time = 1.8898e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385350510
  error estimate for blocks of size 2^( 2) =       0.000402333870
  error estimate for blocks of size 2^( 3) =       0.000419532993
  error estimate for blocks of size 2^( 4) =       0.000434232675
  error estimate for blocks of size 2^( 5) =       0.000445794798
  error estimate for blocks of size 2^( 6) =       0.000451051872
  error estimate for blocks of size 2^( 7) =       0.000454630065

      target function =      -0.917070421724
              le_mean =     -16.898669865986
             les_mean =     285.862033121926
             stat err =       0.000446427352
             autocorr =       1.342114955270
   target nu stat err =       0.000446427352
   target dn stat err =       0.005292043069
      target stat err =       0.008428367412
              std dev =       0.544967917247
             le_variance =       0.296990030829

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385350510
  error estimate for blocks of size 2^( 2) =       0.000402333870
  error estimate for blocks of size 2^( 3) =       0.000419532993
  error estimate for blocks of size 2^( 4) =       0.000434232675
  error estimate for blocks of size 2^( 5) =       0.000445794798
  error estimate for blocks of size 2^( 6) =       0.000451051872
  error estimate for blocks of size 2^( 7) =       0.000454630065

      target function =      -0.917070421724
              le_mean =     -16.898669865986
             les_mean =     285.862033121926
             stat err =       0.000446427352
             autocorr =       1.342114955270
   target nu stat err =       0.000446427352
   target dn stat err =       0.005292043069
      target stat err =       0.008428367412
              std dev =       0.544967917247
             le_variance =       0.296990030829

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385350510
  error estimate for blocks of size 2^( 2) =       0.000402333870
  error estimate for blocks of size 2^( 3) =       0.000419532993
  error estimate for blocks of size 2^( 4) =       0.000434232675
  error estimate for blocks of size 2^( 5) =       0.000445794798
  error estimate for blocks of size 2^( 6) =       0.000451051872
  error estimate for blocks of size 2^( 7) =       0.000454630065

      target function =      -0.917070421724
              le_mean =     -16.898669865986
             les_mean =     285.862033121926
             stat err =       0.000446427352
             autocorr =       1.342114955270
   target nu stat err =       0.000446427352
   target dn stat err =       0.005292043069
      target stat err =       0.008428367412
              std dev =       0.544967917247
             le_variance =       0.296990030829

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297091037952
                                         uncertainty =       0.005344011249

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385350510
  error estimate for blocks of size 2^( 2) =       0.000402333870
  error estimate for blocks of size 2^( 3) =       0.000419532993
  error estimate for blocks of size 2^( 4) =       0.000434232675
  error estimate for blocks of size 2^( 5) =       0.000445794798
  error estimate for blocks of size 2^( 6) =       0.000451051872
  error estimate for blocks of size 2^( 7) =       0.000454630065

      target function =      -0.917070421724
              le_mean =     -16.898669865986
             les_mean =     285.862033121926
             stat err =       0.000446427352
             autocorr =       1.342114955270
   target nu stat err =       0.000446427352
   target dn stat err =       0.005292043069
      target stat err =       0.008428367412
              std dev =       0.544967917247
             le_variance =       0.296990030829


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.917070421724        initial  <--
     1.0000e+27     1.0000e+28             0.0000e+00        -0.917070421724
     4.0000e+27     4.0000e+28             0.0000e+00        -0.917070421724
     1.6000e+28     1.6000e+29             0.0000e+00        -0.917070421724

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8672
  </log>
  <optVariables href="H2O.s029.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5966e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s030 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s030 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=30  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6899e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -16.9332
    reference variance = 0.218993
====================================================
  Execution time = 2.0601e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s030
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.8874e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5062e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288694317043
                                         uncertainty =       0.001880550289

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.288694317043
                                         uncertainty =       0.001880550289

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000379958628
  error estimate for blocks of size 2^( 2) =       0.000397324428
  error estimate for blocks of size 2^( 3) =       0.000415147274
  error estimate for blocks of size 2^( 4) =       0.000430569128
  error estimate for blocks of size 2^( 5) =       0.000441895616
  error estimate for blocks of size 2^( 6) =       0.000449582815
  error estimate for blocks of size 2^( 7) =       0.000453291471

      target function =      -0.930417869355
              le_mean =     -16.898457753981
             les_mean =     285.846611437157
             stat err =       0.000443834757
             autocorr =       1.364488867635
   target nu stat err =       0.000443834757
   target dn stat err =       0.002123964688
      target stat err =       0.003551982057
              std dev =       0.537342645295
             le_variance =       0.288737118452


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689845775398e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+28, overlap shift 1.0000e+29 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930429844781       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930429844781       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930429844768       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+28 is 6.573661e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+28, overlap shift 4.0000e+29 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930429844781       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930429844781       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930429844884       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+28 is 1.643415e-33

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+29, overlap shift 1.6000e+30 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.930429844781       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.930429844781       residual = 1.11e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.930429844651       residual = 5.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+29 is 4.108538e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.905415 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6118e+01
  </log>
  <optVariables href="H2O.s030.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 30
    time step          = 0.05
    reference energy   = -16.7806
    reference variance = 0.361582
====================================================
  Execution time = 2.0281e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s030
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9723e-01
  Total weights = 2.0000e+06
  Execution time = 1.9017e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385505488
  error estimate for blocks of size 2^( 2) =       0.000402813413
  error estimate for blocks of size 2^( 3) =       0.000419871068
  error estimate for blocks of size 2^( 4) =       0.000435640395
  error estimate for blocks of size 2^( 5) =       0.000447376874
  error estimate for blocks of size 2^( 6) =       0.000455351194
  error estimate for blocks of size 2^( 7) =       0.000460869606

      target function =      -0.916730671451
              le_mean =     -16.898946242167
             les_mean =     285.871612908944
             stat err =       0.000449809517
             autocorr =       1.361432618475
   target nu stat err =       0.000449809517
   target dn stat err =       0.002933327786
      target stat err =       0.004715450114
              std dev =       0.545187088891
             le_variance =       0.297228961893

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385505488
  error estimate for blocks of size 2^( 2) =       0.000402813413
  error estimate for blocks of size 2^( 3) =       0.000419871068
  error estimate for blocks of size 2^( 4) =       0.000435640395
  error estimate for blocks of size 2^( 5) =       0.000447376874
  error estimate for blocks of size 2^( 6) =       0.000455351194
  error estimate for blocks of size 2^( 7) =       0.000460869606

      target function =      -0.916730671451
              le_mean =     -16.898946242167
             les_mean =     285.871612908944
             stat err =       0.000449809517
             autocorr =       1.361432618475
   target nu stat err =       0.000449809517
   target dn stat err =       0.002933327786
      target stat err =       0.004715450114
              std dev =       0.545187088891
             le_variance =       0.297228961893

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385505488
  error estimate for blocks of size 2^( 2) =       0.000402813413
  error estimate for blocks of size 2^( 3) =       0.000419871068
  error estimate for blocks of size 2^( 4) =       0.000435640395
  error estimate for blocks of size 2^( 5) =       0.000447376874
  error estimate for blocks of size 2^( 6) =       0.000455351194
  error estimate for blocks of size 2^( 7) =       0.000460869606

      target function =      -0.916730671451
              le_mean =     -16.898946242167
             les_mean =     285.871612908944
             stat err =       0.000449809517
             autocorr =       1.361432618475
   target nu stat err =       0.000449809517
   target dn stat err =       0.002933327786
      target stat err =       0.004715450114
              std dev =       0.545187088891
             le_variance =       0.297228961893

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297232692177
                                         uncertainty =       0.002944627191

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385505488
  error estimate for blocks of size 2^( 2) =       0.000402813413
  error estimate for blocks of size 2^( 3) =       0.000419871068
  error estimate for blocks of size 2^( 4) =       0.000435640395
  error estimate for blocks of size 2^( 5) =       0.000447376874
  error estimate for blocks of size 2^( 6) =       0.000455351194
  error estimate for blocks of size 2^( 7) =       0.000460869606

      target function =      -0.916730671451
              le_mean =     -16.898946242167
             les_mean =     285.871612908944
             stat err =       0.000449809517
             autocorr =       1.361432618475
   target nu stat err =       0.000449809517
   target dn stat err =       0.002933327786
      target stat err =       0.004715450114
              std dev =       0.545187088891
             le_variance =       0.297228961893


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916730671451        initial  <--
     1.0000e+28     1.0000e+29             6.5737e-33        -0.916730671451
     4.0000e+28     4.0000e+29             1.6434e-33        -0.916730671451
     1.6000e+29     1.6000e+30             4.1085e-34        -0.916730671451

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8981
  </log>
  <optVariables href="H2O.s030.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6022e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s031 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s031 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=31  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -16.9379
    reference variance = 0.203668
====================================================
  Execution time = 2.0470e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s031
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9432e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4721e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294327084514
                                         uncertainty =       0.002544637627

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294327084514
                                         uncertainty =       0.002544637627

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383615157
  error estimate for blocks of size 2^( 2) =       0.000400609841
  error estimate for blocks of size 2^( 3) =       0.000417688229
  error estimate for blocks of size 2^( 4) =       0.000432243250
  error estimate for blocks of size 2^( 5) =       0.000442667971
  error estimate for blocks of size 2^( 6) =       0.000451407874
  error estimate for blocks of size 2^( 7) =       0.000454945717

      target function =      -0.921360869392
              le_mean =     -16.899083485745
             les_mean =     285.873343688836
             stat err =       0.000445316203
             autocorr =       1.347551828234
   target nu stat err =       0.000445316203
   target dn stat err =       0.002784864184
      target stat err =       0.004527993233
              std dev =       0.542513758184
             le_variance =       0.294321177819


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689908348574e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+29, overlap shift 1.0000e+30 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921381750261       residual = 6.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921381750261       residual = 7.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921381750144       residual = 6.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+29 is 7.056261e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+29, overlap shift 4.0000e+30 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921381750261       residual = 6.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921381750261       residual = 7.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.891157281257       residual = 4.82e+12           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+29 is 1.764065e-34

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+30, overlap shift 1.6000e+31 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921381750261       residual = 6.49e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921381750261       residual = 7.04e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -1.064629125030       residual = 1.93e+13           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+30 is 4.410163e-35

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.906708 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5954e+01
  </log>
  <optVariables href="H2O.s031.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 31
    time step          = 0.05
    reference energy   = -16.8702
    reference variance = 0.179167
====================================================
  Execution time = 2.0161e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s031
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9248e-01
  Total weights = 2.0000e+06
  Execution time = 1.8929e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382410673
  error estimate for blocks of size 2^( 2) =       0.000399115081
  error estimate for blocks of size 2^( 3) =       0.000416493142
  error estimate for blocks of size 2^( 4) =       0.000432780439
  error estimate for blocks of size 2^( 5) =       0.000445481275
  error estimate for blocks of size 2^( 6) =       0.000452851030
  error estimate for blocks of size 2^( 7) =       0.000454559115

      target function =      -0.924371525536
              le_mean =     -16.897763367247
             les_mean =     285.826882514893
             stat err =       0.000446417965
             autocorr =       1.362772359339
   target nu stat err =       0.000446417965
   target dn stat err =       0.002741233578
      target stat err =       0.004477067379
              std dev =       0.540810360158
             le_variance =       0.292475845654

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382410673
  error estimate for blocks of size 2^( 2) =       0.000399115081
  error estimate for blocks of size 2^( 3) =       0.000416493142
  error estimate for blocks of size 2^( 4) =       0.000432780439
  error estimate for blocks of size 2^( 5) =       0.000445481275
  error estimate for blocks of size 2^( 6) =       0.000452851030
  error estimate for blocks of size 2^( 7) =       0.000454559115

      target function =      -0.924371525536
              le_mean =     -16.897763367247
             les_mean =     285.826882514893
             stat err =       0.000446417965
             autocorr =       1.362772359339
   target nu stat err =       0.000446417965
   target dn stat err =       0.002741233578
      target stat err =       0.004477067379
              std dev =       0.540810360158
             le_variance =       0.292475845654

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382410673
  error estimate for blocks of size 2^( 2) =       0.000399115081
  error estimate for blocks of size 2^( 3) =       0.000416493142
  error estimate for blocks of size 2^( 4) =       0.000432780439
  error estimate for blocks of size 2^( 5) =       0.000445481275
  error estimate for blocks of size 2^( 6) =       0.000452851030
  error estimate for blocks of size 2^( 7) =       0.000454559115

      target function =      -0.924371525536
              le_mean =     -16.897763367247
             les_mean =     285.826882514893
             stat err =       0.000446417965
             autocorr =       1.362772359339
   target nu stat err =       0.000446417965
   target dn stat err =       0.002741233578
      target stat err =       0.004477067379
              std dev =       0.540810360158
             le_variance =       0.292475845654

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292538808628
                                         uncertainty =       0.002612831740

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382410673
  error estimate for blocks of size 2^( 2) =       0.000399115081
  error estimate for blocks of size 2^( 3) =       0.000416493142
  error estimate for blocks of size 2^( 4) =       0.000432780439
  error estimate for blocks of size 2^( 5) =       0.000445481275
  error estimate for blocks of size 2^( 6) =       0.000452851030
  error estimate for blocks of size 2^( 7) =       0.000454559115

      target function =      -0.924371525536
              le_mean =     -16.897763367247
             les_mean =     285.826882514893
             stat err =       0.000446417965
             autocorr =       1.362772359339
   target nu stat err =       0.000446417965
   target dn stat err =       0.002741233578
      target stat err =       0.004477067379
              std dev =       0.540810360158
             le_variance =       0.292475845654


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.924371525536        initial  <--
     1.0000e+29     1.0000e+30             7.0563e-34        -0.924371525536
     4.0000e+29     4.0000e+30             1.7641e-34        -0.924371525536
     1.6000e+30     1.6000e+31             4.4102e-35        -0.924371525536

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 33.7418
  </log>
  <optVariables href="H2O.s031.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.9701e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s032 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s032 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=32  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -16.8927
    reference variance = 0.218114
====================================================
  Execution time = 2.0281e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s032
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9637e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.6336e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296270572830
                                         uncertainty =       0.003876129316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296270572830
                                         uncertainty =       0.003876129316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384949171
  error estimate for blocks of size 2^( 2) =       0.000401899642
  error estimate for blocks of size 2^( 3) =       0.000419399575
  error estimate for blocks of size 2^( 4) =       0.000434275812
  error estimate for blocks of size 2^( 5) =       0.000446604773
  error estimate for blocks of size 2^( 6) =       0.000454947931
  error estimate for blocks of size 2^( 7) =       0.000459759114

      target function =      -0.918097568971
              le_mean =     -16.898320123227
             les_mean =     285.849594566670
             stat err =       0.000448896907
             autocorr =       1.359835737708
   target nu stat err =       0.000448896907
   target dn stat err =       0.004081715808
      target stat err =       0.006529783841
              std dev =       0.544400337803
             le_variance =       0.296371727800


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689832012323e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+30, overlap shift 1.0000e+31 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918143068211       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918143068211       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+30 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+30, overlap shift 4.0000e+31 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918143068211       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918143068211       residual = 9.17e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918143068211       residual = 1.25e-03           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918143068440       residual = 8.95e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+30 is 1.987759e-35

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+31, overlap shift 1.6000e+32 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918143068211       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918143068211       residual = 6.31e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.907955 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5925e+01
  </log>
  <optVariables href="H2O.s032.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 32
    time step          = 0.05
    reference energy   = -16.9096
    reference variance = 0.718154
====================================================
  Execution time = 2.0196e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s032
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9492e-01
  Total weights = 2.0000e+06
  Execution time = 1.8936e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384006528
  error estimate for blocks of size 2^( 2) =       0.000400924778
  error estimate for blocks of size 2^( 3) =       0.000418231968
  error estimate for blocks of size 2^( 4) =       0.000433828651
  error estimate for blocks of size 2^( 5) =       0.000446631637
  error estimate for blocks of size 2^( 6) =       0.000452974354
  error estimate for blocks of size 2^( 7) =       0.000455709474

      target function =      -0.920432203341
              le_mean =     -16.898217689864
             les_mean =     285.844682973569
             stat err =       0.000447286029
             autocorr =       1.356730074069
   target nu stat err =       0.000447286029
   target dn stat err =       0.002986538750
      target stat err =       0.004829659825
              std dev =       0.543067239843
             le_variance =       0.294922026990

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384006528
  error estimate for blocks of size 2^( 2) =       0.000400924778
  error estimate for blocks of size 2^( 3) =       0.000418231968
  error estimate for blocks of size 2^( 4) =       0.000433828651
  error estimate for blocks of size 2^( 5) =       0.000446631637
  error estimate for blocks of size 2^( 6) =       0.000452974354
  error estimate for blocks of size 2^( 7) =       0.000455709474

      target function =      -0.920432203341
              le_mean =     -16.898217689864
             les_mean =     285.844682973569
             stat err =       0.000447286029
             autocorr =       1.356730074069
   target nu stat err =       0.000447286029
   target dn stat err =       0.002986538750
      target stat err =       0.004829659825
              std dev =       0.543067239843
             le_variance =       0.294922026990

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384006528
  error estimate for blocks of size 2^( 2) =       0.000400924778
  error estimate for blocks of size 2^( 3) =       0.000418231968
  error estimate for blocks of size 2^( 4) =       0.000433828651
  error estimate for blocks of size 2^( 5) =       0.000446631637
  error estimate for blocks of size 2^( 6) =       0.000452974354
  error estimate for blocks of size 2^( 7) =       0.000455709474

      target function =      -0.920432203341
              le_mean =     -16.898217689864
             les_mean =     285.844682973569
             stat err =       0.000447286029
             autocorr =       1.356730074069
   target nu stat err =       0.000447286029
   target dn stat err =       0.002986538750
      target stat err =       0.004829659825
              std dev =       0.543067239843
             le_variance =       0.294922026990

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294942613104
                                         uncertainty =       0.003037142196

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384006528
  error estimate for blocks of size 2^( 2) =       0.000400924778
  error estimate for blocks of size 2^( 3) =       0.000418231968
  error estimate for blocks of size 2^( 4) =       0.000433828651
  error estimate for blocks of size 2^( 5) =       0.000446631637
  error estimate for blocks of size 2^( 6) =       0.000452974354
  error estimate for blocks of size 2^( 7) =       0.000455709474

      target function =      -0.920432203341
              le_mean =     -16.898217689864
             les_mean =     285.844682973569
             stat err =       0.000447286029
             autocorr =       1.356730074069
   target nu stat err =       0.000447286029
   target dn stat err =       0.002986538750
      target stat err =       0.004829659825
              std dev =       0.543067239843
             le_variance =       0.294922026990


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.920432203341        initial  <--
     1.0000e+30     1.0000e+31             0.0000e+00        -0.920432203341
     4.0000e+30     4.0000e+31             1.9878e-35        -0.920432203341
     1.6000e+31     1.6000e+32             0.0000e+00        -0.920432203341

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8062
  </log>
  <optVariables href="H2O.s032.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5737e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s033 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s033 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=33  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -16.7968
    reference variance = 0.254946
====================================================
  Execution time = 2.0384e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s033
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9132e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5637e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291348948507
                                         uncertainty =       0.003065126037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291348948507
                                         uncertainty =       0.003065126037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381655566
  error estimate for blocks of size 2^( 2) =       0.000398487866
  error estimate for blocks of size 2^( 3) =       0.000415882192
  error estimate for blocks of size 2^( 4) =       0.000431272028
  error estimate for blocks of size 2^( 5) =       0.000444882046
  error estimate for blocks of size 2^( 6) =       0.000451980972
  error estimate for blocks of size 2^( 7) =       0.000455648209

      target function =      -0.926200654748
              le_mean =     -16.898633142760
             les_mean =     285.855123889583
             stat err =       0.000445945814
             autocorr =       1.365277657879
   target nu stat err =       0.000445945814
   target dn stat err =       0.003045362647
      target stat err =       0.004987024518
              std dev =       0.539742477176
             le_variance =       0.291321941668


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689863314276e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+31, overlap shift 1.0000e+32 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+31, overlap shift 4.0000e+32 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+31 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+32, overlap shift 1.6000e+33 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926225882224       residual = 8.76e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+32 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.909000 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5959e+01
  </log>
  <optVariables href="H2O.s033.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 33
    time step          = 0.05
    reference energy   = -16.9644
    reference variance = 0.271711
====================================================
  Execution time = 2.0253e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s033
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6900e+01
  VMC Evar = 2.9338e-01
  Total weights = 2.0000e+06
  Execution time = 1.9010e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383000878
  error estimate for blocks of size 2^( 2) =       0.000399902347
  error estimate for blocks of size 2^( 3) =       0.000417030683
  error estimate for blocks of size 2^( 4) =       0.000432313466
  error estimate for blocks of size 2^( 5) =       0.000443500006
  error estimate for blocks of size 2^( 6) =       0.000448269374
  error estimate for blocks of size 2^( 7) =       0.000452543379

      target function =      -0.922856769435
              le_mean =     -16.899506724795
             les_mean =     285.886706739856
             stat err =       0.000444156556
             autocorr =       1.344846184343
   target nu stat err =       0.000444156556
   target dn stat err =       0.002712998609
      target stat err =       0.004431912765
              std dev =       0.541645036112
             le_variance =       0.293379345145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383000878
  error estimate for blocks of size 2^( 2) =       0.000399902347
  error estimate for blocks of size 2^( 3) =       0.000417030683
  error estimate for blocks of size 2^( 4) =       0.000432313466
  error estimate for blocks of size 2^( 5) =       0.000443500006
  error estimate for blocks of size 2^( 6) =       0.000448269374
  error estimate for blocks of size 2^( 7) =       0.000452543379

      target function =      -0.922856769435
              le_mean =     -16.899506724795
             les_mean =     285.886706739856
             stat err =       0.000444156556
             autocorr =       1.344846184343
   target nu stat err =       0.000444156556
   target dn stat err =       0.002712998609
      target stat err =       0.004431912765
              std dev =       0.541645036112
             le_variance =       0.293379345145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383000878
  error estimate for blocks of size 2^( 2) =       0.000399902347
  error estimate for blocks of size 2^( 3) =       0.000417030683
  error estimate for blocks of size 2^( 4) =       0.000432313466
  error estimate for blocks of size 2^( 5) =       0.000443500006
  error estimate for blocks of size 2^( 6) =       0.000448269374
  error estimate for blocks of size 2^( 7) =       0.000452543379

      target function =      -0.922856769435
              le_mean =     -16.899506724795
             les_mean =     285.886706739856
             stat err =       0.000444156556
             autocorr =       1.344846184343
   target nu stat err =       0.000444156556
   target dn stat err =       0.002712998609
      target stat err =       0.004431912765
              std dev =       0.541645036112
             le_variance =       0.293379345145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293432610909
                                         uncertainty =       0.002961689235

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383000878
  error estimate for blocks of size 2^( 2) =       0.000399902347
  error estimate for blocks of size 2^( 3) =       0.000417030683
  error estimate for blocks of size 2^( 4) =       0.000432313466
  error estimate for blocks of size 2^( 5) =       0.000443500006
  error estimate for blocks of size 2^( 6) =       0.000448269374
  error estimate for blocks of size 2^( 7) =       0.000452543379

      target function =      -0.922856769435
              le_mean =     -16.899506724795
             les_mean =     285.886706739856
             stat err =       0.000444156556
             autocorr =       1.344846184343
   target nu stat err =       0.000444156556
   target dn stat err =       0.002712998609
      target stat err =       0.004431912765
              std dev =       0.541645036112
             le_variance =       0.293379345145


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922856769435        initial  <--
     1.0000e+31     1.0000e+32             0.0000e+00        -0.922856769435
     4.0000e+31     4.0000e+32             0.0000e+00        -0.922856769435
     1.6000e+32     1.6000e+33             0.0000e+00        -0.922856769435

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.9112
  </log>
  <optVariables href="H2O.s033.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5876e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s034 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s034 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=34  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -16.8557
    reference variance = 0.223194
====================================================
  Execution time = 2.2491e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s034
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9891e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5599e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299023170689
                                         uncertainty =       0.005328190066

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299023170689
                                         uncertainty =       0.005328190066

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386596909
  error estimate for blocks of size 2^( 2) =       0.000402982554
  error estimate for blocks of size 2^( 3) =       0.000419430741
  error estimate for blocks of size 2^( 4) =       0.000434601287
  error estimate for blocks of size 2^( 5) =       0.000445396340
  error estimate for blocks of size 2^( 6) =       0.000451950613
  error estimate for blocks of size 2^( 7) =       0.000456722600

      target function =      -0.914003988857
              le_mean =     -16.899152184225
             les_mean =     285.880258736196
             stat err =       0.000447167710
             autocorr =       1.337901426806
   target nu stat err =       0.000447167710
   target dn stat err =       0.005219968073
      target stat err =       0.008266904306
              std dev =       0.546730591850
             le_variance =       0.298914340064


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689915218422e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+32, overlap shift 1.0000e+33 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914078011427       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914078011427       residual = 2.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914078011427       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+32 is 8.823390e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+32, overlap shift 4.0000e+33 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914078011427       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914078011427       residual = 2.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914078011427       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+32 is 2.205848e-37

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+33, overlap shift 1.6000e+34 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914078011427       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914078011427       residual = 2.29e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914077997208       residual = 8.39e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+33 is 5.514619e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.910329 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8062e+01
  </log>
  <optVariables href="H2O.s034.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 34
    time step          = 0.05
    reference energy   = -16.8765
    reference variance = 0.197621
====================================================
  Execution time = 2.0061e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s034
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9578e-01
  Total weights = 2.0000e+06
  Execution time = 1.8937e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384564886
  error estimate for blocks of size 2^( 2) =       0.000401265181
  error estimate for blocks of size 2^( 3) =       0.000418728275
  error estimate for blocks of size 2^( 4) =       0.000433855591
  error estimate for blocks of size 2^( 5) =       0.000445514022
  error estimate for blocks of size 2^( 6) =       0.000453703025
  error estimate for blocks of size 2^( 7) =       0.000457183744

      target function =      -0.919011570919
              le_mean =     -16.898931908054
             les_mean =     285.869679788993
             stat err =       0.000447564095
             autocorr =       1.354475716015
   target nu stat err =       0.000447564095
   target dn stat err =       0.004064234082
      target stat err =       0.006522316674
              std dev =       0.543856878096
             le_variance =       0.295780303852

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384564886
  error estimate for blocks of size 2^( 2) =       0.000401265181
  error estimate for blocks of size 2^( 3) =       0.000418728275
  error estimate for blocks of size 2^( 4) =       0.000433855591
  error estimate for blocks of size 2^( 5) =       0.000445514022
  error estimate for blocks of size 2^( 6) =       0.000453703025
  error estimate for blocks of size 2^( 7) =       0.000457183744

      target function =      -0.919011570919
              le_mean =     -16.898931908054
             les_mean =     285.869679788993
             stat err =       0.000447564095
             autocorr =       1.354475716015
   target nu stat err =       0.000447564095
   target dn stat err =       0.004064234082
      target stat err =       0.006522316674
              std dev =       0.543856878096
             le_variance =       0.295780303852

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384564886
  error estimate for blocks of size 2^( 2) =       0.000401265181
  error estimate for blocks of size 2^( 3) =       0.000418728275
  error estimate for blocks of size 2^( 4) =       0.000433855591
  error estimate for blocks of size 2^( 5) =       0.000445514022
  error estimate for blocks of size 2^( 6) =       0.000453703025
  error estimate for blocks of size 2^( 7) =       0.000457183744

      target function =      -0.919011570919
              le_mean =     -16.898931908054
             les_mean =     285.869679788993
             stat err =       0.000447564095
             autocorr =       1.354475716015
   target nu stat err =       0.000447564095
   target dn stat err =       0.004064234082
      target stat err =       0.006522316674
              std dev =       0.543856878096
             le_variance =       0.295780303852

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295735196292
                                         uncertainty =       0.004044612815

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384564886
  error estimate for blocks of size 2^( 2) =       0.000401265181
  error estimate for blocks of size 2^( 3) =       0.000418728275
  error estimate for blocks of size 2^( 4) =       0.000433855591
  error estimate for blocks of size 2^( 5) =       0.000445514022
  error estimate for blocks of size 2^( 6) =       0.000453703025
  error estimate for blocks of size 2^( 7) =       0.000457183744

      target function =      -0.919011570919
              le_mean =     -16.898931908054
             les_mean =     285.869679788993
             stat err =       0.000447564095
             autocorr =       1.354475716015
   target nu stat err =       0.000447564095
   target dn stat err =       0.004064234082
      target stat err =       0.006522316674
              std dev =       0.543856878096
             le_variance =       0.295780303852


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.919011570919        initial  <--
     1.0000e+32     1.0000e+33             8.8234e-37        -0.919011570919
     4.0000e+32     4.0000e+33             2.2058e-37        -0.919011570919
     1.6000e+33     1.6000e+34             5.5146e-38        -0.919011570919

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6571
  </log>
  <optVariables href="H2O.s034.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7729e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s035 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s035 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=35  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6897e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -16.8996
    reference variance = 0.143214
====================================================
  Execution time = 2.0624e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s035
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9881e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4842e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298873575143
                                         uncertainty =       0.003928263188

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.298873575143
                                         uncertainty =       0.003928263188

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386527786
  error estimate for blocks of size 2^( 2) =       0.000403289292
  error estimate for blocks of size 2^( 3) =       0.000420421260
  error estimate for blocks of size 2^( 4) =       0.000434619053
  error estimate for blocks of size 2^( 5) =       0.000446207610
  error estimate for blocks of size 2^( 6) =       0.000454951181
  error estimate for blocks of size 2^( 7) =       0.000458868737

      target function =      -0.914206571494
              le_mean =     -16.899224439096
             les_mean =     285.882593952083
             stat err =       0.000448661645
             autocorr =       1.347337666292
   target nu stat err =       0.000448661645
   target dn stat err =       0.003663791015
      target stat err =       0.005831791292
              std dev =       0.546632837056
             le_variance =       0.298807458548


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689922443910e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+33, overlap shift 1.0000e+34 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914242692112       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+33 is 9.861884e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+33, overlap shift 4.0000e+34 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914242692112       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+33 is 2.465471e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+34, overlap shift 1.6000e+35 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.914242692112       residual = 7.22e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.914242692112       residual = 9.62e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+34 is 6.163678e-39

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.911648 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6119e+01
  </log>
  <optVariables href="H2O.s035.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 35
    time step          = 0.05
    reference energy   = -16.9576
    reference variance = 0.311351
====================================================
  Execution time = 2.0180e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s035
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9373e-01
  Total weights = 2.0000e+06
  Execution time = 1.8937e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383231217
  error estimate for blocks of size 2^( 2) =       0.000399911732
  error estimate for blocks of size 2^( 3) =       0.000416582357
  error estimate for blocks of size 2^( 4) =       0.000431491474
  error estimate for blocks of size 2^( 5) =       0.000442480140
  error estimate for blocks of size 2^( 6) =       0.000449677307
  error estimate for blocks of size 2^( 7) =       0.000454624209

      target function =      -0.922326136179
              le_mean =     -16.898663297380
             les_mean =     285.858553423470
             stat err =       0.000444568283
             autocorr =       1.345721504407
   target nu stat err =       0.000444568283
   target dn stat err =       0.002458810118
      target stat err =       0.004019148107
              std dev =       0.541970785285
             le_variance =       0.293732332102

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383231217
  error estimate for blocks of size 2^( 2) =       0.000399911732
  error estimate for blocks of size 2^( 3) =       0.000416582357
  error estimate for blocks of size 2^( 4) =       0.000431491474
  error estimate for blocks of size 2^( 5) =       0.000442480140
  error estimate for blocks of size 2^( 6) =       0.000449677307
  error estimate for blocks of size 2^( 7) =       0.000454624209

      target function =      -0.922326136179
              le_mean =     -16.898663297380
             les_mean =     285.858553423470
             stat err =       0.000444568283
             autocorr =       1.345721504407
   target nu stat err =       0.000444568283
   target dn stat err =       0.002458810118
      target stat err =       0.004019148107
              std dev =       0.541970785285
             le_variance =       0.293732332102

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383231217
  error estimate for blocks of size 2^( 2) =       0.000399911732
  error estimate for blocks of size 2^( 3) =       0.000416582357
  error estimate for blocks of size 2^( 4) =       0.000431491474
  error estimate for blocks of size 2^( 5) =       0.000442480140
  error estimate for blocks of size 2^( 6) =       0.000449677307
  error estimate for blocks of size 2^( 7) =       0.000454624209

      target function =      -0.922326136179
              le_mean =     -16.898663297380
             les_mean =     285.858553423470
             stat err =       0.000444568283
             autocorr =       1.345721504407
   target nu stat err =       0.000444568283
   target dn stat err =       0.002458810118
      target stat err =       0.004019148107
              std dev =       0.541970785285
             le_variance =       0.293732332102

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293724301136
                                         uncertainty =       0.002283710939

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383231217
  error estimate for blocks of size 2^( 2) =       0.000399911732
  error estimate for blocks of size 2^( 3) =       0.000416582357
  error estimate for blocks of size 2^( 4) =       0.000431491474
  error estimate for blocks of size 2^( 5) =       0.000442480140
  error estimate for blocks of size 2^( 6) =       0.000449677307
  error estimate for blocks of size 2^( 7) =       0.000454624209

      target function =      -0.922326136179
              le_mean =     -16.898663297380
             les_mean =     285.858553423470
             stat err =       0.000444568283
             autocorr =       1.345721504407
   target nu stat err =       0.000444568283
   target dn stat err =       0.002458810118
      target stat err =       0.004019148107
              std dev =       0.541970785285
             le_variance =       0.293732332102


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922326136179        initial  <--
     1.0000e+33     1.0000e+34             9.8619e-38        -0.922326136179
     4.0000e+33     4.0000e+34             2.4655e-38        -0.922326136179
     1.6000e+34     1.6000e+35             6.1637e-39        -0.922326136179

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7756
  </log>
  <optVariables href="H2O.s035.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5900e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s036 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s036 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=36  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -16.9424
    reference variance = 0.236647
====================================================
  Execution time = 2.0712e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s036
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9682e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5576e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296810366386
                                         uncertainty =       0.003514613271

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296810366386
                                         uncertainty =       0.003514613271

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385240531
  error estimate for blocks of size 2^( 2) =       0.000402199450
  error estimate for blocks of size 2^( 3) =       0.000419286955
  error estimate for blocks of size 2^( 4) =       0.000434397632
  error estimate for blocks of size 2^( 5) =       0.000446016114
  error estimate for blocks of size 2^( 6) =       0.000453815301
  error estimate for blocks of size 2^( 7) =       0.000457412835

      target function =      -0.917393703606
              le_mean =     -16.898319874968
             les_mean =     285.850034981026
             stat err =       0.000447910470
             autocorr =       1.351818807987
   target nu stat err =       0.000447910470
   target dn stat err =       0.003740749867
      target stat err =       0.005982994919
              std dev =       0.544812383010
             le_variance =       0.296820532681


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689831987497e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+34, overlap shift 1.0000e+35 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917430711537       residual = 1.11e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917430711537       residual = 1.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917430711537       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917430711537       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917430877686       residual = 1.09e+01           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917430709442       residual = 1.85e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =       0.000000000000       residual = 7.77e+16           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+34 is 2.860458e-38

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+34, overlap shift 4.0000e+35 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917430711537       residual = 1.11e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917430711537       residual = 1.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917430711537       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917430711537       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917480468750       residual = 7.13e+04           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+34 is 4.213496e-39

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+35, overlap shift 1.6000e+36 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917430711537       residual = 1.11e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917430711537       residual = 1.43e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.917430711537       residual = 6.87e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.917430711536       residual = 2.01e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917430711537       residual = 1.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.917104865471       residual = 2.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =      -1.000000000000       residual = 1.13e+11           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+35 is 1.254277e-39

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.914002 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6281e+01
  </log>
  <optVariables href="H2O.s036.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 36
    time step          = 0.05
    reference energy   = -16.8572
    reference variance = 0.140956
====================================================
  Execution time = 2.0253e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s036
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9455e-01
  Total weights = 2.0000e+06
  Execution time = 1.8968e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383763133
  error estimate for blocks of size 2^( 2) =       0.000400634400
  error estimate for blocks of size 2^( 3) =       0.000418149273
  error estimate for blocks of size 2^( 4) =       0.000432969427
  error estimate for blocks of size 2^( 5) =       0.000445401552
  error estimate for blocks of size 2^( 6) =       0.000451392640
  error estimate for blocks of size 2^( 7) =       0.000454113887

      target function =      -0.921044720712
              le_mean =     -16.897960455918
             les_mean =     285.835615706781
             stat err =       0.000445969377
             autocorr =       1.350465750688
   target nu stat err =       0.000445969377
   target dn stat err =       0.002591382208
      target stat err =       0.004211357094
              std dev =       0.542723027230
             le_variance =       0.294548284285

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383763133
  error estimate for blocks of size 2^( 2) =       0.000400634400
  error estimate for blocks of size 2^( 3) =       0.000418149273
  error estimate for blocks of size 2^( 4) =       0.000432969427
  error estimate for blocks of size 2^( 5) =       0.000445401552
  error estimate for blocks of size 2^( 6) =       0.000451392640
  error estimate for blocks of size 2^( 7) =       0.000454113887

      target function =      -0.921044720712
              le_mean =     -16.897960455918
             les_mean =     285.835615706781
             stat err =       0.000445969377
             autocorr =       1.350465750688
   target nu stat err =       0.000445969377
   target dn stat err =       0.002591382208
      target stat err =       0.004211357094
              std dev =       0.542723027230
             le_variance =       0.294548284285

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383763133
  error estimate for blocks of size 2^( 2) =       0.000400634400
  error estimate for blocks of size 2^( 3) =       0.000418149273
  error estimate for blocks of size 2^( 4) =       0.000432969427
  error estimate for blocks of size 2^( 5) =       0.000445401552
  error estimate for blocks of size 2^( 6) =       0.000451392640
  error estimate for blocks of size 2^( 7) =       0.000454113887

      target function =      -0.921044720712
              le_mean =     -16.897960455918
             les_mean =     285.835615706781
             stat err =       0.000445969377
             autocorr =       1.350465750688
   target nu stat err =       0.000445969377
   target dn stat err =       0.002591382208
      target stat err =       0.004211357094
              std dev =       0.542723027230
             le_variance =       0.294548284285

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294532985705
                                         uncertainty =       0.002867610761

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383763133
  error estimate for blocks of size 2^( 2) =       0.000400634400
  error estimate for blocks of size 2^( 3) =       0.000418149273
  error estimate for blocks of size 2^( 4) =       0.000432969427
  error estimate for blocks of size 2^( 5) =       0.000445401552
  error estimate for blocks of size 2^( 6) =       0.000451392640
  error estimate for blocks of size 2^( 7) =       0.000454113887

      target function =      -0.921044720712
              le_mean =     -16.897960455918
             les_mean =     285.835615706781
             stat err =       0.000445969377
             autocorr =       1.350465750688
   target nu stat err =       0.000445969377
   target dn stat err =       0.002591382208
      target stat err =       0.004211357094
              std dev =       0.542723027230
             le_variance =       0.294548284285


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.921044720712        initial  <--
     1.0000e+34     1.0000e+35             2.8605e-38        -0.921044720712
     4.0000e+34     4.0000e+35             4.2135e-39        -0.921044720712
     1.6000e+35     1.6000e+36             1.2543e-39        -0.921044720712

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8586
  </log>
  <optVariables href="H2O.s036.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6146e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s037 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s037 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=37  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6898e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -16.8323
    reference variance = 0.319526
====================================================
  Execution time = 2.2454e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s037
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9507e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4879e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295169796455
                                         uncertainty =       0.002312604252

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295169796455
                                         uncertainty =       0.002312604252

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384105917
  error estimate for blocks of size 2^( 2) =       0.000400895090
  error estimate for blocks of size 2^( 3) =       0.000418248742
  error estimate for blocks of size 2^( 4) =       0.000433327472
  error estimate for blocks of size 2^( 5) =       0.000444152129
  error estimate for blocks of size 2^( 6) =       0.000451183801
  error estimate for blocks of size 2^( 7) =       0.000454535266

      target function =      -0.920203770989
              le_mean =     -16.898002008353
             les_mean =     285.837546438434
             stat err =       0.000445799667
             autocorr =       1.347030667549
   target nu stat err =       0.000445799667
   target dn stat err =       0.002518386251
      target stat err =       0.004089702589
              std dev =       0.543207797883
             le_variance =       0.295074711681


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689800200835e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+35, overlap shift 1.0000e+36 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+35, overlap shift 4.0000e+36 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+35 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+36, overlap shift 1.6000e+37 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920220690453       residual = 6.09e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+36 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.915041 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.7953e+01
  </log>
  <optVariables href="H2O.s037.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 37
    time step          = 0.05
    reference energy   = -16.8557
    reference variance = 0.195989
====================================================
  Execution time = 1.9924e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s037
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9907e-01
  Total weights = 2.0000e+06
  Execution time = 1.8834e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386694876
  error estimate for blocks of size 2^( 2) =       0.000403710894
  error estimate for blocks of size 2^( 3) =       0.000420876424
  error estimate for blocks of size 2^( 4) =       0.000436109613
  error estimate for blocks of size 2^( 5) =       0.000447095012
  error estimate for blocks of size 2^( 6) =       0.000454642748
  error estimate for blocks of size 2^( 7) =       0.000459030789

      target function =      -0.913823831594
              le_mean =     -16.898012950190
             les_mean =     285.841907369714
             stat err =       0.000449219540
             autocorr =       1.349523474662
   target nu stat err =       0.000449219540
   target dn stat err =       0.005330225294
      target stat err =       0.008418935800
              std dev =       0.546869138324
             le_variance =       0.299065854451

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386694876
  error estimate for blocks of size 2^( 2) =       0.000403710894
  error estimate for blocks of size 2^( 3) =       0.000420876424
  error estimate for blocks of size 2^( 4) =       0.000436109613
  error estimate for blocks of size 2^( 5) =       0.000447095012
  error estimate for blocks of size 2^( 6) =       0.000454642748
  error estimate for blocks of size 2^( 7) =       0.000459030789

      target function =      -0.913823831594
              le_mean =     -16.898012950190
             les_mean =     285.841907369714
             stat err =       0.000449219540
             autocorr =       1.349523474662
   target nu stat err =       0.000449219540
   target dn stat err =       0.005330225294
      target stat err =       0.008418935800
              std dev =       0.546869138324
             le_variance =       0.299065854451

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386694876
  error estimate for blocks of size 2^( 2) =       0.000403710894
  error estimate for blocks of size 2^( 3) =       0.000420876424
  error estimate for blocks of size 2^( 4) =       0.000436109613
  error estimate for blocks of size 2^( 5) =       0.000447095012
  error estimate for blocks of size 2^( 6) =       0.000454642748
  error estimate for blocks of size 2^( 7) =       0.000459030789

      target function =      -0.913823831594
              le_mean =     -16.898012950190
             les_mean =     285.841907369714
             stat err =       0.000449219540
             autocorr =       1.349523474662
   target nu stat err =       0.000449219540
   target dn stat err =       0.005330225294
      target stat err =       0.008418935800
              std dev =       0.546869138324
             le_variance =       0.299065854451

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299145941591
                                         uncertainty =       0.004964732665

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386694876
  error estimate for blocks of size 2^( 2) =       0.000403710894
  error estimate for blocks of size 2^( 3) =       0.000420876424
  error estimate for blocks of size 2^( 4) =       0.000436109613
  error estimate for blocks of size 2^( 5) =       0.000447095012
  error estimate for blocks of size 2^( 6) =       0.000454642748
  error estimate for blocks of size 2^( 7) =       0.000459030789

      target function =      -0.913823831594
              le_mean =     -16.898012950190
             les_mean =     285.841907369714
             stat err =       0.000449219540
             autocorr =       1.349523474662
   target nu stat err =       0.000449219540
   target dn stat err =       0.005330225294
      target stat err =       0.008418935800
              std dev =       0.546869138324
             le_variance =       0.299065854451


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913823831594        initial  <--
     1.0000e+35     1.0000e+36             0.0000e+00        -0.913823831594
     4.0000e+35     4.0000e+36             0.0000e+00        -0.913823831594
     1.6000e+36     1.6000e+37             0.0000e+00        -0.913823831594

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.5022
  </log>
  <optVariables href="H2O.s037.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7461e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s038 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s038 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=38  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -16.8933
    reference variance = 0.217407
====================================================
  Execution time = 2.0366e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s038
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9042e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5132e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290450856908
                                         uncertainty =       0.002609391139

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290450856908
                                         uncertainty =       0.002609391139

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381064835
  error estimate for blocks of size 2^( 2) =       0.000397729185
  error estimate for blocks of size 2^( 3) =       0.000414636494
  error estimate for blocks of size 2^( 4) =       0.000429996071
  error estimate for blocks of size 2^( 5) =       0.000441590980
  error estimate for blocks of size 2^( 6) =       0.000447955317
  error estimate for blocks of size 2^( 7) =       0.000451668464

      target function =      -0.927651189836
              le_mean =     -16.899177483626
             les_mean =     285.872620294561
             stat err =       0.000442802708
             autocorr =       1.350276749521
   target nu stat err =       0.000442802708
   target dn stat err =       0.002617641307
      target stat err =       0.004321724066
              std dev =       0.538907057566
             le_variance =       0.290420816694


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689917748363e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+36, overlap shift 1.0000e+37 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+36 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+36, overlap shift 4.0000e+37 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+36 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+37, overlap shift 1.6000e+38 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927670083657       residual = 6.36e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+37 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.916099 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5889e+01
  </log>
  <optVariables href="H2O.s038.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 38
    time step          = 0.05
    reference energy   = -16.8619
    reference variance = 0.172868
====================================================
  Execution time = 2.0089e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s038
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0140e-01
  Total weights = 2.0000e+06
  Execution time = 1.8917e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388202276
  error estimate for blocks of size 2^( 2) =       0.000404818746
  error estimate for blocks of size 2^( 3) =       0.000421875153
  error estimate for blocks of size 2^( 4) =       0.000436333164
  error estimate for blocks of size 2^( 5) =       0.000447050560
  error estimate for blocks of size 2^( 6) =       0.000452861220
  error estimate for blocks of size 2^( 7) =       0.000458689729

      target function =      -0.910152921355
              le_mean =     -16.898540586664
             les_mean =     285.862075823122
             stat err =       0.000448733668
             autocorr =       1.336168275073
   target nu stat err =       0.000448733668
   target dn stat err =       0.004566334732
      target stat err =       0.007172711428
              std dev =       0.549000924130
             le_variance =       0.301402014696

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388202276
  error estimate for blocks of size 2^( 2) =       0.000404818746
  error estimate for blocks of size 2^( 3) =       0.000421875153
  error estimate for blocks of size 2^( 4) =       0.000436333164
  error estimate for blocks of size 2^( 5) =       0.000447050560
  error estimate for blocks of size 2^( 6) =       0.000452861220
  error estimate for blocks of size 2^( 7) =       0.000458689729

      target function =      -0.910152921355
              le_mean =     -16.898540586664
             les_mean =     285.862075823122
             stat err =       0.000448733668
             autocorr =       1.336168275073
   target nu stat err =       0.000448733668
   target dn stat err =       0.004566334732
      target stat err =       0.007172711428
              std dev =       0.549000924130
             le_variance =       0.301402014696

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388202276
  error estimate for blocks of size 2^( 2) =       0.000404818746
  error estimate for blocks of size 2^( 3) =       0.000421875153
  error estimate for blocks of size 2^( 4) =       0.000436333164
  error estimate for blocks of size 2^( 5) =       0.000447050560
  error estimate for blocks of size 2^( 6) =       0.000452861220
  error estimate for blocks of size 2^( 7) =       0.000458689729

      target function =      -0.910152921355
              le_mean =     -16.898540586664
             les_mean =     285.862075823122
             stat err =       0.000448733668
             autocorr =       1.336168275073
   target nu stat err =       0.000448733668
   target dn stat err =       0.004566334732
      target stat err =       0.007172711428
              std dev =       0.549000924130
             le_variance =       0.301402014696

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.301241457782
                                         uncertainty =       0.004458103532

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000388202276
  error estimate for blocks of size 2^( 2) =       0.000404818746
  error estimate for blocks of size 2^( 3) =       0.000421875153
  error estimate for blocks of size 2^( 4) =       0.000436333164
  error estimate for blocks of size 2^( 5) =       0.000447050560
  error estimate for blocks of size 2^( 6) =       0.000452861220
  error estimate for blocks of size 2^( 7) =       0.000458689729

      target function =      -0.910152921355
              le_mean =     -16.898540586664
             les_mean =     285.862075823122
             stat err =       0.000448733668
             autocorr =       1.336168275073
   target nu stat err =       0.000448733668
   target dn stat err =       0.004566334732
      target stat err =       0.007172711428
              std dev =       0.549000924130
             le_variance =       0.301402014696


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910152921355        initial  <--
     1.0000e+36     1.0000e+37             0.0000e+00        -0.910152921355
     4.0000e+36     4.0000e+37             0.0000e+00        -0.910152921355
     1.6000e+37     1.6000e+38             0.0000e+00        -0.910152921355

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6640
  </log>
  <optVariables href="H2O.s038.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5559e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s039 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s039 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=39  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -16.7938
    reference variance = 0.166262
====================================================
  Execution time = 2.0582e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s039
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9611e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5882e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296136211643
                                         uncertainty =       0.002745788668

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296136211643
                                         uncertainty =       0.002745788668

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384780933
  error estimate for blocks of size 2^( 2) =       0.000401581016
  error estimate for blocks of size 2^( 3) =       0.000418598557
  error estimate for blocks of size 2^( 4) =       0.000433390992
  error estimate for blocks of size 2^( 5) =       0.000445249980
  error estimate for blocks of size 2^( 6) =       0.000451381666
  error estimate for blocks of size 2^( 7) =       0.000457157877

      target function =      -0.918521661300
              le_mean =     -16.898598400429
             les_mean =     285.858740484348
             stat err =       0.000446795129
             autocorr =       1.348310047750
   target nu stat err =       0.000446795129
   target dn stat err =       0.002800575892
      target stat err =       0.004521482514
              std dev =       0.544162414555
             le_variance =       0.296112733414


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689859840043e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+37, overlap shift 1.0000e+38 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918542455375       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918542455375       residual = 7.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918542455375       residual = 4.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918542455375       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.917968750000       residual = 3.41e+06           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =      -0.918542453300       residual = 7.83e-05           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+37 is 1.413362e-41

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+37, overlap shift 4.0000e+38 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918542455375       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918542455375       residual = 7.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918542455375       residual = 4.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918542455375       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.918542455375       residual = 6.99e-05           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 2.41e+12           smallest_sin_value = 1.00e+00
davidson iteration    6:   krylov dim =   7   tar_fn =       0.000000000000       residual = 3.64e+11           smallest_sin_value = 1.00e+00
davidson iteration    7 stopping due to too large eigenvalue change
davidson solver did not converge after          7 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+37 is 3.260144e-42

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+38, overlap shift 1.6000e+39 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918542455375       residual = 6.55e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918542455375       residual = 7.07e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.918542455375       residual = 4.03e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.918542455375       residual = 1.13e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =      -0.921875000000       residual = 3.41e+06           smallest_sin_value = 1.00e+00
davidson iteration    5 stopping due to too large eigenvalue change
davidson solver did not converge after          5 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+38 is 7.198746e-43

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.941868 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.9941e+01
  </log>
  <optVariables href="H2O.s039.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 39
    time step          = 0.05
    reference energy   = -16.7734
    reference variance = 0.217877
====================================================
  Execution time = 2.0303e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s039
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9491e-01
  Total weights = 2.0000e+06
  Execution time = 1.8926e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383995937
  error estimate for blocks of size 2^( 2) =       0.000400837332
  error estimate for blocks of size 2^( 3) =       0.000418069317
  error estimate for blocks of size 2^( 4) =       0.000433358475
  error estimate for blocks of size 2^( 5) =       0.000443320778
  error estimate for blocks of size 2^( 6) =       0.000451489609
  error estimate for blocks of size 2^( 7) =       0.000457073328

      target function =      -0.920411910402
              le_mean =     -16.899446553593
             les_mean =     285.886199428883
             stat err =       0.000446310548
             autocorr =       1.350893287731
   target nu stat err =       0.000446310548
   target dn stat err =       0.002626075998
      target stat err =       0.004272152462
              std dev =       0.543052261374
             le_variance =       0.294905758583

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383995937
  error estimate for blocks of size 2^( 2) =       0.000400837332
  error estimate for blocks of size 2^( 3) =       0.000418069317
  error estimate for blocks of size 2^( 4) =       0.000433358475
  error estimate for blocks of size 2^( 5) =       0.000443320778
  error estimate for blocks of size 2^( 6) =       0.000451489609
  error estimate for blocks of size 2^( 7) =       0.000457073328

      target function =      -0.920411910402
              le_mean =     -16.899446553593
             les_mean =     285.886199428883
             stat err =       0.000446310548
             autocorr =       1.350893287731
   target nu stat err =       0.000446310548
   target dn stat err =       0.002626075998
      target stat err =       0.004272152462
              std dev =       0.543052261374
             le_variance =       0.294905758583

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383995937
  error estimate for blocks of size 2^( 2) =       0.000400837332
  error estimate for blocks of size 2^( 3) =       0.000418069317
  error estimate for blocks of size 2^( 4) =       0.000433358475
  error estimate for blocks of size 2^( 5) =       0.000443320778
  error estimate for blocks of size 2^( 6) =       0.000451489609
  error estimate for blocks of size 2^( 7) =       0.000457073328

      target function =      -0.920411910402
              le_mean =     -16.899446553593
             les_mean =     285.886199428883
             stat err =       0.000446310548
             autocorr =       1.350893287731
   target nu stat err =       0.000446310548
   target dn stat err =       0.002626075998
      target stat err =       0.004272152462
              std dev =       0.543052261374
             le_variance =       0.294905758583

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294691597972
                                         uncertainty =       0.002766448316

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383995937
  error estimate for blocks of size 2^( 2) =       0.000400837332
  error estimate for blocks of size 2^( 3) =       0.000418069317
  error estimate for blocks of size 2^( 4) =       0.000433358475
  error estimate for blocks of size 2^( 5) =       0.000443320778
  error estimate for blocks of size 2^( 6) =       0.000451489609
  error estimate for blocks of size 2^( 7) =       0.000457073328

      target function =      -0.920411910402
              le_mean =     -16.899446553593
             les_mean =     285.886199428883
             stat err =       0.000446310548
             autocorr =       1.350893287731
   target nu stat err =       0.000446310548
   target dn stat err =       0.002626075998
      target stat err =       0.004272152462
              std dev =       0.543052261374
             le_variance =       0.294905758583


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.920411910402        initial  <--
     1.0000e+37     1.0000e+38             1.4134e-41        -0.920411910402
     4.0000e+37     4.0000e+38             3.2601e-42        -0.920411910402
     1.6000e+38     1.6000e+39             7.1987e-43        -0.920411910402

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8855
  </log>
  <optVariables href="H2O.s039.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.9832e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s040 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s040 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=40  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6893e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -16.8869
    reference variance = 0.235064
====================================================
  Execution time = 2.0519e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s040
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9516e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4889e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295238552402
                                         uncertainty =       0.002819517754

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295238552402
                                         uncertainty =       0.002819517754

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384158485
  error estimate for blocks of size 2^( 2) =       0.000400776847
  error estimate for blocks of size 2^( 3) =       0.000417836164
  error estimate for blocks of size 2^( 4) =       0.000432191845
  error estimate for blocks of size 2^( 5) =       0.000443130052
  error estimate for blocks of size 2^( 6) =       0.000451389499
  error estimate for blocks of size 2^( 7) =       0.000457304874

      target function =      -0.920040571257
              le_mean =     -16.898656816178
             les_mean =     285.859757527122
             stat err =       0.000446004067
             autocorr =       1.347897220331
   target nu stat err =       0.000446004067
   target dn stat err =       0.003040688552
      target stat err =       0.004914580694
              std dev =       0.543282140105
             le_variance =       0.295155483757


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689865681618e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+38, overlap shift 1.0000e+39 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+38, overlap shift 4.0000e+39 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+38 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+39, overlap shift 1.6000e+40 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.920065249218       residual = 4.42e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.942923 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6019e+01
  </log>
  <optVariables href="H2O.s040.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 40
    time step          = 0.05
    reference energy   = -16.8702
    reference variance = 0.162822
====================================================
  Execution time = 2.0182e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s040
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9340e-01
  Total weights = 2.0000e+06
  Execution time = 1.8885e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383013298
  error estimate for blocks of size 2^( 2) =       0.000399682852
  error estimate for blocks of size 2^( 3) =       0.000416496467
  error estimate for blocks of size 2^( 4) =       0.000431514179
  error estimate for blocks of size 2^( 5) =       0.000443268368
  error estimate for blocks of size 2^( 6) =       0.000448661997
  error estimate for blocks of size 2^( 7) =       0.000450284457

      target function =      -0.922845947095
              le_mean =     -16.899086215640
             les_mean =     285.872513150035
             stat err =       0.000443432250
             autocorr =       1.340376624685
   target nu stat err =       0.000443432250
   target dn stat err =       0.002473797694
      target stat err =       0.004050071323
              std dev =       0.541662600784
             le_variance =       0.293398373088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383013298
  error estimate for blocks of size 2^( 2) =       0.000399682852
  error estimate for blocks of size 2^( 3) =       0.000416496467
  error estimate for blocks of size 2^( 4) =       0.000431514179
  error estimate for blocks of size 2^( 5) =       0.000443268368
  error estimate for blocks of size 2^( 6) =       0.000448661997
  error estimate for blocks of size 2^( 7) =       0.000450284457

      target function =      -0.922845947095
              le_mean =     -16.899086215640
             les_mean =     285.872513150035
             stat err =       0.000443432250
             autocorr =       1.340376624685
   target nu stat err =       0.000443432250
   target dn stat err =       0.002473797694
      target stat err =       0.004050071323
              std dev =       0.541662600784
             le_variance =       0.293398373088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383013298
  error estimate for blocks of size 2^( 2) =       0.000399682852
  error estimate for blocks of size 2^( 3) =       0.000416496467
  error estimate for blocks of size 2^( 4) =       0.000431514179
  error estimate for blocks of size 2^( 5) =       0.000443268368
  error estimate for blocks of size 2^( 6) =       0.000448661997
  error estimate for blocks of size 2^( 7) =       0.000450284457

      target function =      -0.922845947095
              le_mean =     -16.899086215640
             les_mean =     285.872513150035
             stat err =       0.000443432250
             autocorr =       1.340376624685
   target nu stat err =       0.000443432250
   target dn stat err =       0.002473797694
      target stat err =       0.004050071323
              std dev =       0.541662600784
             le_variance =       0.293398373088

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293410594855
                                         uncertainty =       0.002355731231

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383013298
  error estimate for blocks of size 2^( 2) =       0.000399682852
  error estimate for blocks of size 2^( 3) =       0.000416496467
  error estimate for blocks of size 2^( 4) =       0.000431514179
  error estimate for blocks of size 2^( 5) =       0.000443268368
  error estimate for blocks of size 2^( 6) =       0.000448661997
  error estimate for blocks of size 2^( 7) =       0.000450284457

      target function =      -0.922845947095
              le_mean =     -16.899086215640
             les_mean =     285.872513150035
             stat err =       0.000443432250
             autocorr =       1.340376624685
   target nu stat err =       0.000443432250
   target dn stat err =       0.002473797694
      target stat err =       0.004050071323
              std dev =       0.541662600784
             le_variance =       0.293398373088


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922845947095        initial  <--
     1.0000e+38     1.0000e+39             0.0000e+00        -0.922845947095
     4.0000e+38     4.0000e+39             0.0000e+00        -0.922845947095
     1.6000e+39     1.6000e+40             0.0000e+00        -0.922845947095

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.7568
  </log>
  <optVariables href="H2O.s040.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5782e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s041 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s041 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=41  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6893e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -16.9863
    reference variance = 0.273418
====================================================
  Execution time = 2.0432e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s041
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9252e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4912e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292548734592
                                         uncertainty =       0.003352064608

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292548734592
                                         uncertainty =       0.003352064608

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382437778
  error estimate for blocks of size 2^( 2) =       0.000399143343
  error estimate for blocks of size 2^( 3) =       0.000416315141
  error estimate for blocks of size 2^( 4) =       0.000431442397
  error estimate for blocks of size 2^( 5) =       0.000443155509
  error estimate for blocks of size 2^( 6) =       0.000449340960
  error estimate for blocks of size 2^( 7) =       0.000451751560

      target function =      -0.924239959685
              le_mean =     -16.899390646066
             les_mean =     285.881921370580
             stat err =       0.000443922606
             autocorr =       1.347388854163
   target nu stat err =       0.000443922606
   target dn stat err =       0.003292519175
      target stat err =       0.005366910648
              std dev =       0.540848692794
             le_variance =       0.292517308497


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689939064607e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+39, overlap shift 1.0000e+40 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+39, overlap shift 4.0000e+40 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+39 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+40, overlap shift 1.6000e+41 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924269582848       residual = 3.00e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+40 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.943998 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5934e+01
  </log>
  <optVariables href="H2O.s041.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 41
    time step          = 0.05
    reference energy   = -16.8722
    reference variance = 0.191205
====================================================
  Execution time = 2.0126e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s041
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9331e-01
  Total weights = 2.0000e+06
  Execution time = 1.8876e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382952804
  error estimate for blocks of size 2^( 2) =       0.000399328687
  error estimate for blocks of size 2^( 3) =       0.000416641332
  error estimate for blocks of size 2^( 4) =       0.000430416108
  error estimate for blocks of size 2^( 5) =       0.000441320375
  error estimate for blocks of size 2^( 6) =       0.000447956749
  error estimate for blocks of size 2^( 7) =       0.000448681454

      target function =      -0.922988958187
              le_mean =     -16.899308850047
             les_mean =     285.879945163572
             stat err =       0.000442093672
             autocorr =       1.332717460271
   target nu stat err =       0.000442093672
   target dn stat err =       0.002292802850
      target stat err =       0.003767167896
              std dev =       0.541577049860
             le_variance =       0.293305700935

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382952804
  error estimate for blocks of size 2^( 2) =       0.000399328687
  error estimate for blocks of size 2^( 3) =       0.000416641332
  error estimate for blocks of size 2^( 4) =       0.000430416108
  error estimate for blocks of size 2^( 5) =       0.000441320375
  error estimate for blocks of size 2^( 6) =       0.000447956749
  error estimate for blocks of size 2^( 7) =       0.000448681454

      target function =      -0.922988958187
              le_mean =     -16.899308850047
             les_mean =     285.879945163572
             stat err =       0.000442093672
             autocorr =       1.332717460271
   target nu stat err =       0.000442093672
   target dn stat err =       0.002292802850
      target stat err =       0.003767167896
              std dev =       0.541577049860
             le_variance =       0.293305700935

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382952804
  error estimate for blocks of size 2^( 2) =       0.000399328687
  error estimate for blocks of size 2^( 3) =       0.000416641332
  error estimate for blocks of size 2^( 4) =       0.000430416108
  error estimate for blocks of size 2^( 5) =       0.000441320375
  error estimate for blocks of size 2^( 6) =       0.000447956749
  error estimate for blocks of size 2^( 7) =       0.000448681454

      target function =      -0.922988958187
              le_mean =     -16.899308850047
             les_mean =     285.879945163572
             stat err =       0.000442093672
             autocorr =       1.332717460271
   target nu stat err =       0.000442093672
   target dn stat err =       0.002292802850
      target stat err =       0.003767167896
              std dev =       0.541577049860
             le_variance =       0.293305700935

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293392677330
                                         uncertainty =       0.002196758873

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382952804
  error estimate for blocks of size 2^( 2) =       0.000399328687
  error estimate for blocks of size 2^( 3) =       0.000416641332
  error estimate for blocks of size 2^( 4) =       0.000430416108
  error estimate for blocks of size 2^( 5) =       0.000441320375
  error estimate for blocks of size 2^( 6) =       0.000447956749
  error estimate for blocks of size 2^( 7) =       0.000448681454

      target function =      -0.922988958187
              le_mean =     -16.899308850047
             les_mean =     285.879945163572
             stat err =       0.000442093672
             autocorr =       1.332717460271
   target nu stat err =       0.000442093672
   target dn stat err =       0.002292802850
      target stat err =       0.003767167896
              std dev =       0.541577049860
             le_variance =       0.293305700935


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922988958187        initial  <--
     1.0000e+39     1.0000e+40             0.0000e+00        -0.922988958187
     4.0000e+39     4.0000e+40             0.0000e+00        -0.922988958187
     1.6000e+40     1.6000e+41             0.0000e+00        -0.922988958187

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6881
  </log>
  <optVariables href="H2O.s041.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5628e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s042 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s042 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=42  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6894e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -16.9376
    reference variance = 0.150744
====================================================
  Execution time = 2.0592e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s042
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9446e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 6.0112e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566016637
                                         uncertainty =       0.002192796784

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.294566016637
                                         uncertainty =       0.002192796784

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383703394
  error estimate for blocks of size 2^( 2) =       0.000400759034
  error estimate for blocks of size 2^( 3) =       0.000418325049
  error estimate for blocks of size 2^( 4) =       0.000433897627
  error estimate for blocks of size 2^( 5) =       0.000447329993
  error estimate for blocks of size 2^( 6) =       0.000455869826
  error estimate for blocks of size 2^( 7) =       0.000461766788

      target function =      -0.921169927999
              le_mean =     -16.898539774706
             les_mean =     285.855102959917
             stat err =       0.000449716058
             autocorr =       1.373679789516
   target nu stat err =       0.000449716058
   target dn stat err =       0.002525320738
      target stat err =       0.004114475404
              std dev =       0.542638544369
             le_variance =       0.294456589835


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689853977471e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+40, overlap shift 1.0000e+41 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921186782647       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921186782647       residual = 6.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921186782647       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+40 is 4.939013e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+40, overlap shift 4.0000e+41 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921186782647       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921186782647       residual = 6.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921186685562       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+40 is 1.234753e-45

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+41, overlap shift 1.6000e+42 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.921186782647       residual = 3.52e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.921186782647       residual = 6.26e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.921142578125       residual = 3.53e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+41 is 3.086883e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.945338 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8519e+01
  </log>
  <optVariables href="H2O.s042.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 42
    time step          = 0.05
    reference energy   = -16.9191
    reference variance = 0.216498
====================================================
  Execution time = 2.0267e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s042
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9927e-01
  Total weights = 2.0000e+06
  Execution time = 1.8898e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386829373
  error estimate for blocks of size 2^( 2) =       0.000403510210
  error estimate for blocks of size 2^( 3) =       0.000420484451
  error estimate for blocks of size 2^( 4) =       0.000434389502
  error estimate for blocks of size 2^( 5) =       0.000444960237
  error estimate for blocks of size 2^( 6) =       0.000453074941
  error estimate for blocks of size 2^( 7) =       0.000457061440

      target function =      -0.913374333471
              le_mean =     -16.898615972582
             les_mean =     285.862495566062
             stat err =       0.000447371530
             autocorr =       1.337512344359
   target nu stat err =       0.000447371530
   target dn stat err =       0.007812918558
      target stat err =       0.012315352871
              std dev =       0.547059344951
             le_variance =       0.299273926898

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386829373
  error estimate for blocks of size 2^( 2) =       0.000403510210
  error estimate for blocks of size 2^( 3) =       0.000420484451
  error estimate for blocks of size 2^( 4) =       0.000434389502
  error estimate for blocks of size 2^( 5) =       0.000444960237
  error estimate for blocks of size 2^( 6) =       0.000453074941
  error estimate for blocks of size 2^( 7) =       0.000457061440

      target function =      -0.913374333471
              le_mean =     -16.898615972582
             les_mean =     285.862495566062
             stat err =       0.000447371530
             autocorr =       1.337512344359
   target nu stat err =       0.000447371530
   target dn stat err =       0.007812918558
      target stat err =       0.012315352871
              std dev =       0.547059344951
             le_variance =       0.299273926898

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386829373
  error estimate for blocks of size 2^( 2) =       0.000403510210
  error estimate for blocks of size 2^( 3) =       0.000420484451
  error estimate for blocks of size 2^( 4) =       0.000434389502
  error estimate for blocks of size 2^( 5) =       0.000444960237
  error estimate for blocks of size 2^( 6) =       0.000453074941
  error estimate for blocks of size 2^( 7) =       0.000457061440

      target function =      -0.913374333471
              le_mean =     -16.898615972582
             les_mean =     285.862495566062
             stat err =       0.000447371530
             autocorr =       1.337512344359
   target nu stat err =       0.000447371530
   target dn stat err =       0.007812918558
      target stat err =       0.012315352871
              std dev =       0.547059344951
             le_variance =       0.299273926898

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299255367353
                                         uncertainty =       0.007803437071

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386829373
  error estimate for blocks of size 2^( 2) =       0.000403510210
  error estimate for blocks of size 2^( 3) =       0.000420484451
  error estimate for blocks of size 2^( 4) =       0.000434389502
  error estimate for blocks of size 2^( 5) =       0.000444960237
  error estimate for blocks of size 2^( 6) =       0.000453074941
  error estimate for blocks of size 2^( 7) =       0.000457061440

      target function =      -0.913374333471
              le_mean =     -16.898615972582
             les_mean =     285.862495566062
             stat err =       0.000447371530
             autocorr =       1.337512344359
   target nu stat err =       0.000447371530
   target dn stat err =       0.007812918558
      target stat err =       0.012315352871
              std dev =       0.547059344951
             le_variance =       0.299273926898


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913374333471        initial  <--
     1.0000e+40     1.0000e+41             4.9390e-45        -0.913374333471
     4.0000e+40     4.0000e+41             1.2348e-45        -0.913374333471
     1.6000e+41     1.6000e+42             3.0869e-46        -0.913374333471

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8412
  </log>
  <optVariables href="H2O.s042.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8367e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s043 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s043 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=43  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -16.9633
    reference variance = 0.479508
====================================================
  Execution time = 2.0616e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s043
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9269e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4890e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292664817366
                                         uncertainty =       0.002492907857

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292664817366
                                         uncertainty =       0.002492907857

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382552568
  error estimate for blocks of size 2^( 2) =       0.000399235973
  error estimate for blocks of size 2^( 3) =       0.000416095482
  error estimate for blocks of size 2^( 4) =       0.000431289159
  error estimate for blocks of size 2^( 5) =       0.000442889111
  error estimate for blocks of size 2^( 6) =       0.000450353820
  error estimate for blocks of size 2^( 7) =       0.000453097516

      target function =      -0.923989541771
              le_mean =     -16.898728621457
             les_mean =     285.859721809744
             stat err =       0.000444407402
             autocorr =       1.349523102751
   target nu stat err =       0.000444407402
   target dn stat err =       0.002768810401
      target stat err =       0.004524702324
              std dev =       0.541011029856
             le_variance =       0.292692934426


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689872862146e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+41, overlap shift 1.0000e+42 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924010234044       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924010234044       residual = 6.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+41 is 9.400401e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+41, overlap shift 4.0000e+42 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924010234044       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924010234044       residual = 6.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+41 is 2.350100e-46

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+42, overlap shift 1.6000e+43 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.924010234044       residual = 6.94e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.924010234044       residual = 6.46e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.924010234044       residual = 4.27e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.924072265625       residual = 7.35e-03           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+42 is 8.228500e-47

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.946586 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6116e+01
  </log>
  <optVariables href="H2O.s043.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 43
    time step          = 0.05
    reference energy   = -16.8753
    reference variance = 0.418894
====================================================
  Execution time = 1.9997e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s043
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9775e-01
  Total weights = 2.0000e+06
  Execution time = 1.8986e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385844173
  error estimate for blocks of size 2^( 2) =       0.000402573904
  error estimate for blocks of size 2^( 3) =       0.000420274327
  error estimate for blocks of size 2^( 4) =       0.000435632265
  error estimate for blocks of size 2^( 5) =       0.000447669161
  error estimate for blocks of size 2^( 6) =       0.000457177931
  error estimate for blocks of size 2^( 7) =       0.000463935565

      target function =      -0.915881726266
              le_mean =     -16.898661809786
             les_mean =     285.862522264615
             stat err =       0.000451103730
             autocorr =       1.366875454804
   target nu stat err =       0.000451103730
   target dn stat err =       0.004689584024
      target stat err =       0.007458744443
              std dev =       0.545666062692
             le_variance =       0.297751451974

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385844173
  error estimate for blocks of size 2^( 2) =       0.000402573904
  error estimate for blocks of size 2^( 3) =       0.000420274327
  error estimate for blocks of size 2^( 4) =       0.000435632265
  error estimate for blocks of size 2^( 5) =       0.000447669161
  error estimate for blocks of size 2^( 6) =       0.000457177931
  error estimate for blocks of size 2^( 7) =       0.000463935565

      target function =      -0.915881726266
              le_mean =     -16.898661809786
             les_mean =     285.862522264615
             stat err =       0.000451103730
             autocorr =       1.366875454804
   target nu stat err =       0.000451103730
   target dn stat err =       0.004689584024
      target stat err =       0.007458744443
              std dev =       0.545666062692
             le_variance =       0.297751451974

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385844173
  error estimate for blocks of size 2^( 2) =       0.000402573904
  error estimate for blocks of size 2^( 3) =       0.000420274327
  error estimate for blocks of size 2^( 4) =       0.000435632265
  error estimate for blocks of size 2^( 5) =       0.000447669161
  error estimate for blocks of size 2^( 6) =       0.000457177931
  error estimate for blocks of size 2^( 7) =       0.000463935565

      target function =      -0.915881726266
              le_mean =     -16.898661809786
             les_mean =     285.862522264615
             stat err =       0.000451103730
             autocorr =       1.366875454804
   target nu stat err =       0.000451103730
   target dn stat err =       0.004689584024
      target stat err =       0.007458744443
              std dev =       0.545666062692
             le_variance =       0.297751451974

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297698779641
                                         uncertainty =       0.004513084575

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385844173
  error estimate for blocks of size 2^( 2) =       0.000402573904
  error estimate for blocks of size 2^( 3) =       0.000420274327
  error estimate for blocks of size 2^( 4) =       0.000435632265
  error estimate for blocks of size 2^( 5) =       0.000447669161
  error estimate for blocks of size 2^( 6) =       0.000457177931
  error estimate for blocks of size 2^( 7) =       0.000463935565

      target function =      -0.915881726266
              le_mean =     -16.898661809786
             les_mean =     285.862522264615
             stat err =       0.000451103730
             autocorr =       1.366875454804
   target nu stat err =       0.000451103730
   target dn stat err =       0.004689584024
      target stat err =       0.007458744443
              std dev =       0.545666062692
             le_variance =       0.297751451974


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.915881726266        initial  <--
     1.0000e+41     1.0000e+42             9.4004e-46        -0.915881726266
     4.0000e+41     4.0000e+42             2.3501e-46        -0.915881726266
     1.6000e+42     1.6000e+43             8.2285e-47        -0.915881726266

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6100
  </log>
  <optVariables href="H2O.s043.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5732e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s044 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s044 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=44  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -16.8537
    reference variance = 0.276634
====================================================
  Execution time = 2.0271e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s044
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9630e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5520e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296279677961
                                         uncertainty =       0.006708784409

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296279677961
                                         uncertainty =       0.006708784409

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384902113
  error estimate for blocks of size 2^( 2) =       0.000401753659
  error estimate for blocks of size 2^( 3) =       0.000419139540
  error estimate for blocks of size 2^( 4) =       0.000433624767
  error estimate for blocks of size 2^( 5) =       0.000445808098
  error estimate for blocks of size 2^( 6) =       0.000453069758
  error estimate for blocks of size 2^( 7) =       0.000456835792

      target function =      -0.918125257494
              le_mean =     -16.899022045769
             les_mean =     285.873245228797
             stat err =       0.000447334604
             autocorr =       1.350717100234
   target nu stat err =       0.000447334604
   target dn stat err =       0.006058466471
      target stat err =       0.009668347196
              std dev =       0.544333788750
             le_variance =       0.296299273575


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689902204577e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+42, overlap shift 1.0000e+43 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+42, overlap shift 4.0000e+43 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+42 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+43, overlap shift 1.6000e+44 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.918226515603       residual = 5.99e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+43 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.947660 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5835e+01
  </log>
  <optVariables href="H2O.s044.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 44
    time step          = 0.05
    reference energy   = -16.9793
    reference variance = 0.186463
====================================================
  Execution time = 2.2687e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s044
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9073e-01
  Total weights = 2.0000e+06
  Execution time = 1.9026e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381270127
  error estimate for blocks of size 2^( 2) =       0.000398327254
  error estimate for blocks of size 2^( 3) =       0.000415329962
  error estimate for blocks of size 2^( 4) =       0.000430342306
  error estimate for blocks of size 2^( 5) =       0.000441699649
  error estimate for blocks of size 2^( 6) =       0.000449025370
  error estimate for blocks of size 2^( 7) =       0.000452442007

      target function =      -0.927157235417
              le_mean =     -16.898474186306
             les_mean =     285.849163499175
             stat err =       0.000443377333
             autocorr =       1.352326054410
   target nu stat err =       0.000443377333
   target dn stat err =       0.003065742566
      target stat err =       0.005027636443
              std dev =       0.539197384340
             le_variance =       0.290733819280

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381270127
  error estimate for blocks of size 2^( 2) =       0.000398327254
  error estimate for blocks of size 2^( 3) =       0.000415329962
  error estimate for blocks of size 2^( 4) =       0.000430342306
  error estimate for blocks of size 2^( 5) =       0.000441699649
  error estimate for blocks of size 2^( 6) =       0.000449025370
  error estimate for blocks of size 2^( 7) =       0.000452442007

      target function =      -0.927157235417
              le_mean =     -16.898474186306
             les_mean =     285.849163499175
             stat err =       0.000443377333
             autocorr =       1.352326054410
   target nu stat err =       0.000443377333
   target dn stat err =       0.003065742566
      target stat err =       0.005027636443
              std dev =       0.539197384340
             le_variance =       0.290733819280

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381270127
  error estimate for blocks of size 2^( 2) =       0.000398327254
  error estimate for blocks of size 2^( 3) =       0.000415329962
  error estimate for blocks of size 2^( 4) =       0.000430342306
  error estimate for blocks of size 2^( 5) =       0.000441699649
  error estimate for blocks of size 2^( 6) =       0.000449025370
  error estimate for blocks of size 2^( 7) =       0.000452442007

      target function =      -0.927157235417
              le_mean =     -16.898474186306
             les_mean =     285.849163499175
             stat err =       0.000443377333
             autocorr =       1.352326054410
   target nu stat err =       0.000443377333
   target dn stat err =       0.003065742566
      target stat err =       0.005027636443
              std dev =       0.539197384340
             le_variance =       0.290733819280

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290757502789
                                         uncertainty =       0.003265970042

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381270127
  error estimate for blocks of size 2^( 2) =       0.000398327254
  error estimate for blocks of size 2^( 3) =       0.000415329962
  error estimate for blocks of size 2^( 4) =       0.000430342306
  error estimate for blocks of size 2^( 5) =       0.000441699649
  error estimate for blocks of size 2^( 6) =       0.000449025370
  error estimate for blocks of size 2^( 7) =       0.000452442007

      target function =      -0.927157235417
              le_mean =     -16.898474186306
             les_mean =     285.849163499175
             stat err =       0.000443377333
             autocorr =       1.352326054410
   target nu stat err =       0.000443377333
   target dn stat err =       0.003065742566
      target stat err =       0.005027636443
              std dev =       0.539197384340
             le_variance =       0.290733819280


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.927157235417        initial  <--
     1.0000e+42     1.0000e+43             0.0000e+00        -0.927157235417
     4.0000e+42     4.0000e+43             0.0000e+00        -0.927157235417
     1.6000e+43     1.6000e+44             0.0000e+00        -0.927157235417

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 32.3532
  </log>
  <optVariables href="H2O.s044.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8193e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s045 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s045 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=45  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -16.8603
    reference variance = 0.255245
====================================================
  Execution time = 2.0479e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s045
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0777e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5118e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307846805749
                                         uncertainty =       0.004695097728

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307846805749
                                         uncertainty =       0.004695097728

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000392279713
  error estimate for blocks of size 2^( 2) =       0.000408889299
  error estimate for blocks of size 2^( 3) =       0.000425648153
  error estimate for blocks of size 2^( 4) =       0.000440053304
  error estimate for blocks of size 2^( 5) =       0.000451227617
  error estimate for blocks of size 2^( 6) =       0.000457927089
  error estimate for blocks of size 2^( 7) =       0.000461468624

      target function =      -0.900293015599
              le_mean =     -16.898665746926
             les_mean =     285.872670619617
             stat err =       0.000452669158
             autocorr =       1.331588736474
   target nu stat err =       0.000452669158
   target dn stat err =       0.005307757765
      target stat err =       0.008148918643
              std dev =       0.554767291020
             le_variance =       0.307766747185


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689866574693e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+43, overlap shift 1.0000e+44 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.900365964440       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+43 is 6.865684e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+43, overlap shift 4.0000e+44 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.900365964440       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+43 is 1.716421e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+44, overlap shift 1.6000e+45 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.900365964440       residual = 1.28e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.900365964440       residual = 4.47e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+44 is 4.291053e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.948971 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6002e+01
  </log>
  <optVariables href="H2O.s045.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 45
    time step          = 0.05
    reference energy   = -16.9235
    reference variance = 0.243131
====================================================
  Execution time = 2.0512e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s045
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9985e-01
  Total weights = 2.0000e+06
  Execution time = 1.8860e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387203332
  error estimate for blocks of size 2^( 2) =       0.000403685964
  error estimate for blocks of size 2^( 3) =       0.000421229976
  error estimate for blocks of size 2^( 4) =       0.000435708244
  error estimate for blocks of size 2^( 5) =       0.000447456482
  error estimate for blocks of size 2^( 6) =       0.000455642107
  error estimate for blocks of size 2^( 7) =       0.000458854091

      target function =      -0.912417745866
              le_mean =     -16.899167584179
             les_mean =     285.881717728490
             stat err =       0.000449415231
             autocorr =       1.347154490181
   target nu stat err =       0.000449415231
   target dn stat err =       0.008189951593
      target stat err =       0.012894261901
              std dev =       0.547588203171
             le_variance =       0.299852840252

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387203332
  error estimate for blocks of size 2^( 2) =       0.000403685964
  error estimate for blocks of size 2^( 3) =       0.000421229976
  error estimate for blocks of size 2^( 4) =       0.000435708244
  error estimate for blocks of size 2^( 5) =       0.000447456482
  error estimate for blocks of size 2^( 6) =       0.000455642107
  error estimate for blocks of size 2^( 7) =       0.000458854091

      target function =      -0.912417745866
              le_mean =     -16.899167584179
             les_mean =     285.881717728490
             stat err =       0.000449415231
             autocorr =       1.347154490181
   target nu stat err =       0.000449415231
   target dn stat err =       0.008189951593
      target stat err =       0.012894261901
              std dev =       0.547588203171
             le_variance =       0.299852840252

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387203332
  error estimate for blocks of size 2^( 2) =       0.000403685964
  error estimate for blocks of size 2^( 3) =       0.000421229976
  error estimate for blocks of size 2^( 4) =       0.000435708244
  error estimate for blocks of size 2^( 5) =       0.000447456482
  error estimate for blocks of size 2^( 6) =       0.000455642107
  error estimate for blocks of size 2^( 7) =       0.000458854091

      target function =      -0.912417745866
              le_mean =     -16.899167584179
             les_mean =     285.881717728490
             stat err =       0.000449415231
             autocorr =       1.347154490181
   target nu stat err =       0.000449415231
   target dn stat err =       0.008189951593
      target stat err =       0.012894261901
              std dev =       0.547588203171
             le_variance =       0.299852840252

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299920482578
                                         uncertainty =       0.007963904135

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387203332
  error estimate for blocks of size 2^( 2) =       0.000403685964
  error estimate for blocks of size 2^( 3) =       0.000421229976
  error estimate for blocks of size 2^( 4) =       0.000435708244
  error estimate for blocks of size 2^( 5) =       0.000447456482
  error estimate for blocks of size 2^( 6) =       0.000455642107
  error estimate for blocks of size 2^( 7) =       0.000458854091

      target function =      -0.912417745866
              le_mean =     -16.899167584179
             les_mean =     285.881717728490
             stat err =       0.000449415231
             autocorr =       1.347154490181
   target nu stat err =       0.000449415231
   target dn stat err =       0.008189951593
      target stat err =       0.012894261901
              std dev =       0.547588203171
             le_variance =       0.299852840252


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.912417745866        initial  <--
     1.0000e+43     1.0000e+44             6.8657e-48        -0.912417745866
     4.0000e+43     4.0000e+44             1.7164e-48        -0.912417745866
     1.6000e+44     1.6000e+45             4.2911e-49        -0.912417745866

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.0610
  </log>
  <optVariables href="H2O.s045.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6069e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s046 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s046 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=46  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -17.0073
    reference variance = 0.376147
====================================================
  Execution time = 2.0469e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s046
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.3351e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4776e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.333470286841
                                         uncertainty =       0.040249705165

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.333470286841
                                         uncertainty =       0.040249705165

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000408359512
  error estimate for blocks of size 2^( 2) =       0.000424378396
  error estimate for blocks of size 2^( 3) =       0.000440221066
  error estimate for blocks of size 2^( 4) =       0.000453953796
  error estimate for blocks of size 2^( 5) =       0.000463524502
  error estimate for blocks of size 2^( 6) =       0.000472094698
  error estimate for blocks of size 2^( 7) =       0.000475099374

      target function =      -0.858876324340
              le_mean =     -16.898903222820
             les_mean =     285.906444949695
             stat err =       0.000466168092
             autocorr =       1.303165986057
   target nu stat err =       0.000466168092
   target dn stat err =       0.040534105757
      target stat err =       0.056656791204
              std dev =       0.577507560307
             le_variance =       0.333514982212


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689890322282e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+44, overlap shift 1.0000e+45 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+44, overlap shift 4.0000e+45 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+44 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+45, overlap shift 1.6000e+46 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.862623559106       residual = 8.34e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+45 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.953116 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5964e+01
  </log>
  <optVariables href="H2O.s046.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 46
    time step          = 0.05
    reference energy   = -16.8934
    reference variance = 0.292818
====================================================
  Execution time = 2.0410e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s046
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9274e-01
  Total weights = 2.0000e+06
  Execution time = 1.8987e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382580868
  error estimate for blocks of size 2^( 2) =       0.000399652046
  error estimate for blocks of size 2^( 3) =       0.000416366143
  error estimate for blocks of size 2^( 4) =       0.000431494936
  error estimate for blocks of size 2^( 5) =       0.000442508177
  error estimate for blocks of size 2^( 6) =       0.000450750040
  error estimate for blocks of size 2^( 7) =       0.000452844580

      target function =      -0.923921041762
              le_mean =     -16.898677365953
             les_mean =     285.858032813865
             stat err =       0.000444399433
             autocorr =       1.349275069448
   target nu stat err =       0.000444399433
   target dn stat err =       0.002798167301
      target stat err =       0.004570169066
              std dev =       0.541051052742
             le_variance =       0.292736241673

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382580868
  error estimate for blocks of size 2^( 2) =       0.000399652046
  error estimate for blocks of size 2^( 3) =       0.000416366143
  error estimate for blocks of size 2^( 4) =       0.000431494936
  error estimate for blocks of size 2^( 5) =       0.000442508177
  error estimate for blocks of size 2^( 6) =       0.000450750040
  error estimate for blocks of size 2^( 7) =       0.000452844580

      target function =      -0.923921041762
              le_mean =     -16.898677365953
             les_mean =     285.858032813865
             stat err =       0.000444399433
             autocorr =       1.349275069447
   target nu stat err =       0.000444399433
   target dn stat err =       0.002798167301
      target stat err =       0.004570169066
              std dev =       0.541051052742
             le_variance =       0.292736241673

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382580868
  error estimate for blocks of size 2^( 2) =       0.000399652046
  error estimate for blocks of size 2^( 3) =       0.000416366143
  error estimate for blocks of size 2^( 4) =       0.000431494936
  error estimate for blocks of size 2^( 5) =       0.000442508177
  error estimate for blocks of size 2^( 6) =       0.000450750040
  error estimate for blocks of size 2^( 7) =       0.000452844580

      target function =      -0.923921041762
              le_mean =     -16.898677365953
             les_mean =     285.858032813865
             stat err =       0.000444399433
             autocorr =       1.349275069447
   target nu stat err =       0.000444399433
   target dn stat err =       0.002798167301
      target stat err =       0.004570169066
              std dev =       0.541051052742
             le_variance =       0.292736241673

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292665956813
                                         uncertainty =       0.002774971843

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382580868
  error estimate for blocks of size 2^( 2) =       0.000399652046
  error estimate for blocks of size 2^( 3) =       0.000416366143
  error estimate for blocks of size 2^( 4) =       0.000431494936
  error estimate for blocks of size 2^( 5) =       0.000442508177
  error estimate for blocks of size 2^( 6) =       0.000450750040
  error estimate for blocks of size 2^( 7) =       0.000452844580

      target function =      -0.923921041762
              le_mean =     -16.898677365953
             les_mean =     285.858032813865
             stat err =       0.000444399433
             autocorr =       1.349275069447
   target nu stat err =       0.000444399433
   target dn stat err =       0.002798167301
      target stat err =       0.004570169066
              std dev =       0.541051052742
             le_variance =       0.292736241673


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.923921041762        initial  <--
     1.0000e+44     1.0000e+45             0.0000e+00        -0.923921041762
     4.0000e+44     4.0000e+45             0.0000e+00        -0.923921041762
     1.6000e+45     1.6000e+46             0.0000e+00        -0.923921041762

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 30.0335
  </log>
  <optVariables href="H2O.s046.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6011e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s047 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s047 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=47  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6897e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -16.9068
    reference variance = 0.400252
====================================================
  Execution time = 2.0850e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s047
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 1.0350e+00
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4857e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       1.036185461525
                                         uncertainty =       0.735891437772

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       1.036185461525
                                         uncertainty =       0.735891437772

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000719371300
  error estimate for blocks of size 2^( 2) =       0.000728665998
  error estimate for blocks of size 2^( 3) =       0.000738939478
  error estimate for blocks of size 2^( 4) =       0.000748232177
  error estimate for blocks of size 2^( 5) =       0.000755542231
  error estimate for blocks of size 2^( 6) =       0.000759864339
  error estimate for blocks of size 2^( 7) =       0.000762761949

      target function =      -0.306259933956
              le_mean =     -16.899072986149
             les_mean =     286.613657407046
             stat err =       0.000756600174
             autocorr =       1.106182184260
   target nu stat err =       0.000756600174
   target dn stat err =       0.738105073753
      target stat err =       0.171796435073
              std dev =       1.017344648262
             le_variance =       1.034990133347


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689907298615e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+45, overlap shift 1.0000e+46 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.402739683018       residual = 1.63e+00           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.402739683018       residual = 3.84e-01           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+45 is 2.171008e-48

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+45, overlap shift 4.0000e+46 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.402739683018       residual = 1.63e+00           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.402739683018       residual = 3.84e-01           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+45 is 5.427521e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+46, overlap shift 1.6000e+47 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.402739683018       residual = 1.63e+00           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.402739683018       residual = 3.84e-01           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+46 is 1.356880e-49

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.957285 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6353e+01
  </log>
  <optVariables href="H2O.s047.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 47
    time step          = 0.05
    reference energy   = -16.8463
    reference variance = 0.293646
====================================================
  Execution time = 2.2514e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s047
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9755e-01
  Total weights = 2.0000e+06
  Execution time = 1.8915e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385714391
  error estimate for blocks of size 2^( 2) =       0.000402367725
  error estimate for blocks of size 2^( 3) =       0.000419401079
  error estimate for blocks of size 2^( 4) =       0.000434087674
  error estimate for blocks of size 2^( 5) =       0.000446630132
  error estimate for blocks of size 2^( 6) =       0.000453206795
  error estimate for blocks of size 2^( 7) =       0.000458812640

      target function =      -0.916228274132
              le_mean =     -16.898641145869
             les_mean =     285.861623610389
             stat err =       0.000448184310
             autocorr =       1.350148734049
   target nu stat err =       0.000448184310
   target dn stat err =       0.003325433891
      target stat err =       0.005320397367
              std dev =       0.545482522457
             le_variance =       0.297551182307

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385714391
  error estimate for blocks of size 2^( 2) =       0.000402367725
  error estimate for blocks of size 2^( 3) =       0.000419401079
  error estimate for blocks of size 2^( 4) =       0.000434087674
  error estimate for blocks of size 2^( 5) =       0.000446630132
  error estimate for blocks of size 2^( 6) =       0.000453206795
  error estimate for blocks of size 2^( 7) =       0.000458812640

      target function =      -0.916228274132
              le_mean =     -16.898641145869
             les_mean =     285.861623610389
             stat err =       0.000448184310
             autocorr =       1.350148734049
   target nu stat err =       0.000448184310
   target dn stat err =       0.003325433891
      target stat err =       0.005320397367
              std dev =       0.545482522457
             le_variance =       0.297551182307

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385714391
  error estimate for blocks of size 2^( 2) =       0.000402367725
  error estimate for blocks of size 2^( 3) =       0.000419401079
  error estimate for blocks of size 2^( 4) =       0.000434087674
  error estimate for blocks of size 2^( 5) =       0.000446630132
  error estimate for blocks of size 2^( 6) =       0.000453206795
  error estimate for blocks of size 2^( 7) =       0.000458812640

      target function =      -0.916228274132
              le_mean =     -16.898641145869
             les_mean =     285.861623610389
             stat err =       0.000448184310
             autocorr =       1.350148734049
   target nu stat err =       0.000448184310
   target dn stat err =       0.003325433891
      target stat err =       0.005320397367
              std dev =       0.545482522457
             le_variance =       0.297551182307

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297603028797
                                         uncertainty =       0.002875984111

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385714391
  error estimate for blocks of size 2^( 2) =       0.000402367725
  error estimate for blocks of size 2^( 3) =       0.000419401079
  error estimate for blocks of size 2^( 4) =       0.000434087674
  error estimate for blocks of size 2^( 5) =       0.000446630132
  error estimate for blocks of size 2^( 6) =       0.000453206795
  error estimate for blocks of size 2^( 7) =       0.000458812640

      target function =      -0.916228274132
              le_mean =     -16.898641145869
             les_mean =     285.861623610389
             stat err =       0.000448184310
             autocorr =       1.350148734049
   target nu stat err =       0.000448184310
   target dn stat err =       0.003325433891
      target stat err =       0.005320397367
              std dev =       0.545482522457
             le_variance =       0.297551182307


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916228274132        initial  <--
     1.0000e+45     1.0000e+46             2.1710e-48        -0.916228274132
     4.0000e+45     4.0000e+46             5.4275e-49        -0.916228274132
     1.6000e+46     1.6000e+47             1.3569e-49        -0.916228274132

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 32.0854
  </log>
  <optVariables href="H2O.s047.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.8449e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s048 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s048 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=48  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -16.8525
    reference variance = 0.1623
====================================================
  Execution time = 2.0455e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s048
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.1200e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5028e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311992246947
                                         uncertainty =       0.020067066236

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.311992246947
                                         uncertainty =       0.020067066236

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000394969638
  error estimate for blocks of size 2^( 2) =       0.000411467884
  error estimate for blocks of size 2^( 3) =       0.000428356586
  error estimate for blocks of size 2^( 4) =       0.000443958523
  error estimate for blocks of size 2^( 5) =       0.000456425140
  error estimate for blocks of size 2^( 6) =       0.000463664307
  error estimate for blocks of size 2^( 7) =       0.000469667118

      target function =      -0.892889787483
              le_mean =     -16.898673633237
             les_mean =     285.877172436282
             stat err =       0.000458428772
             autocorr =       1.347151101710
   target nu stat err =       0.000458428772
   target dn stat err =       0.020401385042
      target stat err =       0.030715291992
              std dev =       0.558571418558
             le_variance =       0.312002029630


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689867363324e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+46, overlap shift 1.0000e+47 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+46, overlap shift 4.0000e+47 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+46 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+47, overlap shift 1.6000e+48 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.893937583070       residual = 2.44e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+47 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.958370 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5972e+01
  </log>
  <optVariables href="H2O.s048.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 48
    time step          = 0.05
    reference energy   = -16.9619
    reference variance = 0.427963
====================================================
  Execution time = 2.0263e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s048
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9780e-01
  Total weights = 2.0000e+06
  Execution time = 1.8896e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385877609
  error estimate for blocks of size 2^( 2) =       0.000403002976
  error estimate for blocks of size 2^( 3) =       0.000419303686
  error estimate for blocks of size 2^( 4) =       0.000434712894
  error estimate for blocks of size 2^( 5) =       0.000446760258
  error estimate for blocks of size 2^( 6) =       0.000454333297
  error estimate for blocks of size 2^( 7) =       0.000458909756

      target function =      -0.915831891296
              le_mean =     -16.898540293422
             les_mean =     285.858466957779
             stat err =       0.000448679051
             autocorr =       1.351986727215
   target nu stat err =       0.000448679051
   target dn stat err =       0.003492577757
      target stat err =       0.005576574529
              std dev =       0.545713348082
             le_variance =       0.297803058274

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385877609
  error estimate for blocks of size 2^( 2) =       0.000403002976
  error estimate for blocks of size 2^( 3) =       0.000419303686
  error estimate for blocks of size 2^( 4) =       0.000434712894
  error estimate for blocks of size 2^( 5) =       0.000446760258
  error estimate for blocks of size 2^( 6) =       0.000454333297
  error estimate for blocks of size 2^( 7) =       0.000458909756

      target function =      -0.915831891296
              le_mean =     -16.898540293422
             les_mean =     285.858466957779
             stat err =       0.000448679051
             autocorr =       1.351986727215
   target nu stat err =       0.000448679051
   target dn stat err =       0.003492577757
      target stat err =       0.005576574529
              std dev =       0.545713348082
             le_variance =       0.297803058274

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385877609
  error estimate for blocks of size 2^( 2) =       0.000403002976
  error estimate for blocks of size 2^( 3) =       0.000419303686
  error estimate for blocks of size 2^( 4) =       0.000434712894
  error estimate for blocks of size 2^( 5) =       0.000446760258
  error estimate for blocks of size 2^( 6) =       0.000454333297
  error estimate for blocks of size 2^( 7) =       0.000458909756

      target function =      -0.915831891296
              le_mean =     -16.898540293422
             les_mean =     285.858466957779
             stat err =       0.000448679051
             autocorr =       1.351986727215
   target nu stat err =       0.000448679051
   target dn stat err =       0.003492577757
      target stat err =       0.005576574529
              std dev =       0.545713348082
             le_variance =       0.297803058274

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297848259594
                                         uncertainty =       0.003194634667

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385877609
  error estimate for blocks of size 2^( 2) =       0.000403002976
  error estimate for blocks of size 2^( 3) =       0.000419303686
  error estimate for blocks of size 2^( 4) =       0.000434712894
  error estimate for blocks of size 2^( 5) =       0.000446760258
  error estimate for blocks of size 2^( 6) =       0.000454333297
  error estimate for blocks of size 2^( 7) =       0.000458909756

      target function =      -0.915831891296
              le_mean =     -16.898540293422
             les_mean =     285.858466957779
             stat err =       0.000448679051
             autocorr =       1.351986727215
   target nu stat err =       0.000448679051
   target dn stat err =       0.003492577757
      target stat err =       0.005576574529
              std dev =       0.545713348082
             le_variance =       0.297803058274


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.915831891296        initial  <--
     1.0000e+46     1.0000e+47             0.0000e+00        -0.915831891296
     4.0000e+46     4.0000e+47             0.0000e+00        -0.915831891296
     1.6000e+47     1.6000e+48             0.0000e+00        -0.915831891296

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8234
  </log>
  <optVariables href="H2O.s048.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5801e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s049 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s049 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=49  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -16.931
    reference variance = 0.146453
====================================================
  Execution time = 2.0585e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s049
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9519e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5840e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295259156826
                                         uncertainty =       0.003931711517

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.295259156826
                                         uncertainty =       0.003931711517

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000384180973
  error estimate for blocks of size 2^( 2) =       0.000400381674
  error estimate for blocks of size 2^( 3) =       0.000417252819
  error estimate for blocks of size 2^( 4) =       0.000431919418
  error estimate for blocks of size 2^( 5) =       0.000442064426
  error estimate for blocks of size 2^( 6) =       0.000448100283
  error estimate for blocks of size 2^( 7) =       0.000450301945

      target function =      -0.919949467710
              le_mean =     -16.899079435717
             les_mean =     285.874075667774
             stat err =       0.000443096518
             autocorr =       1.330224582557
   target nu stat err =       0.000443096518
   target dn stat err =       0.003943656863
      target stat err =       0.006345229002
              std dev =       0.543313943035
             le_variance =       0.295190040696


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689907943572e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+47, overlap shift 1.0000e+48 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919992090863       residual = 7.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919992090863       residual = 8.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+47 is 9.003529e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+47, overlap shift 4.0000e+48 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919992090863       residual = 7.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919992090863       residual = 8.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.919992090863       residual = 7.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+47 is 2.250882e-52

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+48, overlap shift 1.6000e+49 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.919992090863       residual = 7.97e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.919992090863       residual = 8.49e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -1.000000000000       residual = 4.88e-01           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.919992090863       residual = 5.78e-04           smallest_sin_value = 1.00e+00
davidson iteration    4 stopping due to too large eigenvalue change
davidson solver did not converge after          4 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+48 is 8.430854e-53

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.959708 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6180e+01
  </log>
  <optVariables href="H2O.s049.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 49
    time step          = 0.05
    reference energy   = -16.8876
    reference variance = 0.200126
====================================================
  Execution time = 2.0305e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s049
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9905e-01
  Total weights = 2.0000e+06
  Execution time = 1.8924e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386684247
  error estimate for blocks of size 2^( 2) =       0.000403458643
  error estimate for blocks of size 2^( 3) =       0.000420189458
  error estimate for blocks of size 2^( 4) =       0.000435744705
  error estimate for blocks of size 2^( 5) =       0.000447856897
  error estimate for blocks of size 2^( 6) =       0.000454889871
  error estimate for blocks of size 2^( 7) =       0.000459004100

      target function =      -0.913837033507
              le_mean =     -16.898267273314
             les_mean =     285.850486104093
             stat err =       0.000449373893
             autocorr =       1.350525276622
   target nu stat err =       0.000449373893
   target dn stat err =       0.005269482036
      target stat err =       0.008328057198
              std dev =       0.546854106009
             le_variance =       0.299049413259

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386684247
  error estimate for blocks of size 2^( 2) =       0.000403458643
  error estimate for blocks of size 2^( 3) =       0.000420189458
  error estimate for blocks of size 2^( 4) =       0.000435744705
  error estimate for blocks of size 2^( 5) =       0.000447856897
  error estimate for blocks of size 2^( 6) =       0.000454889871
  error estimate for blocks of size 2^( 7) =       0.000459004100

      target function =      -0.913837033507
              le_mean =     -16.898267273314
             les_mean =     285.850486104093
             stat err =       0.000449373893
             autocorr =       1.350525276619
   target nu stat err =       0.000449373893
   target dn stat err =       0.005269482036
      target stat err =       0.008328057198
              std dev =       0.546854106009
             le_variance =       0.299049413259

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386684247
  error estimate for blocks of size 2^( 2) =       0.000403458643
  error estimate for blocks of size 2^( 3) =       0.000420189458
  error estimate for blocks of size 2^( 4) =       0.000435744705
  error estimate for blocks of size 2^( 5) =       0.000447856897
  error estimate for blocks of size 2^( 6) =       0.000454889871
  error estimate for blocks of size 2^( 7) =       0.000459004100

      target function =      -0.913837033507
              le_mean =     -16.898267273314
             les_mean =     285.850486104093
             stat err =       0.000449373893
             autocorr =       1.350525276619
   target nu stat err =       0.000449373893
   target dn stat err =       0.005269482036
      target stat err =       0.008328057198
              std dev =       0.546854106009
             le_variance =       0.299049413259

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299122921193
                                         uncertainty =       0.005230095680

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000386684247
  error estimate for blocks of size 2^( 2) =       0.000403458643
  error estimate for blocks of size 2^( 3) =       0.000420189458
  error estimate for blocks of size 2^( 4) =       0.000435744705
  error estimate for blocks of size 2^( 5) =       0.000447856897
  error estimate for blocks of size 2^( 6) =       0.000454889871
  error estimate for blocks of size 2^( 7) =       0.000459004100

      target function =      -0.913837033507
              le_mean =     -16.898267273314
             les_mean =     285.850486104093
             stat err =       0.000449373893
             autocorr =       1.350525276619
   target nu stat err =       0.000449373893
   target dn stat err =       0.005269482036
      target stat err =       0.008328057198
              std dev =       0.546854106009
             le_variance =       0.299049413259


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.913837033507        initial  <--
     1.0000e+47     1.0000e+48             9.0035e-52        -0.913837033507
     4.0000e+47     4.0000e+48             2.2509e-52        -0.913837033507
     1.6000e+48     1.6000e+49             8.4309e-53        -0.913837033507

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 34.1068
  </log>
  <optVariables href="H2O.s049.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 6.0293e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s050 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s050 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=50  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6897e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -16.7892
    reference variance = 0.41791
====================================================
  Execution time = 2.0462e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s050
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0064e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5672e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300709723072
                                         uncertainty =       0.004769800521

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300709723072
                                         uncertainty =       0.004769800521

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387712210
  error estimate for blocks of size 2^( 2) =       0.000404230246
  error estimate for blocks of size 2^( 3) =       0.000421322442
  error estimate for blocks of size 2^( 4) =       0.000436783560
  error estimate for blocks of size 2^( 5) =       0.000448273879
  error estimate for blocks of size 2^( 6) =       0.000454885453
  error estimate for blocks of size 2^( 7) =       0.000459621470

      target function =      -0.911332590477
              le_mean =     -16.898616911754
             les_mean =     285.863894895493
             stat err =       0.000449891091
             autocorr =       1.346467356190
   target nu stat err =       0.000449891091
   target dn stat err =       0.004791690150
      target stat err =       0.007543454381
              std dev =       0.548307865697
             le_variance =       0.300641515585


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689861691175e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+48, overlap shift 1.0000e+49 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+48, overlap shift 4.0000e+49 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+48 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+49, overlap shift 1.6000e+50 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911393506081       residual = 7.81e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.960768 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6040e+01
  </log>
  <optVariables href="H2O.s050.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 50
    time step          = 0.05
    reference energy   = -16.8434
    reference variance = 0.281841
====================================================
  Execution time = 2.0086e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s050
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9997e-01
  Total weights = 2.0000e+06
  Execution time = 1.8912e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387281329
  error estimate for blocks of size 2^( 2) =       0.000403860157
  error estimate for blocks of size 2^( 3) =       0.000420539018
  error estimate for blocks of size 2^( 4) =       0.000435266615
  error estimate for blocks of size 2^( 5) =       0.000447244201
  error estimate for blocks of size 2^( 6) =       0.000453517471
  error estimate for blocks of size 2^( 7) =       0.000460864075

      target function =      -0.912267868298
              le_mean =     -16.898814562509
             les_mean =     285.869907123227
             stat err =       0.000449223091
             autocorr =       1.345460720275
   target nu stat err =       0.000449223091
   target dn stat err =       0.007792418380
      target stat err =       0.012258218232
              std dev =       0.547698507525
             le_variance =       0.299973655145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387281329
  error estimate for blocks of size 2^( 2) =       0.000403860157
  error estimate for blocks of size 2^( 3) =       0.000420539018
  error estimate for blocks of size 2^( 4) =       0.000435266615
  error estimate for blocks of size 2^( 5) =       0.000447244201
  error estimate for blocks of size 2^( 6) =       0.000453517471
  error estimate for blocks of size 2^( 7) =       0.000460864075

      target function =      -0.912267868298
              le_mean =     -16.898814562509
             les_mean =     285.869907123227
             stat err =       0.000449223091
             autocorr =       1.345460720275
   target nu stat err =       0.000449223091
   target dn stat err =       0.007792418380
      target stat err =       0.012258218232
              std dev =       0.547698507525
             le_variance =       0.299973655145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387281329
  error estimate for blocks of size 2^( 2) =       0.000403860157
  error estimate for blocks of size 2^( 3) =       0.000420539018
  error estimate for blocks of size 2^( 4) =       0.000435266615
  error estimate for blocks of size 2^( 5) =       0.000447244201
  error estimate for blocks of size 2^( 6) =       0.000453517471
  error estimate for blocks of size 2^( 7) =       0.000460864075

      target function =      -0.912267868298
              le_mean =     -16.898814562509
             les_mean =     285.869907123227
             stat err =       0.000449223091
             autocorr =       1.345460720275
   target nu stat err =       0.000449223091
   target dn stat err =       0.007792418380
      target stat err =       0.012258218232
              std dev =       0.547698507525
             le_variance =       0.299973655145

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.299984703083
                                         uncertainty =       0.007463572288

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387281329
  error estimate for blocks of size 2^( 2) =       0.000403860157
  error estimate for blocks of size 2^( 3) =       0.000420539018
  error estimate for blocks of size 2^( 4) =       0.000435266615
  error estimate for blocks of size 2^( 5) =       0.000447244201
  error estimate for blocks of size 2^( 6) =       0.000453517471
  error estimate for blocks of size 2^( 7) =       0.000460864075

      target function =      -0.912267868298
              le_mean =     -16.898814562509
             les_mean =     285.869907123227
             stat err =       0.000449223091
             autocorr =       1.345460720275
   target nu stat err =       0.000449223091
   target dn stat err =       0.007792418380
      target stat err =       0.012258218232
              std dev =       0.547698507525
             le_variance =       0.299973655145


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.912267868298        initial  <--
     1.0000e+48     1.0000e+49             0.0000e+00        -0.912267868298
     4.0000e+48     4.0000e+49             0.0000e+00        -0.912267868298
     1.6000e+49     1.6000e+50             0.0000e+00        -0.912267868298

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6584
  </log>
  <optVariables href="H2O.s050.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5705e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s051 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s051 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=51  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -16.9399
    reference variance = 0.253511
====================================================
  Execution time = 2.0907e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s051
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0049e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4615e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300607998259
                                         uncertainty =       0.004547048911

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300607998259
                                         uncertainty =       0.004547048911

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387616116
  error estimate for blocks of size 2^( 2) =       0.000404414768
  error estimate for blocks of size 2^( 3) =       0.000420871119
  error estimate for blocks of size 2^( 4) =       0.000435718475
  error estimate for blocks of size 2^( 5) =       0.000448351783
  error estimate for blocks of size 2^( 6) =       0.000455163885
  error estimate for blocks of size 2^( 7) =       0.000457717890

      target function =      -0.911571171853
              le_mean =     -16.898761350102
             les_mean =     285.868627524056
             stat err =       0.000449238008
             autocorr =       1.343226760081
   target nu stat err =       0.000449238008
   target dn stat err =       0.004221485708
      target stat err =       0.006660898453
              std dev =       0.548171968081
             le_variance =       0.300492506590


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689876135010e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+49, overlap shift 1.0000e+50 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+49, overlap shift 4.0000e+50 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+49 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+50, overlap shift 1.6000e+51 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.911618708527       residual = 8.15e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.961818 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6379e+01
  </log>
  <optVariables href="H2O.s051.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 51
    time step          = 0.05
    reference energy   = -16.8893
    reference variance = 0.15414
====================================================
  Execution time = 2.0315e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s051
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9765e-01
  Total weights = 2.0000e+06
  Execution time = 1.8873e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385779229
  error estimate for blocks of size 2^( 2) =       0.000402523470
  error estimate for blocks of size 2^( 3) =       0.000419757708
  error estimate for blocks of size 2^( 4) =       0.000434636577
  error estimate for blocks of size 2^( 5) =       0.000446129887
  error estimate for blocks of size 2^( 6) =       0.000453300976
  error estimate for blocks of size 2^( 7) =       0.000456432567

      target function =      -0.916061143903
              le_mean =     -16.898605379473
             les_mean =     285.860514849911
             stat err =       0.000447625002
             autocorr =       1.346328346236
   target nu stat err =       0.000447625002
   target dn stat err =       0.003855175107
      target stat err =       0.006148504685
              std dev =       0.545574218231
             le_variance =       0.297651227599

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385779229
  error estimate for blocks of size 2^( 2) =       0.000402523470
  error estimate for blocks of size 2^( 3) =       0.000419757708
  error estimate for blocks of size 2^( 4) =       0.000434636577
  error estimate for blocks of size 2^( 5) =       0.000446129887
  error estimate for blocks of size 2^( 6) =       0.000453300976
  error estimate for blocks of size 2^( 7) =       0.000456432567

      target function =      -0.916061143903
              le_mean =     -16.898605379473
             les_mean =     285.860514849911
             stat err =       0.000447625002
             autocorr =       1.346328346236
   target nu stat err =       0.000447625002
   target dn stat err =       0.003855175107
      target stat err =       0.006148504685
              std dev =       0.545574218231
             le_variance =       0.297651227599

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385779229
  error estimate for blocks of size 2^( 2) =       0.000402523470
  error estimate for blocks of size 2^( 3) =       0.000419757708
  error estimate for blocks of size 2^( 4) =       0.000434636577
  error estimate for blocks of size 2^( 5) =       0.000446129887
  error estimate for blocks of size 2^( 6) =       0.000453300976
  error estimate for blocks of size 2^( 7) =       0.000456432567

      target function =      -0.916061143903
              le_mean =     -16.898605379473
             les_mean =     285.860514849911
             stat err =       0.000447625002
             autocorr =       1.346328346236
   target nu stat err =       0.000447625002
   target dn stat err =       0.003855175107
      target stat err =       0.006148504685
              std dev =       0.545574218231
             le_variance =       0.297651227599

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.297454054002
                                         uncertainty =       0.003756084766

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385779229
  error estimate for blocks of size 2^( 2) =       0.000402523470
  error estimate for blocks of size 2^( 3) =       0.000419757708
  error estimate for blocks of size 2^( 4) =       0.000434636577
  error estimate for blocks of size 2^( 5) =       0.000446129887
  error estimate for blocks of size 2^( 6) =       0.000453300976
  error estimate for blocks of size 2^( 7) =       0.000456432567

      target function =      -0.916061143903
              le_mean =     -16.898605379473
             les_mean =     285.860514849911
             stat err =       0.000447625002
             autocorr =       1.346328346236
   target nu stat err =       0.000447625002
   target dn stat err =       0.003855175107
      target stat err =       0.006148504685
              std dev =       0.545574218231
             le_variance =       0.297651227599


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.916061143903        initial  <--
     1.0000e+49     1.0000e+50             0.0000e+00        -0.916061143903
     4.0000e+49     4.0000e+50             0.0000e+00        -0.916061143903
     1.6000e+50     1.6000e+51             0.0000e+00        -0.916061143903

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8669
  </log>
  <optVariables href="H2O.s051.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.6252e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s052 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s052 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=52  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -16.889
    reference variance = 0.170482
====================================================
  Execution time = 2.0873e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s052
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9053e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5866e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290561934295
                                         uncertainty =       0.002145144848

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290561934295
                                         uncertainty =       0.002145144848

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381138097
  error estimate for blocks of size 2^( 2) =       0.000398171823
  error estimate for blocks of size 2^( 3) =       0.000415035417
  error estimate for blocks of size 2^( 4) =       0.000429556639
  error estimate for blocks of size 2^( 5) =       0.000439474143
  error estimate for blocks of size 2^( 6) =       0.000447336105
  error estimate for blocks of size 2^( 7) =       0.000450470363

      target function =      -0.927493181588
              le_mean =     -16.898493515595
             les_mean =     285.849615449565
             stat err =       0.000441709313
             autocorr =       1.343100121538
   target nu stat err =       0.000441709313
   target dn stat err =       0.002381492331
      target stat err =       0.003938197259
              std dev =       0.539010666136
             le_variance =       0.290532498208


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689849351560e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+50, overlap shift 1.0000e+51 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+50, overlap shift 4.0000e+51 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+50 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+51, overlap shift 1.6000e+52 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.927508508421       residual = 6.12e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.962874 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6471e+01
  </log>
  <optVariables href="H2O.s052.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 52
    time step          = 0.05
    reference energy   = -16.8578
    reference variance = 0.21719
====================================================
  Execution time = 2.0050e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s052
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9389e-01
  Total weights = 2.0000e+06
  Execution time = 1.8848e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383337005
  error estimate for blocks of size 2^( 2) =       0.000400284432
  error estimate for blocks of size 2^( 3) =       0.000417129463
  error estimate for blocks of size 2^( 4) =       0.000431410854
  error estimate for blocks of size 2^( 5) =       0.000441688651
  error estimate for blocks of size 2^( 6) =       0.000448677846
  error estimate for blocks of size 2^( 7) =       0.000453688095

      target function =      -0.922029298494
              le_mean =     -16.899003709308
             les_mean =     285.870220738424
             stat err =       0.000443866362
             autocorr =       1.340735091854
   target nu stat err =       0.000443866362
   target dn stat err =       0.003785718146
      target stat err =       0.006121565615
              std dev =       0.542120390831
             le_variance =       0.293894518155

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383337005
  error estimate for blocks of size 2^( 2) =       0.000400284432
  error estimate for blocks of size 2^( 3) =       0.000417129463
  error estimate for blocks of size 2^( 4) =       0.000431410854
  error estimate for blocks of size 2^( 5) =       0.000441688651
  error estimate for blocks of size 2^( 6) =       0.000448677846
  error estimate for blocks of size 2^( 7) =       0.000453688095

      target function =      -0.922029298494
              le_mean =     -16.899003709308
             les_mean =     285.870220738424
             stat err =       0.000443866362
             autocorr =       1.340735091854
   target nu stat err =       0.000443866362
   target dn stat err =       0.003785718146
      target stat err =       0.006121565615
              std dev =       0.542120390831
             le_variance =       0.293894518155

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383337005
  error estimate for blocks of size 2^( 2) =       0.000400284432
  error estimate for blocks of size 2^( 3) =       0.000417129463
  error estimate for blocks of size 2^( 4) =       0.000431410854
  error estimate for blocks of size 2^( 5) =       0.000441688651
  error estimate for blocks of size 2^( 6) =       0.000448677846
  error estimate for blocks of size 2^( 7) =       0.000453688095

      target function =      -0.922029298494
              le_mean =     -16.899003709308
             les_mean =     285.870220738424
             stat err =       0.000443866362
             autocorr =       1.340735091854
   target nu stat err =       0.000443866362
   target dn stat err =       0.003785718146
      target stat err =       0.006121565615
              std dev =       0.542120390831
             le_variance =       0.293894518155

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293841087444
                                         uncertainty =       0.003979743947

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383337005
  error estimate for blocks of size 2^( 2) =       0.000400284432
  error estimate for blocks of size 2^( 3) =       0.000417129463
  error estimate for blocks of size 2^( 4) =       0.000431410854
  error estimate for blocks of size 2^( 5) =       0.000441688651
  error estimate for blocks of size 2^( 6) =       0.000448677846
  error estimate for blocks of size 2^( 7) =       0.000453688095

      target function =      -0.922029298494
              le_mean =     -16.899003709308
             les_mean =     285.870220738424
             stat err =       0.000443866362
             autocorr =       1.340735091854
   target nu stat err =       0.000443866362
   target dn stat err =       0.003785718146
      target stat err =       0.006121565615
              std dev =       0.542120390831
             le_variance =       0.293894518155


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922029298494        initial  <--
     1.0000e+50     1.0000e+51             0.0000e+00        -0.922029298494
     4.0000e+50     4.0000e+51             0.0000e+00        -0.922029298494
     1.6000e+51     1.6000e+52             0.0000e+00        -0.922029298494

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 33.0795
  </log>
  <optVariables href="H2O.s052.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.9556e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s053 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s053 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=53  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -16.915
    reference variance = 0.173543
====================================================
  Execution time = 2.0299e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s053
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9657e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5383e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296575923033
                                         uncertainty =       0.003233107201

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.296575923033
                                         uncertainty =       0.003233107201

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000385075143
  error estimate for blocks of size 2^( 2) =       0.000401516819
  error estimate for blocks of size 2^( 3) =       0.000418667965
  error estimate for blocks of size 2^( 4) =       0.000433693321
  error estimate for blocks of size 2^( 5) =       0.000446081439
  error estimate for blocks of size 2^( 6) =       0.000453174952
  error estimate for blocks of size 2^( 7) =       0.000454675142

      target function =      -0.917796404528
              le_mean =     -16.898491734807
             les_mean =     285.855588494456
             stat err =       0.000446906213
             autocorr =       1.346920040690
   target nu stat err =       0.000446906213
   target dn stat err =       0.003381543138
      target stat err =       0.005424782947
              std dev =       0.544578489658
             le_variance =       0.296565731399


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689849173481e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+51, overlap shift 1.0000e+52 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+51, overlap shift 4.0000e+52 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+51 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+52, overlap shift 1.6000e+53 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.917827281196       residual = 8.18e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.964816 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5850e+01
  </log>
  <optVariables href="H2O.s053.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 53
    time step          = 0.05
    reference energy   = -16.9501
    reference variance = 0.237622
====================================================
  Execution time = 1.9954e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s053
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9035e-01
  Total weights = 2.0000e+06
  Execution time = 1.8931e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381019240
  error estimate for blocks of size 2^( 2) =       0.000397850946
  error estimate for blocks of size 2^( 3) =       0.000415608320
  error estimate for blocks of size 2^( 4) =       0.000431031016
  error estimate for blocks of size 2^( 5) =       0.000443940459
  error estimate for blocks of size 2^( 6) =       0.000451774597
  error estimate for blocks of size 2^( 7) =       0.000455365094

      target function =      -0.927796532297
              le_mean =     -16.898155298370
             les_mean =     285.838003665853
             stat err =       0.000445527791
             autocorr =       1.367274726122
   target nu stat err =       0.000445527791
   target dn stat err =       0.002355189626
      target stat err =       0.003897723765
              std dev =       0.538842577374
             le_variance =       0.290351323191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381019240
  error estimate for blocks of size 2^( 2) =       0.000397850946
  error estimate for blocks of size 2^( 3) =       0.000415608320
  error estimate for blocks of size 2^( 4) =       0.000431031016
  error estimate for blocks of size 2^( 5) =       0.000443940459
  error estimate for blocks of size 2^( 6) =       0.000451774597
  error estimate for blocks of size 2^( 7) =       0.000455365094

      target function =      -0.927796532297
              le_mean =     -16.898155298370
             les_mean =     285.838003665853
             stat err =       0.000445527791
             autocorr =       1.367274726122
   target nu stat err =       0.000445527791
   target dn stat err =       0.002355189626
      target stat err =       0.003897723765
              std dev =       0.538842577374
             le_variance =       0.290351323191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381019240
  error estimate for blocks of size 2^( 2) =       0.000397850946
  error estimate for blocks of size 2^( 3) =       0.000415608320
  error estimate for blocks of size 2^( 4) =       0.000431031016
  error estimate for blocks of size 2^( 5) =       0.000443940459
  error estimate for blocks of size 2^( 6) =       0.000451774597
  error estimate for blocks of size 2^( 7) =       0.000455365094

      target function =      -0.927796532297
              le_mean =     -16.898155298370
             les_mean =     285.838003665853
             stat err =       0.000445527791
             autocorr =       1.367274726122
   target nu stat err =       0.000445527791
   target dn stat err =       0.002355189626
      target stat err =       0.003897723765
              std dev =       0.538842577374
             le_variance =       0.290351323191

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.290413323309
                                         uncertainty =       0.002362945037

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381019240
  error estimate for blocks of size 2^( 2) =       0.000397850946
  error estimate for blocks of size 2^( 3) =       0.000415608320
  error estimate for blocks of size 2^( 4) =       0.000431031016
  error estimate for blocks of size 2^( 5) =       0.000443940459
  error estimate for blocks of size 2^( 6) =       0.000451774597
  error estimate for blocks of size 2^( 7) =       0.000455365094

      target function =      -0.927796532297
              le_mean =     -16.898155298370
             les_mean =     285.838003665853
             stat err =       0.000445527791
             autocorr =       1.367274726122
   target nu stat err =       0.000445527791
   target dn stat err =       0.002355189626
      target stat err =       0.003897723765
              std dev =       0.538842577374
             le_variance =       0.290351323191


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.927796532297        initial  <--
     1.0000e+51     1.0000e+52             0.0000e+00        -0.927796532297
     4.0000e+51     4.0000e+52             0.0000e+00        -0.927796532297
     1.6000e+52     1.6000e+53             0.0000e+00        -0.927796532297

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.5364
  </log>
  <optVariables href="H2O.s053.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5394e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s054 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s054 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=54  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -16.832
    reference variance = 0.237256
====================================================
  Execution time = 2.0290e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s054
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0607e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.4630e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306157541966
                                         uncertainty =       0.006337925582

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306157541966
                                         uncertainty =       0.006337925582

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391198152
  error estimate for blocks of size 2^( 2) =       0.000407416404
  error estimate for blocks of size 2^( 3) =       0.000424036535
  error estimate for blocks of size 2^( 4) =       0.000438438616
  error estimate for blocks of size 2^( 5) =       0.000450000841
  error estimate for blocks of size 2^( 6) =       0.000454747423
  error estimate for blocks of size 2^( 7) =       0.000459309405

      target function =      -0.902839377710
              le_mean =     -16.898826323932
             les_mean =     285.876402961171
             stat err =       0.000450624071
             autocorr =       1.326890808319
   target nu stat err =       0.000450624071
   target dn stat err =       0.006600356203
      target stat err =       0.010177906317
              std dev =       0.553237731715
             le_variance =       0.306071987793


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689882632393e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+52, overlap shift 1.0000e+53 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+52, overlap shift 4.0000e+53 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+52 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+53, overlap shift 1.6000e+54 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902952398409       residual = 5.16e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+53 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.965883 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5764e+01
  </log>
  <optVariables href="H2O.s054.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 54
    time step          = 0.05
    reference energy   = -16.8656
    reference variance = 0.176052
====================================================
  Execution time = 1.9956e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s054
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9184e-01
  Total weights = 2.0000e+06
  Execution time = 1.8982e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996206
  error estimate for blocks of size 2^( 2) =       0.000398631813
  error estimate for blocks of size 2^( 3) =       0.000415985451
  error estimate for blocks of size 2^( 4) =       0.000431010005
  error estimate for blocks of size 2^( 5) =       0.000442177802
  error estimate for blocks of size 2^( 6) =       0.000448475461
  error estimate for blocks of size 2^( 7) =       0.000452388475

      target function =      -0.925378548378
              le_mean =     -16.898338151008
             les_mean =     285.845674322004
             stat err =       0.000443512936
             autocorr =       1.348014252742
   target nu stat err =       0.000443512936
   target dn stat err =       0.002388557514
      target stat err =       0.003931256382
              std dev =       0.540224214659
             le_variance =       0.291842202104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996206
  error estimate for blocks of size 2^( 2) =       0.000398631813
  error estimate for blocks of size 2^( 3) =       0.000415985451
  error estimate for blocks of size 2^( 4) =       0.000431010005
  error estimate for blocks of size 2^( 5) =       0.000442177802
  error estimate for blocks of size 2^( 6) =       0.000448475461
  error estimate for blocks of size 2^( 7) =       0.000452388475

      target function =      -0.925378548378
              le_mean =     -16.898338151008
             les_mean =     285.845674322004
             stat err =       0.000443512936
             autocorr =       1.348014252741
   target nu stat err =       0.000443512936
   target dn stat err =       0.002388557514
      target stat err =       0.003931256382
              std dev =       0.540224214659
             le_variance =       0.291842202104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996206
  error estimate for blocks of size 2^( 2) =       0.000398631813
  error estimate for blocks of size 2^( 3) =       0.000415985451
  error estimate for blocks of size 2^( 4) =       0.000431010005
  error estimate for blocks of size 2^( 5) =       0.000442177802
  error estimate for blocks of size 2^( 6) =       0.000448475461
  error estimate for blocks of size 2^( 7) =       0.000452388475

      target function =      -0.925378548378
              le_mean =     -16.898338151008
             les_mean =     285.845674322004
             stat err =       0.000443512936
             autocorr =       1.348014252741
   target nu stat err =       0.000443512936
   target dn stat err =       0.002388557514
      target stat err =       0.003931256382
              std dev =       0.540224214659
             le_variance =       0.291842202104

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291342752360
                                         uncertainty =       0.002416447027

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381996206
  error estimate for blocks of size 2^( 2) =       0.000398631813
  error estimate for blocks of size 2^( 3) =       0.000415985451
  error estimate for blocks of size 2^( 4) =       0.000431010005
  error estimate for blocks of size 2^( 5) =       0.000442177802
  error estimate for blocks of size 2^( 6) =       0.000448475461
  error estimate for blocks of size 2^( 7) =       0.000452388475

      target function =      -0.925378548378
              le_mean =     -16.898338151008
             les_mean =     285.845674322004
             stat err =       0.000443512936
             autocorr =       1.348014252741
   target nu stat err =       0.000443512936
   target dn stat err =       0.002388557514
      target stat err =       0.003931256382
              std dev =       0.540224214659
             le_variance =       0.291842202104


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.925378548378        initial  <--
     1.0000e+52     1.0000e+53             0.0000e+00        -0.925378548378
     4.0000e+52     4.0000e+53             0.0000e+00        -0.925378548378
     1.6000e+53     1.6000e+54             0.0000e+00        -0.925378548378

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.5676
  </log>
  <optVariables href="H2O.s054.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5337e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s055 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s055 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=55  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -16.874
    reference variance = 0.28581
====================================================
  Execution time = 2.2518e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s055
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9350e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5201e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293525880368
                                         uncertainty =       0.002324504812

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293525880368
                                         uncertainty =       0.002324504812

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383078276
  error estimate for blocks of size 2^( 2) =       0.000400322128
  error estimate for blocks of size 2^( 3) =       0.000418287020
  error estimate for blocks of size 2^( 4) =       0.000435023497
  error estimate for blocks of size 2^( 5) =       0.000446026633
  error estimate for blocks of size 2^( 6) =       0.000455214953
  error estimate for blocks of size 2^( 7) =       0.000460555883

      target function =      -0.922710239027
              le_mean =     -16.898416027707
             les_mean =     285.849962029543
             stat err =       0.000449205241
             autocorr =       1.375037625615
   target nu stat err =       0.000449205241
   target dn stat err =       0.002543142821
      target stat err =       0.004154953649
              std dev =       0.541754493122
             le_variance =       0.293497930818


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689841602771e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+53, overlap shift 1.0000e+54 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922727412740       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922727412740       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922727412740       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+53 is 8.453323e-58

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+53, overlap shift 4.0000e+54 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922727412740       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922727412740       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922727412740       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+53 is 3.616031e-58

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+54, overlap shift 1.6000e+55 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922727412740       residual = 7.70e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922727412740       residual = 1.20e-03           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922727412740       residual = 4.95e-04           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+54 is 9.040078e-59

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.970623 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8057e+01
  </log>
  <optVariables href="H2O.s055.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 55
    time step          = 0.05
    reference energy   = -16.9234
    reference variance = 0.209633
====================================================
  Execution time = 2.0274e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s055
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9371e-01
  Total weights = 2.0000e+06
  Execution time = 1.8953e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383216170
  error estimate for blocks of size 2^( 2) =       0.000399906210
  error estimate for blocks of size 2^( 3) =       0.000416746970
  error estimate for blocks of size 2^( 4) =       0.000432104009
  error estimate for blocks of size 2^( 5) =       0.000443690053
  error estimate for blocks of size 2^( 6) =       0.000451909958
  error estimate for blocks of size 2^( 7) =       0.000456554601

      target function =      -0.922380478177
              le_mean =     -16.898140735987
             les_mean =     285.840869452859
             stat err =       0.000446064655
             autocorr =       1.354902274850
   target nu stat err =       0.000446064655
   target dn stat err =       0.002587364527
      target stat err =       0.004218510390
              std dev =       0.541949505488
             le_variance =       0.293709266498

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383216170
  error estimate for blocks of size 2^( 2) =       0.000399906210
  error estimate for blocks of size 2^( 3) =       0.000416746970
  error estimate for blocks of size 2^( 4) =       0.000432104009
  error estimate for blocks of size 2^( 5) =       0.000443690053
  error estimate for blocks of size 2^( 6) =       0.000451909958
  error estimate for blocks of size 2^( 7) =       0.000456554601

      target function =      -0.922380478177
              le_mean =     -16.898140735987
             les_mean =     285.840869452859
             stat err =       0.000446064655
             autocorr =       1.354902274850
   target nu stat err =       0.000446064655
   target dn stat err =       0.002587364527
      target stat err =       0.004218510390
              std dev =       0.541949505488
             le_variance =       0.293709266498

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383216170
  error estimate for blocks of size 2^( 2) =       0.000399906210
  error estimate for blocks of size 2^( 3) =       0.000416746970
  error estimate for blocks of size 2^( 4) =       0.000432104009
  error estimate for blocks of size 2^( 5) =       0.000443690053
  error estimate for blocks of size 2^( 6) =       0.000451909958
  error estimate for blocks of size 2^( 7) =       0.000456554601

      target function =      -0.922380478177
              le_mean =     -16.898140735987
             les_mean =     285.840869452859
             stat err =       0.000446064655
             autocorr =       1.354902274850
   target nu stat err =       0.000446064655
   target dn stat err =       0.002587364527
      target stat err =       0.004218510390
              std dev =       0.541949505488
             le_variance =       0.293709266498

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293807879496
                                         uncertainty =       0.002629080896

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383216170
  error estimate for blocks of size 2^( 2) =       0.000399906210
  error estimate for blocks of size 2^( 3) =       0.000416746970
  error estimate for blocks of size 2^( 4) =       0.000432104009
  error estimate for blocks of size 2^( 5) =       0.000443690053
  error estimate for blocks of size 2^( 6) =       0.000451909958
  error estimate for blocks of size 2^( 7) =       0.000456554601

      target function =      -0.922380478177
              le_mean =     -16.898140735987
             les_mean =     285.840869452859
             stat err =       0.000446064655
             autocorr =       1.354902274850
   target nu stat err =       0.000446064655
   target dn stat err =       0.002587364527
      target stat err =       0.004218510390
              std dev =       0.541949505488
             le_variance =       0.293709266498


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.922380478177        initial  <--
     1.0000e+53     1.0000e+54             8.4533e-58        -0.922380478177
     4.0000e+53     4.0000e+54             3.6160e-58        -0.922380478177
     1.6000e+54     1.6000e+55             9.0401e-59        -0.922380478177

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8769
  </log>
  <optVariables href="H2O.s055.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7948e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s056 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s056 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=56  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -16.9218
    reference variance = 0.202604
====================================================
  Execution time = 2.0473e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s056
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0612e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.6437e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306218891290
                                         uncertainty =       0.007438154803

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.306218891290
                                         uncertainty =       0.007438154803

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391226139
  error estimate for blocks of size 2^( 2) =       0.000407605107
  error estimate for blocks of size 2^( 3) =       0.000424564452
  error estimate for blocks of size 2^( 4) =       0.000440016887
  error estimate for blocks of size 2^( 5) =       0.000451446870
  error estimate for blocks of size 2^( 6) =       0.000459362366
  error estimate for blocks of size 2^( 7) =       0.000462329465

      target function =      -0.902705934381
              le_mean =     -16.899079896646
             les_mean =     285.885016983825
             stat err =       0.000453288897
             autocorr =       1.342438613463
   target nu stat err =       0.000453288897
   target dn stat err =       0.007878923835
      target stat err =       0.012142337059
              std dev =       0.553277311714
             le_variance =       0.306115783658


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689907989665e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+54, overlap shift 1.0000e+55 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+54, overlap shift 4.0000e+55 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+54 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+55, overlap shift 1.6000e+56 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.902866541309       residual = 1.50e-02           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+55 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.974874 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6134e+01
  </log>
  <optVariables href="H2O.s056.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 56
    time step          = 0.05
    reference energy   = -16.9207
    reference variance = 0.160802
====================================================
  Execution time = 1.9970e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s056
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.8987e-01
  Total weights = 2.0000e+06
  Execution time = 1.9068e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380704229
  error estimate for blocks of size 2^( 2) =       0.000397492473
  error estimate for blocks of size 2^( 3) =       0.000415157758
  error estimate for blocks of size 2^( 4) =       0.000431116101
  error estimate for blocks of size 2^( 5) =       0.000443946744
  error estimate for blocks of size 2^( 6) =       0.000450925732
  error estimate for blocks of size 2^( 7) =       0.000456442494

      target function =      -0.928563337649
              le_mean =     -16.898729584055
             les_mean =     285.856932829932
             stat err =       0.000445607768
             autocorr =       1.370030083138
   target nu stat err =       0.000445607768
   target dn stat err =       0.002149219914
      target stat err =       0.003580741050
              std dev =       0.538397083809
             le_variance =       0.289871419854

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380704229
  error estimate for blocks of size 2^( 2) =       0.000397492473
  error estimate for blocks of size 2^( 3) =       0.000415157758
  error estimate for blocks of size 2^( 4) =       0.000431116101
  error estimate for blocks of size 2^( 5) =       0.000443946744
  error estimate for blocks of size 2^( 6) =       0.000450925732
  error estimate for blocks of size 2^( 7) =       0.000456442494

      target function =      -0.928563337649
              le_mean =     -16.898729584055
             les_mean =     285.856932829932
             stat err =       0.000445607768
             autocorr =       1.370030083138
   target nu stat err =       0.000445607768
   target dn stat err =       0.002149219914
      target stat err =       0.003580741050
              std dev =       0.538397083809
             le_variance =       0.289871419854

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380704229
  error estimate for blocks of size 2^( 2) =       0.000397492473
  error estimate for blocks of size 2^( 3) =       0.000415157758
  error estimate for blocks of size 2^( 4) =       0.000431116101
  error estimate for blocks of size 2^( 5) =       0.000443946744
  error estimate for blocks of size 2^( 6) =       0.000450925732
  error estimate for blocks of size 2^( 7) =       0.000456442494

      target function =      -0.928563337649
              le_mean =     -16.898729584055
             les_mean =     285.856932829932
             stat err =       0.000445607768
             autocorr =       1.370030083138
   target nu stat err =       0.000445607768
   target dn stat err =       0.002149219914
      target stat err =       0.003580741050
              std dev =       0.538397083809
             le_variance =       0.289871419854

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.289924983452
                                         uncertainty =       0.002223690809

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000380704229
  error estimate for blocks of size 2^( 2) =       0.000397492473
  error estimate for blocks of size 2^( 3) =       0.000415157758
  error estimate for blocks of size 2^( 4) =       0.000431116101
  error estimate for blocks of size 2^( 5) =       0.000443946744
  error estimate for blocks of size 2^( 6) =       0.000450925732
  error estimate for blocks of size 2^( 7) =       0.000456442494

      target function =      -0.928563337649
              le_mean =     -16.898729584055
             les_mean =     285.856932829932
             stat err =       0.000445607768
             autocorr =       1.370030083138
   target nu stat err =       0.000445607768
   target dn stat err =       0.002149219914
      target stat err =       0.003580741050
              std dev =       0.538397083809
             le_variance =       0.289871419854


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.928563337649        initial  <--
     1.0000e+54     1.0000e+55             0.0000e+00        -0.928563337649
     4.0000e+54     4.0000e+55             0.0000e+00        -0.928563337649
     1.6000e+55     1.6000e+56             0.0000e+00        -0.928563337649

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6127
  </log>
  <optVariables href="H2O.s056.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5761e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s057 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s057 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=57  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6895e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -16.8988
    reference variance = 0.157026
====================================================
  Execution time = 2.0454e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s057
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9105e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5324e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291103457472
                                         uncertainty =       0.002111441850

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291103457472
                                         uncertainty =       0.002111441850

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381475421
  error estimate for blocks of size 2^( 2) =       0.000398814040
  error estimate for blocks of size 2^( 3) =       0.000415820123
  error estimate for blocks of size 2^( 4) =       0.000430961917
  error estimate for blocks of size 2^( 5) =       0.000442131687
  error estimate for blocks of size 2^( 6) =       0.000448269150
  error estimate for blocks of size 2^( 7) =       0.000454266500

      target function =      -0.926674486735
              le_mean =     -16.898093715968
             les_mean =     285.836618082416
             stat err =       0.000443907314
             autocorr =       1.354102305445
   target nu stat err =       0.000443907314
   target dn stat err =       0.002124557114
      target stat err =       0.003522688845
              std dev =       0.539487714696
             le_variance =       0.291046994308


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689809371597e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+55, overlap shift 1.0000e+56 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926686405710       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926686405710       residual = 5.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.48e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+55 is 6.386447e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+55, overlap shift 4.0000e+56 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926686405710       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926686405710       residual = 5.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.48e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+55 is 1.596612e-60

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+56, overlap shift 1.6000e+57 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.926686405710       residual = 6.14e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.926686405710       residual = 5.20e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =       0.000000000000       residual = 6.48e+01           smallest_sin_value = 1.00e+00
davidson iteration    3 stopping due to too large eigenvalue change
davidson solver did not converge after          3 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+56 is 3.991529e-61

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.979587 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.6004e+01
  </log>
  <optVariables href="H2O.s057.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 57
    time step          = 0.05
    reference energy   = -16.9154
    reference variance = 0.216654
====================================================
  Execution time = 2.0212e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s057
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0093e-01
  Total weights = 2.0000e+06
  Execution time = 1.8946e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387898060
  error estimate for blocks of size 2^( 2) =       0.000404674258
  error estimate for blocks of size 2^( 3) =       0.000421836276
  error estimate for blocks of size 2^( 4) =       0.000436035676
  error estimate for blocks of size 2^( 5) =       0.000447145205
  error estimate for blocks of size 2^( 6) =       0.000453657058
  error estimate for blocks of size 2^( 7) =       0.000457642104

      target function =      -0.910800642848
              le_mean =     -16.898801845253
             les_mean =     285.870433464362
             stat err =       0.000448620011
             autocorr =       1.337587089742
   target nu stat err =       0.000448620011
   target dn stat err =       0.006967732975
      target stat err =       0.010930510459
              std dev =       0.548570697096
             le_variance =       0.300929809712

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387898060
  error estimate for blocks of size 2^( 2) =       0.000404674258
  error estimate for blocks of size 2^( 3) =       0.000421836276
  error estimate for blocks of size 2^( 4) =       0.000436035676
  error estimate for blocks of size 2^( 5) =       0.000447145205
  error estimate for blocks of size 2^( 6) =       0.000453657058
  error estimate for blocks of size 2^( 7) =       0.000457642104

      target function =      -0.910800642848
              le_mean =     -16.898801845253
             les_mean =     285.870433464362
             stat err =       0.000448620011
             autocorr =       1.337587089742
   target nu stat err =       0.000448620011
   target dn stat err =       0.006967732975
      target stat err =       0.010930510459
              std dev =       0.548570697096
             le_variance =       0.300929809712

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387898060
  error estimate for blocks of size 2^( 2) =       0.000404674258
  error estimate for blocks of size 2^( 3) =       0.000421836276
  error estimate for blocks of size 2^( 4) =       0.000436035676
  error estimate for blocks of size 2^( 5) =       0.000447145205
  error estimate for blocks of size 2^( 6) =       0.000453657058
  error estimate for blocks of size 2^( 7) =       0.000457642104

      target function =      -0.910800642848
              le_mean =     -16.898801845253
             les_mean =     285.870433464362
             stat err =       0.000448620011
             autocorr =       1.337587089742
   target nu stat err =       0.000448620011
   target dn stat err =       0.006967732975
      target stat err =       0.010930510459
              std dev =       0.548570697096
             le_variance =       0.300929809712

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.300999941318
                                         uncertainty =       0.006809448659

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000387898060
  error estimate for blocks of size 2^( 2) =       0.000404674258
  error estimate for blocks of size 2^( 3) =       0.000421836276
  error estimate for blocks of size 2^( 4) =       0.000436035676
  error estimate for blocks of size 2^( 5) =       0.000447145205
  error estimate for blocks of size 2^( 6) =       0.000453657058
  error estimate for blocks of size 2^( 7) =       0.000457642104

      target function =      -0.910800642848
              le_mean =     -16.898801845253
             les_mean =     285.870433464362
             stat err =       0.000448620011
             autocorr =       1.337587089742
   target nu stat err =       0.000448620011
   target dn stat err =       0.006967732975
      target stat err =       0.010930510459
              std dev =       0.548570697096
             le_variance =       0.300929809712


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.910800642848        initial  <--
     1.0000e+55     1.0000e+56             6.3864e-60        -0.910800642848
     4.0000e+55     4.0000e+56             1.5966e-60        -0.910800642848
     1.6000e+56     1.6000e+57             3.9915e-61        -0.910800642848

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.8151
  </log>
  <optVariables href="H2O.s057.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5833e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s058 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s058 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=58  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -16.9353
    reference variance = 0.249964
====================================================
  Execution time = 2.2538e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s058
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9271e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5387e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292695714981
                                         uncertainty =       0.002535775860

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.292695714981
                                         uncertainty =       0.002535775860

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000382561651
  error estimate for blocks of size 2^( 2) =       0.000399376236
  error estimate for blocks of size 2^( 3) =       0.000416365119
  error estimate for blocks of size 2^( 4) =       0.000431599353
  error estimate for blocks of size 2^( 5) =       0.000443968099
  error estimate for blocks of size 2^( 6) =       0.000451643921
  error estimate for blocks of size 2^( 7) =       0.000453070101

      target function =      -0.923947809565
              le_mean =     -16.899326879641
             les_mean =     285.879955671668
             stat err =       0.000445070369
             autocorr =       1.353488273518
   target nu stat err =       0.000445070369
   target dn stat err =       0.002639175386
      target stat err =       0.004323901295
              std dev =       0.541023874776
             le_variance =       0.292706833077


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689932687964e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+56, overlap shift 1.0000e+57 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+56, overlap shift 4.0000e+57 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+56 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+57, overlap shift 1.6000e+58 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.923966342558       residual = 6.60e-03           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+57 is 0.000000e+00

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.983839 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.8094e+01
  </log>
  <optVariables href="H2O.s058.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 58
    time step          = 0.05
    reference energy   = -16.8733
    reference variance = 0.122814
====================================================
  Execution time = 2.0069e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s058
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 2.9107e-01
  Total weights = 2.0000e+06
  Execution time = 1.8884e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381488353
  error estimate for blocks of size 2^( 2) =       0.000398001549
  error estimate for blocks of size 2^( 3) =       0.000414863357
  error estimate for blocks of size 2^( 4) =       0.000429973209
  error estimate for blocks of size 2^( 5) =       0.000441613168
  error estimate for blocks of size 2^( 6) =       0.000448886008
  error estimate for blocks of size 2^( 7) =       0.000451548902

      target function =      -0.926616553826
              le_mean =     -16.898913777872
             les_mean =     285.864353452803
             stat err =       0.000443005322
             autocorr =       1.348513570998
   target nu stat err =       0.000443005322
   target dn stat err =       0.002284660401
      target stat err =       0.003780802697
              std dev =       0.539506002164
             le_variance =       0.291066726371

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381488353
  error estimate for blocks of size 2^( 2) =       0.000398001549
  error estimate for blocks of size 2^( 3) =       0.000414863357
  error estimate for blocks of size 2^( 4) =       0.000429973209
  error estimate for blocks of size 2^( 5) =       0.000441613168
  error estimate for blocks of size 2^( 6) =       0.000448886008
  error estimate for blocks of size 2^( 7) =       0.000451548902

      target function =      -0.926616553826
              le_mean =     -16.898913777872
             les_mean =     285.864353452803
             stat err =       0.000443005322
             autocorr =       1.348513570998
   target nu stat err =       0.000443005322
   target dn stat err =       0.002284660401
      target stat err =       0.003780802697
              std dev =       0.539506002164
             le_variance =       0.291066726371

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381488353
  error estimate for blocks of size 2^( 2) =       0.000398001549
  error estimate for blocks of size 2^( 3) =       0.000414863357
  error estimate for blocks of size 2^( 4) =       0.000429973209
  error estimate for blocks of size 2^( 5) =       0.000441613168
  error estimate for blocks of size 2^( 6) =       0.000448886008
  error estimate for blocks of size 2^( 7) =       0.000451548902

      target function =      -0.926616553826
              le_mean =     -16.898913777872
             les_mean =     285.864353452803
             stat err =       0.000443005322
             autocorr =       1.348513570998
   target nu stat err =       0.000443005322
   target dn stat err =       0.002284660401
      target stat err =       0.003780802697
              std dev =       0.539506002164
             le_variance =       0.291066726371

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.291144352612
                                         uncertainty =       0.001990607726

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000381488353
  error estimate for blocks of size 2^( 2) =       0.000398001549
  error estimate for blocks of size 2^( 3) =       0.000414863357
  error estimate for blocks of size 2^( 4) =       0.000429973209
  error estimate for blocks of size 2^( 5) =       0.000441613168
  error estimate for blocks of size 2^( 6) =       0.000448886008
  error estimate for blocks of size 2^( 7) =       0.000451548902

      target function =      -0.926616553826
              le_mean =     -16.898913777872
             les_mean =     285.864353452803
             stat err =       0.000443005322
             autocorr =       1.348513570998
   target nu stat err =       0.000443005322
   target dn stat err =       0.002284660401
      target stat err =       0.003780802697
              std dev =       0.539506002164
             le_variance =       0.291066726371


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.926616553826        initial  <--
     1.0000e+56     1.0000e+57             0.0000e+00        -0.926616553826
     4.0000e+56     4.0000e+57             0.0000e+00        -0.926616553826
     1.6000e+57     1.6000e+58             0.0000e+00        -0.926616553826

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6377
  </log>
  <optVariables href="H2O.s058.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.7746e+01 secs
  Reusing QMCFixedSampleLinearOptimize
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>

=========================================================
  Start QMCFixedSampleLinearOptimize
  File Root H2O.s059 append = no 
=========================================================
  Skip QMCDriver::putQMCInfo 
  Resetting Properties of the walkers 1 x 15

=========================================================
  Start VMC
  File Root H2O.s059 append = no 
=========================================================
Using existing walkers 
  Resetting Properties of the walkers 1 x 15

<vmc function="put">
  qmc_counter=59  my_counter=0
  time step      = 5.0000e-02
  blocks         = 125
  steps          = 125
  substeps       = 10
  current        = 0
  target samples = 2.0000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 1
<parameter name="blocks" condition="int">125</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625e+04</parameter>
<parameter name="fermionicweight" condition="real">1.0000e-04</parameter>
<parameter name="jastrowweight" condition="real">0.0000e+00</parameter>
<parameter name="maxcpusecs" condition="real">3.6000e+05</parameter>
<parameter name="mg_beta" condition="real">0.0000e+00</parameter>
<parameter name="mg_gamma" condition="real">0.0000e+00</parameter>
<parameter name="modifiedguiding" condition="string">ParameterDerivativeAdjusted</parameter>
<parameter name="orboptweight" condition="real">0.0000e+00</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">1</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">1</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">2.0000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625e+04</parameter>
<parameter name="steps" condition="int">125</parameter>
<parameter name="stepsbetweensamples" condition="int">1</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">10</parameter>
<parameter name="substeps" condition="int">10</parameter>
<parameter name="tau" condition="au">5.0000e-02</parameter>
<parameter name="time_step" condition="au">5.0000e-02</parameter>
<parameter name="timestep" condition="au">5.0000e-02</parameter>
<parameter name="use_drift" condition="string">no</parameter>
<parameter name="usedrift" condition="string">no</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">1000</parameter>
<parameter name="warmupsteps" condition="int">1000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 1 steps.
</vmc>
    Restarting, cummulative properties:
      energy     = -1.6896e+01
      variance   = 0.0000e+00
      r2accepted = 1.0000e-10
      r2proposed = 1.0000e-10
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
 Using QMCCostFunction::QMCCostFunction
   Going to include the derivatives of NonLocalECP
 Using Default Cost Function: Cost = <|E-E_ff|^2>
  Set drift_modifier UNR parameter a = 1.0000e+00
  EstimatorManagerBase::add replace LocalEnergy estimator.
  EstimatorManagerBase::add replace LocalEnergy estimator.
Double check: filter_param_: false and ratio_threshold_: 0.0000e+00
Now doing initialize, nblock: 1, nkeps: 1
Start of engine's reset
Before block part of reset
end of engine's reset
entering engine_start function
<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
Using ParameterDeriv Adjusted Guiding Function

  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
  Anonymous Buffer size per walker : 17096 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -16.8757
    reference variance = 0.187317
====================================================
  Execution time = 2.0282e+01
</vmc>
<opt stage="setup">
  <log>
     Reading configurations from h5FileRoot H2O.s059
  QMCCostFunction is created with 1 threads.
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
Value of Filter Bool: false before_first_block_sample: true onDescentStep: false
Before engine_checkConfigurations
Double check filter inside engine_checkConfig: false
 w_tot 1.5625e+04
  VMC Eavg = -1.6898e+01
  VMC Evar = 2.9396e-01
  Total weights = 2.000000000e+06
Before sample_finish
calling setComputed function
After engine_checkConfig
  Execution time = 5.5417e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293834422191
                                         uncertainty =       0.003041735351

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.293834422191
                                         uncertainty =       0.003041735351

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000383379410
  error estimate for blocks of size 2^( 2) =       0.000399507721
  error estimate for blocks of size 2^( 3) =       0.000416453325
  error estimate for blocks of size 2^( 4) =       0.000430753228
  error estimate for blocks of size 2^( 5) =       0.000442361047
  error estimate for blocks of size 2^( 6) =       0.000450964088
  error estimate for blocks of size 2^( 7) =       0.000456531688

      target function =      -0.921975665731
              le_mean =     -16.898014319553
             les_mean =     285.836847340589
             stat err =       0.000445152513
             autocorr =       1.348217900706
   target nu stat err =       0.000445152513
   target dn stat err =       0.003108797056
      target stat err =       0.005036539655
              std dev =       0.542180360909
             le_variance =       0.293959543755


*************************************************************************************************
Solving the linear method equations on the initial sample with initial energy -1.689801431955e+01
*************************************************************************************************


*********************************************************
Solving the linear method equations on the initial sample
*********************************************************

Inside this version of call_engine, dep_ptr->n_tot(): 50
Check correct_vf_var_size: 153, current size: 0
Inside version of engine_update_build_matrix that takes matrices hh and ss as input
solving harmonic davidson linear method for identity shift 1.0000e+57, overlap shift 1.0000e+58 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922002079158       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922002079158       residual = 8.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    2:   krylov dim =   3   tar_fn =      -0.922002079158       residual = 5.38e-04           smallest_sin_value = 1.00e+00
davidson iteration    3:   krylov dim =   4   tar_fn =      -0.922002079158       residual = 1.98e-04           smallest_sin_value = 1.00e+00
davidson iteration    4:   krylov dim =   5   tar_fn =       0.000000000000       residual = 9.21e+01           smallest_sin_value = 1.00e+00
davidson iteration    5:   krylov dim =   6   tar_fn =       0.000000000000       residual = 1.33e+05           smallest_sin_value = 1.00e+00
davidson iteration    6 stopping due to too large eigenvalue change
davidson solver did not converge after          6 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.0000e+57 is 1.304810e-61

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 4.0000e+57, overlap shift 4.0000e+58 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922002079158       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922002079158       residual = 8.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 4.0000e+57 is 1.688613e-62

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

solving harmonic davidson linear method for identity shift 1.6000e+58, overlap shift 1.6000e+59 and omega -1.7429e+01

iteration solving starts here(engine) 


davidson iteration    0:   krylov dim =   1   tar_fn =      -0.922002079158       residual = 4.87e-03           smallest_sin_value = 1.00e+00
davidson iteration    1:   krylov dim =   2   tar_fn =      -0.922002079158       residual = 8.57e-04           smallest_sin_value = 1.00e+00
davidson iteration    2 stopping due to too large eigenvalue change
davidson solver did not converge after          2 iterations

On rank 0, check n_tot: 51 and evec_eigen.size(): 51
The largest weight on the derivative vector for shift 1.6000e+58 is 4.221534e-63

The largest weight on derivative vector is too large or it's a bad solve, and this update will not be used

About to broadcast update vector

Printing all timers used during this execution:
  eigen solver                               0.988798 seconds

After print_timers
After EngineObj->wfn_update_compute(), N is: 51 and numParams is: 50

************************************************************
Updating the guiding function with the middle shift's update
************************************************************

  Execution time = 2.5842e+01
  </log>
  <optVariables href="H2O.s059.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>

*************************************************************
Generating a new sample based on the updated guiding function
*************************************************************

<optimization-report>
<vmc stage="main" blocks="125">
  Cannot make clones again. Use existing 1 clones
  Initial partition of walkers 0 1 
  Using Particle by Particle moves
  Walker moves without drift
  Total Sample Size   =2000000
  Walker distribution on root = 0 1 
  Using Locality Approximation
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 59
    time step          = 0.05
    reference energy   = -16.7964
    reference variance = 0.272582
====================================================
  Execution time = 2.0134e+01
</vmc>
<opt stage="setup">
  <log>
   Reading configurations from h5FileRoot H2O.s059
  Using Nonlocal PP in Opt: NonLocalECP
   Number of samples loaded to each thread : 15625 
  VMC Eavg = -1.6899e+01
  VMC Evar = 3.0716e-01
  Total weights = 2.0000e+06
  Execution time = 1.8861e+00
  </log>
</opt>
<opt stage="main" walkers="15625">
  <log>

******************************************************************
Comparing different shifts' cost function values on updated sample
******************************************************************

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391894164
  error estimate for blocks of size 2^( 2) =       0.000408734232
  error estimate for blocks of size 2^( 3) =       0.000425812624
  error estimate for blocks of size 2^( 4) =       0.000441152801
  error estimate for blocks of size 2^( 5) =       0.000452021084
  error estimate for blocks of size 2^( 6) =       0.000459026090
  error estimate for blocks of size 2^( 7) =       0.000460862598

      target function =      -0.900872123662
              le_mean =     -16.899050246503
             les_mean =     285.885061152102
             stat err =       0.000453265643
             autocorr =       1.337728594065
   target nu stat err =       0.000453265643
   target dn stat err =       0.012288475626
      target stat err =       0.018842435175
              std dev =       0.554222041997
             le_variance =       0.307162071835

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391894164
  error estimate for blocks of size 2^( 2) =       0.000408734232
  error estimate for blocks of size 2^( 3) =       0.000425812624
  error estimate for blocks of size 2^( 4) =       0.000441152801
  error estimate for blocks of size 2^( 5) =       0.000452021084
  error estimate for blocks of size 2^( 6) =       0.000459026090
  error estimate for blocks of size 2^( 7) =       0.000460862598

      target function =      -0.900872123662
              le_mean =     -16.899050246503
             les_mean =     285.885061152102
             stat err =       0.000453265643
             autocorr =       1.337728594065
   target nu stat err =       0.000453265643
   target dn stat err =       0.012288475626
      target stat err =       0.018842435175
              std dev =       0.554222041997
             le_variance =       0.307162071835

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391894164
  error estimate for blocks of size 2^( 2) =       0.000408734232
  error estimate for blocks of size 2^( 3) =       0.000425812624
  error estimate for blocks of size 2^( 4) =       0.000441152801
  error estimate for blocks of size 2^( 5) =       0.000452021084
  error estimate for blocks of size 2^( 6) =       0.000459026090
  error estimate for blocks of size 2^( 7) =       0.000460862598

      target function =      -0.900872123662
              le_mean =     -16.899050246503
             les_mean =     285.885061152102
             stat err =       0.000453265643
             autocorr =       1.337728594065
   target nu stat err =       0.000453265643
   target dn stat err =       0.012288475626
      target stat err =       0.018842435175
              std dev =       0.554222041997
             le_variance =       0.307162071835

Start of engine's reset
Before block part of reset
end of engine's reset
Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

energy and target function accumulation statistics:


Restored printouts from recurive_blocking in energy_target_accu

Crude block analysis of variance gives:     variance =       0.307272160912
                                         uncertainty =       0.012081284475

Now for a blocking analysis of energy uncertainty:

  error estimate for blocks of size 2^( 1) =       0.000391894164
  error estimate for blocks of size 2^( 2) =       0.000408734232
  error estimate for blocks of size 2^( 3) =       0.000425812624
  error estimate for blocks of size 2^( 4) =       0.000441152801
  error estimate for blocks of size 2^( 5) =       0.000452021084
  error estimate for blocks of size 2^( 6) =       0.000459026090
  error estimate for blocks of size 2^( 7) =       0.000460862598

      target function =      -0.900872123662
              le_mean =     -16.899050246503
             les_mean =     285.885061152102
             stat err =       0.000453265643
             autocorr =       1.337728594065
   target nu stat err =       0.000453265643
   target dn stat err =       0.012288475626
      target stat err =       0.018842435175
              std dev =       0.554222041997
             le_variance =       0.307162071835


        shift_i        shift_s       max param change    cost function value
   ------------   ------------   --------------------   --------------------
            N/A            N/A                    N/A        -0.900872123662        initial  <--
     1.0000e+57     1.0000e+58             1.3048e-61        -0.900872123662
     4.0000e+57     4.0000e+58             1.6886e-62        -0.900872123662
     1.6000e+58     1.6000e+59             4.2215e-63        -0.900872123662

***********************************************************
Reverting to old parameters and increasing shift magnitudes
***********************************************************

  Execution time = 29.6851
  </log>
  <optVariables href="H2O.s059.opt.xml">
 uu_0                 2.517233e-01 1 1  ON 0
 uu_1                 1.009440e-01 1 1  ON 1
 uu_2                 1.617079e-02 1 1  ON 2
 uu_3                -3.223684e-02 1 1  ON 3
 uu_4                -6.387117e-02 1 1  ON 4
 uu_5                -8.576607e-02 1 1  ON 5
 uu_6                -1.001312e-01 1 1  ON 6
 uu_7                -1.065673e-01 1 1  ON 7
 uu_8                -9.668739e-02 1 1  ON 8
 uu_9                -6.389513e-02 1 1  ON 9
 ud_0                 3.492134e-01 1 1  ON 10
 ud_1                 1.235409e-01 1 1  ON 11
 ud_2                 2.392782e-02 1 1  ON 12
 ud_3                -3.019578e-02 1 1  ON 13
 ud_4                -6.975615e-02 1 1  ON 14
 ud_5                -9.484122e-02 1 1  ON 15
 ud_6                -1.085598e-01 1 1  ON 16
 ud_7                -1.109505e-01 1 1  ON 17
 ud_8                -9.792103e-02 1 1  ON 18
 ud_9                -6.281979e-02 1 1  ON 19
 eO_0                -5.692885e-01 1 1  ON 20
 eO_1                -3.060844e-01 1 1  ON 21
 eO_2                 4.730127e-02 1 1  ON 22
 eO_3                 2.840620e-01 1 1  ON 23
 eO_4                 3.913445e-01 1 1  ON 24
 eO_5                 3.212389e-01 1 1  ON 25
 eO_6                 1.205694e-01 1 1  ON 26
 eO_7                -7.888705e-02 1 1  ON 27
 eO_8                -1.549102e-01 1 1  ON 28
 eO_9                -6.122098e-02 1 1  ON 29
eH1_0                -2.277697e-01 1 1  ON 30
eH1_1                -1.106400e-01 1 1  ON 31
eH1_2                -6.162952e-02 1 1  ON 32
eH1_3                -2.530653e-02 1 1  ON 33
eH1_4                 4.247832e-03 1 1  ON 34
eH1_5                 2.367079e-02 1 1  ON 35
eH1_6                 6.569443e-02 1 1  ON 36
eH1_7                 1.154361e-01 1 1  ON 37
eH1_8                 1.435221e-01 1 1  ON 38
eH1_9                 7.467419e-02 1 1  ON 39
eH2_0                -2.307043e-01 1 1  ON 40
eH2_1                -1.139386e-01 1 1  ON 41
eH2_2                -6.444539e-02 1 1  ON 42
eH2_3                -2.722663e-02 1 1  ON 43
eH2_4                 1.073593e-03 1 1  ON 44
eH2_5                 2.532957e-02 1 1  ON 45
eH2_6                 7.564477e-02 1 1  ON 46
eH2_7                 1.260027e-01 1 1  ON 47
eH2_8                 1.609124e-01 1 1  ON 48
eH2_9                 6.417217e-02 1 1  ON 49
  </optVariables>
eH1
Array
eH2
Array
eO
Array
ud
Array
uu
Array
   Restore the number of walkers to 1, removing 0 walkers.
</opt>
</optimization-report>
  QMC Execution time = 5.5536e+01 secs
  Total Execution time = 3.4108e+03 secs

=========================================================
  A new xml input file : H2O.s059.cont.xml
